{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Network",
    "version": "2024-07-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts": {
      "get": {
        "tags": [
          "ExpressRouteProviderPorts"
        ],
        "operationId": "ExpressRouteProviderPortsLocation_List",
        "description": "Retrieves all the ExpressRouteProviderPorts in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=location eq '{state}'."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteProviderPort resources at a location. If there are no ports for the provider, an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteProviderPortListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteProviderPortList": {
            "$ref": "./examples/expressRouteProviderPortList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts/{providerport}": {
      "get": {
        "tags": [
          "ExpressRouteProviderPorts"
        ],
        "operationId": "ExpressRouteProviderPort",
        "description": "Retrieves detail of a provider port.",
        "parameters": [
          {
            "name": "providerport",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the provider port."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns detail of individual provider port resources. If there is no port, an empty result is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteProviderPort"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteProviderPort": {
            "$ref": "./examples/expressRouteProviderPort.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}": {
      "delete": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_Delete",
        "description": "Deletes the specified load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete load balancer": {
            "$ref": "./examples/LoadBalancerDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_Get",
        "description": "Gets the specified load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting LoadBalancer resource.",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get load balancer": {
            "$ref": "./examples/LoadBalancerGet.json"
          },
          "Get load balancer with inbound NAT rule port mapping": {
            "$ref": "./examples/LoadBalancerGetInboundNatRulePortMapping.json"
          }
        }
      },
      "put": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_CreateOrUpdate",
        "description": "Creates or updates a load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            },
            "description": "Parameters supplied to the create or update load balancer operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting LoadBalancer resource.",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting LoadBalancer resource.",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create load balancer": {
            "$ref": "./examples/LoadBalancerCreate.json"
          },
          "Create load balancer with Standard SKU": {
            "$ref": "./examples/LoadBalancerCreateStandardSku.json"
          },
          "Create load balancer with Global Tier and one regional load balancer in its backend pool": {
            "$ref": "./examples/LoadBalancerCreateGlobalTier.json"
          },
          "Create load balancer with Frontend IP in Zone 1": {
            "$ref": "./examples/LoadBalancerCreateWithZones.json"
          },
          "Create load balancer with inbound nat pool": {
            "$ref": "./examples/LoadBalancerCreateWithInboundNatPool.json"
          },
          "Create load balancer with outbound rules": {
            "$ref": "./examples/LoadBalancerCreateWithOutboundRules.json"
          },
          "Create load balancer with Gateway Load Balancer Consumer configured": {
            "$ref": "./examples/LoadBalancerCreateGatewayLoadBalancerConsumer.json"
          },
          "Create load balancer with Gateway Load Balancer Provider configured with one Backend Pool": {
            "$ref": "./examples/LoadBalancerCreateGatewayLoadBalancerProviderWithOneBackendPool.json"
          },
          "Create load balancer with Gateway Load Balancer Provider configured with two Backend Pool": {
            "$ref": "./examples/LoadBalancerCreateGatewayLoadBalancerProviderWithTwoBackendPool.json"
          },
          "Create load balancer with Sync Mode Property on Pool": {
            "$ref": "./examples/LoadBalancerCreateWithSyncModePropertyOnPool.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_UpdateTags",
        "description": "Updates a load balancer tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update load balancer tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting LoadBalancer resource.",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update load balancer tags": {
            "$ref": "./examples/LoadBalancerUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_ListAll",
        "description": "Gets all the load balancers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all load balancers": {
            "$ref": "./examples/LoadBalancerListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_List",
        "description": "Gets all the load balancers in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List load balancers in resource group": {
            "$ref": "./examples/LoadBalancerList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerBackendAddressPools_List",
        "description": "Gets all the load balancer backed address pools.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer BackendAddressPool resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerBackendAddressPoolListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerBackendAddressPoolList": {
            "$ref": "./examples/LoadBalancerBackendAddressPoolList.json"
          },
          "Load balancer with BackendAddressPool containing BackendAddresses": {
            "$ref": "./examples/LBBackendAddressPoolListWithBackendAddressesPoolType.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerBackendAddressPools_Get",
        "description": "Gets load balancer backend address pool.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "backendAddressPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the backend address pool."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns LoadBalancer BackendAddressPool resource.",
            "schema": {
              "$ref": "#/definitions/BackendAddressPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerBackendAddressPoolGet": {
            "$ref": "./examples/LoadBalancerBackendAddressPoolGet.json"
          },
          "LoadBalancer with BackendAddressPool with BackendAddresses": {
            "$ref": "./examples/LBBackendAddressPoolWithBackendAddressesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerBackendAddressPools_CreateOrUpdate",
        "description": "Creates or updates a load balancer backend address pool.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "backendAddressPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the backend address pool."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackendAddressPool"
            },
            "description": "Parameters supplied to the create or update load balancer backend address pool operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting BackendAddressPool resource.",
            "schema": {
              "$ref": "#/definitions/BackendAddressPool"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting BackendAddressPool resource.",
            "schema": {
              "$ref": "#/definitions/BackendAddressPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update load balancer backend pool with backend addresses containing virtual network and  IP address.": {
            "$ref": "./examples/LBBackendAddressPoolWithBackendAddressesPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerBackendAddressPools_Delete",
        "description": "Deletes the specified load balancer backend address pool.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "backendAddressPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the backend address pool."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BackendAddressPoolDelete": {
            "$ref": "./examples/LoadBalancerBackendAddressPoolDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerFrontendIPConfigurations_List",
        "description": "Gets all the load balancer frontend IP configurations.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer FrontendIPConfiguration resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerFrontendIPConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerFrontendIPConfigurationList": {
            "$ref": "./examples/LoadBalancerFrontendIPConfigurationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations/{frontendIPConfigurationName}": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerFrontendIPConfigurations_Get",
        "description": "Gets load balancer frontend IP configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "frontendIPConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the frontend IP configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns LoadBalancer FrontendIPConfiguration resource.",
            "schema": {
              "$ref": "#/definitions/FrontendIPConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerFrontendIPConfigurationGet": {
            "$ref": "./examples/LoadBalancerFrontendIPConfigurationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "InboundNatRules_List",
        "description": "Gets all the inbound NAT rules in a load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer InboundNatRule resources.",
            "schema": {
              "$ref": "#/definitions/InboundNatRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InboundNatRuleList": {
            "$ref": "./examples/InboundNatRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}": {
      "delete": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "InboundNatRules_Delete",
        "description": "Deletes the specified load balancer inbound NAT rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "inboundNatRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the inbound NAT rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "InboundNatRuleDelete": {
            "$ref": "./examples/InboundNatRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "InboundNatRules_Get",
        "description": "Gets the specified load balancer inbound NAT rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "inboundNatRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the inbound NAT rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting InboundNatRule resource.",
            "schema": {
              "$ref": "#/definitions/InboundNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "InboundNatRuleGet": {
            "$ref": "./examples/InboundNatRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "InboundNatRules_CreateOrUpdate",
        "description": "Creates or updates a load balancer inbound NAT rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "inboundNatRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the inbound NAT rule."
          },
          {
            "name": "inboundNatRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundNatRule"
            },
            "description": "Parameters supplied to the create or update inbound NAT rule operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting InboundNatRule resource.",
            "schema": {
              "$ref": "#/definitions/InboundNatRule"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting InboundNatRule resource.",
            "schema": {
              "$ref": "#/definitions/InboundNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "InboundNatRuleCreate": {
            "$ref": "./examples/InboundNatRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerLoadBalancingRules_List",
        "description": "Gets all the load balancing rules in a load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer LoadBalancingRule resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerLoadBalancingRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "LoadBalancerLoadBalancingRuleList": {
            "$ref": "./examples/LoadBalancerLoadBalancingRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerLoadBalancingRules_Get",
        "description": "Gets the specified load balancer load balancing rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "loadBalancingRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancing rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting LoadBalancingRule resource.",
            "schema": {
              "$ref": "#/definitions/LoadBalancingRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerLoadBalancingRuleGet": {
            "$ref": "./examples/LoadBalancerLoadBalancingRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/outboundRules": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerOutboundRules_List",
        "description": "Gets all the outbound rules in a load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer OutboundRule resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerOutboundRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "LoadBalancerOutboundRuleList": {
            "$ref": "./examples/LoadBalancerOutboundRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/outboundRules/{outboundRuleName}": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerOutboundRules_Get",
        "description": "Gets the specified load balancer outbound rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "outboundRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the outbound rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting OutboundRule resource.",
            "schema": {
              "$ref": "#/definitions/OutboundRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerOutboundRuleGet": {
            "$ref": "./examples/LoadBalancerOutboundRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/networkInterfaces": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerNetworkInterfaces_List",
        "description": "Gets associated load balancer network interfaces.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerNetworkInterfaceListVmss": {
            "$ref": "./examples/LoadBalancerNetworkInterfaceListVmss.json"
          },
          "LoadBalancerNetworkInterfaceListSimple": {
            "$ref": "./examples/LoadBalancerNetworkInterfaceListSimple.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerProbes_List",
        "description": "Gets all the load balancer probes.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LoadBalancer Probe resources.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerProbeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerProbeList": {
            "$ref": "./examples/LoadBalancerProbeList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/setLoadBalancerFrontendPublicIpAddresses": {
      "post": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_SwapPublicIpAddresses",
        "description": "Swaps VIPs between two load balancers.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The region where load balancers are located at."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadBalancerVipSwapRequest"
            },
            "description": "Parameters that define which VIPs should be swapped."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Swap VIPs between two load balancers.": {
            "$ref": "./examples/LoadBalancersSwapPublicIpAddresses.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendPoolName}/queryInboundNatRulePortMapping": {
      "post": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_ListInboundNatRulePortMappings",
        "description": "List of inbound NAT rule port mappings.",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "backendPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer backend address pool."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryInboundNatRulePortMappingRequest"
            },
            "description": "Query inbound NAT rule port mapping request."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for query inbound NAT rule port mapping.",
            "schema": {
              "$ref": "#/definitions/BackendAddressInboundNatRulePortMappings"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/BackendAddressInboundNatRulePortMappings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Query inbound NAT rule port mapping": {
            "$ref": "./examples/QueryInboundNatRulePortMapping.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}/health": {
      "post": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerLoadBalancingRules_Health",
        "description": "Get health details of a load balancing rule.",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group.",
            "pattern": "^[a-zA-Z0-9_.-]*$"
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer.",
            "pattern": "^[a-zA-Z0-9_.-]*$"
          },
          {
            "name": "loadBalancingRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancing rule.",
            "pattern": "^[a-zA-Z0-9_.-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for query load balancer health per rule.",
            "schema": {
              "$ref": "#/definitions/LoadBalancerHealthPerRule"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URI to query the status of the long-running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Query load balancing rule health": {
            "$ref": "./examples/LoadBalancerHealth.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancerProbes_Get",
        "description": "Gets load balancer probe.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer."
          },
          {
            "name": "probeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the probe."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns LoadBalancer Probe resource.",
            "schema": {
              "$ref": "#/definitions/Probe"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "LoadBalancerProbeGet": {
            "$ref": "./examples/LoadBalancerProbeGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/migrateToIpBased": {
      "post": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_MigrateToIpBased",
        "description": "Migrate load balancer to IP Based",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group.",
            "pattern": "^[a-z][a-z0-9]*$"
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the load balancer.",
            "pattern": "^[a-z][a-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MigrateLoadBalancerToIpBasedRequest"
            },
            "description": "Parameters supplied to the migrateToIpBased Api."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for migrating Load balancer to IP Based.",
            "schema": {
              "$ref": "#/definitions/MigratedPools"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Migrate load balancer to IP Based": {
            "$ref": "./examples/MigrateLoadBalancerToIPBased.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}": {
      "delete": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Delete",
        "description": "Deletes the specified network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete network interface": {
            "$ref": "./examples/NetworkInterfaceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Get",
        "description": "Gets information about the specified network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get network interface": {
            "$ref": "./examples/NetworkInterfaceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_CreateOrUpdate",
        "description": "Creates or updates a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            },
            "description": "Parameters supplied to the create or update network interface operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network interface": {
            "$ref": "./examples/NetworkInterfaceCreate.json"
          },
          "Create network interface with Gateway Load Balancer Consumer configured": {
            "$ref": "./examples/NetworkInterfaceCreateGatewayLoadBalancerConsumer.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_UpdateTags",
        "description": "Updates a network interface tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network interface tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update network interface tags": {
            "$ref": "./examples/NetworkInterfaceUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListAll",
        "description": "Gets all network interfaces in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all network interfaces": {
            "$ref": "./examples/NetworkInterfaceListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_List",
        "description": "Gets all network interfaces in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List network interfaces in resource group": {
            "$ref": "./examples/NetworkInterfaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable": {
      "post": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetEffectiveRouteTable",
        "description": "Gets all route tables applied to a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of EffectRoute resources.",
            "schema": {
              "$ref": "#/definitions/EffectiveRouteListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Show network interface effective route tables": {
            "$ref": "./examples/NetworkInterfaceEffectiveRouteTableList.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups": {
      "post": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListEffectiveNetworkSecurityGroups",
        "description": "Gets all network security groups applied to a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "schema": {
              "$ref": "#/definitions/EffectiveNetworkSecurityGroupListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List network interface effective network security groups": {
            "$ref": "./examples/NetworkInterfaceEffectiveNSGList.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaceIPConfigurations_List",
        "description": "Get all ip configurations in a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface IPConfiguration resources.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceIPConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkInterfaceIPConfigurationList": {
            "$ref": "./examples/NetworkInterfaceIPConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaceIPConfigurations_Get",
        "description": "Gets the specified network interface ip configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ip configuration name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkInterface IPConfiguration resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaceIPConfigurationGet": {
            "$ref": "./examples/NetworkInterfaceIPConfigurationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/loadBalancers": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaceLoadBalancers_List",
        "description": "List all load balancers in a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface LoadBalancer resources.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceLoadBalancerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkInterfaceLoadBalancerList": {
            "$ref": "./examples/NetworkInterfaceLoadBalancerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}": {
      "delete": {
        "tags": [
          "Network Interfaces"
        ],
        "operationId": "NetworkInterfaceTapConfigurations_Delete",
        "description": "Deletes the specified tap configuration from the NetworkInterface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "tapConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tap configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete tap configuration": {
            "$ref": "./examples/NetworkInterfaceTapConfigurationDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaceTapConfigurations_Get",
        "description": "Get the specified tap configuration on a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "tapConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tap configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a tap configuration.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Network Interface Tap Configurations": {
            "$ref": "./examples/NetworkInterfaceTapConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Network Interfaces"
        ],
        "operationId": "NetworkInterfaceTapConfigurations_CreateOrUpdate",
        "description": "Creates or updates a Tap configuration in the specified NetworkInterface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "tapConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tap configuration."
          },
          {
            "name": "tapConfigurationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
            },
            "description": "Parameters supplied to the create or update tap configuration operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Tap Configuration resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Tap configuration resource.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Network Interface Tap Configurations": {
            "$ref": "./examples/NetworkInterfaceTapConfigurationCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaceTapConfigurations_List",
        "description": "Get all Tap configurations in a network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface TapConfiguration resources.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceTapConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual network tap configurations": {
            "$ref": "./examples/NetworkInterfaceTapConfigurationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}": {
      "delete": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_Delete",
        "x-ms-examples": {
          "RouteFilterDelete": {
            "$ref": "./examples/RouteFilterDelete.json"
          }
        },
        "description": "Deletes the specified route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_Get",
        "x-ms-examples": {
          "RouteFilterGet": {
            "$ref": "./examples/RouteFilterGet.json"
          }
        },
        "description": "Gets the specified route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced express route bgp peering resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_CreateOrUpdate",
        "x-ms-examples": {
          "RouteFilterCreate": {
            "$ref": "./examples/RouteFilterCreate.json"
          }
        },
        "description": "Creates or updates a route filter in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "name": "routeFilterParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            },
            "description": "Parameters supplied to the create or update route filter operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route Filter resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_UpdateTags",
        "description": "Updates tags of a route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update route filter tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update route filter tags": {
            "$ref": "./examples/RouteFilterUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_ListByResourceGroup",
        "x-ms-examples": {
          "RouteFilterListByResourceGroup": {
            "$ref": "./examples/RouteFilterListByResourceGroup.json"
          }
        },
        "description": "Gets all route filters in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter resources.",
            "schema": {
              "$ref": "#/definitions/RouteFilterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_List",
        "x-ms-examples": {
          "RouteFilterList": {
            "$ref": "./examples/RouteFilterList.json"
          }
        },
        "description": "Gets all route filters in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter resources.",
            "schema": {
              "$ref": "#/definitions/RouteFilterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}": {
      "delete": {
        "tags": [
          "RouteFilterRules"
        ],
        "operationId": "RouteFilterRules_Delete",
        "x-ms-examples": {
          "RouteFilterRuleDelete": {
            "$ref": "./examples/RouteFilterRuleDelete.json"
          }
        },
        "description": "Deletes the specified rule from a route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Accepted."
          },
          "204": {
            "description": "Rule was deleted or not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "RouteFilterRules"
        ],
        "operationId": "RouteFilterRules_Get",
        "x-ms-examples": {
          "RouteFilterRuleGet": {
            "$ref": "./examples/RouteFilterRuleGet.json"
          }
        },
        "description": "Gets the specified rule from a route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter Rule resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilterRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RouteFilterRules"
        ],
        "operationId": "RouteFilterRules_CreateOrUpdate",
        "x-ms-examples": {
          "RouteFilterRuleCreate": {
            "$ref": "./examples/RouteFilterRuleCreate.json"
          }
        },
        "description": "Creates or updates a route in the specified route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter rule."
          },
          {
            "name": "routeFilterRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteFilterRule"
            },
            "description": "Parameters supplied to the create or update route filter rule operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Route Filter Rule resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilterRule"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route Filter Rule resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilterRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules": {
      "get": {
        "tags": [
          "RouteFilterRules"
        ],
        "operationId": "RouteFilterRules_ListByRouteFilter",
        "x-ms-examples": {
          "RouteFilterRuleListByRouteFilter": {
            "$ref": "./examples/RouteFilterRuleListByRouteFilter.json"
          }
        },
        "description": "Gets all RouteFilterRules in a route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter Rule resources.",
            "schema": {
              "$ref": "#/definitions/RouteFilterRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}": {
      "delete": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Delete",
        "x-ms-examples": {
          "Delete ApplicationGateway": {
            "$ref": "./examples/ApplicationGatewayDelete.json"
          }
        },
        "description": "Deletes the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Get",
        "x-ms-examples": {
          "Get ApplicationGateway": {
            "$ref": "./examples/ApplicationGatewayGet.json"
          }
        },
        "description": "Gets the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_CreateOrUpdate",
        "description": "Creates or updates the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            },
            "description": "Parameters supplied to the create or update application gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Application Gateway": {
            "$ref": "./examples/ApplicationGatewayCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_UpdateTags",
        "x-ms-examples": {
          "Update Application Gateway tags": {
            "$ref": "./examples/ApplicationGatewayUpdateTags.json"
          }
        },
        "description": "Updates the specified application gateway tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update application gateway tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_List",
        "x-ms-examples": {
          "Lists all application gateways in a resource group": {
            "$ref": "./examples/ApplicationGatewayList.json"
          }
        },
        "description": "Lists all application gateways in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAll",
        "x-ms-examples": {
          "Lists all application gateways in a subscription": {
            "$ref": "./examples/ApplicationGatewayListAll.json"
          }
        },
        "description": "Gets all the application gateways in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Start",
        "x-ms-examples": {
          "Start Application Gateway": {
            "$ref": "./examples/ApplicationGatewayStart.json"
          }
        },
        "description": "Starts the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation starts the ApplicationGateway resource."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Stop",
        "x-ms-examples": {
          "Stop Application Gateway": {
            "$ref": "./examples/ApplicationGatewayStop.json"
          }
        },
        "description": "Stops the specified application gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the ApplicationGateway resource."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_BackendHealth",
        "description": "Gets the backend health of the specified application gateway in a resource group.",
        "x-ms-examples": {
          "Get Backend Health": {
            "$ref": "./examples/ApplicationGatewayBackendHealthGet.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayBackendHealth"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/getBackendHealthOnDemand": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_BackendHealthOnDemand",
        "description": "Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.",
        "x-ms-examples": {
          "Test Backend Health": {
            "$ref": "./examples/ApplicationGatewayBackendHealthTest.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health."
          },
          {
            "name": "probeRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayOnDemandProbe"
            },
            "description": "Request body for on-demand test probe operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayBackendHealthOnDemand"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateLinkResources": {
      "get": {
        "tags": [
          "ApplicationGatewayPrivateLinkResources"
        ],
        "operationId": "ApplicationGatewayPrivateLinkResources_List",
        "x-ms-examples": {
          "Lists all private link resources on application gateway": {
            "$ref": "./examples/ApplicationGatewayPrivateLinkResourceList.json"
          }
        },
        "description": "Lists all private link resources on an application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of private link resources on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}": {
      "delete": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "Delete Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionDelete.json"
          }
        },
        "description": "Deletes the specified private endpoint connection on application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Update",
        "description": "Updates the specified private endpoint connection on application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            },
            "description": "Parameters supplied to update application gateway private endpoint connection operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting private endpoint connection on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection on application gateway.",
        "x-ms-examples": {
          "Get Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionGet.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an application gateway private endpoint connection.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_List",
        "x-ms-examples": {
          "Lists all private endpoint connections on application gateway": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionList.json"
          }
        },
        "description": "Lists all private endpoint connections on an application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of private endpoint connections on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableServerVariables",
        "x-ms-examples": {
          "Get Available Server Variables": {
            "$ref": "./examples/ApplicationGatewayAvailableServerVariablesGet.json"
          }
        },
        "description": "Lists all available server variables.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available server variables.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableServerVariablesResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableRequestHeaders",
        "x-ms-examples": {
          "Get Available Request Headers": {
            "$ref": "./examples/ApplicationGatewayAvailableRequestHeadersGet.json"
          }
        },
        "description": "Lists all available request headers.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available request headers.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableRequestHeadersResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableResponseHeaders",
        "x-ms-examples": {
          "Get Available Response Headers": {
            "$ref": "./examples/ApplicationGatewayAvailableResponseHeadersGet.json"
          }
        },
        "description": "Lists all available response headers.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available response headers.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableResponseHeadersResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableWafRuleSets",
        "x-ms-examples": {
          "Get Available Waf Rule Sets": {
            "$ref": "./examples/ApplicationGatewayAvailableWafRuleSetsGet.json"
          }
        },
        "description": "Lists all available web application firewall rule sets.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available web application firewall rule sets.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableWafRuleSetsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableSslOptions",
        "x-ms-examples": {
          "Get Available Ssl Options": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsGet.json"
          }
        },
        "description": "Lists available Ssl options for configuring Ssl policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns all available Ssl options for configuring Ssl policy.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableSslOptions"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableSslPredefinedPolicies",
        "x-ms-examples": {
          "Get Available Ssl Predefined Policies": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsPredefinedPoliciesGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Lists all SSL predefined policies for configuring Ssl policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a lists of all Ssl predefined policies for configuring Ssl policy.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableSslPredefinedPolicies"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_GetSslPredefinedPolicy",
        "x-ms-examples": {
          "Get Available Ssl Predefined Policy by name": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsPredefinedPolicyGet.json"
          }
        },
        "description": "Gets Ssl predefined policy with the specified policy name.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "predefinedPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of Ssl predefined policy."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a Ssl predefined policy with the specified policy name.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces",
        "description": "Gets information about all network interfaces in a virtual machine in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machine scale set vm network interfaces": {
            "$ref": "./examples/VmssVmNetworkInterfaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces",
        "description": "Gets all network interfaces in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machine scale set network interfaces": {
            "$ref": "./examples/VmssNetworkInterfaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface",
        "description": "Get the specified network interface in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get virtual machine scale set network interface": {
            "$ref": "./examples/VmssNetworkInterfaceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListVirtualMachineScaleSetIpConfigurations",
        "description": "Get the specified network interface ip configuration in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the list of resulting NetworkInterfaceIPConfigurations resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machine scale set network interface ip configurations": {
            "$ref": "./examples/VmssNetworkInterfaceIpConfigList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetVirtualMachineScaleSetIpConfiguration",
        "description": "Get the specified network interface ip configuration in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ip configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkInterfaceIPConfiguration resource.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get virtual machine scale set network interface": {
            "$ref": "./examples/VmssNetworkInterfaceIpConfigGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}": {
      "put": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_CreateOrUpdate",
        "description": "Creates or updates a virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            },
            "description": "Parameters supplied to create or update virtual network gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateVirtualNetworkGateway": {
            "$ref": "./examples/VirtualNetworkGatewayUpdate.json"
          },
          "UpdateVirtualNetworkScalableGateway": {
            "$ref": "./examples/VirtualNetworkScalableGatewayUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Get",
        "description": "Gets the specified virtual network gateway by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a VirtualNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGateway": {
            "$ref": "./examples/VirtualNetworkGatewayGet.json"
          },
          "GetVirtualNetworkScalableGateway": {
            "$ref": "./examples/VirtualNetworkScalableGatewayGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Delete",
        "description": "Deletes the specified virtual network gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteVirtualNetworkGateway": {
            "$ref": "./examples/VirtualNetworkGatewayDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_UpdateTags",
        "description": "Updates a virtual network gateway tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update virtual network gateway tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateVirtualNetworkGatewayTags": {
            "$ref": "./examples/VirtualNetworkGatewayUpdateTags.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways": {
      "get": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_List",
        "description": "Gets all virtual network gateways by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetworkGateway resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVirtualNetworkGatewaysinResourceGroup": {
            "$ref": "./examples/VirtualNetworkGatewayList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/connections": {
      "get": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_ListConnections",
        "description": "Gets all the connections in a virtual network gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetworkGatewayConnection resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayListConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VirtualNetworkGatewaysListConnections": {
            "$ref": "./examples/VirtualNetworkGatewaysListConnections.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Reset",
        "description": "Resets the primary of the virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "gatewayVip",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation reset the primary of the virtual network gateway.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetVirtualNetworkGateway": {
            "$ref": "./examples/VirtualNetworkGatewayReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/resetvpnclientsharedkey": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_ResetVpnClientSharedKey",
        "description": "Resets the VPN client shared key of the virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation reset the vpn client shared key of the virtual network gateway."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetVpnClientSharedKey": {
            "$ref": "./examples/VirtualNetworkGatewayResetVpnClientSharedKey.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Generatevpnclientpackage",
        "description": "Generates VPN client package for P2S client of the virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnClientParameters"
            },
            "description": "Parameters supplied to the generate virtual network gateway VPN client package operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN client package URL.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateVPNClientPackage": {
            "$ref": "./examples/VirtualNetworkGatewayGenerateVpnClientPackage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GenerateVpnProfile",
        "description": "Generates VPN profile for P2S client of the virtual network gateway in the specified resource group. Used for IKEV2 and radius based authentication.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnClientParameters"
            },
            "description": "Parameters supplied to the generate virtual network gateway VPN client package operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateVirtualNetworkGatewayVPNProfile": {
            "$ref": "./examples/VirtualNetworkGatewayGenerateVpnProfile.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetVpnProfilePackageUrl",
        "description": "Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified resource group. The profile needs to be generated first using generateVpnProfile.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayVPNProfilePackageURL": {
            "$ref": "./examples/VirtualNetworkGatewayGetVpnProfilePackageUrl.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetBgpPeerStatus",
        "description": "The GetBgpPeerStatus operation retrieves the status of all BGP peers.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "peer",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The IP address of the peer to retrieve the status of."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of BGP peer statuses.",
            "schema": {
              "$ref": "#/definitions/BgpPeerStatusListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayBGPPeerStatus": {
            "$ref": "./examples/VirtualNetworkGatewayGetBGPPeerStatus.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/supportedvpndevices": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_SupportedVpnDevices",
        "description": "Gets a xml format representation for supported vpn devices.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Xml format representation for supported vpn devices.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVirtualNetworkGatewaySupportedVPNDevices": {
            "$ref": "./examples/VirtualNetworkGatewaySupportedVpnDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetLearnedRoutes",
        "description": "This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of advertised BGP routes.",
            "schema": {
              "$ref": "#/definitions/GatewayRouteListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayLearnedRoutes": {
            "$ref": "./examples/VirtualNetworkGatewayLearnedRoutes.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetAdvertisedRoutes",
        "description": "This operation retrieves a list of routes the virtual network gateway is advertising to the specified peer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "peer",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The IP address of the peer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of learned BGP routes.",
            "schema": {
              "$ref": "#/definitions/GatewayRouteListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayAdvertisedRoutes": {
            "$ref": "./examples/VirtualNetworkGatewayGetAdvertisedRoutes.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getResiliencyInformation": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetResiliencyInformation",
        "description": "This operation retrieves the resiliency information for an Express Route Gateway, including the gateway's current resiliency score and recommendations to further improve the score",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "attemptRefresh",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Attempt to recalculate the Resiliency Information for the gateway"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resiliency information for the gateway",
            "schema": {
              "$ref": "#/definitions/GatewayResiliencyInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayResiliencyInformation": {
            "$ref": "./examples/VirtualNetworkGatewayGetResiliencyInformation.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getRoutesInformation": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetRoutesInformation",
        "description": "This operation retrieves the route set information for an Express Route Gateway based on their resiliency",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "attemptRefresh",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Attempt to recalculate the Route Sets Information for the gateway"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of route sets learned by the gateway based on their resiliency",
            "schema": {
              "$ref": "#/definitions/GatewayRouteSetsInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayRoutesInformation": {
            "$ref": "./examples/VirtualNetworkGatewayGetRoutesInformation.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/setvpnclientipsecparameters": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_SetVpnclientIpsecParameters",
        "description": "The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "vpnclientIpsecParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnClientIPsecParameters"
            },
            "description": "Parameters supplied to the Begin Set vpnclient ipsec parameters of Virtual Network Gateway P2S client operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation sets the specified vpnclient ipsec parameters for P2S client of the virtual network gateway.",
            "schema": {
              "$ref": "#/definitions/VpnClientIPsecParameters"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Set VirtualNetworkGateway VpnClientIpsecParameters": {
            "$ref": "./examples/VirtualNetworkGatewaySetVpnClientIpsecParameters.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetVpnclientIpsecParameters",
        "description": "The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the set vpnclient ipsec parameters for P2S client of VirtualNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/VpnClientIPsecParameters"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Get VirtualNetworkGateway VpnClientIpsecParameters": {
            "$ref": "./examples/VirtualNetworkGatewayGetVpnClientIpsecParameters.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/vpndeviceconfigurationscript": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_VpnDeviceConfigurationScript",
        "description": "Gets a xml format representation for vpn device configuration script.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection for which the configuration script is generated."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnDeviceScriptParameters"
            },
            "description": "Parameters supplied to the generate vpn device script operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Xml format representation for vpn device configuration script.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVPNDeviceConfigurationScript": {
            "$ref": "./examples/VirtualNetworkGatewayVpnDeviceConfigurationScript.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/startPacketCapture": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_StartPacketCapture",
        "description": "Starts packet capture on virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnPacketCaptureStartParameters"
            },
            "description": "Virtual network gateway packet capture parameters supplied to start packet capture on gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture started on virtual network gateway.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Start packet capture on virtual network gateway without filter": {
            "$ref": "./examples/VirtualNetworkGatewayStartPacketCapture.json"
          },
          "Start packet capture on virtual network gateway with filter": {
            "$ref": "./examples/VirtualNetworkGatewayStartPacketCaptureFilterData.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/stopPacketCapture": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_StopPacketCapture",
        "description": "Stops packet capture on virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnPacketCaptureStopParameters"
            },
            "description": "Virtual network gateway packet capture parameters supplied to stop packet capture on gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture stopped on virtual network gateway.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Stop packet capture on virtual network gateway": {
            "$ref": "./examples/VirtualNetworkGatewayStopPacketCapture.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getFailoverAllTestsDetails": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetFailoverAllTestDetails",
        "description": "This operation retrieves the details of all the failover tests performed on the gateway for different peering locations",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The type of failover test"
          },
          {
            "name": "fetchLatest",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": "Fetch only the latest tests for each peering location"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Failover test details for the gateway",
            "schema": {
              "$ref": "#/definitions/ExpressRouteFailoverAllTestDetails"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayGetFailoverAllTestsDetails": {
            "$ref": "./examples/VirtualNetworkGatewayGetFailoverAllTestsDetails.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getFailoverSingleTestDetails": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetFailoverSingleTestDetails",
        "description": "This operation retrieves the details of a particular failover test performed on the gateway based on the test Guid",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "peeringLocation",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Peering location of the test"
          },
          {
            "name": "failoverTestId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique Guid value which identifies the test"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the failover test",
            "schema": {
              "$ref": "#/definitions/ExpressRouteFailoverSingleTestDetailsObject"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayGetFailoverSingleTestDetails": {
            "$ref": "./examples/VirtualNetworkGatewayGetFailoverSingleTestDetails.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/startSiteFailoverTest": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_StartExpressRouteSiteFailoverSimulation",
        "description": "This operation starts failover simulation on the gateway for the specified peering location",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "peeringLocation",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Peering location of the test"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Request successful. The operation start failover simulation started on virtual network gateway.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayStartSiteFailoverSimulation": {
            "$ref": "./examples/VirtualNetworkGatewayStartSiteFailoverSimulation.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/stopSiteFailoverTest": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_StopExpressRouteSiteFailoverSimulation",
        "description": "This operation stops failover simulation on the gateway for the specified peering location",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "stopParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteFailoverStopApiParameters"
            },
            "description": "Virtual network gateway stop simulation parameters supplied to stop failover simulation on gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Request successful. Started the operation stop failover simulation on virtual network gateway.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayStopSiteFailoverSimulation": {
            "$ref": "./examples/VirtualNetworkGatewayStopSiteFailoverSimulation.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}": {
      "put": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_CreateOrUpdate",
        "description": "Creates or updates a virtual network gateway connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            },
            "description": "Parameters supplied to the create or update virtual network gateway connection operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CreateVirtualNetworkGatewayConnection_S2S": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_Get",
        "description": "Gets the specified virtual network gateway connection by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayConnection": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_Delete",
        "description": "Deletes the specified virtual network Gateway connection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteVirtualNetworkGatewayConnection": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_UpdateTags",
        "description": "Updates a virtual network gateway connection tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update virtual network gateway connection tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateVirtualNetworkGatewayConnectionTags": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionUpdateTags.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey": {
      "put": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_SetSharedKey",
        "description": "The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            },
            "description": "Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The operation returns the resulting ConnectionSharedKey resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting ConnectionSharedKey resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SetVirtualNetworkGatewayConnectionSharedKey": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionSetSharedKey.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_GetSharedKey",
        "description": "The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection shared key name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayConnectionSharedKey": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionGetSharedKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections": {
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_List",
        "description": "The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation resets the virtual network gateway connection shared key.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVirtualNetworkGatewayConnectionsinResourceGroup": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_ResetSharedKey",
        "description": "The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection reset shared key Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionResetSharedKey"
            },
            "description": "Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation sets the virtual network gateway connection shared key.",
            "schema": {
              "$ref": "#/definitions/ConnectionResetSharedKey"
            }
          },
          "202": {
            "description": "Request successful. The operation sets the virtual network gateway connection shared key."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetVirtualNetworkGatewayConnectionSharedKey": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionResetSharedKey.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/startPacketCapture": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_StartPacketCapture",
        "description": "Starts packet capture on virtual network gateway connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnPacketCaptureStartParameters"
            },
            "description": "Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture started on virtual network gateway connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Start packet capture on virtual network gateway connection without filter": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionStartPacketCapture.json"
          },
          "Start packet capture on virtual network gateway connection with filter": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionStartPacketCaptureFilterData.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/stopPacketCapture": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_StopPacketCapture",
        "description": "Stops packet capture on virtual network gateway connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway Connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnPacketCaptureStopParameters"
            },
            "description": "Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture stopped on virtual network gateway connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Stop packet capture on virtual network gateway connection": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionStopPacketCapture.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/getikesas": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_GetIkeSas",
        "description": "Lists IKE Security Associations for the virtual network gateway connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway Connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation GetIkeSas will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation getikesas completed on virtual network gateway connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "The operation GetIkeSas could not be completed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayConnectionIkeSa": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionGetIkeSas.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/resetconnection": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_ResetConnection",
        "description": "Resets the virtual network gateway connection specified.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway Connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "The operation resetconnection could not be completed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResetVirtualNetworkGatewayConnection": {
            "$ref": "./examples/VirtualNetworkGatewayConnectionReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}": {
      "put": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_CreateOrUpdate",
        "description": "Creates or updates a local network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "minLength": 1,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            },
            "description": "Parameters supplied to the create or update local network gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting LocalNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting LocalNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CreateLocalNetworkGateway": {
            "$ref": "./examples/LocalNetworkGatewayCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_Get",
        "description": "Gets the specified local network gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "minLength": 1,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting LocalNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetLocalNetworkGateway": {
            "$ref": "./examples/LocalNetworkGatewayGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_Delete",
        "description": "Deletes the specified local network gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "minLength": 1,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteLocalNetworkGateway": {
            "$ref": "./examples/LocalNetworkGatewayDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_UpdateTags",
        "description": "Updates a local network gateway tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "minLength": 1,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update local network gateway tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting LocalNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateLocalNetworkGatewayTags": {
            "$ref": "./examples/LocalNetworkGatewayUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways": {
      "get": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_List",
        "description": "Gets all the local network gateways in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of LocalNetworkGateway resources.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListLocalNetworkGateways": {
            "$ref": "./examples/LocalNetworkGatewayList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getVpnClientConnectionHealth": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_GetVpnclientConnectionHealth",
        "description": "Get VPN client connection health detail per P2S client connection of the virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of VPN client connection health details.",
            "schema": {
              "$ref": "#/definitions/VpnClientConnectionHealthDetailListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayVpnclientConnectionHealth": {
            "$ref": "./examples/VirtualNetworkGatewayGetVpnclientConnectionHealth.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/disconnectVirtualNetworkGatewayVpnConnections": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_DisconnectVirtualNetworkGatewayVpnConnections",
        "description": "Disconnect vpn connections of virtual network gateway in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./virtualWan.json#/definitions/P2SVpnConnectionRequest"
            },
            "description": "The parameters are supplied to disconnect vpn connections."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation disconnects the requested vpn connections."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Disconnect VpnConnections from Virtual Network Gateway": {
            "$ref": "./examples/VirtualNetworkGatewaysDisconnectP2sVpnConnections.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}": {
      "get": {
        "operationId": "VirtualNetworkGatewayNatRules_Get",
        "x-ms-examples": {
          "VirtualNetworkGatewayNatRuleGet": {
            "$ref": "./examples/VirtualNetworkGatewayNatRuleGet.json"
          }
        },
        "description": "Retrieves the details of a nat rule.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the Virtual Network Gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the nat rule.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworkGatewayNatRules_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualNetworkGatewayNatRulePut": {
            "$ref": "./examples/VirtualNetworkGatewayNatRulePut.json"
          }
        },
        "description": "Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the Virtual Network Gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "NatRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
            },
            "description": "Parameters supplied to create or Update a Nat Rule."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the nat rule created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the nat rule created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualNetworkGatewayNatRules_Delete",
        "x-ms-examples": {
          "VirtualNetworkGatewayNatRuleDelete": {
            "$ref": "./examples/VirtualNetworkGatewayNatRuleDelete.json"
          }
        },
        "description": "Deletes a nat rule.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the Virtual Network Gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Nat Rule deleted."
          },
          "202": {
            "description": "Request received successfully. Nat Rule deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No nat rules exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules": {
      "get": {
        "operationId": "VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway",
        "x-ms-examples": {
          "VirtualNetworkGatewayNatRuleList": {
            "$ref": "./examples/VirtualNetworkGatewayNatRuleList.json"
          }
        },
        "description": "Retrieves all nat rules for a particular virtual network gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the virtual network gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Nat rules for a virtual network gateway.",
            "schema": {
              "$ref": "#/definitions/ListVirtualNetworkGatewayNatRulesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/prepareMigration": {
      "post": {
        "operationId": "VirtualNetworkGateways_InvokePrepareMigration",
        "description": "Trigger prepare migration for the virtual network gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the virtual network gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "migrationParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayMigrationParameters"
            },
            "description": "Parameters supplied to the Begin Prepare migration on basic vpn gateway through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully. Prepare migration in progress; follow the Location header to poll for final outcome.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayPrepareMigration": {
            "$ref": "./examples/VirtualNetworkGatewayPrepareMigration.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/executeMigration": {
      "post": {
        "operationId": "VirtualNetworkGateways_InvokeExecuteMigration",
        "description": "Trigger execute migration for the virtual network gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the virtual network gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully. Execute migration in progress; follow the Location header to poll for final outcome.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayExecuteMigration": {
            "$ref": "./examples/VirtualNetworkGatewayExecuteMigration.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/commitMigration": {
      "post": {
        "operationId": "VirtualNetworkGateways_InvokeCommitMigration",
        "description": "Trigger commit migration for the virtual network gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the virtual network gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully. Commit migration in progress; follow the Location header to poll for final outcome.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayCommitMigration": {
            "$ref": "./examples/VirtualNetworkGatewayCommitMigration.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/abortMigration": {
      "post": {
        "operationId": "VirtualNetworkGateways_InvokeAbortMigration",
        "description": "Trigger abort migration for the virtual network gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the virtual network gateway."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully. Abort migration in progress; follow the Location header to poll for final outcome.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualNetworkGatewayAbortMigration": {
            "$ref": "./examples/VirtualNetworkGatewayAbortMigration.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools": {
      "get": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Gets list of Pool resources at Network Manager level.",
        "operationId": "IpamPools_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Optional skip token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Optional num entries to skip.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "top",
            "description": "Optional num entries to show.",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "sortKey",
            "description": "Optional key by which to sort.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortValue",
            "description": "Optional sort value for pagination.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IpamPools",
            "schema": {
              "$ref": "#/definitions/IpamPoolList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpamPools_List": {
            "$ref": "./examples/IpamPools_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools/{poolName}": {
      "put": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Creates/Updates the Pool resource.",
        "operationId": "IpamPools_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "IP Address Manager Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pool resource object to create/update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpamPool"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "200": {
            "description": "Pool was updated",
            "schema": {
              "$ref": "#/definitions/IpamPool"
            }
          },
          "201": {
            "description": "Pool was created",
            "schema": {
              "$ref": "#/definitions/IpamPool"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "IpamPools_Create": {
            "$ref": "./examples/IpamPools_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Updates the specific Pool resource.",
        "operationId": "IpamPools_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "IP Address Manager Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pool resource object to update partially.",
            "schema": {
              "$ref": "#/definitions/IpamPoolUpdate"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "200": {
            "description": "Pool was updated",
            "schema": {
              "$ref": "#/definitions/IpamPool"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpamPools_Update": {
            "$ref": "./examples/IpamPools_Update.json"
          }
        }
      },
      "get": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Gets the specific Pool resource.",
        "operationId": "IpamPools_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "IpamPool",
            "schema": {
              "$ref": "#/definitions/IpamPool"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpamPools_Get": {
            "$ref": "./examples/IpamPools_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Delete the Pool resource.",
        "operationId": "IpamPools_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "202": {
            "description": "Pool delete request accepted and will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Pool delete request succeeded"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpamPools_Delete": {
            "$ref": "./examples/IpamPools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools/{poolName}/getPoolUsage": {
      "post": {
        "tags": [
          "IpamPools"
        ],
        "summary": "Get the Pool Usage.",
        "operationId": "IpamPools_GetPoolUsage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Show the summary of usage info of ipamPool",
            "schema": {
              "$ref": "#/definitions/PoolUsage"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpamPools_GetPoolUsage": {
            "$ref": "./examples/IpamPools_GetPoolUsage.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools/{poolName}/listAssociatedResources": {
      "post": {
        "tags": [
          "IpamPools"
        ],
        "summary": "List Associated Resource in the Pool.",
        "operationId": "IpamPools_ListAssociatedResources",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PoolAssociation",
            "schema": {
              "$ref": "#/definitions/PoolAssociationList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpamPools_ListAssociatedResources": {
            "$ref": "./examples/IpamPools_ListAssociatedResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools/{poolName}/staticCidrs": {
      "get": {
        "tags": [
          "StaticCidrs"
        ],
        "summary": "Gets list of Static CIDR resources at Network Manager level.",
        "operationId": "StaticCidrs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Optional skip token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Optional num entries to skip.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "top",
            "description": "Optional num entries to show.",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "sortKey",
            "description": "Optional key by which to sort.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortValue",
            "description": "Optional sort value for pagination.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of StaticCidrs",
            "schema": {
              "$ref": "#/definitions/StaticCidrList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "StaticCidrs_List": {
            "$ref": "./examples/StaticCidrs_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/ipamPools/{poolName}/staticCidrs/{staticCidrName}": {
      "put": {
        "tags": [
          "StaticCidrs"
        ],
        "summary": "Creates/Updates the Static CIDR resource.",
        "operationId": "StaticCidrs_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "IP Address Manager Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "staticCidrName",
            "description": "Static Cidr allocation name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "StaticCidr resource object to create/update.",
            "schema": {
              "$ref": "#/definitions/StaticCidr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Static CIDR was updated",
            "schema": {
              "$ref": "#/definitions/StaticCidr"
            }
          },
          "201": {
            "description": "Static CIDR was created",
            "schema": {
              "$ref": "#/definitions/StaticCidr"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StaticCidrs_Create": {
            "$ref": "./examples/StaticCidrs_Create.json"
          }
        }
      },
      "get": {
        "tags": [
          "StaticCidrs"
        ],
        "summary": "Gets the specific Static CIDR resource.",
        "operationId": "StaticCidrs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "staticCidrName",
            "description": "StaticCidr resource name to retrieve.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Static CIDR",
            "schema": {
              "$ref": "#/definitions/StaticCidr"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StaticCidrs_Get": {
            "$ref": "./examples/StaticCidrs_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StaticCidrs"
        ],
        "summary": "Delete the Static CIDR resource.",
        "operationId": "StaticCidrs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "poolName",
            "description": "Pool resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "staticCidrName",
            "description": "StaticCidr resource name to delete.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Static CIDR delete request accepted and will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Static CIDR delete request succeeded"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "StaticCidrs_Delete": {
            "$ref": "./examples/StaticCidrs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}": {
      "delete": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_Delete",
        "description": "Deletes the specified private link service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete private link service": {
            "$ref": "./examples/PrivateLinkServiceDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_Get",
        "description": "Gets the specified private link service by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting PrivateLinkService resource.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkService"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get private link service": {
            "$ref": "./examples/PrivateLinkServiceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateLinkService"
        ],
        "operationId": "PrivateLinkServices_CreateOrUpdate",
        "description": "Creates or updates an private link service in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateLinkService"
            },
            "description": "Parameters supplied to the create or update private link service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting privateLinkService resource.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkService"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting privateLinkService resource.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkService"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create private link service": {
            "$ref": "./examples/PrivateLinkServiceCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_List",
        "description": "Gets all private link services in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of privateLinkService resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkServiceListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List private link service in resource group": {
            "$ref": "./examples/PrivateLinkServiceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_ListBySubscription",
        "description": "Gets all private link service in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PrivateLinkService resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkServiceListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List all private list service": {
            "$ref": "./examples/PrivateLinkServiceListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_GetPrivateEndpointConnection",
        "description": "Get the specific private end point connection by specific private link service in the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private end point connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting private end point connection resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get private end point connection": {
            "$ref": "./examples/PrivateLinkServiceGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_UpdatePrivateEndpointConnection",
        "description": "Approve or reject private end point connection for a private link service in a subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private end point connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "Parameters supplied to approve or reject the private end point connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting PrivateEndpointConnection resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "approve or reject private end point connection for a private link service": {
            "$ref": "./examples/PrivateLinkServiceUpdatePrivateEndpointConnection.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_DeletePrivateEndpointConnection",
        "description": "Delete private end point connection for a private link service in a subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private end point connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "delete private end point connection for a private link service": {
            "$ref": "./examples/PrivateLinkServiceDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_ListPrivateEndpointConnections",
        "description": "Gets all private end point connections for a specific private link service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private end point connection resources.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List private link service in resource group": {
            "$ref": "./examples/PrivateLinkServiceListPrivateEndpointConnection.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility": {
      "post": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_CheckPrivateLinkServiceVisibility",
        "description": "Checks whether the subscription is visible to private link service.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPrivateLinkServiceVisibilityRequest"
            },
            "description": "The request body of CheckPrivateLinkService API call."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns whether the subscription is visible to private link service.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkServiceVisibility"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Check private link service visibility": {
            "$ref": "./examples/CheckPrivateLinkServiceVisibility.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility": {
      "post": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_CheckPrivateLinkServiceVisibilityByResourceGroup",
        "description": "Checks whether the subscription is visible to private link service in the specified resource group.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPrivateLinkServiceVisibilityRequest"
            },
            "description": "The request body of CheckPrivateLinkService API call."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns whether the subscription is visible to private link service.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkServiceVisibility"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Check private link service visibility": {
            "$ref": "./examples/CheckPrivateLinkServiceVisibilityByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_ListAutoApprovedPrivateLinkServices",
        "description": "Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.",
            "schema": {
              "$ref": "#/definitions/AutoApprovedPrivateLinkServicesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get list of private link service id that can be linked to a private end point with auto approved": {
            "$ref": "./examples/AutoApprovedPrivateLinkServicesGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices": {
      "get": {
        "tags": [
          "PrivateLinkServices"
        ],
        "operationId": "PrivateLinkServices_ListAutoApprovedPrivateLinkServicesByResourceGroup",
        "description": "Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.",
            "schema": {
              "$ref": "#/definitions/AutoApprovedPrivateLinkServicesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get list of private link service id that can be linked to a private end point with auto approved": {
            "$ref": "./examples/AutoApprovedPrivateLinkServicesResourceGroupGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations": {
      "get": {
        "tags": [
          "NetworkManagerRoutingConfigurations"
        ],
        "operationId": "NetworkManagerRoutingConfigurations_List",
        "description": "Lists all the network manager routing configurations in a network manager, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all routing configuration resources in the specified network manager, in a paginated format",
            "schema": {
              "$ref": "#/definitions/NetworkManagerRoutingConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List routing configurations in a network manager": {
            "$ref": "./examples/NetworkManagerRoutingConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations/{configurationName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerRoutingConfigurationParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkManagerRoutingConfigurations"
        ],
        "description": "Retrieves a network manager routing configuration.",
        "operationId": "NetworkManagerRoutingConfigurations_Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkManagerRoutingConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get routing configurations": {
            "$ref": "./examples/NetworkManagerRoutingConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkManagerRoutingConfigurations"
        ],
        "description": "Creates or updates a network manager routing configuration.",
        "operationId": "NetworkManagerRoutingConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "name": "routingConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManagerRoutingConfiguration"
            },
            "description": "The routing configuration to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Routing Configuration",
            "schema": {
              "$ref": "#/definitions/NetworkManagerRoutingConfiguration"
            }
          },
          "201": {
            "description": "Created Routing Configuration",
            "schema": {
              "$ref": "#/definitions/NetworkManagerRoutingConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network manager routing configuration": {
            "$ref": "./examples/NetworkManagerRoutingConfigurationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkManagerRoutingConfigurations"
        ],
        "description": "Deletes a network manager routing configuration.",
        "operationId": "NetworkManagerRoutingConfigurations_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete network manager routing configuration": {
            "$ref": "./examples/NetworkManagerRoutingConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations/{configurationName}/ruleCollections": {
      "get": {
        "tags": [
          "RoutingRuleCollections"
        ],
        "operationId": "RoutingRuleCollections_List",
        "description": "Lists all the rule collections in a routing configuration, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerRoutingConfigurationParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all ruleCollections in the specified routing configuration, in a paginated format",
            "schema": {
              "$ref": "#/definitions/RoutingRuleCollectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List routing rule collections": {
            "$ref": "./examples/NetworkManagerRoutingRuleCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerRoutingConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        }
      ],
      "get": {
        "tags": [
          "RoutingRuleCollections"
        ],
        "description": "Gets a network manager routing configuration rule collection.",
        "operationId": "RoutingRuleCollections_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoutingRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets routing rule collection": {
            "$ref": "./examples/NetworkManagerRoutingRuleCollectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "RoutingRuleCollections"
        ],
        "description": "Creates or updates a routing rule collection.",
        "operationId": "RoutingRuleCollections_CreateOrUpdate",
        "parameters": [
          {
            "name": "ruleCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingRuleCollection"
            },
            "description": "The Rule Collection to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Rule Collection",
            "schema": {
              "$ref": "#/definitions/RoutingRuleCollection"
            }
          },
          "201": {
            "description": "Created Rule Collection",
            "schema": {
              "$ref": "#/definitions/RoutingRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a routing rule collection": {
            "$ref": "./examples/NetworkManagerRoutingRuleCollectionPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingRuleCollections"
        ],
        "description": "Deletes an routing rule collection.",
        "operationId": "RoutingRuleCollections_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Deletes an routing rule collection": {
            "$ref": "./examples/NetworkManagerRoutingRuleCollectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerRoutingConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        },
        {
          "$ref": "#/parameters/ListSkipTokenParameter"
        }
      ],
      "get": {
        "tags": [
          "RoutingRules"
        ],
        "description": "List all network manager routing configuration routing rules.",
        "operationId": "RoutingRules_List",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoutingRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List routing rules": {
            "$ref": "./examples/NetworkManagerRoutingRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/routingConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerRoutingConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerRoutingConfigurationsRuleParameter"
        }
      ],
      "get": {
        "tags": [
          "RoutingRules"
        ],
        "description": "Gets a network manager routing configuration routing rule.",
        "operationId": "RoutingRules_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoutingRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets routing rule": {
            "$ref": "./examples/NetworkManagerRoutingRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "RoutingRules"
        ],
        "description": "Creates or updates an routing rule.",
        "operationId": "RoutingRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "routingRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingRule"
            },
            "description": "The routing rule to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rule",
            "schema": {
              "$ref": "#/definitions/RoutingRule"
            }
          },
          "201": {
            "description": "Created rule",
            "schema": {
              "$ref": "#/definitions/RoutingRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create an routing rule": {
            "$ref": "./examples/NetworkManagerRoutingRulePut.json"
          },
          "Create a default routing rule": {
            "$ref": "./examples/NetworkManagerRoutingRulePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingRules"
        ],
        "description": "Deletes a routing rule.",
        "operationId": "RoutingRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Deletes a routing rule": {
            "$ref": "./examples/NetworkManagerRoutingRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "Usages_List",
        "description": "List network usages for a subscription.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location where resource usage is queried.",
            "pattern": "^[-\\w\\._ ]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Usage resources.",
            "schema": {
              "$ref": "#/definitions/UsagesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List usages": {
            "$ref": "./examples/UsageList.json"
          },
          "List usages spaced location": {
            "$ref": "./examples/UsageListSpacedLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}": {
      "put": {
        "tags": [
          "DscpConfiguration"
        ],
        "operationId": "DscpConfiguration_CreateOrUpdate",
        "description": "Creates or updates a DSCP Configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "dscpConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DscpConfiguration"
            },
            "description": "Parameters supplied to the create or update dscp configuration operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting DscpConfiguration resource.",
            "schema": {
              "$ref": "#/definitions/DscpConfiguration"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting DscpConfiguration resource.",
            "schema": {
              "$ref": "#/definitions/DscpConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create DSCP Configuration": {
            "$ref": "./examples/DscpConfigurationCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "DscpConfiguration"
        ],
        "operationId": "DscpConfiguration_Delete",
        "description": "Deletes a DSCP Configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "dscpConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete DSCP Configuration": {
            "$ref": "./examples/DscpConfigurationDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "DscpConfiguration"
        ],
        "operationId": "DscpConfiguration_Get",
        "description": "Gets a DSCP Configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "dscpConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting DSCP Configuration resource.",
            "schema": {
              "$ref": "#/definitions/DscpConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Dscp Configuration": {
            "$ref": "./examples/DscpConfigurationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations": {
      "get": {
        "tags": [
          "DscpConfigurations"
        ],
        "operationId": "DscpConfiguration_List",
        "description": "Gets a DSCP Configuration.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting DSCP Configuration resource.",
            "schema": {
              "$ref": "#/definitions/DscpConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Dscp Configuration": {
            "$ref": "./examples/DscpConfigurationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations": {
      "get": {
        "tags": [
          "DscpConfigurations"
        ],
        "operationId": "DscpConfiguration_ListAll",
        "description": "Gets all dscp configurations in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "#/definitions/DscpConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all network interfaces": {
            "$ref": "./examples/DscpConfigurationListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_Delete",
        "description": "Deletes the specified authorization from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete ExpressRouteCircuit Authorization": {
            "$ref": "./examples/ExpressRouteCircuitAuthorizationDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_Get",
        "description": "Gets the specified authorization from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the ExpressRouteCircuitAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRouteCircuit Authorization": {
            "$ref": "./examples/ExpressRouteCircuitAuthorizationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_CreateOrUpdate",
        "description": "Creates or updates an authorization in the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "name": "authorizationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            },
            "description": "Parameters supplied to the create or update express route circuit authorization operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create ExpressRouteCircuit Authorization": {
            "$ref": "./examples/ExpressRouteCircuitAuthorizationCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations": {
      "get": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_List",
        "description": "Gets all authorizations in an express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCircuitAuthorization resources.",
            "schema": {
              "$ref": "#/definitions/AuthorizationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRouteCircuit Authorization": {
            "$ref": "./examples/ExpressRouteCircuitAuthorizationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_Delete",
        "description": "Deletes the specified peering from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete ExpressRouteCircuit Peerings": {
            "$ref": "./examples/ExpressRouteCircuitPeeringDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_Get",
        "description": "Gets the specified peering for the express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRouteCircuit Peering": {
            "$ref": "./examples/ExpressRouteCircuitPeeringGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_CreateOrUpdate",
        "description": "Creates or updates a peering in the specified express route circuits.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "peeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            },
            "description": "Parameters supplied to the create or update express route circuit peering operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create ExpressRouteCircuit Peerings": {
            "$ref": "./examples/ExpressRouteCircuitPeeringCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings": {
      "get": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_List",
        "description": "Gets all peerings in a specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCircuitPeering resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeeringListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRouteCircuit Peerings": {
            "$ref": "./examples/ExpressRouteCircuitPeeringList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuitConnections"
        ],
        "operationId": "ExpressRouteCircuitConnections_Delete",
        "description": "Deletes the specified Express Route Circuit Connection from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete ExpressRouteCircuit": {
            "$ref": "./examples/ExpressRouteCircuitConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteCircuitConnections"
        ],
        "operationId": "ExpressRouteCircuitConnections_Get",
        "description": "Gets the specified Express Route Circuit Connection from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Express Route Circuit Connection resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCircuitConnectionGet": {
            "$ref": "./examples/ExpressRouteCircuitConnectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuitConnections"
        ],
        "operationId": "ExpressRouteCircuitConnections_CreateOrUpdate",
        "description": "Creates or updates a Express Route Circuit Connection in the specified express route circuits.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit connection."
          },
          {
            "name": "expressRouteCircuitConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitConnection"
            },
            "description": "Parameters supplied to the create or update express route circuit connection operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitConnection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCircuitConnectionCreate": {
            "$ref": "./examples/ExpressRouteCircuitConnectionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections": {
      "get": {
        "tags": [
          "ExpressRouteCircuitConnections"
        ],
        "operationId": "ExpressRouteCircuitConnections_List",
        "description": "Gets all global reach connections associated with a private peering in an express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCircuitConnections resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRouteCircuit Connection": {
            "$ref": "./examples/ExpressRouteCircuitConnectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections/{connectionName}": {
      "get": {
        "tags": [
          "PeerExpressRouteCircuitConnections"
        ],
        "operationId": "PeerExpressRouteCircuitConnections_Get",
        "description": "Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peer express route circuit connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Peer Express Route Circuit Connection resource.",
            "schema": {
              "$ref": "#/definitions/PeerExpressRouteCircuitConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PeerExpressRouteCircuitConnectionGet": {
            "$ref": "./examples/PeerExpressRouteCircuitConnectionGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections": {
      "get": {
        "tags": [
          "PeerExpressRouteCircuitConnections"
        ],
        "operationId": "PeerExpressRouteCircuitConnections_List",
        "description": "Gets all global reach peer connections associated with a private peering in an express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PeerExpressRouteCircuitConnections resources.",
            "schema": {
              "$ref": "#/definitions/PeerExpressRouteCircuitConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Peer ExpressRouteCircuit Connection": {
            "$ref": "./examples/PeerExpressRouteCircuitConnectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_Delete",
        "description": "Deletes the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Disabling' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete ExpressRouteCircuit": {
            "$ref": "./examples/ExpressRouteCircuitDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_Get",
        "description": "Gets information about the specified express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of express route circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuit resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRouteCircuit": {
            "$ref": "./examples/ExpressRouteCircuitGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_CreateOrUpdate",
        "description": "Creates or updates an express route circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            },
            "description": "Parameters supplied to the create or update express route circuit operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuit resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuit resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create ExpressRouteCircuit": {
            "$ref": "./examples/ExpressRouteCircuitCreate.json"
          },
          "Create ExpressRouteCircuit on ExpressRoutePort": {
            "$ref": "./examples/ExpressRouteCircuitCreateOnExpressRoutePort.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_UpdateTags",
        "description": "Updates an express route circuit tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update express route circuit tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuit resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Express Route Circuit Tags": {
            "$ref": "./examples/ExpressRouteCircuitUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitArpTable"
        ],
        "operationId": "ExpressRouteCircuits_ListArpTable",
        "description": "Gets the currently advertised ARP table associated with the express route circuit in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitsArpTable resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsArpTableListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "List ARP Table": {
            "$ref": "./examples/ExpressRouteCircuitARPTableList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitRoutesTable"
        ],
        "operationId": "ExpressRouteCircuits_ListRoutesTable",
        "description": "Gets the currently advertised routes table associated with the express route circuit in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitsRouteTable resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsRoutesTableListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "List Route Tables": {
            "$ref": "./examples/ExpressRouteCircuitRouteTableList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitRoutesTableSummary"
        ],
        "operationId": "ExpressRouteCircuits_ListRoutesTableSummary",
        "description": "Gets the currently advertised routes table summary associated with the express route circuit in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitsRoutesTableSummary resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsRoutesTableSummaryListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "List Route Table Summary": {
            "$ref": "./examples/ExpressRouteCircuitRouteTableSummaryList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats": {
      "get": {
        "tags": [
          "ExpressRouteCircuitStats"
        ],
        "operationId": "ExpressRouteCircuits_GetStats",
        "description": "Gets all the stats from an express route circuit in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitStats"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRoute Circuit Traffic Stats": {
            "$ref": "./examples/ExpressRouteCircuitStats.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats": {
      "get": {
        "tags": [
          "ExpressRouteCircuitStats"
        ],
        "operationId": "ExpressRouteCircuits_GetPeeringStats",
        "description": "Gets all stats from an express route circuit in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitStats"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRoute Circuit Peering Traffic Stats": {
            "$ref": "./examples/ExpressRouteCircuitPeeringStats.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_List",
        "description": "Gets all the express route circuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRouteCircuits in a resource group": {
            "$ref": "./examples/ExpressRouteCircuitListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_ListAll",
        "description": "Gets all the express route circuits in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCircuit resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRouteCircuits in a subscription": {
            "$ref": "./examples/ExpressRouteCircuitListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders": {
      "get": {
        "tags": [
          "ExpressRouteServiceProviders"
        ],
        "operationId": "ExpressRouteServiceProviders_List",
        "description": "Gets all the available express route service providers.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteServiceProvider resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteServiceProviderListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRoute providers": {
            "$ref": "./examples/ExpressRouteProviderList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/publicipaddresses": {
      "get": {
        "operationId": "PublicIPAddresses_ListCloudServicePublicIPAddresses",
        "description": "Gets information about all public IP addresses on a cloud service level.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPInterface resources.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVMSSPublicIP": {
            "$ref": "./examples/CloudServicePublicIpListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses": {
      "get": {
        "operationId": "PublicIPAddresses_ListCloudServiceRoleInstancePublicIPAddresses",
        "description": "Gets information about all public IP addresses in a role instance IP configuration in a cloud service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "roleInstanceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of role instance."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The network interface name."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The IP configuration name."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPAddress resources.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVMSSVMPublicIP": {
            "$ref": "./examples/CloudServiceRoleInstancePublicIpList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}": {
      "get": {
        "operationId": "PublicIPAddresses_GetCloudServicePublicIPAddress",
        "description": "Get the specified public IP address in a cloud service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "roleInstanceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The role instance name."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IP configuration."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP Address."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "x-ms-examples": {
          "GetVMSSPublicIP": {
            "$ref": "./examples/CloudServicePublicIpGet.json"
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/{name}": {
      "get": {
        "tags": [
          "WebCategories"
        ],
        "operationId": "WebCategories_Get",
        "description": "Gets the specified Azure Web Category.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the azureWebCategory."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands resourceIds back referenced by the azureWebCategory resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting azureWebCategory resource.",
            "schema": {
              "$ref": "#/definitions/AzureWebCategory"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Web Category by name": {
            "$ref": "./examples/AzureWebCategoryGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories": {
      "get": {
        "tags": [
          "WebCategories"
        ],
        "operationId": "WebCategories_ListBySubscription",
        "description": "Gets all the Azure Web Categories in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Azure Web Category resources.",
            "schema": {
              "$ref": "#/definitions/AzureWebCategoryListResult"
            }
          },
          "default": {
            "description": "Unexpected Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Azure Web Categories for a given subscription": {
            "$ref": "./examples/AzureWebCategoriesListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}": {
      "put": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_CreateOrUpdate",
        "description": "Creates or updates a network watcher in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            },
            "description": "Parameters that define the network watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create network watcher": {
            "$ref": "./examples/NetworkWatcherCreate.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_Get",
        "description": "Gets the specified network watcher by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get network watcher": {
            "$ref": "./examples/NetworkWatcherGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_Delete",
        "description": "Deletes the specified network watcher resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete network watcher": {
            "$ref": "./examples/NetworkWatcherDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_UpdateTags",
        "description": "Updates a network watcher tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network watcher tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network watcher tags": {
            "$ref": "./examples/NetworkWatcherUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_List",
        "description": "Gets all network watchers by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network watcher resources.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcherListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List network watchers": {
            "$ref": "./examples/NetworkWatcherList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_ListAll",
        "description": "Gets all network watchers by subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network watcher resources.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcherListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List all network watchers": {
            "$ref": "./examples/NetworkWatcherListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTopology",
        "description": "Gets the current network topology by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopologyParameters"
            },
            "description": "Parameters that define the representation of topology."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the topology of resource group.",
            "schema": {
              "$ref": "#/definitions/Topology"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Topology": {
            "$ref": "./examples/NetworkWatcherTopologyGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_VerifyIPFlow",
        "description": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowParameters"
            },
            "description": "Parameters that define the IP flow to be verified."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the result of IP flow verification.",
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ip flow verify": {
            "$ref": "./examples/NetworkWatcherIpFlowVerify.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetNextHop",
        "description": "Gets the next hop from the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextHopParameters"
            },
            "description": "Parameters that define the source and destination endpoint."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the next hop from the VM.",
            "schema": {
              "$ref": "#/definitions/NextHopResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NextHopResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get next hop": {
            "$ref": "./examples/NetworkWatcherNextHopGet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetVMSecurityRules",
        "description": "Gets the configured and effective security group rules on the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewParameters"
            },
            "description": "Parameters that define the VM to check security groups for."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns security group rules on the VM.",
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get security group view": {
            "$ref": "./examples/NetworkWatcherSecurityGroupViewGet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}": {
      "put": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Create",
        "description": "Create and start a packet capture on the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            },
            "description": "Parameters that define the create packet capture operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The operation returns the resulting packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create packet capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Get",
        "description": "Gets a packet capture session by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Delete",
        "description": "Deletes the specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete packet capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Stop",
        "description": "Stops a specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the packet capture session."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop packet capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureStop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_GetStatus",
        "description": "Query the status of a running packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name given to the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query of packet capture status.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          },
          "202": {
            "description": "Accepted query status of packet capture.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Query packet capture status": {
            "$ref": "./examples/NetworkWatcherPacketCaptureQueryStatus.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures": {
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_List",
        "description": "Lists all packet capture sessions within the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful packet capture enumeration request.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List packet captures": {
            "$ref": "./examples/NetworkWatcherPacketCapturesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTroubleshooting",
        "description": "Initiate troubleshooting on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TroubleshootingParameters"
            },
            "description": "Parameters that define the resource to troubleshoot."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful troubleshooting request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "202": {
            "description": "Accepted get troubleshooting request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get troubleshooting": {
            "$ref": "./examples/NetworkWatcherTroubleshootGet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTroubleshootingResult",
        "description": "Get the last completed troubleshooting result on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryTroubleshootingParameters"
            },
            "description": "Parameters that define the resource to query the troubleshooting result."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get troubleshooting result request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "202": {
            "description": "Accepted get troubleshooting result request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get troubleshoot result": {
            "$ref": "./examples/NetworkWatcherTroubleshootResultQuery.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog": {
      "post": {
        "tags": [
          "NetworkWatchers",
          "TrafficAnalytics"
        ],
        "operationId": "NetworkWatchers_SetFlowLogConfiguration",
        "description": "Configures flow log and traffic analytics (optional) on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            },
            "description": "Parameters that define the configuration of flow log."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for setting flow log and traffic analytics (optional) configuration.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configure flow log": {
            "$ref": "./examples/NetworkWatcherFlowLogConfigure.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus": {
      "post": {
        "tags": [
          "NetworkWatchers",
          "TrafficAnalytics"
        ],
        "operationId": "NetworkWatchers_GetFlowLogStatus",
        "description": "Queries status of flow log and traffic analytics (optional) on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogStatusParameters"
            },
            "description": "Parameters that define a resource to query flow log and traffic analytics (optional) status."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for query flow log and traffic analytics (optional) status.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get flow log status": {
            "$ref": "./examples/NetworkWatcherFlowLogStatusQuery.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_CheckConnectivity",
        "description": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectivityParameters"
            },
            "description": "Parameters that determine how the connectivity check will be performed."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for checking connectivity.",
            "schema": {
              "$ref": "#/definitions/ConnectivityInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/ConnectivityInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check connectivity": {
            "$ref": "./examples/NetworkWatcherConnectivityCheck.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetAzureReachabilityReport",
        "description": "NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReportParameters"
            },
            "description": "Parameters that determine Azure reachability report configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for Azure reachability report.",
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReport"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReport"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Reachability Report": {
            "$ref": "./examples/NetworkWatcherAzureReachabilityReportGet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_ListAvailableProviders",
        "description": "NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailableProvidersListParameters"
            },
            "description": "Parameters that scope the list of available providers."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for list of available providers.",
            "schema": {
              "$ref": "#/definitions/AvailableProvidersList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AvailableProvidersList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Available Providers List": {
            "$ref": "./examples/NetworkWatcherAvailableProvidersListGet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/networkConfigurationDiagnostic": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetNetworkConfigurationDiagnostic",
        "description": "Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConfigurationDiagnosticParameters"
            },
            "description": "Parameters to get network configuration diagnostic."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the result of network configuration diagnostic.",
            "schema": {
              "$ref": "#/definitions/NetworkConfigurationDiagnosticResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConfigurationDiagnosticResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Network configuration diagnostic": {
            "$ref": "./examples/NetworkWatcherNetworkConfigurationDiagnostic.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}": {
      "put": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_CreateOrUpdate",
        "description": "Create or update a connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionMonitor"
            },
            "description": "Parameters that define the operation to create a connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "migrate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Value indicating whether connection monitor V1 should be migrated to V2 format."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create connection monitor V1": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorCreate.json"
          },
          "Create connection monitor V2": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorV2Create.json"
          },
          "Create connection monitor with Arc Network": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorCreateWithArcNetwork.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Get",
        "description": "Gets a connection monitor by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a connection monitor.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Delete",
        "description": "Deletes the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_UpdateTags",
        "description": "Update tags of the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update connection monitor tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns updated connection monitor.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update connection monitor tags": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop": {
      "post": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Stop",
        "description": "Stops the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the connection monitor."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorStop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors": {
      "get": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_List",
        "description": "Lists all connection monitors for the specified Network Watcher.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful connection monitor enumeration request.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List connection monitors": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}": {
      "put": {
        "tags": [
          "FlowLogs"
        ],
        "operationId": "FlowLogs_CreateOrUpdate",
        "description": "Create or update a flow log for the specified network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "flowLogName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the flow log."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "description": "Parameters that define the create or update flow log resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The operation returns the resulting flow log resource.",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting flow log resource.",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update flow log": {
            "$ref": "./examples/NetworkWatcherFlowLogCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "FlowLogs"
        ],
        "operationId": "FlowLogs_UpdateTags",
        "description": "Update tags of the specified flow log.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "flowLogName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the flow log."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update flow log tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns updated flow log.",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update flow log tags": {
            "$ref": "./examples/NetworkWatcherFlowLogUpdateTags.json"
          }
        }
      },
      "get": {
        "tags": [
          "FlowLogs"
        ],
        "operationId": "FlowLogs_Get",
        "description": "Gets a flow log resource by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "flowLogName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the flow log resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a flow log resource.",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get flow log": {
            "$ref": "./examples/NetworkWatcherFlowLogGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "FlowLogs"
        ],
        "operationId": "FlowLogs_Delete",
        "description": "Deletes the specified flow log resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "flowLogName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the flow log resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete flow log": {
            "$ref": "./examples/NetworkWatcherFlowLogDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs": {
      "get": {
        "tags": [
          "FlowLogs"
        ],
        "operationId": "FlowLogs_List",
        "description": "Lists all flow log resources for the specified Network Watcher.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful flow log enumeration request.",
            "schema": {
              "$ref": "#/definitions/FlowLogListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List connection monitors": {
            "$ref": "./examples/NetworkWatcherFlowLogList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies": {
      "get": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "operationId": "WebApplicationFirewallPolicies_List",
        "x-ms-examples": {
          "Lists all WAF policies in a resource group": {
            "$ref": "./examples/WafListPolicies.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies": {
      "get": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Gets all the WAF policies in a subscription.",
        "operationId": "WebApplicationFirewallPolicies_ListAll",
        "x-ms-examples": {
          "Lists all WAF policies in a subscription": {
            "$ref": "./examples/WafListAllPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}": {
      "get": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "operationId": "WebApplicationFirewallPolicies_Get",
        "x-ms-examples": {
          "Gets a WAF policy within a resource group": {
            "$ref": "./examples/WafPolicyGet.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Creates or update policy with specified rule set name within a resource group.",
        "operationId": "WebApplicationFirewallPolicies_CreateOrUpdate",
        "x-ms-examples": {
          "Creates or updates a WAF policy within a resource group": {
            "$ref": "./examples/WafPolicyCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Policy to be created.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "201": {
            "description": "Created. The request has been fulfilled and a new protection policy has been created.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Deletes Policy.",
        "operationId": "WebApplicationFirewallPolicies_Delete",
        "x-ms-examples": {
          "Deletes a WAF policy within a resource group": {
            "$ref": "./examples/WafPolicyDelete.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content. The request has been accepted but the policy was not found."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListCloudServiceRoleInstanceNetworkInterfaces",
        "description": "Gets information about all network interfaces in a role instance in a cloud service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "roleInstanceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of role instance."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List cloud service role instance network interfaces": {
            "$ref": "./examples/CloudServiceRoleInstanceNetworkInterfaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListCloudServiceNetworkInterfaces",
        "description": "Gets all network interfaces in a cloud service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkInterface resources.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List cloud service network interfaces": {
            "$ref": "./examples/CloudServiceNetworkInterfaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetCloudServiceNetworkInterface",
        "description": "Get the specified network interface in a cloud service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "cloudServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "roleInstanceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of role instance."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkInterface resource.",
            "schema": {
              "$ref": "./networkInterface.json#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get cloud service network interface": {
            "$ref": "./examples/CloudServiceNetworkInterfaceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableDelegations": {
      "get": {
        "operationId": "AvailableDelegations_List",
        "description": "Gets all of the available subnet delegations for this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the possible delegations for a subnet in this subscription in the region.",
            "schema": {
              "$ref": "#/definitions/AvailableDelegationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available delegations": {
            "$ref": "./examples/AvailableDelegationsSubscriptionGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableDelegations": {
      "get": {
        "operationId": "AvailableResourceGroupDelegations_List",
        "description": "Gets all of the available subnet delegations for this resource group in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the possible delegations for a subnet in this subscription in the region.",
            "schema": {
              "$ref": "#/definitions/AvailableDelegationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available delegations in the resource group": {
            "$ref": "./examples/AvailableDelegationsResourceGroupGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableServiceAliases": {
      "get": {
        "operationId": "AvailableServiceAliases_List",
        "description": "Gets all available service aliases for this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all available service aliases for the subscription in the region.",
            "schema": {
              "$ref": "#/definitions/AvailableServiceAliasesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available service aliases": {
            "$ref": "./examples/AvailableServiceAliasesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableServiceAliases": {
      "get": {
        "operationId": "AvailableServiceAliases_ListByResourceGroup",
        "description": "Gets all available service aliases for this resource group in this region.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all available service aliases for the resource group in the region.",
            "schema": {
              "$ref": "#/definitions/AvailableServiceAliasesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available service aliases in the resource group": {
            "$ref": "./examples/AvailableServiceAliasesListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}": {
      "delete": {
        "tags": [
          "ddosCustomPolicies"
        ],
        "operationId": "DdosCustomPolicies_Delete",
        "description": "Deletes the specified DDoS custom policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosCustomPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS custom policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete DDoS custom policy": {
            "$ref": "./examples/DdosCustomPolicyDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ddosCustomPolicies"
        ],
        "operationId": "DdosCustomPolicies_Get",
        "description": "Gets information about the specified DDoS custom policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosCustomPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS custom policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the specified DDoS custom policy resource.",
            "schema": {
              "$ref": "#/definitions/DdosCustomPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DDoS custom policy": {
            "$ref": "./examples/DdosCustomPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ddosCustomPolicies"
        ],
        "operationId": "DdosCustomPolicies_CreateOrUpdate",
        "description": "Creates or updates a DDoS custom policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosCustomPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS custom policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DdosCustomPolicy"
            },
            "description": "Parameters supplied to the create or update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting DDoS custom policy resource.",
            "schema": {
              "$ref": "#/definitions/DdosCustomPolicy"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting DDoS custom policy resource.",
            "schema": {
              "$ref": "#/definitions/DdosCustomPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create DDoS custom policy": {
            "$ref": "./examples/DdosCustomPolicyCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ddosCustomPolicies"
        ],
        "operationId": "DdosCustomPolicies_UpdateTags",
        "description": "Update a DDoS custom policy tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosCustomPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS custom policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update DDoS custom policy resource tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting DDoS custom policy resource.",
            "schema": {
              "$ref": "#/definitions/DdosCustomPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DDoS Custom policy Update tags": {
            "$ref": "./examples/DdosCustomPolicyUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}": {
      "delete": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_Delete",
        "description": "Deletes the specified network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete network security group": {
            "$ref": "./examples/NetworkSecurityGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_Get",
        "description": "Gets the specified network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get network security group": {
            "$ref": "./examples/NetworkSecurityGroupGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_CreateOrUpdate",
        "description": "Creates or updates a network security group in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            },
            "description": "Parameters supplied to the create or update network security group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network security group": {
            "$ref": "./examples/NetworkSecurityGroupCreate.json"
          },
          "Create network security group with rule": {
            "$ref": "./examples/NetworkSecurityGroupCreateWithRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_UpdateTags",
        "description": "Updates a network security group tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network security group tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update network security group tags": {
            "$ref": "./examples/NetworkSecurityGroupUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_ListAll",
        "description": "Gets all network security groups in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all network security groups": {
            "$ref": "./examples/NetworkSecurityGroupListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_List",
        "description": "Gets all network security groups in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List network security groups in resource group": {
            "$ref": "./examples/NetworkSecurityGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}": {
      "delete": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_Delete",
        "description": "Deletes the specified network security rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete network security rule from network security group": {
            "$ref": "./examples/NetworkSecurityGroupRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_Get",
        "description": "Get the specified network security rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SecurityRule resource.",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get network security rule in network security group": {
            "$ref": "./examples/NetworkSecurityGroupRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_CreateOrUpdate",
        "description": "Creates or updates a security rule in the specified network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "name": "securityRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            },
            "description": "Parameters supplied to the create or update network security rule operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SecurityRule resource.",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting SecurityRule resource.",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create security rule": {
            "$ref": "./examples/NetworkSecurityGroupRuleCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules": {
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_List",
        "description": "Gets all security rules in a network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SecurityRule resources.",
            "schema": {
              "$ref": "#/definitions/SecurityRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List network security rules in network security group": {
            "$ref": "./examples/NetworkSecurityGroupRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules": {
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "DefaultSecurityRules_List",
        "description": "Gets all default security rules in a network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SecurityRule resources.",
            "schema": {
              "$ref": "#/definitions/SecurityRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DefaultSecurityRuleList": {
            "$ref": "./examples/DefaultSecurityRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules/{defaultSecurityRuleName}": {
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "DefaultSecurityRules_Get",
        "description": "Get the specified default network security rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "defaultSecurityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the default security rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SecurityRule resource.",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DefaultSecurityRuleGet": {
            "$ref": "./examples/DefaultSecurityRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}": {
      "delete": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_Delete",
        "description": "Deletes the specified nat gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "natGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete nat gateway": {
            "$ref": "./examples/NatGatewayDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_Get",
        "description": "Gets the specified nat gateway in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "natGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NatGateway resource.",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get nat gateway": {
            "$ref": "./examples/NatGatewayGet.json"
          },
          "Get nat gateway with StandardV2 Sku": {
            "$ref": "./examples/NatGatewayGetStandardV2Sku.json"
          }
        }
      },
      "put": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_CreateOrUpdate",
        "description": "Creates or updates a nat gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "natGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGateway"
            },
            "description": "Parameters supplied to the create or update nat gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting NatGateway resource.",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting NatGateway resource.",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create nat gateway": {
            "$ref": "./examples/NatGatewayCreateOrUpdate.json"
          },
          "Create nat gateway with StandardV2 Sku": {
            "$ref": "./examples/NatGatewayCreateOrUpdateStandardV2Sku.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_UpdateTags",
        "description": "Updates nat gateway tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "natGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update nat gateway tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NatGateway resource.",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update nat gateway tags": {
            "$ref": "./examples/NatGatewayUpdateTags.json"
          },
          "Update nat gateway with StandardV2 Sku tags": {
            "$ref": "./examples/NatGatewayUpdateTagsStandardV2Sku.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways": {
      "get": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_ListAll",
        "description": "Gets all the Nat Gateways in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NatGateway resources.",
            "schema": {
              "$ref": "#/definitions/NatGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all nat gateways": {
            "$ref": "./examples/NatGatewayListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways": {
      "get": {
        "tags": [
          "NatGateways"
        ],
        "operationId": "NatGateways_List",
        "description": "Gets all nat gateways in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NatGateway resources.",
            "schema": {
              "$ref": "#/definitions/NatGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List nat gateways in resource group": {
            "$ref": "./examples/NatGatewayList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}": {
      "delete": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_Delete",
        "description": "Deletes the specified service endpoint policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete service endpoint policy": {
            "$ref": "./examples/ServiceEndpointPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_Get",
        "description": "Gets the specified service Endpoint Policies in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ServiceEndpointPolicy resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get service endPoint Policy": {
            "$ref": "./examples/ServiceEndpointPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_CreateOrUpdate",
        "description": "Creates or updates a service Endpoint Policies.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicy"
            },
            "description": "Parameters supplied to the create or update service endpoint policy operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ServiceEndpointPolicy resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicy"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ServiceEndpointPolicy resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create service endpoint policy": {
            "$ref": "./examples/ServiceEndpointPolicyCreate.json"
          },
          "Create service endpoint policy with definition": {
            "$ref": "./examples/ServiceEndpointPolicyCreateWithDefinition.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_UpdateTags",
        "description": "Updates tags of a service endpoint policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update service endpoint policy tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ServiceEndpointPolicy resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update service endpoint policy tags": {
            "$ref": "./examples/ServiceEndpointPolicyUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies": {
      "get": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_List",
        "description": "Gets all the service endpoint policies in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ServiceEndpointPolicy resources.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all service endpoint policy": {
            "$ref": "./examples/ServiceEndpointPolicyListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies": {
      "get": {
        "tags": [
          "ServiceEndpointPolicies"
        ],
        "operationId": "ServiceEndpointPolicies_ListByResourceGroup",
        "description": "Gets all service endpoint Policies in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ServiceEndpointPolicy resources.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List resource group service endpoint policies": {
            "$ref": "./examples/ServiceEndpointPolicyList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}": {
      "delete": {
        "tags": [
          "ServiceEndpointPolicyDefinitions"
        ],
        "operationId": "ServiceEndpointPolicyDefinitions_Delete",
        "description": "Deletes the specified ServiceEndpoint policy definitions.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Service Endpoint Policy."
          },
          {
            "name": "serviceEndpointPolicyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete service endpoint policy definitions from service endpoint policy": {
            "$ref": "./examples/ServiceEndpointPolicyDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "serviceEndpointPolicyDefinitions"
        ],
        "operationId": "ServiceEndpointPolicyDefinitions_Get",
        "description": "Get the specified service endpoint policy definitions from service endpoint policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy name."
          },
          {
            "name": "serviceEndpointPolicyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy definition name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get service endpoint definition in service endpoint policy": {
            "$ref": "./examples/ServiceEndpointPolicyDefinitionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "serviceEndpointPolicyDefinitions"
        ],
        "operationId": "ServiceEndpointPolicyDefinitions_CreateOrUpdate",
        "description": "Creates or updates a service endpoint policy definition in the specified service endpoint policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy."
          },
          {
            "name": "serviceEndpointPolicyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy definition name."
          },
          {
            "name": "ServiceEndpointPolicyDefinitions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
            },
            "description": "Parameters supplied to the create or update service endpoint policy operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create service endpoint policy definition": {
            "$ref": "./examples/ServiceEndpointPolicyDefinitionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions": {
      "get": {
        "tags": [
          "ServiceEndpointPolicyDefinitions"
        ],
        "operationId": "ServiceEndpointPolicyDefinitions_ListByResourceGroup",
        "description": "Gets all service endpoint policy definitions in a service end point policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "serviceEndpointPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service endpoint policy name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ServiceEndpointPolicyDefinition resources.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointPolicyDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List service endpoint definitions in service end point policy": {
            "$ref": "./examples/ServiceEndpointPolicyDefinitionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}": {
      "delete": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Delete",
        "description": "Deletes the specified virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete virtual network": {
            "$ref": "./examples/VirtualNetworkDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Get",
        "description": "Gets the specified virtual network by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get virtual network": {
            "$ref": "./examples/VirtualNetworkGet.json"
          },
          "Get virtual network with a delegated subnet": {
            "$ref": "./examples/VirtualNetworkGetWithSubnetDelegation.json"
          },
          "Get virtual network with service association links": {
            "$ref": "./examples/VirtualNetworkGetWithServiceAssociationLink.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_CreateOrUpdate",
        "description": "Creates or updates a virtual network in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            },
            "description": "Parameters supplied to the create or update virtual network operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create virtual network": {
            "$ref": "./examples/VirtualNetworkCreate.json"
          },
          "Create virtual network with subnet": {
            "$ref": "./examples/VirtualNetworkCreateSubnet.json"
          },
          "Create virtual network with subnet containing address prefixes": {
            "$ref": "./examples/VirtualNetworkCreateSubnetWithAddressPrefixes.json"
          },
          "Create virtual network with Bgp Communities": {
            "$ref": "./examples/VirtualNetworkCreateWithBgpCommunities.json"
          },
          "Create virtual network with service endpoints": {
            "$ref": "./examples/VirtualNetworkCreateServiceEndpoints.json"
          },
          "Create virtual network with service endpoints and service endpoint policy": {
            "$ref": "./examples/VirtualNetworkCreateServiceEndpointPolicy.json"
          },
          "Create virtual network with delegated subnets": {
            "$ref": "./examples/VirtualNetworkCreateSubnetWithDelegation.json"
          },
          "Create virtual network with encryption": {
            "$ref": "./examples/VirtualNetworkCreateWithEncryption.json"
          },
          "Create virtual network with ipamPool": {
            "$ref": "./examples/VirtualNetworkCreateWithIpamPool.json"
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_UpdateTags",
        "description": "Updates a virtual network tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update virtual network tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update virtual network tags": {
            "$ref": "./examples/VirtualNetworkUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_ListAll",
        "description": "Gets all virtual networks in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetwork resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all virtual networks": {
            "$ref": "./examples/VirtualNetworkListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_List",
        "description": "Gets all virtual networks in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetwork resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual networks in resource group": {
            "$ref": "./examples/VirtualNetworkList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}": {
      "delete": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_Delete",
        "description": "Deletes the specified subnet.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete subnet": {
            "$ref": "./examples/SubnetDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_Get",
        "description": "Gets the specified subnet by virtual network and resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Subnet resource.",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get subnet": {
            "$ref": "./examples/SubnetGet.json"
          },
          "Get subnet with a delegation": {
            "$ref": "./examples/SubnetGetWithDelegation.json"
          },
          "Get subnet with sharing scope": {
            "$ref": "./examples/SubnetGetWithSharingScope.json"
          }
        }
      },
      "put": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_CreateOrUpdate",
        "description": "Creates or updates a subnet in the specified virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "name": "subnetParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subnet"
            },
            "description": "Parameters supplied to the create or update subnet operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Subnet resource.",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Subnet resource.",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create subnet": {
            "$ref": "./examples/SubnetCreate.json"
          },
          "Create subnet with service endpoints": {
            "$ref": "./examples/SubnetCreateServiceEndpoint.json"
          },
          "Create subnet with a delegation": {
            "$ref": "./examples/SubnetCreateWithDelegation.json"
          },
          "Create subnet with sharing scope": {
            "$ref": "./examples/SubnetCreateWithSharingScope.json"
          },
          "Create subnet with service endpoints with network identifier": {
            "$ref": "./examples/SubnetCreateServiceEndpointNetworkIdentifier.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/PrepareNetworkPolicies": {
      "post": {
        "operationId": "Subnets_PrepareNetworkPolicies",
        "description": "Prepares a subnet by applying network intent policies.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "name": "prepareNetworkPoliciesRequestParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrepareNetworkPoliciesRequest"
            },
            "description": "Parameters supplied to prepare subnet by applying network intent policies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Preparing subnet by applying network intent policies is successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Prepare Network Policies": {
            "$ref": "./examples/SubnetPrepareNetworkPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/UnprepareNetworkPolicies": {
      "post": {
        "operationId": "Subnets_UnprepareNetworkPolicies",
        "description": "Unprepares a subnet by removing network intent policies.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "name": "unprepareNetworkPoliciesRequestParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnprepareNetworkPoliciesRequest"
            },
            "description": "Parameters supplied to unprepare subnet to remove network intent policies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Unpreparing subnet by removing network intent policies is successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Unprepare Network Policies": {
            "$ref": "./examples/SubnetUnprepareNetworkPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/ResourceNavigationLinks": {
      "get": {
        "operationId": "ResourceNavigationLinks_List",
        "description": "Gets a list of resource navigation links for a subnet.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of resource navigation links for the subnet.",
            "schema": {
              "$ref": "#/definitions/ResourceNavigationLinksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Resource Navigation Links": {
            "$ref": "./examples/VirtualNetworkGetResourceNavigationLinks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/ServiceAssociationLinks": {
      "get": {
        "operationId": "ServiceAssociationLinks_List",
        "description": "Gets a list of service association links for a subnet.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of service association links for the subnet.",
            "schema": {
              "$ref": "#/definitions/ServiceAssociationLinksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Service Association Links": {
            "$ref": "./examples/VirtualNetworkGetServiceAssociationLinks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets": {
      "get": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_List",
        "description": "Gets all subnets in a virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Subnet resources.",
            "schema": {
              "$ref": "#/definitions/SubnetListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List subnets": {
            "$ref": "./examples/SubnetList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}": {
      "delete": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_Delete",
        "description": "Deletes the specified virtual network peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete peering": {
            "$ref": "./examples/VirtualNetworkPeeringDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_Get",
        "description": "Gets the specified virtual network peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting VirtualNetworkPeering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get peering": {
            "$ref": "./examples/VirtualNetworkPeeringGet.json"
          },
          "Get peering with remote virtual network encryption": {
            "$ref": "./examples/VirtualNetworkPeeringGetWithRemoteVirtualNetworkEncryption.json"
          },
          "Get subnet peering": {
            "$ref": "./examples/VirtualNetworkSubnetPeeringGet.json"
          },
          "Get V6 subnet peering": {
            "$ref": "./examples/VirtualNetworkV6SubnetPeeringGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_CreateOrUpdate",
        "description": "Creates or updates a peering in the specified virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "VirtualNetworkPeeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            },
            "description": "Parameters supplied to the create or update virtual network peering operation."
          },
          {
            "name": "syncRemoteAddressSpace",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "true"
            ],
            "x-ms-enum": {
              "name": "SyncRemoteAddressSpace",
              "modelAsString": true
            },
            "description": "Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkPeering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetworkPeering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create peering": {
            "$ref": "./examples/VirtualNetworkPeeringCreate.json"
          },
          "Sync Peering": {
            "$ref": "./examples/VirtualNetworkPeeringSync.json"
          },
          "Create peering with remote virtual network encryption": {
            "$ref": "./examples/VirtualNetworkPeeringCreateWithRemoteVirtualNetworkEncryption.json"
          },
          "Create subnet peering": {
            "$ref": "./examples/VirtualNetworkSubnetPeeringCreate.json"
          },
          "Sync subnet Peering": {
            "$ref": "./examples/VirtualNetworkSubnetPeeringSync.json"
          },
          "Create V6 Subnet peering": {
            "$ref": "./examples/VirtualNetworkV6SubnetPeeringCreate.json"
          },
          "Sync V6 Subnet Peering": {
            "$ref": "./examples/VirtualNetworkV6SubnetPeeringSync.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings": {
      "get": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_List",
        "description": "Gets all virtual network peerings in a virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetworkPeering resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeeringListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List peerings": {
            "$ref": "./examples/VirtualNetworkPeeringList.json"
          },
          "List peerings with remote virtual network encryption": {
            "$ref": "./examples/VirtualNetworkPeeringListWithRemoteVirtualNetworkEncryption.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability": {
      "get": {
        "operationId": "VirtualNetworks_CheckIPAddressAvailability",
        "description": "Checks whether a private IP address is available for use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "ipAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The private IP address to be verified."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private IP address availability and list of other free addresses if the requested one is not available.",
            "schema": {
              "$ref": "#/definitions/IPAddressAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Check IP address availability": {
            "$ref": "./examples/VirtualNetworkCheckIPAddressAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/usages": {
      "get": {
        "operationId": "VirtualNetworks_ListUsage",
        "description": "Lists usage stats.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Usage stats for vnet.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListUsageResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VnetGetUsage": {
            "$ref": "./examples/VirtualNetworkListUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/ddosProtectionStatus": {
      "post": {
        "operationId": "VirtualNetworks_ListDdosProtectionStatus",
        "description": "Gets the Ddos Protection Status of all IP Addresses under the Virtual Network",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The max number of ip addresses to return."
          },
          {
            "name": "skipToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The skipToken that is given with nextLink."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the Ddos Protection Status of all IP Addresses under this Virtual Network.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkDdosProtectionStatusResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Ddos Protection Status of a Virtual Network": {
            "$ref": "./examples/VirtualNetworkGetDdosProtectionStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}": {
      "delete": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_Delete",
        "description": "Deletes the specified Bastion Host.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Bastion Host": {
            "$ref": "./examples/BastionHostDelete.json"
          },
          "Delete Developer Bastion Host": {
            "$ref": "./examples/BastionHostDeveloperDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_Get",
        "description": "Gets the specified Bastion Host.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an BastionHost resource.",
            "schema": {
              "$ref": "#/definitions/BastionHost"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Bastion Host": {
            "$ref": "./examples/BastionHostGet.json"
          },
          "Get Developer Bastion Host": {
            "$ref": "./examples/BastionHostDeveloperGet.json"
          },
          "Get Bastion Host With Zones": {
            "$ref": "./examples/BastionHostGetWithZones.json"
          },
          "Get Bastion Host With Private Only": {
            "$ref": "./examples/BastionHostGetWithPrivateOnly.json"
          }
        }
      },
      "put": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_CreateOrUpdate",
        "description": "Creates or updates the specified Bastion Host.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BastionHost"
            },
            "description": "Parameters supplied to the create or update Bastion Host operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting Bastion Host resource.",
            "schema": {
              "$ref": "#/definitions/BastionHost"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting Bastion Host resource.",
            "schema": {
              "$ref": "#/definitions/BastionHost"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Bastion Host": {
            "$ref": "./examples/BastionHostPut.json"
          },
          "Create Bastion Host With Zones": {
            "$ref": "./examples/BastionHostPutWithZones.json"
          },
          "Create Bastion Host With Private Only": {
            "$ref": "./examples/BastionHostPutWithPrivateOnly.json"
          },
          "Create Developer Bastion Host": {
            "$ref": "./examples/BastionHostDeveloperPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_UpdateTags",
        "description": "Updates Tags for BastionHost resource",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update BastionHost tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting BastionHost resource.",
            "schema": {
              "$ref": "#/definitions/BastionHost"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Bastion Host": {
            "$ref": "./examples/BastionHostPatch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts": {
      "get": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_List",
        "description": "Lists all Bastion Hosts in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Bastion Host resources.",
            "schema": {
              "$ref": "#/definitions/BastionHostListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Bastion Hosts for a given subscription": {
            "$ref": "./examples/BastionHostListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts": {
      "get": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "BastionHosts_ListByResourceGroup",
        "description": "Lists all Bastion Hosts in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of BastionHost resources.",
            "schema": {
              "$ref": "#/definitions/BastionHostListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Bastion Hosts for a given resource group": {
            "$ref": "./examples/BastionHostListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/createShareableLinks": {
      "post": {
        "tags": [
          "BastionHosts",
          "BastionShareableLink"
        ],
        "operationId": "PutBastionShareableLink",
        "description": "Creates a Bastion Shareable Links for all the VMs specified in the request.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/BastionShareableLinkRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of shareable links for the specified VMs, giving appropriate error messages as needed.",
            "schema": {
              "$ref": "#/definitions/BastionShareableLinkListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Create Bastion Shareable Links for the request VMs": {
            "$ref": "./examples/BastionShareableLinkCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/deleteShareableLinks": {
      "post": {
        "tags": [
          "BastionHosts",
          "BastionShareableLink"
        ],
        "operationId": "DeleteBastionShareableLink",
        "description": "Deletes the Bastion Shareable Links for all the VMs specified in the request.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/BastionShareableLinkRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation deleted the BastionShareableLinks associated with the VMs, if they existed. No return body."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Bastion Shareable Links for the request VMs": {
            "$ref": "./examples/BastionShareableLinkDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/deleteShareableLinksByToken": {
      "post": {
        "tags": [
          "BastionHosts",
          "BastionShareableLink"
        ],
        "operationId": "DeleteBastionShareableLinkByToken",
        "description": "Deletes the Bastion Shareable Links for all the tokens specified in the request.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/BastionShareableLinkTokenRequest"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Bastion Shareable Links for the request VMs": {
            "$ref": "./examples/BastionShareableLinkDeleteByToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getShareableLinks": {
      "post": {
        "tags": [
          "BastionHosts",
          "BastionShareableLink"
        ],
        "operationId": "GetBastionShareableLink",
        "description": "Return the Bastion Shareable Links for all the VMs specified in the request.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/BastionShareableLinkRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of shareable links for the specified VMs, giving appropriate error messages as needed.",
            "schema": {
              "$ref": "#/definitions/BastionShareableLinkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Returns the Bastion Shareable Links for the request VMs": {
            "$ref": "./examples/BastionShareableLinkGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getActiveSessions": {
      "post": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "GetActiveSessions",
        "description": "Returns the list of currently active sessions on the Bastion.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of active sessions on the Bastion.",
            "schema": {
              "$ref": "#/definitions/BastionActiveSessionListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Returns a list of currently active sessions on the Bastion": {
            "$ref": "./examples/BastionSessionsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/disconnectActiveSessions": {
      "post": {
        "tags": [
          "BastionHosts"
        ],
        "operationId": "DisconnectActiveSessions",
        "description": "Returns the list of currently active sessions on the Bastion.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/BastionHostName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SessionIdsParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of sessions with the state of deleted/failed/not found.",
            "schema": {
              "$ref": "#/definitions/BastionSessionDeleteResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Deletes the specified active session": {
            "$ref": "./examples/BastionSessionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations": {
      "get": {
        "tags": [
          "SecurityAdminConfigurations"
        ],
        "operationId": "SecurityAdminConfigurations_List",
        "description": "Lists all the network manager security admin configurations in a network manager, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all security admin configuration resources in the specified network manager, in a paginated format",
            "schema": {
              "$ref": "#/definitions/SecurityAdminConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List security admin configurations in a network manager": {
            "$ref": "./examples/NetworkManagerSecurityAdminConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityAdminConfigurations"
        ],
        "description": "Retrieves a network manager security admin configuration.",
        "operationId": "SecurityAdminConfigurations_Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecurityAdminConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get security admin configurations": {
            "$ref": "./examples/NetworkManagerSecurityAdminConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityAdminConfigurations"
        ],
        "description": "Creates or updates a network manager security admin configuration.",
        "operationId": "SecurityAdminConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "name": "securityAdminConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityAdminConfiguration"
            },
            "description": "The security admin configuration to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Admin Configuration",
            "schema": {
              "$ref": "#/definitions/SecurityAdminConfiguration"
            }
          },
          "201": {
            "description": "Created Admin Configuration",
            "schema": {
              "$ref": "#/definitions/SecurityAdminConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create network manager security admin configuration": {
            "$ref": "./examples/NetworkManagerSecurityAdminConfigurationPut.json"
          },
          "Create manual-mode security admin configuration": {
            "$ref": "./examples/NetworkManagerSecurityAdminConfigurationPut_ManualAggregation.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityAdminConfigurations"
        ],
        "description": "Deletes a network manager security admin configuration.",
        "operationId": "SecurityAdminConfigurations_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete network manager security admin configuration": {
            "$ref": "./examples/NetworkManagerSecurityAdminConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections": {
      "get": {
        "tags": [
          "AdminRuleCollections"
        ],
        "operationId": "AdminRuleCollections_List",
        "description": "Lists all the rule collections in a security admin configuration, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConfigurationParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all ruleCollections in the specified security configuration, in a paginated format",
            "schema": {
              "$ref": "#/definitions/AdminRuleCollectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List security admin rule collections": {
            "$ref": "./examples/NetworkManagerAdminRuleCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        }
      ],
      "get": {
        "tags": [
          "AdminRuleCollections"
        ],
        "description": "Gets a network manager security admin configuration rule collection.",
        "operationId": "AdminRuleCollections_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AdminRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets security admin rule collection": {
            "$ref": "./examples/NetworkManagerAdminRuleCollectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AdminRuleCollections"
        ],
        "description": "Creates or updates an admin rule collection.",
        "operationId": "AdminRuleCollections_CreateOrUpdate",
        "parameters": [
          {
            "name": "ruleCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminRuleCollection"
            },
            "description": "The Rule Collection to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Rule Collection",
            "schema": {
              "$ref": "#/definitions/AdminRuleCollection"
            }
          },
          "201": {
            "description": "Created Rule Collection",
            "schema": {
              "$ref": "#/definitions/AdminRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update an admin rule collection": {
            "$ref": "./examples/NetworkManagerAdminRuleCollectionPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminRuleCollections"
        ],
        "description": "Deletes an admin rule collection.",
        "operationId": "AdminRuleCollections_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Deletes an admin rule collection": {
            "$ref": "./examples/NetworkManagerAdminRuleCollectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        },
        {
          "$ref": "#/parameters/ListSkipTokenParameter"
        }
      ],
      "get": {
        "tags": [
          "AdminRules"
        ],
        "description": "List all network manager security configuration admin rules.",
        "operationId": "AdminRules_List",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AdminRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List security admin rules": {
            "$ref": "./examples/NetworkManagerAdminRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationsRuleParameter"
        }
      ],
      "get": {
        "tags": [
          "AdminRules"
        ],
        "description": "Gets a network manager security configuration admin rule.",
        "operationId": "AdminRules_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseAdminRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets security admin rule": {
            "$ref": "./examples/NetworkManagerAdminRuleGet.json"
          },
          "Gets security default admin rule": {
            "$ref": "./examples/NetworkManagerDefaultAdminRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AdminRules"
        ],
        "description": "Creates or updates an admin rule.",
        "operationId": "AdminRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "adminRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseAdminRule"
            },
            "description": "The admin rule to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rule",
            "schema": {
              "$ref": "#/definitions/BaseAdminRule"
            }
          },
          "201": {
            "description": "Created rule",
            "schema": {
              "$ref": "#/definitions/BaseAdminRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an admin rule": {
            "$ref": "./examples/NetworkManagerAdminRulePut.json"
          },
          "Create a admin rule with network group as source or destination": {
            "$ref": "./examples/NetworkManagerAdminRulePut_NetworkGroupSource.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminRules"
        ],
        "description": "Deletes an admin rule.",
        "operationId": "AdminRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Deletes an admin rule": {
            "$ref": "./examples/NetworkManagerAdminRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveConnectivityConfigurations": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagerActiveConnectivityConfigurations"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveConfigurationParameter"
            },
            "description": "Active Configuration Parameter."
          }
        ],
        "operationId": "ListActiveConnectivityConfigurations",
        "description": "Lists active connectivity configurations in a network manager.",
        "responses": {
          "200": {
            "description": "Post successful. The operation returns the specified Managed Network active connectivity configuration resource.",
            "schema": {
              "$ref": "#/definitions/ActiveConnectivityConfigurationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Active Connectivity Configurations": {
            "$ref": "./examples/NetworkManagerActiveConnectivityConfigurationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveSecurityAdminRules": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagerActiveConfigurations"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveConfigurationParameter"
            },
            "description": "Active Configuration Parameter."
          }
        ],
        "operationId": "ListActiveSecurityAdminRules",
        "description": "Lists active security admin rules in a network manager.",
        "responses": {
          "200": {
            "description": "Post successful. The operation returns the specified Managed Network active security admin rules resource.",
            "schema": {
              "$ref": "#/definitions/ActiveSecurityAdminRulesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Active Security Admin Rules": {
            "$ref": "./examples/NetworkManagerActiveSecurityAdminRulesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/bgpServiceCommunities": {
      "get": {
        "tags": [
          "BgpServiceCommunities"
        ],
        "operationId": "BgpServiceCommunities_List",
        "x-ms-examples": {
          "ServiceCommunityList": {
            "$ref": "./examples/ServiceCommunityList.json"
          }
        },
        "description": "Gets all the available bgp service communities.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of BgpServiceCommunity resources.",
            "schema": {
              "$ref": "#/definitions/BgpServiceCommunityListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations": {
      "get": {
        "tags": [
          "ExpressRoutePortsLocations"
        ],
        "operationId": "ExpressRoutePortsLocations_List",
        "description": "Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the list of all ExpressRoutePort peering locations.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortsLocationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ExpressRoutePortsLocationList": {
            "$ref": "./examples/ExpressRoutePortsLocationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/{locationName}": {
      "get": {
        "tags": [
          "ExpressRoutePortsLocations"
        ],
        "operationId": "ExpressRoutePortsLocations_Get",
        "description": "Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the requested ExpressRoutePort peering location."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the requested ExpressRoutePort peering location.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortsLocation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRoutePortsLocationGet": {
            "$ref": "./examples/ExpressRoutePortsLocationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}": {
      "delete": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_Delete",
        "description": "Deletes the specified ExpressRoutePort resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoutePort resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ExpressRoutePortDelete": {
            "$ref": "./examples/ExpressRoutePortDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_Get",
        "description": "Retrieves the requested ExpressRoutePort resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of ExpressRoutePort."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the requested ExpressRoutePort resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePort"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRoutePortGet": {
            "$ref": "./examples/ExpressRoutePortGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_CreateOrUpdate",
        "description": "Creates or updates the specified ExpressRoutePort resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoutePort resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRoutePort"
            },
            "description": "Parameters supplied to the create ExpressRoutePort operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRoutePort resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePort"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRoutePort resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePort"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ExpressRoutePortCreate": {
            "$ref": "./examples/ExpressRoutePortCreate.json"
          },
          "ExpressRoutePortUpdateLink": {
            "$ref": "./examples/ExpressRoutePortUpdateLink.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_UpdateTags",
        "description": "Update ExpressRoutePort tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoutePort resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update ExpressRoutePort resource tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRoutePort resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePort"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRoutePortUpdateTags": {
            "$ref": "./examples/ExpressRoutePortUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts": {
      "get": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_ListByResourceGroup",
        "description": "List all the ExpressRoutePort resources in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRoutePort resources. If there are no ExpressRoutePort resources then an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ExpressRoutePortListByResourceGroup": {
            "$ref": "./examples/ExpressRoutePortListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePorts": {
      "get": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_List",
        "description": "List all the ExpressRoutePort resources in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRoutePort resources. If there are no ExpressRoutePort resources then an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ExpressRoutePortList": {
            "$ref": "./examples/ExpressRoutePortList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links/{linkName}": {
      "get": {
        "tags": [
          "ExpressRouteLinks"
        ],
        "operationId": "ExpressRouteLinks_Get",
        "description": "Retrieves the specified ExpressRouteLink resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoutePort resource."
          },
          {
            "name": "linkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteLink resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the requested ExpressRouteLink resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteLinkGet": {
            "$ref": "./examples/ExpressRouteLinkGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links": {
      "get": {
        "tags": [
          "ExpressRouteLinks"
        ],
        "operationId": "ExpressRouteLinks_List",
        "description": "Retrieve the ExpressRouteLink sub-resources of the specified ExpressRoutePort resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoutePort resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteLink resources. If there are no ExpressRouteLink resources then an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteLinkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ExpressRouteLinkGet": {
            "$ref": "./examples/ExpressRouteLinkList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/generateLoa": {
      "post": {
        "tags": [
          "ExpressRoutePorts"
        ],
        "operationId": "ExpressRoutePorts_GenerateLOA",
        "description": "Generate a letter of authorization for the requested ExpressRoutePort resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of ExpressRoutePort."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateExpressRoutePortsLOARequest"
            },
            "description": "Request parameters supplied to generate a letter of authorization."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the content as a base64 encoded string.",
            "schema": {
              "$ref": "#/definitions/GenerateExpressRoutePortsLOAResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateExpressRoutePortLOA": {
            "$ref": "./examples/GenerateExpressRoutePortsLOA.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}": {
      "delete": {
        "tags": [
          "ExpressRoutePortAuthorizations"
        ],
        "operationId": "ExpressRoutePortAuthorizations_Delete",
        "description": "Deletes the specified authorization from the specified express route port.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route port."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete ExpressRoutePort Authorization": {
            "$ref": "./examples/ExpressRoutePortAuthorizationDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExpressRoutePortAuthorizations"
        ],
        "operationId": "ExpressRoutePortAuthorizations_Get",
        "description": "Gets the specified authorization from the specified express route port.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route port."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the ExpressRoutePortAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ExpressRoutePort Authorization": {
            "$ref": "./examples/ExpressRoutePortAuthorizationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRoutePortAuthorizations"
        ],
        "operationId": "ExpressRoutePortAuthorizations_CreateOrUpdate",
        "description": "Creates or updates an authorization in the specified express route port.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route port."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "name": "authorizationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortAuthorization"
            },
            "description": "Parameters supplied to the create or update express route port authorization operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRoutePortAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortAuthorization"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRoutePortAuthorization resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create ExpressRoutePort Authorization": {
            "$ref": "./examples/ExpressRoutePortAuthorizationCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations": {
      "get": {
        "tags": [
          "ExpressRoutePortAuthorizations"
        ],
        "operationId": "ExpressRoutePortAuthorizations_List",
        "description": "Gets all authorizations in an express route port.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRoutePortName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route port."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRoutePortAuthorization resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRoutePortAuthorizationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ExpressRoutePort Authorization": {
            "$ref": "./examples/ExpressRoutePortAuthorizationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}": {
      "delete": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_Delete",
        "description": "Deletes the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete NetworkVirtualAppliance": {
            "$ref": "./examples/NetworkVirtualApplianceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_Get",
        "description": "Gets the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Network Virtual Appliance resource.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualAppliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get NetworkVirtualAppliance": {
            "$ref": "./examples/NetworkVirtualApplianceGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_UpdateTags",
        "description": "Updates a Network Virtual Appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of Network Virtual Appliance."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of Network Virtual Appliance being updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to Update Network Virtual Appliance Tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of Network Virtual Appliance updated.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualAppliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update NetworkVirtualAppliance": {
            "$ref": "./examples/NetworkVirtualApplianceUpdateTags.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_CreateOrUpdate",
        "description": "Creates or updates the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkVirtualAppliance"
            },
            "description": "Parameters supplied to the create or update Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Network Virtual Appliance resource.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualAppliance"
            }
          },
          "201": {
            "description": "Request received successfully. The operation returns the resulting Network Virtual Appliance resource.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NetworkVirtualAppliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create NetworkVirtualAppliance": {
            "$ref": "./examples/NetworkVirtualAppliancePut.json"
          },
          "Create SaaS NetworkVirtualAppliance": {
            "$ref": "./examples/NetworkVirtualApplianceSaaSPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/restart": {
      "post": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_Restart",
        "description": "Restarts one or more VMs belonging to the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "NetworkVirtualApplianceInstanceIds",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceInstanceIds"
            },
            "description": "Specifies a list of virtual machine instance IDs from the Network Virtual Appliance VM instances."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation restarts one or more Network Virtual Appliance VM resources.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceInstanceIds"
            }
          },
          "202": {
            "description": "Request accepted. The operation restarts one or more Network Virtual Appliance VM resources.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Restart All NetworkVirtualAppliance VMs in VM Scale Set": {
            "$ref": "./examples/NetworkVirtualApplianceEmptyRestart.json"
          },
          "Restart Specific NetworkVirtualAppliance VMs in VM Scale Set": {
            "$ref": "./examples/NetworkVirtualApplianceSpecificRestart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/reimage": {
      "post": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_Reimage",
        "description": "Reimages one VM belonging to the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "NetworkVirtualApplianceInstanceIds",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceInstanceIds"
            },
            "description": "Specifies a list of virtual machine instance IDs from the Network Virtual Appliance VM instances."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation reimages one or more Network Virtual Appliance VM resources.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceInstanceIds"
            }
          },
          "202": {
            "description": "Request accepted. The operation reimages one or more Network Virtual Appliance VM resources.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Reimages Specific NetworkVirtualAppliance VMs in VM Scale Set": {
            "$ref": "./examples/NetworkVirtualApplianceSpecificReimage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/getBootDiagnosticLogs": {
      "post": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_GetBootDiagnosticLogs",
        "description": "Retrieves the boot diagnostic logs for a VM instance belonging to the specified Network Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+",
            "description": "The name of Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceBootDiagnosticParameters"
            },
            "description": "Parameters supplied to retrieve boot diagnostic logs for a NVA VM instance"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation retrieves boot diagnostic logs for a Network Virtual Appliance VM resource.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceInstanceId"
            }
          },
          "202": {
            "description": "Request accepted. The operation gets the boot diagnostic logs for a Network Virtual Appliance VM instance.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve Boot Diagnostic logs for a given NVA VMSS instance": {
            "$ref": "./examples/NetworkVirtualApplianceBootDiagnostics.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances": {
      "get": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_ListByResourceGroup",
        "description": "Lists all Network Virtual Appliances in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Network Virtual Appliance resources.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Network Virtual Appliance for a given resource group": {
            "$ref": "./examples/NetworkVirtualApplianceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances": {
      "get": {
        "tags": [
          "NetworkVirtualAppliances"
        ],
        "operationId": "NetworkVirtualAppliances_List",
        "description": "Gets all Network Virtual Appliances in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Network Virtual Appliance resources.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Network Virtual Appliances for a given subscription": {
            "$ref": "./examples/NetworkVirtualApplianceListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}": {
      "delete": {
        "tags": [
          "VirtualApplianceSites"
        ],
        "operationId": "VirtualApplianceSites_Delete",
        "description": "Deletes the specified site from a Virtual Appliance.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the site."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Virtual Appliance Site": {
            "$ref": "./examples/NetworkVirtualApplianceSiteDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualApplianceSites"
        ],
        "operationId": "VirtualApplianceSites_Get",
        "description": "Gets the specified Virtual Appliance Site.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the site."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Network Virtual Appliance Site resource.",
            "schema": {
              "$ref": "#/definitions/VirtualApplianceSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetNetwork Virtual Appliance Site": {
            "$ref": "./examples/NetworkVirtualApplianceSiteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualApplianceSites"
        ],
        "operationId": "VirtualApplianceSites_CreateOrUpdate",
        "description": "Creates or updates the specified Network Virtual Appliance Site.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the site."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualApplianceSite"
            },
            "description": "Parameters supplied to the create or update Network Virtual Appliance Site operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Network Virtual Appliance Site resource.",
            "schema": {
              "$ref": "#/definitions/VirtualApplianceSite"
            }
          },
          "201": {
            "description": "Request received successfully. The operation returns the resulting Network Virtual Appliance Site resource.",
            "schema": {
              "$ref": "#/definitions/VirtualApplianceSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Network Virtual Appliance Site": {
            "$ref": "./examples/NetworkVirtualApplianceSitePut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites": {
      "get": {
        "tags": [
          "VirtualApplianceSites"
        ],
        "operationId": "VirtualApplianceSites_List",
        "description": "Lists all Network Virtual Appliance Sites in a Network Virtual Appliance resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Network Virtual Appliance site resources.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceSiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Network Virtual Appliance sites for a given Network Virtual Appliance": {
            "$ref": "./examples/NetworkVirtualApplianceSiteList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus": {
      "get": {
        "tags": [
          "VirtualApplianceSkus"
        ],
        "operationId": "VirtualApplianceSkus_List",
        "description": "List all SKUs available for a virtual appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the list of all virtual appliance skus.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceSkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkVirtualApplianceSkuListResult": {
            "$ref": "./examples/NetworkVirtualApplianceSkuList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus/{skuName}": {
      "get": {
        "tags": [
          "VirtualApplianceSkus"
        ],
        "operationId": "VirtualApplianceSkus_Get",
        "description": "Retrieves a single available sku for network virtual appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "skuName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the Sku."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the requested NetworkVirtualAppliance sku information.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkVirtualApplianceSkuGet": {
            "$ref": "./examples/NetworkVirtualApplianceSkuGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/inboundSecurityRules/{ruleCollectionName}": {
      "put": {
        "operationId": "InboundSecurityRule_CreateOrUpdate",
        "description": "Creates or updates the specified Network Virtual Appliance Inbound Security Rules.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "ruleCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of security rule collection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundSecurityRule"
            },
            "description": "Parameters supplied to the create or update Network Virtual Appliance Inbound Security Rules operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Network Virtual Appliance Inbound Security Rules resource.",
            "schema": {
              "$ref": "#/definitions/InboundSecurityRule"
            }
          },
          "201": {
            "description": "Request received successfully. The operation returns the resulting Network Virtual Appliance Inbound Security Rules resource.",
            "schema": {
              "$ref": "#/definitions/InboundSecurityRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Network Virtual Appliance Inbound Security Rules": {
            "$ref": "./examples/InboundSecurityRulePut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "operationId": "InboundSecurityRule_Get",
        "description": "Retrieves the available specified Network Virtual Appliance Inbound Security Rules Collection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "ruleCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of security rule collection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the requested Network Virtual Appliance Inbound Security Rules Collection resource.",
            "schema": {
              "$ref": "#/definitions/InboundSecurityRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Network Virtual Appliance Inbound Security Rules": {
            "$ref": "./examples/InboundSecurityRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}": {
      "delete": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_Delete",
        "description": "Deletes the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Firewall Policy": {
            "$ref": "./examples/FirewallPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_Get",
        "description": "Gets the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_CreateOrUpdate",
        "description": "Creates or updates the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            },
            "description": "Parameters supplied to the create or update Firewall Policy operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_UpdateTags",
        "description": "Updates tags of a Azure Firewall Policy resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update Azure Firewall Policy tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update FirewallPolicy Tags": {
            "$ref": "./examples/FirewallPolicyPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies": {
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_List",
        "description": "Lists all Firewall Policies in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicy resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Firewall Policies for a given resource group": {
            "$ref": "./examples/FirewallPolicyListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies": {
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_ListAll",
        "description": "Gets all the Firewall Policies in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicy resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Firewall Policies for a given subscription": {
            "$ref": "./examples/FirewallPolicyListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}": {
      "delete": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_Delete",
        "description": "Deletes the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete FirewallPolicyRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_Get",
        "description": "Gets the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get FirewallPolicyRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupGet.json"
          },
          "Get FirewallPolicyRuleCollectionGroup With IpGroups": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsGet.json"
          },
          "Get FirewallPolicyNatRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyNatRuleCollectionGroupGet.json"
          },
          "Get FirewallPolicyRuleCollectionGroup With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_CreateOrUpdate",
        "description": "Creates or updates the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            },
            "description": "Parameters supplied to the create or update FirewallPolicyRuleCollectionGroup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Firewall Policy Rule Collection Group": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupPut.json"
          },
          "Create Firewall Policy Rule Collection Group With IP Groups": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsPut.json"
          },
          "Create Firewall Policy Nat Rule Collection Group": {
            "$ref": "./examples/FirewallPolicyNatRuleCollectionGroupPut.json"
          },
          "Create Firewall Policy Rule Collection Group With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesPut.json"
          },
          "Create Firewall Policy Rule Collection Group With http header to insert": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithHttpHeadersToInsert.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups": {
      "get": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_List",
        "description": "Lists all FirewallPolicyRuleCollectionGroups in a FirewallPolicy resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicyRuleCollectionGroup resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all FirewallPolicyRuleCollectionGroups for a given FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupList.json"
          },
          "List all FirewallPolicyRuleCollectionGroups with IpGroups for a given FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsList.json"
          },
          "List all FirewallPolicyRuleCollectionGroup With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsSignatures": {
      "post": {
        "operationId": "FirewallPolicyIdpsSignatures_List",
        "description": "Retrieves the current status of IDPS signatures for the relevant policy. Maximal amount of returned signatures is 1000.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IDPSQueryObject"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns an IDPS Query Response",
            "schema": {
              "$ref": "#/definitions/QueryResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "query signature overrides": {
            "$ref": "./examples/FirewallPolicyQuerySignatureOverrides.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default": {
      "patch": {
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Patch",
        "description": "Will update the status of policy's signature overrides for IDPS",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "Will contain all properties of the object to put",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "patch signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesPatch.json"
          }
        }
      },
      "put": {
        "description": "Will override/create a new signature overrides for the policy's IDPS",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Put",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "Will contain all properties of the object to put",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describes the new state of the signature overrides after the PUT operation",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "put signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesPut.json"
          }
        }
      },
      "get": {
        "description": "Returns all signatures overrides for a specific policy.",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsFilterOptions": {
      "post": {
        "operationId": "FirewallPolicyIdpsSignaturesFilterValues_List",
        "description": "Retrieves the current filter values for the signatures overrides",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignatureOverridesFilterValuesQuery"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all valid filter values for the requested column",
            "schema": {
              "$ref": "#/definitions/SignatureOverridesFilterValuesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "query signature overrides": {
            "$ref": "./examples/FirewallPolicyQuerySignatureOverridesFilterValues.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides": {
      "get": {
        "description": "Returns all signatures overrides objects for a specific policy as a list containing a single value.",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_List",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object inside a list",
            "schema": {
              "$ref": "#/definitions/SignaturesOverridesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default": {
      "put": {
        "description": "Create or update a draft Firewall Policy.",
        "operationId": "FirewallPolicyDrafts_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            },
            "description": "Parameters supplied to the create or update Firewall Policy Draft operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create or update firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftPut.json"
          }
        }
      },
      "delete": {
        "description": "Delete a draft policy.",
        "operationId": "FirewallPolicyDrafts_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Firewall Draft Policy"
          },
          "204": {
            "description": "Firewall Policy Draft not found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftDelete.json"
          }
        }
      },
      "get": {
        "description": "Get a draft Firewall Policy.",
        "operationId": "FirewallPolicyDrafts_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/deploy": {
      "post": {
        "description": "Deploys the firewall policy draft and child rule collection group drafts.",
        "operationId": "FirewallPolicyDeployments_Deploy",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get the status of the operation."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL to get the status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "deploy firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftDeploy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}/ruleCollectionGroupDrafts/default": {
      "delete": {
        "description": "Delete Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Rule Collection Group Draft"
          },
          "204": {
            "description": "Firewall Policy Rule Collection Group Draft not found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete firewall rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftDelete.json"
          }
        }
      },
      "put": {
        "description": "Create or Update Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            },
            "description": "Parameters supplied to the create or update FirewallPolicyRuleCollectionGroup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "201": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create or update rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftPut.json"
          }
        }
      },
      "get": {
        "description": "Get Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerConnectionNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "put": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "SubscriptionNetworkManagerConnections_CreateOrUpdate",
        "description": "Create a network manager connection on this subscription.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            },
            "description": "Network manager connection to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "201": {
            "description": "Created - Returns information about the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Subscription Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionSubscriptionPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "SubscriptionNetworkManagerConnections_Get",
        "description": "Get a specified connection created by this subscription.",
        "responses": {
          "200": {
            "description": "OK - Returns the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Subscription Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionSubscriptionGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "SubscriptionNetworkManagerConnections_Delete",
        "description": "Delete specified connection created by this subscription.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Subscription Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionSubscriptionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections": {
      "get": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "SubscriptionNetworkManagerConnections_List",
        "description": "List all network manager connections created by this subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the network manager connection(s).",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Subscription Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionSubscriptionList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}": {
      "parameters": [
        {
          "$ref": "#/parameters/ManagementGroupIdParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerConnectionNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "put": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "ManagementGroupNetworkManagerConnections_CreateOrUpdate",
        "description": "Create a network manager connection on this management group.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            },
            "description": "Network manager connection to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "201": {
            "description": "Created - Returns information about the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Management Group Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionManagementGroupPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "ManagementGroupNetworkManagerConnections_Get",
        "description": "Get a specified connection created by this management group.",
        "responses": {
          "200": {
            "description": "OK - Returns the connection.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Management Group Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionManagementGroupGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "ManagementGroupNetworkManagerConnections_Delete",
        "description": "Delete specified pending connection created by this management group.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Management Group Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionManagementGroupDelete.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections": {
      "get": {
        "tags": [
          "NetworkManagerConnections"
        ],
        "operationId": "ManagementGroupNetworkManagerConnections_List",
        "description": "List all network manager connections created by this management group.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the network manager connection(s).",
            "schema": {
              "$ref": "#/definitions/NetworkManagerConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Management Group Network Manager Connection": {
            "$ref": "./examples/NetworkManagerConnectionManagementGroupList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations": {
      "get": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "operationId": "SecurityUserConfigurations_List",
        "description": "Lists all the network manager security user configurations in a network manager, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all security user configurations in the specified network manager, in a paginated format",
            "schema": {
              "$ref": "#/definitions/SecurityUserConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List security user configurations in a network manager": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Retrieves a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SecurityUserConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get security user configurations": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Creates or updates a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "name": "securityUserConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityUserConfiguration"
            },
            "description": "The security user configuration to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Configuration",
            "schema": {
              "$ref": "#/definitions/SecurityUserConfiguration"
            }
          },
          "201": {
            "description": "Created Configuration",
            "schema": {
              "$ref": "#/definitions/SecurityUserConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network manager security user configuration": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Deletes a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete network manager security user configuration": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections": {
      "get": {
        "tags": [
          "SecurityUserRuleCollections"
        ],
        "operationId": "SecurityUserRuleCollections_List",
        "description": "Lists all the security user rule collections in a security configuration, in a paginated format.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConfigurationParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all ruleCollections in the specified security configuration, in a paginated format",
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleCollectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List rule collections in a security configuration": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityUserRuleCollections"
        ],
        "description": "Gets a network manager security user configuration rule collection.",
        "operationId": "SecurityUserRuleCollections_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets security user rule collection": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleCollectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityUserRuleCollections"
        ],
        "description": "Creates or updates a security user rule collection.",
        "operationId": "SecurityUserRuleCollections_CreateOrUpdate",
        "parameters": [
          {
            "name": "securityUserRuleCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleCollection"
            },
            "description": "The Security User Rule Collection to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Security User Rule Collection",
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleCollection"
            }
          },
          "201": {
            "description": "Created Security User Rule Collection",
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Security User Rule Collection": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleCollectionPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityUserRuleCollections"
        ],
        "description": "Deletes a Security User Rule collection.",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "operationId": "SecurityUserRuleCollections_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Deletes a Security User Rule collection": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleCollectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        },
        {
          "$ref": "#/parameters/ListSkipTokenParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityUserRules"
        ],
        "description": "Lists all Security User Rules in a rule collection.",
        "operationId": "SecurityUserRules_List",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SecurityUserRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List security user rules": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationsRuleParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityUserRules"
        ],
        "description": "Gets a security user rule.",
        "operationId": "SecurityUserRules_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SecurityUserRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets a security user rule": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityUserRules"
        ],
        "description": "Creates or updates a security user rule.",
        "operationId": "SecurityUserRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "securityUserRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityUserRule"
            },
            "description": "The security user rule to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated security user rule",
            "schema": {
              "$ref": "#/definitions/SecurityUserRule"
            }
          },
          "201": {
            "description": "Created rule",
            "schema": {
              "$ref": "#/definitions/SecurityUserRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a security user rule": {
            "$ref": "./examples/NetworkManagerSecurityUserRulePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityUserRules"
        ],
        "description": "Deletes a security user rule.",
        "operationId": "SecurityUserRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete a security user rule": {
            "$ref": "./examples/NetworkManagerSecurityUserRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents": {
      "get": {
        "tags": [
          "ReachabilityAnalysisIntents"
        ],
        "summary": "Gets list of Reachability Analysis Intents .",
        "operationId": "ReachabilityAnalysisIntents_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Optional skip token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Optional num entries to skip.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "top",
            "description": "Optional num entries to show.",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "sortKey",
            "description": "Optional key by which to sort.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortValue",
            "description": "Optional sort value for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ReachabilityAnalysisIntents",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisIntentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ReachabilityAnalysisIntentList": {
            "$ref": "./examples/ReachabilityAnalysisIntentList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents/{reachabilityAnalysisIntentName}": {
      "get": {
        "tags": [
          "ReachabilityAnalysisIntents"
        ],
        "summary": "Get the Reachability Analysis Intent.",
        "operationId": "ReachabilityAnalysisIntents_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisIntentName",
            "description": "Reachability Analysis Intent name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a reachabilityAnalysisIntent",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisIntent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReachabilityAnalysisIntentGet": {
            "$ref": "./examples/ReachabilityAnalysisIntentGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ReachabilityAnalysisIntents"
        ],
        "summary": "Creates Reachability Analysis Intent.",
        "operationId": "ReachabilityAnalysisIntents_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisIntentName",
            "description": "Reachability Analysis Intent name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Reachability Analysis Intent object to create/update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisIntent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ReachabilityAnalysisIntent updated.",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisIntent"
            }
          },
          "201": {
            "description": "ReachabilityAnalysisIntent created.",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisIntent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReachabilityAnalysisIntentCreate": {
            "$ref": "./examples/ReachabilityAnalysisIntentPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ReachabilityAnalysisIntent"
        ],
        "summary": "Deletes Reachability Analysis Intent.",
        "operationId": "ReachabilityAnalysisIntents_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisIntentName",
            "description": "Reachability Analysis Intent name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "ReachabilityAnalysisIntent was deleted."
          },
          "204": {
            "description": "ReachabilityAnalysisIntent delete request succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReachabilityAnalysisIntentDelete": {
            "$ref": "./examples/ReachabilityAnalysisIntentDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisRuns": {
      "get": {
        "tags": [
          "ReachabilityAnalysisRuns"
        ],
        "summary": "Gets list of Reachability Analysis Runs.",
        "operationId": "ReachabilityAnalysisRuns_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Optional skip token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Optional num entries to skip.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "top",
            "description": "Optional num entries to show.",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "sortKey",
            "description": "Optional key by which to sort.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortValue",
            "description": "Optional sort value for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ReachabilityAnalysisRuns",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisRunListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ReachabilityAnalysisRunList": {
            "$ref": "./examples/ReachabilityAnalysisRunList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisRuns/{reachabilityAnalysisRunName}": {
      "get": {
        "tags": [
          "ReachabilityAnalysisRuns"
        ],
        "summary": "Gets Reachability Analysis Run.",
        "operationId": "ReachabilityAnalysisRuns_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisRunName",
            "description": "Reachability Analysis Run name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a reachabilityAnalysisRun",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReachabilityAnalysisRunGet": {
            "$ref": "./examples/ReachabilityAnalysisRunGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ReachabilityAnalysisRuns"
        ],
        "summary": "Creates Reachability Analysis Runs.",
        "operationId": "ReachabilityAnalysisRuns_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisRunName",
            "description": "Reachability Analysis Run name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Analysis Run resource object to create/update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ReachabilityAnalysisRun updated.",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisRun"
            }
          },
          "201": {
            "description": "ReachabilityAnalysisRun created and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/ReachabilityAnalysisRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReachabilityAnalysisRunCreate": {
            "$ref": "./examples/ReachabilityAnalysisRunPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ReachabilityAnalysisRuns"
        ],
        "summary": "Deletes Reachability Analysis Run.",
        "operationId": "ReachabilityAnalysisRuns_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "path",
            "name": "reachabilityAnalysisRunName",
            "description": "Reachability Analysis Run name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "ReachabilityAnalysisRun  delete request accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "ReachabilityAnalysisRun delete request succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ReachabilityAnalysisRunDelete": {
            "$ref": "./examples/ReachabilityAnalysisRunDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces": {
      "get": {
        "tags": [
          "VerifierWorkspaces"
        ],
        "summary": "Gets list of Verifier Workspaces.",
        "operationId": "VerifierWorkspaces_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Optional skip token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Optional num entries to skip.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "top",
            "description": "Optional num entries to show.",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "sortKey",
            "description": "Optional key by which to sort.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortValue",
            "description": "Optional sort value for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of VerifierWorkspaces.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VerifierWorkspaceList": {
            "$ref": "./examples/VerifierWorkspaceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}": {
      "get": {
        "tags": [
          "VerifierWorkspaces"
        ],
        "summary": "Gets Verifier Workspace.",
        "operationId": "VerifierWorkspaces_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a VerifierWorkspace.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VerifierWorkspaceGet": {
            "$ref": "./examples/VerifierWorkspaceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VerifierWorkspaces"
        ],
        "summary": "Creates Verifier Workspace.",
        "operationId": "VerifierWorkspaces_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Verifier Workspace object to create/update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifierWorkspace"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "200": {
            "description": "VerifierWorkspace updated.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspace"
            }
          },
          "201": {
            "description": "VerifierWorkspace created.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VerifierWorkspaceCreate": {
            "$ref": "./examples/VerifierWorkspacePut.json"
          }
        }
      },
      "patch": {
        "tags": [
          "VerifierWorkspaces"
        ],
        "summary": "Updates Verifier Workspace.",
        "operationId": "VerifierWorkspaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Verifier Workspace object to create/update.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspaceUpdate"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "200": {
            "description": "VerifierWorkspace updated.",
            "schema": {
              "$ref": "#/definitions/VerifierWorkspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VerifierWorkspacePatch": {
            "$ref": "./examples/VerifierWorkspacePatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VerifierWorkspaces"
        ],
        "summary": "Deletes Verifier Workspace.",
        "operationId": "VerifierWorkspaces_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "in": "path",
            "name": "workspaceName",
            "description": "Workspace name.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally."
          }
        ],
        "responses": {
          "202": {
            "description": "VerifierWorkspace  delete request accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "VerifierWorkspace delete request succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CommonErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "VerifierWorkspaceDelete": {
            "$ref": "./examples/VerifierWorkspaceDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}": {
      "delete": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_Delete",
        "description": "Deletes the specified Azure Firewall.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Firewall."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Azure Firewall": {
            "$ref": "./examples/AzureFirewallDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_Get",
        "description": "Gets the specified Azure Firewall.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Firewall."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an AzureFirewall resource.",
            "schema": {
              "$ref": "#/definitions/AzureFirewall"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Firewall": {
            "$ref": "./examples/AzureFirewallGet.json"
          },
          "Get Azure Firewall With Zones": {
            "$ref": "./examples/AzureFirewallGetWithZones.json"
          },
          "Get Azure Firewall With management subnet": {
            "$ref": "./examples/AzureFirewallGetWithMgmtSubnet.json"
          },
          "Get Azure Firewall With Additional Properties": {
            "$ref": "./examples/AzureFirewallGetWithAdditionalProperties.json"
          },
          "Get Azure Firewall With IpGroups": {
            "$ref": "./examples/AzureFirewallGetWithIpGroups.json"
          }
        }
      },
      "put": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_CreateOrUpdate",
        "description": "Creates or updates the specified Azure Firewall.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 56,
            "description": "The name of the Azure Firewall."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureFirewall"
            },
            "description": "Parameters supplied to the create or update Azure Firewall operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting AzureFirewall resource.",
            "schema": {
              "$ref": "#/definitions/AzureFirewall"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting AzureFirewall resource.",
            "schema": {
              "$ref": "#/definitions/AzureFirewall"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Azure Firewall": {
            "$ref": "./examples/AzureFirewallPut.json"
          },
          "Create Azure Firewall With Zones": {
            "$ref": "./examples/AzureFirewallPutWithZones.json"
          },
          "Create Azure Firewall With management subnet": {
            "$ref": "./examples/AzureFirewallPutWithMgmtSubnet.json"
          },
          "Create Azure Firewall in virtual Hub": {
            "$ref": "./examples/AzureFirewallPutInHub.json"
          },
          "Create Azure Firewall With Additional Properties": {
            "$ref": "./examples/AzureFirewallPutWithAdditionalProperties.json"
          },
          "Create Azure Firewall With IpGroups": {
            "$ref": "./examples/AzureFirewallPutWithIpGroups.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_UpdateTags",
        "description": "Updates tags of an Azure Firewall resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Firewall."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update azure firewall tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Update successful. The operation returns the resulting AzureFirewall resource.",
            "schema": {
              "$ref": "#/definitions/AzureFirewall"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Azure Firewall Tags": {
            "$ref": "./examples/AzureFirewallUpdateTags.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls": {
      "get": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_List",
        "description": "Lists all Azure Firewalls in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of AzureFirewall resources.",
            "schema": {
              "$ref": "#/definitions/AzureFirewallListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Azure Firewalls for a given resource group": {
            "$ref": "./examples/AzureFirewallListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls": {
      "get": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_ListAll",
        "description": "Gets all the Azure Firewalls in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of AzureFirewall resources.",
            "schema": {
              "$ref": "#/definitions/AzureFirewallListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Azure Firewalls for a given subscription": {
            "$ref": "./examples/AzureFirewallListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}/learnedIPPrefixes": {
      "post": {
        "operationId": "AzureFirewalls_ListLearnedPrefixes",
        "description": "Retrieves a list of all IP prefixes that azure firewall has learned to not SNAT.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the azure firewall."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of learnt SNAT IP prefixes for no SNAT.",
            "schema": {
              "$ref": "#/definitions/IPPrefixesList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AzureFirewallListLearnedPrefixes": {
            "$ref": "./examples/AzureFirewallListLearnedIPPrefixes.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}/packetCapture": {
      "post": {
        "tags": [
          "AzureFirewalls"
        ],
        "operationId": "AzureFirewalls_PacketCapture",
        "description": "Runs a packet capture on AzureFirewall.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "azureFirewallName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 56,
            "pattern": "^[a-zA-Z0-9]",
            "description": "The name of the Azure Firewall."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPacketCaptureParameters"
            },
            "description": "Parameters supplied to run packet capture on azure firewall."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AzureFirewallPacketCapture": {
            "$ref": "./examples/AzureFirewallPacketCapture.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}": {
      "delete": {
        "tags": [
          "VirtualNetworkTap"
        ],
        "operationId": "VirtualNetworkTaps_Delete",
        "description": "Deletes the specified virtual network tap.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "tapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network tap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Virtual Network Tap resource": {
            "$ref": "./examples/VirtualNetworkTapDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkTap"
        ],
        "operationId": "VirtualNetworkTaps_Get",
        "description": "Gets information about the specified virtual network tap.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "tapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of virtual network tap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting VirtualNetworkTap resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Virtual Network Tap": {
            "$ref": "./examples/VirtualNetworkTapGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworkTap"
        ],
        "operationId": "VirtualNetworkTaps_CreateOrUpdate",
        "description": "Creates or updates a Virtual Network Tap.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "tapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network tap."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTap"
            },
            "description": "Parameters supplied to the create or update virtual network tap operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkTap resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTap"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetworkTap resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Virtual Network Tap": {
            "$ref": "./examples/VirtualNetworkTapCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworkTap"
        ],
        "operationId": "VirtualNetworkTaps_UpdateTags",
        "description": "Updates an VirtualNetworkTap tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "tapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tap."
          },
          {
            "name": "tapParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VirtualNetworkTap tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetworkTap resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update virtual network tap tags": {
            "$ref": "./examples/VirtualNetworkTapUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps": {
      "get": {
        "tags": [
          "VirtualNetworkTaps"
        ],
        "operationId": "VirtualNetworkTaps_ListAll",
        "description": "Gets all the VirtualNetworkTaps in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Virtual Network Tap resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTapListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all virtual network taps": {
            "$ref": "./examples/VirtualNetworkTapListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps": {
      "get": {
        "tags": [
          "VirtualNetworkTaps"
        ],
        "operationId": "VirtualNetworkTaps_ListByResourceGroup",
        "description": "Gets all the VirtualNetworkTaps in a subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Virtual Network Tap resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkTapListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual network taps in resource group": {
            "$ref": "./examples/VirtualNetworkTapList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewallFqdnTags": {
      "get": {
        "tags": [
          "AzureFirewallFqdnTags"
        ],
        "operationId": "AzureFirewallFqdnTags_ListAll",
        "description": "Gets all the Azure Firewall FQDN Tags in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Azure Firewall FQDN Tag resources.",
            "schema": {
              "$ref": "#/definitions/AzureFirewallFqdnTagListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Azure Firewall FQDN Tags for a given subscription": {
            "$ref": "./examples/AzureFirewallFqdnTagsListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCrossConnections": {
      "get": {
        "tags": [
          "ExpressRouteCrossConnections"
        ],
        "operationId": "ExpressRouteCrossConnections_List",
        "description": "Retrieves all the ExpressRouteCrossConnections in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=name eq '{circuitServiceKey}'.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCrossConnectionList": {
            "$ref": "./examples/ExpressRouteCrossConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections": {
      "get": {
        "tags": [
          "ExpressRouteCrossConnections"
        ],
        "operationId": "ExpressRouteCrossConnections_ListByResourceGroup",
        "description": "Retrieves all the ExpressRouteCrossConnections in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCrossConnectionListByResourceGroup": {
            "$ref": "./examples/ExpressRouteCrossConnectionListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}": {
      "get": {
        "tags": [
          "ExpressRouteCrossConnections"
        ],
        "operationId": "ExpressRouteCrossConnections_Get",
        "description": "Gets details about the specified ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group (peering location of the circuit)."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection (service key of the circuit)."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetExpressRouteCrossConnection": {
            "$ref": "./examples/ExpressRouteCrossConnectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCrossConnections"
        ],
        "operationId": "ExpressRouteCrossConnections_CreateOrUpdate",
        "description": "Update the specified ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnection"
            },
            "description": "Parameters supplied to the update express route crossConnection operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateExpressRouteCrossConnection": {
            "$ref": "./examples/ExpressRouteCrossConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ExpressRouteCrossConnections"
        ],
        "operationId": "ExpressRouteCrossConnections_UpdateTags",
        "description": "Updates an express route cross connection tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cross connection."
          },
          {
            "name": "crossConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update express route cross connection tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateExpressRouteCrossConnectionTags": {
            "$ref": "./examples/ExpressRouteCrossConnectionUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings": {
      "get": {
        "tags": [
          "ExpressRouteCrossConnectionPeerings"
        ],
        "operationId": "ExpressRouteCrossConnectionPeerings_List",
        "description": "Gets all peerings in a specified ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ExpressRouteCrossConnectionPeering resources.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionPeeringList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCrossConnectionBgpPeeringList": {
            "$ref": "./examples/ExpressRouteCrossConnectionBgpPeeringList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}": {
      "delete": {
        "tags": [
          "ExpressRouteCrossConnectionPeerings"
        ],
        "operationId": "ExpressRouteCrossConnectionPeerings_Delete",
        "description": "Deletes the specified peering from the ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteExpressRouteCrossConnectionBgpPeering": {
            "$ref": "./examples/ExpressRouteCrossConnectionBgpPeeringDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteCrossConnectionPeerings"
        ],
        "operationId": "ExpressRouteCrossConnectionPeerings_Get",
        "description": "Gets the specified peering for the ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetExpressRouteCrossConnectionBgpPeering": {
            "$ref": "./examples/ExpressRouteCrossConnectionBgpPeeringGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCrossConnectionPeerings"
        ],
        "operationId": "ExpressRouteCrossConnectionPeerings_CreateOrUpdate",
        "description": "Creates or updates a peering in the specified ExpressRouteCrossConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "peeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
            },
            "description": "Parameters supplied to the create or update ExpressRouteCrossConnection peering operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExpressRouteCrossConnectionBgpPeeringCreate": {
            "$ref": "./examples/ExpressRouteCrossConnectionBgpPeeringCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/arpTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCrossConnectionArpTable"
        ],
        "operationId": "ExpressRouteCrossConnections_ListArpTable",
        "description": "Gets the currently advertised ARP table associated with the express route cross connection in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsArpTable resource.",
            "schema": {
              "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitsArpTableListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetExpressRouteCrossConnectionsArpTable": {
            "$ref": "./examples/ExpressRouteCrossConnectionsArpTable.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTablesSummary/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCrossConnectionRouteTableSummary"
        ],
        "operationId": "ExpressRouteCrossConnections_ListRoutesTableSummary",
        "description": "Gets the route table summary associated with the express route cross connection in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTableSummary resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCrossConnectionsRoutesTableSummaryListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetExpressRouteCrossConnectionsRouteTableSummary": {
            "$ref": "./examples/ExpressRouteCrossConnectionsRouteTableSummary.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCrossConnectionRouteTable"
        ],
        "operationId": "ExpressRouteCrossConnections_ListRoutesTable",
        "description": "Gets the currently advertised routes table associated with the express route cross connection in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "crossConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRouteCrossConnection."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTable resource.",
            "schema": {
              "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitsRoutesTableListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetExpressRouteCrossConnectionsRouteTable": {
            "$ref": "./examples/ExpressRouteCrossConnectionsRouteTable.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}": {
      "get": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_Get",
        "description": "Gets the specified ipGroups.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipGroupsName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipGroups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting IpGroups resource.",
            "schema": {
              "$ref": "#/definitions/IpGroup"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get_IpGroups": {
            "$ref": "./examples/IpGroupsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_CreateOrUpdate",
        "description": "Creates or updates an ipGroups in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipGroupsName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipGroups."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpGroup"
            },
            "description": "Parameters supplied to the create or update IpGroups operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ipGroups resource.",
            "schema": {
              "$ref": "#/definitions/IpGroup"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ipGroups resource.",
            "schema": {
              "$ref": "#/definitions/IpGroup"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "CreateOrUpdate_IpGroups": {
            "$ref": "./examples/IpGroupsCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_UpdateGroups",
        "description": "Updates tags of an IpGroups resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipGroupsName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipGroups."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the update ipGroups operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ipGroups resource.",
            "schema": {
              "$ref": "#/definitions/IpGroup"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Update_IpGroups": {
            "$ref": "./examples/IpGroupsUpdateTags.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_Delete",
        "description": "Deletes the specified ipGroups.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipGroupsName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipGroups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Delete_IpGroups": {
            "$ref": "./examples/IpGroupsDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups": {
      "get": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_ListByResourceGroup",
        "description": "Gets all IpGroups in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ipGroups resources.",
            "schema": {
              "$ref": "#/definitions/IpGroupListResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ListByResourceGroup_IpGroups": {
            "$ref": "./examples/IpGroupsListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups": {
      "get": {
        "tags": [
          "IpGroups"
        ],
        "operationId": "IpGroups_List",
        "description": "Gets all IpGroups in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of ipGroups resources.",
            "schema": {
              "$ref": "#/definitions/IpGroupListResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List_IpGroups": {
            "$ref": "./examples/IpGroupsListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections/{scopeConnectionName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "./networkManager.json#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/ScopeConnectionName"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "put": {
        "tags": [
          "ScopeConnections"
        ],
        "operationId": "ScopeConnections_CreateOrUpdate",
        "description": "Creates or updates scope connection from Network Manager",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopeConnection"
            },
            "description": "Scope connection to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the updates scope connection.",
            "schema": {
              "$ref": "#/definitions/ScopeConnection"
            }
          },
          "201": {
            "description": "Created - Returns information about the new scope connection.",
            "schema": {
              "$ref": "#/definitions/ScopeConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Manager Scope Connection": {
            "$ref": "./examples/NetworkManagerScopeConnectionPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "ScopeConnections"
        ],
        "operationId": "ScopeConnections_Get",
        "description": "Get specified scope connection created by this Network Manager.",
        "responses": {
          "200": {
            "description": "OK - Returns the resource",
            "schema": {
              "$ref": "#/definitions/ScopeConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Network Manager Scope Connection": {
            "$ref": "./examples/NetworkManagerScopeConnectionGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ScopeConnections"
        ],
        "operationId": "ScopeConnections_Delete",
        "description": "Delete the pending scope connection created by this network manager.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Manager Scope Connection": {
            "$ref": "./examples/NetworkManagerScopeConnectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections": {
      "get": {
        "tags": [
          "ScopeConnections"
        ],
        "operationId": "ScopeConnections_List",
        "description": "List all scope connections created by this network manager.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the scope connection(s).",
            "schema": {
              "$ref": "#/definitions/ScopeConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Network Manager Scope Connection": {
            "$ref": "./examples/NetworkManagerScopeConnectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Compute/cloudServices/{resourceName}/providers/Microsoft.Network/cloudServiceSlots/{singletonResource}": {
      "get": {
        "tags": [
          "VipSwap"
        ],
        "operationId": "VipSwap_Get",
        "description": "Gets the SwapResource which identifies the slot type for the specified cloud service. The slot type on a cloud service can either be Staging or Production",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "singletonResource",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specifies a synthetic proxy resource that cannot be created or deleted. Value must be set to swap.",
            "enum": [
              "swap"
            ],
            "x-ms-enum": {
              "name": "singletonResource",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the slot type for the specified cloud service.",
            "schema": {
              "$ref": "#/definitions/SwapResource"
            }
          }
        },
        "x-ms-examples": {
          "Get swap resource": {
            "$ref": "./examples/CloudServiceSwapGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VipSwap"
        ],
        "operationId": "VipSwap_Create",
        "description": "Performs vip swap operation on swappable cloud services.",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "name": "singletonResource",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specifies a synthetic resource that cannot be created or deleted. Value must be set to swap.",
            "enum": [
              "swap"
            ],
            "x-ms-enum": {
              "name": "singletonResource",
              "modelAsString": false
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwapResource"
            },
            "description": "SwapResource object where slot type should be the target slot after vip swap for the specified cloud service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Put vip swap operation.": {
            "$ref": "./examples/CloudServiceSwapPut.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Compute/cloudServices/{resourceName}/providers/Microsoft.Network/cloudServiceSlots": {
      "get": {
        "tags": [
          "VipSwap"
        ],
        "operationId": "VipSwap_List",
        "description": "Gets the list of SwapResource which identifies the slot type for the specified cloud service. The slot type on a cloud service can either be Staging or Production",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cloud service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the slot type for the specified cloud service.",
            "schema": {
              "$ref": "#/definitions/SwapResourceListResult"
            }
          }
        },
        "x-ms-examples": {
          "Get swap resource list": {
            "$ref": "./examples/CloudServiceSwapList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/virtualNetworkAvailableEndpointServices": {
      "get": {
        "operationId": "AvailableEndpointServices_List",
        "description": "List what values of endpoint services are available for use.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location to check available endpoint services."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns list of available endpoint services.",
            "schema": {
              "$ref": "#/definitions/EndpointServicesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "EndpointServicesList": {
            "$ref": "./examples/EndpointServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}": {
      "delete": {
        "tags": [
          "PrivateEndpoints"
        ],
        "operationId": "PrivateEndpoints_Delete",
        "description": "Deletes the specified private endpoint.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete private endpoint": {
            "$ref": "./examples/PrivateEndpointDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateEndpoints"
        ],
        "operationId": "PrivateEndpoints_Get",
        "description": "Gets the specified private endpoint by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting private endpoint resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpoint"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get private endpoint": {
            "$ref": "./examples/PrivateEndpointGet.json"
          },
          "Get private endpoint with manual approval connection": {
            "$ref": "./examples/PrivateEndpointGetForManualApproval.json"
          },
          "Get private endpoint with application security groups": {
            "$ref": "./examples/PrivateEndpointGetWithASG.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpoints"
        ],
        "operationId": "PrivateEndpoints_CreateOrUpdate",
        "description": "Creates or updates an private endpoint in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            "description": "Parameters supplied to the create or update private endpoint operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting private endpoint resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpoint"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting private endpoint resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpoint"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create private endpoint": {
            "$ref": "./examples/PrivateEndpointCreate.json"
          },
          "Create private endpoint with manual approval connection": {
            "$ref": "./examples/PrivateEndpointCreateForManualApproval.json"
          },
          "Create private endpoint with application security groups": {
            "$ref": "./examples/PrivateEndpointCreateWithASG.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints": {
      "get": {
        "tags": [
          "PrivateEndpoints"
        ],
        "operationId": "PrivateEndpoints_List",
        "description": "Gets all private endpoints in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private endpoint resources.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List private endpoints in resource group": {
            "$ref": "./examples/PrivateEndpointList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints": {
      "get": {
        "tags": [
          "PrivateEndpoints"
        ],
        "operationId": "PrivateEndpoints_ListBySubscription",
        "description": "Gets all private endpoints in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private endpoint resources.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List all private endpoints": {
            "$ref": "./examples/PrivateEndpointListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes": {
      "get": {
        "operationId": "AvailablePrivateEndpointTypes_List",
        "description": "Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
            "schema": {
              "$ref": "#/definitions/AvailablePrivateEndpointTypesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available PrivateEndpoint types": {
            "$ref": "./examples/AvailablePrivateEndpointTypesGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes": {
      "get": {
        "operationId": "AvailablePrivateEndpointTypes_ListByResourceGroup",
        "description": "Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
            "schema": {
              "$ref": "#/definitions/AvailablePrivateEndpointTypesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get available PrivateEndpoint types in the resource group": {
            "$ref": "./examples/AvailablePrivateEndpointTypesResourceGroupGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}": {
      "delete": {
        "tags": [
          "PrivateDnsZoneGroups"
        ],
        "operationId": "PrivateDnsZoneGroups_Delete",
        "description": "Deletes the specified private dns zone group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "name": "privateDnsZoneGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private dns zone group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete private dns zone group": {
            "$ref": "./examples/PrivateEndpointDnsZoneGroupDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateDnsZoneGroups"
        ],
        "operationId": "PrivateDnsZoneGroups_Get",
        "description": "Gets the private dns zone group resource by specified private dns zone group name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "name": "privateDnsZoneGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private dns zone group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting privateDnsZoneGroup resource.",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get private dns zone group": {
            "$ref": "./examples/PrivateEndpointDnsZoneGroupGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateDnsZoneGroups"
        ],
        "operationId": "PrivateDnsZoneGroups_CreateOrUpdate",
        "description": "Creates or updates a private dns zone group in the specified private endpoint.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "name": "privateDnsZoneGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private dns zone group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneGroup"
            },
            "description": "Parameters supplied to the create or update private dns zone group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting PrivateDnsZoneGroup resource.",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneGroup"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting PrivateDnsZoneGroup resource.",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create private dns zone group": {
            "$ref": "./examples/PrivateEndpointDnsZoneGroupCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups": {
      "get": {
        "tags": [
          "PrivateDnsZoneGroups"
        ],
        "operationId": "PrivateDnsZoneGroups_List",
        "description": "Gets all private dns zone groups in a private endpoint.",
        "parameters": [
          {
            "name": "privateEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private dns zone group resources.",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneGroupListResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List private endpoints in resource group": {
            "$ref": "./examples/PrivateEndpointDnsZoneGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/publicipaddresses": {
      "get": {
        "operationId": "PublicIPAddresses_ListVirtualMachineScaleSetPublicIPAddresses",
        "description": "Gets information about all public IP addresses on a virtual machine scale set level.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPInterface resources.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVMSSPublicIP": {
            "$ref": "./examples/VmssPublicIpListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses": {
      "get": {
        "operationId": "PublicIPAddresses_ListVirtualMachineScaleSetVMPublicIPAddresses",
        "description": "Gets information about all public IP addresses in a virtual machine IP configuration in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The network interface name."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The IP configuration name."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPAddress resources.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListVMSSVMPublicIP": {
            "$ref": "./examples/VmssVmPublicIpList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}": {
      "get": {
        "operationId": "PublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress",
        "description": "Get the specified public IP address in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "ipConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IP configuration."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP Address."
          },
          {
            "$ref": "#/parameters/ApiVersionVmssParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "x-ms-examples": {
          "GetVMSSPublicIP": {
            "$ref": "./examples/VmssPublicIpGet.json"
          }
        },
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability": {
      "get": {
        "operationId": "CheckDnsNameAvailability",
        "description": "Checks whether a domain name in the cloudapp.azure.com zone is available for use.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name."
          },
          {
            "name": "domainNameLabel",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns whether the DNS name is available.",
            "schema": {
              "$ref": "#/definitions/DnsNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Check Dns Name Availability": {
            "$ref": "./examples/CheckDnsNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}": {
      "delete": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_Delete",
        "description": "Deletes the specified custom IP prefix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "customIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the CustomIpPrefix."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete custom IP prefix": {
            "$ref": "./examples/CustomIpPrefixDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_Get",
        "description": "Gets the specified custom IP prefix in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "customIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the custom IP prefix."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting CustomIpPrefix resource.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get custom IP prefix": {
            "$ref": "./examples/CustomIpPrefixGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_CreateOrUpdate",
        "description": "Creates or updates a custom IP prefix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "customIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the custom IP prefix."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomIpPrefix"
            },
            "description": "Parameters supplied to the create or update custom IP prefix operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting CustomIpPrefix resource.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefix"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting CustomIpPrefix resource.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create custom IP prefix allocation method": {
            "$ref": "./examples/CustomIpPrefixCreateCustomizedValues.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_UpdateTags",
        "description": "Updates custom IP prefix tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "customIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the custom IP prefix."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update custom IP prefix tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting customIpPrefix resource.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update public IP address tags": {
            "$ref": "./examples/CustomIpPrefixUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/customIpPrefixes": {
      "get": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_ListAll",
        "description": "Gets all the custom IP prefixes in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of CustomIpPrefix resources.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefixListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all custom IP prefixes": {
            "$ref": "./examples/CustomIpPrefixListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes": {
      "get": {
        "tags": [
          "CustomIpPrefixes"
        ],
        "operationId": "CustomIPPrefixes_List",
        "description": "Gets all custom IP prefixes in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of CustomIpPrefix resources.",
            "schema": {
              "$ref": "#/definitions/CustomIpPrefixListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List resource group Custom IP prefixes": {
            "$ref": "./examples/CustomIpPrefixList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveConnectivityConfigurations": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/VirtualNetworkNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagerEffectiveConnectivityConfiguration"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./networkManagerGroup.json#/definitions/QueryRequestOptions"
            },
            "description": "Parameters supplied to list correct page."
          }
        ],
        "operationId": "ListNetworkManagerEffectiveConnectivityConfigurations",
        "description": "List all effective connectivity configurations applied on a virtual network.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the configurations.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerEffectiveConnectivityConfigurationListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List effective connectivity configuration": {
            "$ref": "./examples/NetworkManagerEffectiveConnectivityConfigurationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveSecurityAdminRules": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/VirtualNetworkNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagerEffectiveSecurityAdminRules"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./networkManagerGroup.json#/definitions/QueryRequestOptions"
            },
            "description": "Parameters supplied to list correct page."
          }
        ],
        "operationId": "ListNetworkManagerEffectiveSecurityAdminRules",
        "description": "List all effective security admin rules applied on a virtual network.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the configurations.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerEffectiveSecurityAdminRulesListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List effective security admin rules": {
            "$ref": "./examples/NetworkManagerEffectiveSecurityAdminRulesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}": {
      "get": {
        "operationId": "VirtualWans_Get",
        "x-ms-examples": {
          "VirtualWANGet": {
            "$ref": "./examples/VirtualWANGet.json"
          }
        },
        "description": "Retrieves the details of a VirtualWAN.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualWans_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualWANCreate": {
            "$ref": "./examples/VirtualWANPut.json"
          }
        },
        "description": "Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being created or updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "WANParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            },
            "description": "Parameters supplied to create or update VirtualWAN."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualWAN resource.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualWANs"
        ],
        "operationId": "VirtualWans_UpdateTags",
        "x-ms-examples": {
          "VirtualWANUpdate": {
            "$ref": "./examples/VirtualWANUpdateTags.json"
          }
        },
        "description": "Updates a VirtualWAN tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "WANParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to Update VirtualWAN tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN updated.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualWans_Delete",
        "x-ms-examples": {
          "VirtualWANDelete": {
            "$ref": "./examples/VirtualWANDelete.json"
          }
        },
        "description": "Deletes a VirtualWAN.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualWAN deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualWAN deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualWANs exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans": {
      "get": {
        "operationId": "VirtualWans_ListByResourceGroup",
        "x-ms-examples": {
          "VirtualWANListByResourceGroup": {
            "$ref": "./examples/VirtualWANListByResourceGroup.json"
          }
        },
        "description": "Lists all the VirtualWANs in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualWANs in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVirtualWANsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans": {
      "get": {
        "operationId": "VirtualWans_List",
        "x-ms-examples": {
          "VirtualWANList": {
            "$ref": "./examples/VirtualWANList.json"
          }
        },
        "description": "Lists all the VirtualWANs in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualWANs in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVirtualWANsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}": {
      "get": {
        "operationId": "VpnSites_Get",
        "x-ms-examples": {
          "VpnSiteGet": {
            "$ref": "./examples/VpnSiteGet.json"
          }
        },
        "description": "Retrieves the details of a VPN site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnSites_CreateOrUpdate",
        "x-ms-examples": {
          "VpnSiteCreate": {
            "$ref": "./examples/VpnSitePut.json"
          }
        },
        "description": "Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being created or updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnSiteParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnSite"
            },
            "description": "Parameters supplied to create or update VpnSite."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VpnSite created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnSites"
        ],
        "operationId": "VpnSites_UpdateTags",
        "x-ms-examples": {
          "VpnSiteUpdate": {
            "$ref": "./examples/VpnSiteUpdateTags.json"
          }
        },
        "description": "Updates VpnSite tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnSiteParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VpnSite tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VpnSites_Delete",
        "x-ms-examples": {
          "VpnSiteDelete": {
            "$ref": "./examples/VpnSiteDelete.json"
          }
        },
        "description": "Deletes a VpnSite.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VpnSite deleted."
          },
          "202": {
            "description": "Request received successfully. VpnSite deletion is in progress."
          },
          "204": {
            "description": "No VpnSites exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites": {
      "get": {
        "operationId": "VpnSites_ListByResourceGroup",
        "x-ms-examples": {
          "VpnSiteListByResourceGroup": {
            "$ref": "./examples/VpnSiteListByResourceGroup.json"
          }
        },
        "description": "Lists all the vpnSites in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnSitesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks/{vpnSiteLinkName}": {
      "get": {
        "operationId": "VpnSiteLinks_Get",
        "x-ms-examples": {
          "VpnSiteGet": {
            "$ref": "./examples/VpnSiteLinkGet.json"
          }
        },
        "description": "Retrieves the details of a VPN site link.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite."
          },
          {
            "name": "vpnSiteLinkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSiteLink being retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSiteLink retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnSiteLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks": {
      "get": {
        "operationId": "VpnSiteLinks_ListByVpnSite",
        "x-ms-examples": {
          "VpnSiteLinkListByVpnSite": {
            "$ref": "./examples/VpnSiteLinkListByVpnSite.json"
          }
        },
        "description": "Lists all the vpnSiteLinks in a resource group for a vpn site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnSiteLinksResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites": {
      "get": {
        "operationId": "VpnSites_List",
        "x-ms-examples": {
          "VpnSiteList": {
            "$ref": "./examples/VpnSiteList.json"
          }
        },
        "description": "Lists all the VpnSites in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnSites in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnSitesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnConfiguration": {
      "post": {
        "operationId": "VpnSitesConfiguration_Download",
        "x-ms-examples": {
          "VpnSitesConfigurationDownload": {
            "$ref": "./examples/VpnSitesConfigurationDownload.json"
          }
        },
        "description": "Gives the sas-url to download the configurations for vpn-sites in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN for which configuration of all vpn-sites is needed."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetVpnSitesConfigurationRequest"
            },
            "description": "Parameters supplied to download vpn-sites configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Follow the location header for sas-url to output blob."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously. Follow the location header for sas-url to output blob."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/supportedSecurityProviders": {
      "get": {
        "operationId": "SupportedSecurityProviders",
        "x-ms-examples": {
          "supportedSecurityProviders": {
            "$ref": "./examples/VirtualWanSupportedSecurityProviders.json"
          }
        },
        "description": "Gives the supported security providers for the virtual wan.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN for which supported security providers are needed."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the object containing supported security providers.",
            "schema": {
              "$ref": "#/definitions/VirtualWanSecurityProviders"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}": {
      "get": {
        "operationId": "VpnServerConfigurations_Get",
        "x-ms-examples": {
          "VpnServerConfigurationGet": {
            "$ref": "./examples/VpnServerConfigurationGet.json"
          }
        },
        "description": "Retrieves the details of a VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnServerConfigurations_CreateOrUpdate",
        "x-ms-examples": {
          "VpnServerConfigurationCreate": {
            "$ref": "./examples/VpnServerConfigurationPut.json"
          }
        },
        "description": "Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being created or updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnServerConfigurationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            },
            "description": "Parameters supplied to create or update VpnServerConfiguration."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VpnServerConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnServerConfigurations"
        ],
        "operationId": "VpnServerConfigurations_UpdateTags",
        "x-ms-examples": {
          "VpnServerConfigurationUpdate": {
            "$ref": "./examples/VpnServerConfigurationUpdateTags.json"
          }
        },
        "description": "Updates VpnServerConfiguration tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being updated."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnServerConfigurationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VpnServerConfiguration tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VpnServerConfigurations_Delete",
        "x-ms-examples": {
          "VpnServerConfigurationDelete": {
            "$ref": "./examples/VpnServerConfigurationDelete.json"
          }
        },
        "description": "Deletes a VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VpnServerConfiguration deleted."
          },
          "202": {
            "description": "Request received successfully. VpnServerConfiguration deletion is in progress."
          },
          "204": {
            "description": "No VpnServerConfigurations exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations": {
      "get": {
        "operationId": "VpnServerConfigurations_ListByResourceGroup",
        "x-ms-examples": {
          "VpnServerConfigurationListByResourceGroup": {
            "$ref": "./examples/VpnServerConfigurationListByResourceGroup.json"
          }
        },
        "description": "Lists all the vpnServerConfigurations in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnServerConfigurations in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnServerConfigurationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}": {
      "put": {
        "operationId": "ConfigurationPolicyGroups_CreateOrUpdate",
        "x-ms-examples": {
          "ConfigurationPolicyGroupPut": {
            "$ref": "./examples/ConfigurationPolicyGroupPut.json"
          }
        },
        "description": "Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the ConfigurationPolicyGroup."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration."
          },
          {
            "name": "configurationPolicyGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ConfigurationPolicyGroup."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnServerConfigurationPolicyGroupParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
            },
            "description": "Parameters supplied to create or update a VpnServerConfiguration PolicyGroup."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration PolicyGroup created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration PolicyGroup retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "ConfigurationPolicyGroups_Delete",
        "x-ms-examples": {
          "ConfigurationPolicyGroupDelete": {
            "$ref": "./examples/ConfigurationPolicyGroupDelete.json"
          }
        },
        "description": "Deletes a ConfigurationPolicyGroup.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the ConfigurationPolicyGroup."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration."
          },
          {
            "name": "configurationPolicyGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ConfigurationPolicyGroup."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. ConfigurationPolicyGroup deleted."
          },
          "202": {
            "description": "Request received successfully. ConfigurationPolicyGroup deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No ConfigurationPolicyGroup exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "operationId": "ConfigurationPolicyGroups_Get",
        "x-ms-examples": {
          "ConfigurationPolicyGroupGet": {
            "$ref": "./examples/ConfigurationPolicyGroupGet.json"
          }
        },
        "description": "Retrieves the details of a ConfigurationPolicyGroup.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration."
          },
          {
            "name": "configurationPolicyGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ConfigurationPolicyGroup being retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the ConfigurationPolicyGroup retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups": {
      "get": {
        "operationId": "configurationPolicyGroups_ListByVpnServerConfiguration",
        "x-ms-examples": {
          "ConfigurationPolicyGroupListByVpnServerConfiguration": {
            "$ref": "./examples/ConfigurationPolicyGroupListByVpnServerConfiguration.json"
          }
        },
        "description": "Lists all the configurationPolicyGroups in a resource group for a vpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnServerConfigurations in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnServerConfigurationPolicyGroupsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations": {
      "get": {
        "operationId": "VpnServerConfigurations_List",
        "x-ms-examples": {
          "VpnServerConfigurationList": {
            "$ref": "./examples/VpnServerConfigurationList.json"
          }
        },
        "description": "Lists all the VpnServerConfigurations in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnServerConfigurations in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnServerConfigurationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}": {
      "get": {
        "operationId": "VirtualHubs_Get",
        "x-ms-examples": {
          "VirtualHubGet": {
            "$ref": "./examples/VirtualHubGet.json"
          }
        },
        "description": "Retrieves the details of a VirtualHub.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubs_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubPut": {
            "$ref": "./examples/VirtualHubPut.json"
          }
        },
        "description": "Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            },
            "description": "Parameters supplied to create or update VirtualHub."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VirtualHub created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualWANs"
        ],
        "operationId": "VirtualHubs_UpdateTags",
        "x-ms-examples": {
          "VirtualHubUpdate": {
            "$ref": "./examples/VirtualHubUpdateTags.json"
          }
        },
        "description": "Updates VirtualHub tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VirtualHub tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualHubs_Delete",
        "x-ms-examples": {
          "VirtualHubDelete": {
            "$ref": "./examples/VirtualHubDelete.json"
          }
        },
        "description": "Deletes a VirtualHub.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHub deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHub deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubs exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs": {
      "get": {
        "operationId": "VirtualHubs_ListByResourceGroup",
        "x-ms-examples": {
          "VirtualHubListByResourceGroup": {
            "$ref": "./examples/VirtualHubListByResourceGroup.json"
          }
        },
        "description": "Lists all the VirtualHubs in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubs in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs": {
      "get": {
        "operationId": "VirtualHubs_List",
        "x-ms-examples": {
          "VirtualHubList": {
            "$ref": "./examples/VirtualHubList.json"
          }
        },
        "description": "Lists all the VirtualHubs in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubs in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}": {
      "get": {
        "operationId": "RouteMaps_Get",
        "x-ms-examples": {
          "RouteMapGet": {
            "$ref": "./examples/RouteMapGet.json"
          }
        },
        "description": "Retrieves the details of a RouteMap.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteMap's resource group."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub containing the RouteMap."
          },
          {
            "name": "routeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteMap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteMap retrieved.",
            "schema": {
              "$ref": "#/definitions/RouteMap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "RouteMaps_CreateOrUpdate",
        "x-ms-examples": {
          "RouteMapPut": {
            "$ref": "./examples/RouteMapPut.json"
          }
        },
        "description": "Creates a RouteMap if it doesn't exist else updates the existing one.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteMap's resource group."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub containing the RouteMap."
          },
          {
            "name": "routeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteMap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "routeMapParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteMap"
            },
            "description": "Parameters supplied to create or update a RouteMap."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteMap created or updated.",
            "schema": {
              "$ref": "#/definitions/RouteMap"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the RouteMap retrieved.",
            "schema": {
              "$ref": "#/definitions/RouteMap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "RouteMaps_Delete",
        "x-ms-examples": {
          "RouteMapDelete": {
            "$ref": "./examples/RouteMapDelete.json"
          }
        },
        "description": "Deletes a RouteMap.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteMap's resource group."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub containing the RouteMap."
          },
          {
            "name": "routeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteMap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. RouteMap deleted."
          },
          "202": {
            "description": "Request received successfully. RouteMap deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No RouteMaps exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps": {
      "get": {
        "operationId": "RouteMaps_List",
        "x-ms-examples": {
          "RouteMapList": {
            "$ref": "./examples/RouteMapList.json"
          }
        },
        "description": "Retrieves the details of all RouteMaps.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteMap's resource group'."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub containing the RouteMap."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the RouteMaps for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListRouteMapsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}": {
      "put": {
        "operationId": "HubVirtualNetworkConnections_CreateOrUpdate",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionPut": {
            "$ref": "./examples/HubVirtualNetworkConnectionPut.json"
          }
        },
        "description": "Creates a hub virtual network connection if it doesn't exist else updates the existing one.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the HubVirtualNetworkConnection."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the HubVirtualNetworkConnection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "hubVirtualNetworkConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubVirtualNetworkConnection"
            },
            "description": "Parameters supplied to create or update a hub virtual network connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the hub virtual network connection created or updated.",
            "schema": {
              "$ref": "#/definitions/HubVirtualNetworkConnection"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the hub virtual network connection retrieved.",
            "schema": {
              "$ref": "#/definitions/HubVirtualNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "HubVirtualNetworkConnections_Delete",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionDelete": {
            "$ref": "./examples/HubVirtualNetworkConnectionDelete.json"
          }
        },
        "description": "Deletes a HubVirtualNetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the HubVirtualNetworkConnection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. HubVirtualNetworkConnection deleted."
          },
          "202": {
            "description": "Request received successfully. HubVirtualNetworkConnection deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No HubVirtualNetworkConnection exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "operationId": "HubVirtualNetworkConnections_Get",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionGet": {
            "$ref": "./examples/HubVirtualNetworkConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a HubVirtualNetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the HubVirtualNetworkConnection retrieved.",
            "schema": {
              "$ref": "#/definitions/HubVirtualNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections": {
      "get": {
        "operationId": "HubVirtualNetworkConnections_List",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionList": {
            "$ref": "./examples/HubVirtualNetworkConnectionList.json"
          }
        },
        "description": "Retrieves the details of all HubVirtualNetworkConnections.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the HubVirtualNetworkConnections for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListHubVirtualNetworkConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}": {
      "get": {
        "operationId": "VpnGateways_Get",
        "x-ms-examples": {
          "VpnGatewayGet": {
            "$ref": "./examples/VpnGatewayGet.json"
          }
        },
        "description": "Retrieves the details of a virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnGateways_CreateOrUpdate",
        "x-ms-examples": {
          "VpnGatewayPut": {
            "$ref": "./examples/VpnGatewayPut.json"
          }
        },
        "description": "Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "vpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            },
            "description": "Parameters supplied to create or Update a virtual wan vpn gateway."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan vpn Gateway created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the virtual wan vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_UpdateTags",
        "x-ms-examples": {
          "VpnGatewayUpdate": {
            "$ref": "./examples/VpnGatewayUpdateTags.json"
          }
        },
        "description": "Updates virtual wan vpn gateway tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "vpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update a virtual wan vpn gateway tags."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. Returns the details of the updated gateway.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VpnGateways_Delete",
        "x-ms-examples": {
          "VpnGatewayDelete": {
            "$ref": "./examples/VpnGatewayDelete.json"
          }
        },
        "description": "Deletes a virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Vpn Gateway deleted."
          },
          "202": {
            "description": "Request received successfully. Vpn Gateway deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No vpn gateways exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/reset": {
      "post": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_Reset",
        "description": "Resets the primary of the vpn gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "ipConfigurationId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "VpnGateway ipConfigurationId to specify the gateway instance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation reset the primary of the VpnGateway.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetVpnGateway": {
            "$ref": "./examples/VpnGatewayReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/startpacketcapture": {
      "post": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_StartPacketCapture",
        "description": "Starts packet capture on vpn gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnGatewayPacketCaptureStartParameters"
            },
            "description": "Vpn gateway packet capture parameters supplied to start packet capture on vpn gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation packet capture started on vpn gateway.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Start packet capture on vpn gateway without filter": {
            "$ref": "./examples/VpnGatewayStartPacketCapture.json"
          },
          "Start packet capture on vpn gateway with filter": {
            "$ref": "./examples/VpnGatewayStartPacketCaptureFilterData.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/stoppacketcapture": {
      "post": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_StopPacketCapture",
        "description": "Stops packet capture on vpn gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnGatewayPacketCaptureStopParameters"
            },
            "description": "Vpn gateway packet capture parameters supplied to stop packet capture on vpn gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation packet capture stopped on vpn gateway.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Stop packet capture on vpn gateway": {
            "$ref": "./examples/VpnGatewayStopPacketCapture.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/resetconnection": {
      "post": {
        "tags": [
          "vpnLinkConnections"
        ],
        "operationId": "VpnLinkConnections_ResetConnection",
        "description": "Resets the VpnLink connection specified.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation ResetConnection will complete asynchronously."
          },
          "default": {
            "description": "The operation ResetConnection could not be completed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResetVpnLinkConnection": {
            "$ref": "./examples/VpnSiteLinkConnectionReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/sharedKeys": {
      "get": {
        "operationId": "VpnLinkConnections_GetAllSharedKeys",
        "description": "Lists all shared keys of VpnLink connection specified.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the shared key of the vpn link connection.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResultList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VpnSiteLinkConnectionSharedKeysGet": {
            "$ref": "./examples/VpnSiteLinkConnectionSharedKeysGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/sharedKeys/default": {
      "get": {
        "operationId": "VpnLinkConnections_GetDefaultSharedKey",
        "description": "Gets the shared key of VpnLink connection specified.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the shared key of the vpn link connection.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VpnSiteLinkConnectionDefaultSharedKeyGet": {
            "$ref": "./examples/VpnSiteLinkConnectionDefaultSharedKeyGet.json"
          }
        }
      },
      "put": {
        "operationId": "VpnLinkConnections_SetOrInitDefaultSharedKey",
        "x-ms-examples": {
          "VpnSiteLinkConnectionDefaultSharedKeyPut": {
            "$ref": "./examples/VpnSiteLinkConnectionDefaultSharedKeyPut.json"
          }
        },
        "description": "Sets or auto generates the shared key based on the user input. If users give a shared key value, it does the set operation. If key length is given, the operation creates a random key of the pre-defined length.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "ConnectionSharedKeyParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            },
            "description": "Parameters supplied to set or auto generate the shared key for the vpn link connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the length of the shared key for the vpn link connection.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            }
          },
          "201": {
            "description": "Request successful. Returns the length of the shared key for the vpn link connection.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/sharedKeys/default/listSharedKey": {
      "post": {
        "operationId": "VpnLinkConnections_ListDefaultSharedKey",
        "description": "Gets the value of the shared key of VpnLink connection specified.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the shared key of the vpn link connection.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VpnSiteLinkConnectionDefaultSharedKeyList": {
            "$ref": "./examples/VpnSiteLinkConnectionDefaultSharedKeyList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways": {
      "get": {
        "operationId": "VpnGateways_ListByResourceGroup",
        "x-ms-examples": {
          "VpnGatewayListByResourceGroup": {
            "$ref": "./examples/VpnGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists all the VpnGateways in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnGateways in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways": {
      "get": {
        "operationId": "VpnGateways_List",
        "x-ms-examples": {
          "VpnGatewayListBySubscription": {
            "$ref": "./examples/VpnGatewayList.json"
          }
        },
        "description": "Lists all the VpnGateways in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnGateways in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}": {
      "get": {
        "operationId": "VpnConnections_Get",
        "x-ms-examples": {
          "VpnConnectionGet": {
            "$ref": "./examples/VpnConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a vpn connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnConnections_CreateOrUpdate",
        "x-ms-examples": {
          "VpnConnectionPut": {
            "$ref": "./examples/VpnConnectionPut.json"
          }
        },
        "description": "Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            },
            "description": "Parameters supplied to create or Update a VPN Connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the vpn connection created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VpnConnections_Delete",
        "x-ms-examples": {
          "VpnConnectionDelete": {
            "$ref": "./examples/VpnConnectionDelete.json"
          }
        },
        "description": "Deletes a vpn connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Vpn Connection deleted."
          },
          "202": {
            "description": "Request received successfully. Vpn Connection deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No vpn connections exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}": {
      "get": {
        "operationId": "VpnSiteLinkConnections_Get",
        "x-ms-examples": {
          "VpnSiteLinkConnectionGet": {
            "$ref": "./examples/VpnSiteLinkConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a vpn site link connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection.",
            "schema": {
              "$ref": "#/definitions/VpnSiteLinkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/getikesas": {
      "post": {
        "operationId": "VpnLinkConnections_GetIkeSas",
        "x-ms-examples": {
          "GetVpnLinkConnectionIkeSa": {
            "$ref": "./examples/VpnSiteLinkConnectionGetIkeSas.json"
          }
        },
        "description": "Lists IKE Security Associations for Vpn Site Link Connection in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn link connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation GetIkeSas will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation getikesas completed on vpn site link connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "The operation GetIkeSas could not be completed.",
            "schema": {
              "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{vpnConnectionName}/startpacketcapture": {
      "post": {
        "operationId": "VpnConnections_StartPacketCapture",
        "description": "Starts packet capture on Vpn connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "vpnConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnConnectionPacketCaptureStartParameters"
            },
            "description": "Vpn Connection packet capture parameters supplied to start packet capture on gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture started on vpn connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Start packet capture on vpn connection without filter": {
            "$ref": "./examples/VpnConnectionStartPacketCapture.json"
          },
          "Start packet capture on vpn connection with filter": {
            "$ref": "./examples/VpnConnectionStartPacketCaptureFilterData.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{vpnConnectionName}/stoppacketcapture": {
      "post": {
        "operationId": "VpnConnections_StopPacketCapture",
        "description": "Stops packet capture on Vpn connection in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "vpnConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VpnConnectionPacketCaptureStopParameters"
            },
            "description": "Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. The operation packet capture stopped on vpn connection.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Start packet capture on vpn connection without filter": {
            "$ref": "./examples/VpnConnectionStopPacketCapture.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections": {
      "get": {
        "operationId": "VpnConnections_ListByVpnGateway",
        "x-ms-examples": {
          "VpnConnectionList": {
            "$ref": "./examples/VpnConnectionList.json"
          }
        },
        "description": "Retrieves all vpn connections for a particular virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Vpn connections for a virtual wan vpn gateway.",
            "schema": {
              "$ref": "#/definitions/ListVpnConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections": {
      "get": {
        "operationId": "VpnLinkConnections_ListByVpnConnection",
        "x-ms-examples": {
          "VpnSiteLinkConnectionList": {
            "$ref": "./examples/VpnSiteLinkConnectionList.json"
          }
        },
        "description": "Retrieves all vpn site link connections for a particular virtual wan vpn gateway vpn connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the vpn gateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Vpn connections for a virtual wan vpn gateway.",
            "schema": {
              "$ref": "#/definitions/ListVpnSiteLinkConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}": {
      "get": {
        "operationId": "NatRules_Get",
        "x-ms-examples": {
          "NatRuleGet": {
            "$ref": "./examples/NatRuleGet.json"
          }
        },
        "description": "Retrieves the details of a nat ruleGet.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the nat rule.",
            "schema": {
              "$ref": "#/definitions/VpnGatewayNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "NatRules_CreateOrUpdate",
        "x-ms-examples": {
          "NatRulePut": {
            "$ref": "./examples/NatRulePut.json"
          }
        },
        "description": "Creates a nat rule to a scalable vpn gateway if it doesn't exist else updates the existing nat rules.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "NatRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnGatewayNatRule"
            },
            "description": "Parameters supplied to create or Update a Nat Rule."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the nat rule created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnGatewayNatRule"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the nat rule created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnGatewayNatRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "NatRules_Delete",
        "x-ms-examples": {
          "NatRuleDelete": {
            "$ref": "./examples/NatRuleDelete.json"
          }
        },
        "description": "Deletes a nat rule.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "natRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the nat rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Nat Rule deleted."
          },
          "202": {
            "description": "Request received successfully. Nat Rule deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No nat rules exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules": {
      "get": {
        "operationId": "NatRules_ListByVpnGateway",
        "x-ms-examples": {
          "NatRuleList": {
            "$ref": "./examples/NatRuleList.json"
          }
        },
        "description": "Retrieves all nat rules for a particular virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Nat rules for a virtual wan vpn gateway.",
            "schema": {
              "$ref": "#/definitions/ListVpnGatewayNatRulesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}": {
      "get": {
        "operationId": "P2sVpnGateways_Get",
        "x-ms-examples": {
          "P2SVpnGatewayGet": {
            "$ref": "./examples/P2SVpnGatewayGet.json"
          }
        },
        "description": "Retrieves the details of a virtual wan p2s vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "P2sVpnGateways_CreateOrUpdate",
        "x-ms-examples": {
          "P2SVpnGatewayPut": {
            "$ref": "./examples/P2SVpnGatewayPut.json"
          }
        },
        "description": "Creates a virtual wan p2s vpn gateway if it doesn't exist else updates the existing gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "p2SVpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            },
            "description": "Parameters supplied to create or Update a virtual wan p2s vpn gateway."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn Gateway created or updated.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_UpdateTags",
        "x-ms-examples": {
          "P2SVpnGatewayUpdate": {
            "$ref": "./examples/P2SVpnGatewayUpdateTags.json"
          }
        },
        "description": "Updates virtual wan p2s vpn gateway tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "p2SVpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update a virtual wan p2s vpn gateway tags."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. Returns the details of the updated gateway.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "P2sVpnGateways_Delete",
        "x-ms-examples": {
          "P2SVpnGatewayDelete": {
            "$ref": "./examples/P2SVpnGatewayDelete.json"
          }
        },
        "description": "Deletes a virtual wan p2s vpn gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. P2SVpnGateway deleted."
          },
          "202": {
            "description": "Request received successfully. P2SVpnGateway deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No p2s vpn gateways exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways": {
      "get": {
        "operationId": "P2sVpnGateways_ListByResourceGroup",
        "x-ms-examples": {
          "P2SVpnGatewayListByResourceGroup": {
            "$ref": "./examples/P2SVpnGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists all the P2SVpnGateways in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the P2SVpnGateways in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListP2SVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways": {
      "get": {
        "operationId": "P2sVpnGateways_List",
        "x-ms-examples": {
          "P2SVpnGatewayListBySubscription": {
            "$ref": "./examples/P2SVpnGatewayList.json"
          }
        },
        "description": "Lists all the P2SVpnGateways in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the P2SVpnGateways in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListP2SVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/reset": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2SVpnGateways_Reset",
        "description": "Resets the primary of the p2s vpn gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation reset the primary of the P2SVpnGateway.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetP2SVpnGateway": {
            "$ref": "./examples/P2SVpnGatewayReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GenerateVpnProfile",
        "description": "Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnProfileParameters"
            },
            "description": "Parameters supplied to the generate P2SVpnGateway VPN client package operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "$ref": "#/definitions/VpnProfileResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateP2SVpnGatewayVPNProfile": {
            "$ref": "./examples/P2SVpnGatewayGenerateVpnProfile.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealth": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GetP2sVpnConnectionHealth",
        "description": "Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "P2S Vpn Gateway with P2S connection health details.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "P2SVpnGatewayGetConnectionHealth": {
            "$ref": "./examples/P2SVpnGatewayGetConnectionHealth.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealthDetailed": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GetP2sVpnConnectionHealthDetailed",
        "description": "Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionHealthRequest"
            },
            "description": "Request parameters supplied to get p2s vpn connections detailed health."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "P2S connections detailed health report.",
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionHealth"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "P2SVpnGatewayGetConnectionHealthDetailed": {
            "$ref": "./examples/P2SVpnGatewayGetConnectionHealthDetailed.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnServerConfigurations": {
      "post": {
        "operationId": "VpnServerConfigurationsAssociatedWithVirtualWan_List",
        "x-ms-examples": {
          "GetVirtualWanVpnServerConfigurations": {
            "$ref": "./examples/GetVirtualWanVpnServerConfigurations.json"
          }
        },
        "description": "Gives the list of VpnServerConfigurations associated with Virtual Wan in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN whose associated VpnServerConfigurations is needed."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of associated VpnServerConfigurations list.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationsResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously. Follow the location header for list of associated VpnServerConfigurations list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/GenerateVpnProfile": {
      "post": {
        "operationId": "generatevirtualwanvpnserverconfigurationvpnprofile",
        "x-ms-examples": {
          "GenerateVirtualWanVpnServerConfigurationVpnProfile": {
            "$ref": "./examples/GenerateVirtualWanVpnServerConfigurationVpnProfile.json"
          }
        },
        "description": "Generates a unique VPN profile for P2S clients for VirtualWan and associated VpnServerConfiguration combination in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN whose associated VpnServerConfigurations is needed."
          },
          {
            "name": "vpnClientParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualWanVpnProfileParameters"
            },
            "description": "Parameters supplied to the generate VirtualWan VPN profile generation operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "$ref": "#/definitions/VpnProfileResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}": {
      "get": {
        "operationId": "VirtualHubRouteTableV2s_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubRouteTableV2Get.json"
          }
        },
        "description": "Retrieves the details of a VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubRouteTableV2."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHubRouteTableV2 retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubRouteTableV2s_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Put": {
            "$ref": "./examples/VirtualHubRouteTableV2Put.json"
          }
        },
        "description": "Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubRouteTableV2Parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            },
            "description": "Parameters supplied to create or update VirtualHubRouteTableV2."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHubRouteTableV2 created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VirtualHubRouteTableV2 created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubRouteTableV2s_Delete",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Delete": {
            "$ref": "./examples/VirtualHubRouteTableV2Delete.json"
          }
        },
        "description": "Deletes a VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubRouteTableV2."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubRouteTableV2 deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubRouteTableV2 deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubRouteTableV2s exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables": {
      "get": {
        "operationId": "VirtualHubRouteTableV2s_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubRouteTableV2List.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubRouteTableV2s.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubRouteTableV2s for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubRouteTableV2sResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{p2sVpnGatewayName}/disconnectP2sVpnConnections": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_DisconnectP2sVpnConnections",
        "description": "Disconnect P2S vpn connections of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "p2sVpnGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2S Vpn Gateway."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionRequest"
            },
            "description": "The parameters are supplied to disconnect p2s vpn connections."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation disconnects the requested vpn connections."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Disconnect VpnConnections from P2sVpn Gateway": {
            "$ref": "./examples/P2sVpnGatewaysDisconnectP2sVpnConnections.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways": {
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_ListBySubscription",
        "x-ms-examples": {
          "ExpressRouteGatewayListBySubscription": {
            "$ref": "./examples/ExpressRouteGatewayListBySubscription.json"
          }
        },
        "description": "Lists ExpressRoute gateways under a given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGatewayList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways": {
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_ListByResourceGroup",
        "x-ms-examples": {
          "ExpressRouteGatewayListByResourceGroup": {
            "$ref": "./examples/ExpressRouteGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists ExpressRoute gateways in a given resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGatewayList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}": {
      "put": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_CreateOrUpdate",
        "x-ms-examples": {
          "ExpressRouteGatewayCreate": {
            "$ref": "./examples/ExpressRouteGatewayCreate.json"
          }
        },
        "description": "Creates or updates a ExpressRoute gateway in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "putExpressRouteGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            },
            "description": "Parameters required in an ExpressRoute gateway PUT operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRoute gateway resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRoute gateway resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_UpdateTags",
        "x-ms-examples": {
          "ExpressRouteGatewayUpdate": {
            "$ref": "./examples/ExpressRouteGatewayUpdateTags.json"
          }
        },
        "description": "Updates express route gateway tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the ExpressRouteGateway."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "expressRouteGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update a virtual wan express route gateway tags."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Request successful. Returns the details of the updated gateway.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_Get",
        "x-ms-examples": {
          "ExpressRouteGatewayGet": {
            "$ref": "./examples/ExpressRouteGatewayGet.json"
          }
        },
        "description": "Fetches the details of a ExpressRoute gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded. The operation returns the ExpressRoute gateway.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_Delete",
        "x-ms-examples": {
          "ExpressRouteGatewayDelete": {
            "$ref": "./examples/ExpressRouteGatewayDelete.json"
          }
        },
        "description": "Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can only be deleted when there are no connection subresources.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}": {
      "put": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_CreateOrUpdate",
        "x-ms-examples": {
          "ExpressRouteConnectionCreate": {
            "$ref": "./examples/ExpressRouteConnectionCreate.json"
          }
        },
        "description": "Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection subresource."
          },
          {
            "name": "putExpressRouteConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            },
            "description": "Parameters required in an ExpressRouteConnection PUT operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_Get",
        "x-ms-examples": {
          "ExpressRouteConnectionGet": {
            "$ref": "./examples/ExpressRouteConnectionGet.json"
          }
        },
        "description": "Gets the specified ExpressRouteConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_Delete",
        "x-ms-examples": {
          "ExpressRouteConnectionDelete": {
            "$ref": "./examples/ExpressRouteConnectionDelete.json"
          }
        },
        "description": "Deletes a connection to a ExpressRoute circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection subresource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted, and the operation will continue asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections": {
      "get": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_List",
        "x-ms-examples": {
          "ExpressRouteConnectionList": {
            "$ref": "./examples/ExpressRouteConnectionList.json"
          }
        },
        "description": "Lists ExpressRouteConnections.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnectionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}": {
      "put": {
        "operationId": "NetworkVirtualApplianceConnections_CreateOrUpdate",
        "x-ms-examples": {
          "NetworkVirtualApplianceConnectionPut": {
            "$ref": "./examples/NetworkVirtualApplianceConnectionPut.json"
          }
        },
        "description": "Creates a connection to Network Virtual Appliance, if it doesn't exist else updates the existing NVA connection'",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+",
            "description": "The name of the NVA connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "NetworkVirtualApplianceConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceConnection"
            },
            "description": "Parameters supplied in an NetworkVirtualApplianceConnection PUT operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. Returns the details of the NVA connection created or updated.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceConnection"
            }
          },
          "201": {
            "description": "Create successful. Returns the details of the NVA connection created or updated.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "operationId": "NetworkVirtualApplianceConnections_Get",
        "x-ms-examples": {
          "NetworkVirtualApplianceConnectionGet": {
            "$ref": "./examples/NetworkVirtualApplianceConnectionGet.json"
          }
        },
        "description": "Retrieves the details of specified NVA connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the NVA connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the NVA connection",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "NetworkVirtualApplianceConnections_Delete",
        "x-ms-examples": {
          "NetworkVirtualApplianceConnectionDelete": {
            "$ref": "./examples/NetworkVirtualApplianceConnectionDelete.json"
          }
        },
        "description": "Deletes a NVA connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the NVA connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful.NVA Connection deleted."
          },
          "202": {
            "description": "Accepted, and the operation will continue asynchronously.",
            "headers": {
              "location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No NVA connections exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections": {
      "get": {
        "operationId": "NetworkVirtualApplianceConnections_List",
        "x-ms-examples": {
          "NetworkVirtualApplianceConnectionList": {
            "$ref": "./examples/NetworkVirtualApplianceConnectionList.json"
          }
        },
        "description": "Lists NetworkVirtualApplianceConnections under the NVA.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkVirtualApplianceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+",
            "description": "The name of the Network Virtual Appliance."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Lists all the NVA connections under an NVA.",
            "schema": {
              "$ref": "#/definitions/NetworkVirtualApplianceConnectionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}": {
      "get": {
        "operationId": "VirtualHubBgpConnection_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubBgpConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a Virtual Hub Bgp Connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the Bgp Connection retrieved.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubBgpConnection_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Put": {
            "$ref": "./examples/VirtualHubBgpConnectionPut.json"
          }
        },
        "description": "Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            },
            "description": "Parameters of Bgp connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the BgpConnection created or updated.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the BgpConnection created or updated.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubBgpConnection_Delete",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Delete": {
            "$ref": "./examples/VirtualHubBgpConnectionDelete.json"
          }
        },
        "description": "Deletes a VirtualHubBgpConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubBgpConnection."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubBgpConnection deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubBgpConnection deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubBgpConnection exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections": {
      "get": {
        "operationId": "VirtualHubBgpConnections_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubBgpConnectionList.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubBgpConnections.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubBgpConnections for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubBgpConnectionResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{hubName}/bgpConnections/{connectionName}/learnedRoutes": {
      "post": {
        "operationId": "VirtualHubBgpConnections_ListLearnedRoutes",
        "description": "Retrieves a list of routes the virtual hub bgp connection has learned.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual hub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual hub bgp connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of advertised BGP routes.",
            "schema": {
              "$ref": "#/definitions/PeerRouteList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualRouterPeerListLearnedRoutes": {
            "$ref": "./examples/VirtualRouterPeerListLearnedRoute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{hubName}/bgpConnections/{connectionName}/advertisedRoutes": {
      "post": {
        "operationId": "VirtualHubBgpConnections_ListAdvertisedRoutes",
        "description": "Retrieves a list of routes the virtual hub bgp connection is advertising to the specified peer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual hub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual hub bgp connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of learned BGP routes.",
            "schema": {
              "$ref": "#/definitions/PeerRouteList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualRouterPeerListAdvertisedRoutes": {
            "$ref": "./examples/VirtualRouterPeerListAdvertisedRoute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}": {
      "get": {
        "operationId": "VirtualHubIpConfiguration_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubIpConfigurationGet.json"
          }
        },
        "description": "Retrieves the details of a Virtual Hub Ip configuration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the Bgp Connection retrieved.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubIpConfiguration_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubIpConfigurationPut": {
            "$ref": "./examples/VirtualHubIpConfigurationPut.json"
          }
        },
        "description": "Creates a VirtualHubIpConfiguration resource if it doesn't exist else updates the existing VirtualHubIpConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            },
            "description": "Hub Ip Configuration parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the IpConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the IpConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubIpConfiguration_Delete",
        "x-ms-examples": {
          "VirtualHubIpConfigurationDelete": {
            "$ref": "./examples/VirtualHubIpConfigurationDelete.json"
          }
        },
        "description": "Deletes a VirtualHubIpConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubBgpConnection."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubIpConfiguration deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubIpConfiguration deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubIpConfiguration exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations": {
      "get": {
        "operationId": "VirtualHubIpConfiguration_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubIpConfigurationList.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubIpConfigurations.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubIpConfigurations for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubIpConfigurationResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}": {
      "put": {
        "operationId": "HubRouteTables_CreateOrUpdate",
        "x-ms-examples": {
          "RouteTablePut": {
            "$ref": "./examples/HubRouteTablePut.json"
          }
        },
        "description": "Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "routeTableParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            },
            "description": "Parameters supplied to create or update RouteTable."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteTable created or updated.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the RouteTable created or updated.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "operationId": "HubRouteTables_Get",
        "x-ms-examples": {
          "RouteTableGet": {
            "$ref": "./examples/HubRouteTableGet.json"
          }
        },
        "description": "Retrieves the details of a RouteTable.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteTable retrieved.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "HubRouteTables_Delete",
        "x-ms-examples": {
          "RouteTableDelete": {
            "$ref": "./examples/HubRouteTableDelete.json"
          }
        },
        "description": "Deletes a RouteTable.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteTable."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. RouteTable deleted."
          },
          "202": {
            "description": "Request received successfully. RouteTable deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No RouteTables exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables": {
      "get": {
        "operationId": "HubRouteTables_List",
        "x-ms-examples": {
          "RouteTableList": {
            "$ref": "./examples/HubRouteTableList.json"
          }
        },
        "description": "Retrieves the details of all RouteTables.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the RouteTables for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListHubRouteTablesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/effectiveRoutes": {
      "post": {
        "operationId": "VirtualHubs_GetEffectiveVirtualHubRoutes",
        "x-ms-examples": {
          "Effective Routes for the Virtual Hub": {
            "$ref": "./examples/EffectiveRoutesListForVirtualHub.json"
          },
          "Effective Routes for a Route Table resource": {
            "$ref": "./examples/EffectiveRoutesListForRouteTable.json"
          },
          "Effective Routes for a Connection resource": {
            "$ref": "./examples/EffectiveRoutesListForConnection.json"
          }
        },
        "description": "Gets the effective routes configured for the Virtual Hub resource or the specified resource .",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "effectiveRoutesParameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EffectiveRoutesParameters"
            },
            "description": "Parameters supplied to get the effective routes for a specific resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the list of the effective routes or follow the location header for the effective routes list.",
            "schema": {
              "$ref": "#/definitions/VirtualHubEffectiveRouteList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/inboundRoutes": {
      "post": {
        "operationId": "VirtualHubs_GetInboundRoutes",
        "x-ms-examples": {
          "Inbound Routes for the Virtual Hub on a Particular Connection": {
            "$ref": "./examples/GetInboundRoutes.json"
          }
        },
        "description": "Gets the inbound routes configured for the Virtual Hub on a particular connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "getInboundRoutesParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetInboundRoutesParameters"
            },
            "description": "Parameters supplied to get the inbound routes for a connection resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the list of the effective route map routes or follow the location header for the inbound routes list.",
            "schema": {
              "$ref": "#/definitions/EffectiveRouteMapRouteList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/outboundRoutes": {
      "post": {
        "operationId": "VirtualHubs_GetOutboundRoutes",
        "x-ms-examples": {
          "Outbound Routes for the Virtual Hub on a Particular Connection": {
            "$ref": "./examples/GetOutboundRoutes.json"
          }
        },
        "description": "Gets the outbound routes configured for the Virtual Hub on a particular connection.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "getOutboundRoutesParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOutboundRoutesParameters"
            },
            "description": "Parameters supplied to get the outbound routes for a connection resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the list of the effective route map routes or follow the location header for the outbound routes list.",
            "schema": {
              "$ref": "#/definitions/EffectiveRouteMapRouteList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}": {
      "put": {
        "operationId": "RoutingIntent_CreateOrUpdate",
        "x-ms-examples": {
          "RouteTablePut": {
            "$ref": "./examples/RoutingIntentPut.json"
          }
        },
        "description": "Creates a RoutingIntent resource if it doesn't exist else updates the existing RoutingIntent.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RoutingIntent."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routingIntentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the per VirtualHub singleton Routing Intent resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "routingIntentParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingIntent"
            },
            "description": "Parameters supplied to create or update RoutingIntent."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RoutingIntent created or updated.",
            "schema": {
              "$ref": "#/definitions/RoutingIntent"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the RoutingIntent created or updated.",
            "schema": {
              "$ref": "#/definitions/RoutingIntent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "operationId": "RoutingIntent_Get",
        "x-ms-examples": {
          "RouteTableGet": {
            "$ref": "./examples/RoutingIntentGet.json"
          }
        },
        "description": "Retrieves the details of a RoutingIntent.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RoutingIntent."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routingIntentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RoutingIntent."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RoutingIntent retrieved.",
            "schema": {
              "$ref": "#/definitions/RoutingIntent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "RoutingIntent_Delete",
        "x-ms-examples": {
          "RouteTableDelete": {
            "$ref": "./examples/RoutingIntentDelete.json"
          }
        },
        "description": "Deletes a RoutingIntent.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RoutingIntent."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routingIntentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RoutingIntent."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. RoutingIntent deleted."
          },
          "202": {
            "description": "Request received successfully. RoutingIntent deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No RoutingIntent exists by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent": {
      "get": {
        "operationId": "RoutingIntent_List",
        "x-ms-examples": {
          "RoutingIntentList": {
            "$ref": "./examples/RoutingIntentList.json"
          }
        },
        "description": "Retrieves the details of all RoutingIntent child resources of the VirtualHub.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the RoutingIntent resources for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListRoutingIntentResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/ConnectivityConfigurationNameParameter"
        }
      ],
      "get": {
        "tags": [
          "ConnectivityConfigurations"
        ],
        "operationId": "ConnectivityConfigurations_Get",
        "description": "Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name",
        "responses": {
          "200": {
            "description": "Get successful. The operation returns the specified Managed Network Connectivity Configuration resource.",
            "schema": {
              "$ref": "#/definitions/ConnectivityConfiguration"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ConnectivityConfigurationsGet": {
            "$ref": "./examples/NetworkManagerConnectivityConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConnectivityConfigurations"
        ],
        "operationId": "ConnectivityConfigurations_CreateOrUpdate",
        "description": "Creates/Updates a new network manager connectivity configuration",
        "parameters": [
          {
            "name": "connectivityConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectivityConfiguration"
            },
            "description": "Parameters supplied to create/update a network manager connectivity configuration"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network manager connectivity configuration.",
            "schema": {
              "$ref": "#/definitions/ConnectivityConfiguration"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network manager connectivity configuration.",
            "schema": {
              "$ref": "#/definitions/ConnectivityConfiguration"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ConnectivityConfigurationsPut": {
            "$ref": "./examples/NetworkManagerConnectivityConfigurationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectivityConfigurations"
        ],
        "operationId": "ConnectivityConfigurations_Delete",
        "description": "Deletes a network manager connectivity configuration, specified by the resource group, network manager name, and connectivity configuration name",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ConnectivityConfigurationsDelete": {
            "$ref": "./examples/NetworkManagerConnectivityConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations": {
      "get": {
        "tags": [
          "ConnectivityConfigurations"
        ],
        "operationId": "ConnectivityConfigurations_List",
        "description": "Lists all the network manager connectivity configuration in a specified network manager.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all network manager connectivity configuration resources in the specified network manager, in a paginated format",
            "schema": {
              "$ref": "#/definitions/ConnectivityConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ConnectivityConfigurationsList": {
            "$ref": "./examples/NetworkManagerConnectivityConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}": {
      "delete": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Delete",
        "description": "Deletes the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "200": {
            "description": "Request successful. Operation to delete was accepted."
          },
          "202": {
            "description": "Accepted. If route table not found returned synchronously, otherwise if found returned asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete route table": {
            "$ref": "./examples/RouteTableDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Get",
        "description": "Gets the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get route table": {
            "$ref": "./examples/RouteTableGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_CreateOrUpdate",
        "description": "Create or updates a route table in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteTable"
            },
            "description": "Parameters supplied to the create or update route table operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create route table": {
            "$ref": "./examples/RouteTableCreate.json"
          },
          "Create route table with route": {
            "$ref": "./examples/RouteTableCreateWithRoute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_UpdateTags",
        "description": "Updates a route table tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update route table tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update route table tags": {
            "$ref": "./examples/RouteTableUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_List",
        "description": "Gets all route tables in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of RouteTable resources.",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List route tables in resource group": {
            "$ref": "./examples/RouteTableList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_ListAll",
        "description": "Gets all route tables in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of RouteTable resources.",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all route tables": {
            "$ref": "./examples/RouteTableListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}": {
      "delete": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Delete",
        "description": "Deletes the specified route from a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Accepted."
          },
          "204": {
            "description": "Route was deleted or not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete route": {
            "$ref": "./examples/RouteTableRouteDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Get",
        "description": "Gets the specified route from a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get route": {
            "$ref": "./examples/RouteTableRouteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_CreateOrUpdate",
        "description": "Creates or updates a route in the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "name": "routeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Route"
            },
            "description": "Parameters supplied to the create or update route operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create route": {
            "$ref": "./examples/RouteTableRouteCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_List",
        "description": "Gets all routes in a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route resources.",
            "schema": {
              "$ref": "#/definitions/RouteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List routes": {
            "$ref": "./examples/RouteTableRouteList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}": {
      "delete": {
        "tags": [
          "ApplicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_Delete",
        "description": "Deletes the specified application security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete application security group": {
            "$ref": "./examples/ApplicationSecurityGroupDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ApplicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_Get",
        "description": "Gets information about the specified application security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the specified application security group resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get application security group": {
            "$ref": "./examples/ApplicationSecurityGroupGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_CreateOrUpdate",
        "description": "Creates or updates an application security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application security group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroup"
            },
            "description": "Parameters supplied to the create or update ApplicationSecurityGroup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting application security group resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroup"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting application security group resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create application security group": {
            "$ref": "./examples/ApplicationSecurityGroupCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "applicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_UpdateTags",
        "description": "Updates an application security group's tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application security group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update application security group tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationSecurityGroup resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update application security group tags": {
            "$ref": "./examples/ApplicationSecurityGroupUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups": {
      "get": {
        "tags": [
          "ApplicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_ListAll",
        "description": "Gets all application security groups in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of application security group resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List all application security groups": {
            "$ref": "./examples/ApplicationSecurityGroupListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups": {
      "get": {
        "tags": [
          "ApplicationSecurityGroups"
        ],
        "operationId": "ApplicationSecurityGroups_List",
        "description": "Gets all the application security groups in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of application security group resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationSecurityGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List load balancers in resource group": {
            "$ref": "./examples/ApplicationSecurityGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_Get",
        "description": "Gets the specified Network Manager.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the network manager.",
            "schema": {
              "$ref": "#/definitions/NetworkManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkManagersGet": {
            "$ref": "./examples/NetworkManagerGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_CreateOrUpdate",
        "description": "Creates or updates a Network Manager.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManager"
            },
            "description": "Parameters supplied to specify which network manager is."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the network manager.",
            "schema": {
              "$ref": "#/definitions/NetworkManager"
            }
          },
          "201": {
            "description": "Created - Returns information about the network manager.",
            "schema": {
              "$ref": "#/definitions/NetworkManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Put Network Manager": {
            "$ref": "./examples/NetworkManagerPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "description": "Deletes a network manager.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkManagersDelete": {
            "$ref": "./examples/NetworkManagerDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_Patch",
        "description": "Patch NetworkManager.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchObject"
            },
            "description": "Parameters supplied to specify which network manager is."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the network manager.",
            "schema": {
              "$ref": "#/definitions/NetworkManager"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkManagesPatch": {
            "$ref": "./examples/NetworkManagerPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/commit": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagerCommits_Post",
        "description": "Post a Network Manager Commit.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManagerCommit"
            },
            "description": "Parameters supplied to specify which Managed Network commit is."
          }
        ],
        "responses": {
          "200": {
            "description": "Succeed.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerCommit"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NetworkManagerCommit"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkManageCommitPost": {
            "$ref": "./examples/NetworkManagerCommitPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listDeploymentStatus": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagerDeploymentStatus_List",
        "description": "Post to List of Network Manager Deployment Status.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkManagerDeploymentStatusParameter"
            },
            "description": "Parameters supplied to specify which Managed Network deployment status is."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of deployment status.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerDeploymentStatusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkManagerDeploymentStatusList": {
            "$ref": "./examples/NetworkManagerDeploymentStatusList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagers": {
      "get": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_ListBySubscription",
        "description": "List all network managers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the network managers.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkManagersList": {
            "$ref": "./examples/NetworkManagerListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers": {
      "get": {
        "tags": [
          "NetworkManagers"
        ],
        "operationId": "NetworkManagers_List",
        "description": "List network managers in a resource group.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns a list of network managers.",
            "schema": {
              "$ref": "#/definitions/NetworkManagerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Network Manager": {
            "$ref": "./examples/NetworkManagerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}": {
      "delete": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_Delete",
        "description": "Deletes the specified Security Partner Provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "securityPartnerProviderName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Security Partner Provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Security Partner Provider": {
            "$ref": "./examples/SecurityPartnerProviderDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_Get",
        "description": "Gets the specified Security Partner Provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "securityPartnerProviderName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Security Partner Provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a SecurityPartnerProvider resource.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProvider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Security Partner Provider": {
            "$ref": "./examples/SecurityPartnerProviderGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_CreateOrUpdate",
        "description": "Creates or updates the specified Security Partner Provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "securityPartnerProviderName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Security Partner Provider."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProvider"
            },
            "description": "Parameters supplied to the create or update Security Partner Provider operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting SecurityPartnerProvider resource.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProvider"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting SecurityPartnerProvider resource.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProvider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Security Partner Provider": {
            "$ref": "./examples/SecurityPartnerProviderPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_UpdateTags",
        "description": "Updates tags of a Security Partner Provider resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "securityPartnerProviderName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Security Partner Provider."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update Security Partner Provider tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SecurityPartnerProvider resource.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProvider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Security Partner Provider Tags": {
            "$ref": "./examples/SecurityPartnerProviderUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders": {
      "get": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_ListByResourceGroup",
        "description": "Lists all Security Partner Providers in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of SecurityPartnerProvider resources.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProviderListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Security Partner Providers for a given resource group": {
            "$ref": "./examples/SecurityPartnerProviderListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders": {
      "get": {
        "tags": [
          "SecurityPartnerProviders"
        ],
        "operationId": "SecurityPartnerProviders_List",
        "description": "Gets all the Security Partner Providers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of SecurityPartnerProvider resources.",
            "schema": {
              "$ref": "#/definitions/SecurityPartnerProviderListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Security Partner Providers for a given subscription": {
            "$ref": "./examples/SecurityPartnerProviderListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_Get",
        "description": "Gets the specified network security perimeter by the name.",
        "responses": {
          "200": {
            "description": "Request is successful. Returns the resulting network security perimeter resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterGet": {
            "$ref": "./examples/NetworkSecurityPerimeterGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_CreateOrUpdate",
        "description": "Creates or updates a Network Security Perimeter.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeter"
            },
            "description": "Parameter supplied to create or update the network security perimeter."
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Updated. Returns the network security perimeter.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeter"
            }
          },
          "201": {
            "description": "Resource Created. Returns the network security perimeter.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Put Network Security Perimeter": {
            "$ref": "./examples/NetworkSecurityPerimeterPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "description": "Deletes a network security perimeter.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Delete in progress.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Azure async operation header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterDelete": {
            "$ref": "./examples/NetworkSecurityPerimeterDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_Patch",
        "description": "Patch Tags for a Network Security Perimeter.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTagsRequest"
            },
            "description": "Parameter supplied to the network security perimeter."
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. Returns the resulting network security perimeter resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Network Security Perimeter": {
            "$ref": "./examples/NetworkSecurityPerimeterPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityPerimeters": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_ListBySubscription",
        "description": "List all network security perimeters in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. Returns the list of the network security perimeters.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkSecurityPerimetersList": {
            "$ref": "./examples/NetworkSecurityPerimeterListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeters"
        ],
        "operationId": "NetworkSecurityPerimeters_List",
        "description": "List network security perimeters in a resource group.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. Returns a list of network security perimeters.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Network Security Perimeter": {
            "$ref": "./examples/NetworkSecurityPerimeterList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles/{profileName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/ProfileNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterProfiles"
        ],
        "operationId": "NetworkSecurityPerimeterProfiles_Get",
        "description": "Gets the specified NSP profile.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the NSP profile.",
            "schema": {
              "$ref": "#/definitions/NspProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspProfilesGet": {
            "$ref": "./examples/NspProfileGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeterProfiles"
        ],
        "operationId": "NetworkSecurityPerimeterProfiles_CreateOrUpdate",
        "description": "Creates or updates a network profile.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspProfile"
            },
            "description": "Parameters that hold the NspProfile resource to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Update - Profile is immutable resource. Returns the existing profile resource.",
            "schema": {
              "$ref": "#/definitions/NspProfile"
            }
          },
          "201": {
            "description": "Create - Returns the NspProfile resource created.",
            "schema": {
              "$ref": "#/definitions/NspProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspProfilesPut": {
            "$ref": "./examples/NspProfilePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterProfiles"
        ],
        "operationId": "NetworkSecurityPerimeterProfiles_Delete",
        "description": "Deletes an NSP profile.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspProfilesDelete": {
            "$ref": "./examples/NspProfileDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterProfiles"
        ],
        "operationId": "NetworkSecurityPerimeterProfiles_List",
        "description": "Lists the NSP profiles in the specified network security perimeter.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP profiles.",
            "schema": {
              "$ref": "#/definitions/NspProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspProfilesList": {
            "$ref": "./examples/NspProfileList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles/{profileName}/accessRules/{accessRuleName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/ProfileNameParameter"
        },
        {
          "$ref": "#/parameters/AccessRuleNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterAccessRules"
        ],
        "operationId": "NetworkSecurityPerimeterAccessRules_Get",
        "description": "Gets the specified NSP access rule by name.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the NSP access rule.",
            "schema": {
              "$ref": "#/definitions/NspAccessRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAccessRuleGet": {
            "$ref": "./examples/NspAccessRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeterAccessRules"
        ],
        "operationId": "NetworkSecurityPerimeterAccessRules_CreateOrUpdate",
        "description": "Creates or updates a network access rule.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspAccessRule"
            },
            "description": "Parameters that hold the NspAccessRule resource to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Existing access rule is updated. Returns the resource.",
            "schema": {
              "$ref": "#/definitions/NspAccessRule"
            }
          },
          "201": {
            "description": "Create - Returns the NspAccessRule resource created.",
            "schema": {
              "$ref": "#/definitions/NspAccessRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAccessRulePut": {
            "$ref": "./examples/NspAccessRulePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterAccessRules"
        ],
        "operationId": "NetworkSecurityPerimeterAccessRules_Delete",
        "description": "Deletes an NSP access rule.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAccessRulesDelete": {
            "$ref": "./examples/NspAccessRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles/{profileName}/accessRules": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterAccessRules"
        ],
        "operationId": "NetworkSecurityPerimeterAccessRules_List",
        "description": "Lists the NSP access rules in the specified NSP profile.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP access rules.",
            "schema": {
              "$ref": "#/definitions/NspAccessRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAccessRulesList": {
            "$ref": "./examples/NspAccessRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/resourceAssociations/{associationName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/AssociationNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterAssociations"
        ],
        "operationId": "NetworkSecurityPerimeterAssociations_Get",
        "description": "Gets the specified NSP association by name.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the NSP resource association.",
            "schema": {
              "$ref": "#/definitions/NspAssociation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAssociationGet": {
            "$ref": "./examples/NspAssociationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeterAssociations"
        ],
        "operationId": "NetworkSecurityPerimeterAssociations_CreateOrUpdate",
        "description": "Creates or updates a NSP resource association.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspAssociation"
            },
            "description": "Parameters that hold the NspAssociation resource to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Existing resource association is updated. Returns the resource.",
            "schema": {
              "$ref": "#/definitions/NspAssociation"
            }
          },
          "201": {
            "description": "Create - Returns the NspAssociation resource created.",
            "schema": {
              "$ref": "#/definitions/NspAssociation"
            }
          },
          "202": {
            "description": "Accepted - Returns the NspAssociation resource created.",
            "schema": {
              "$ref": "#/definitions/NspAssociation"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Azure async operation header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NspAssociationPut": {
            "$ref": "./examples/NspAssociationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterAssociations"
        ],
        "operationId": "NetworkSecurityPerimeterAssociations_Delete",
        "description": "Deletes an NSP association resource.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Delete in progress.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Azure async operation header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NspAssociationDelete": {
            "$ref": "./examples/NspAssociationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/resourceAssociations": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterAssociations"
        ],
        "operationId": "NetworkSecurityPerimeterAssociations_List",
        "description": "Lists the NSP resource associations.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP resource associations.",
            "schema": {
              "$ref": "#/definitions/NspAssociationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAssociationList": {
            "$ref": "./examples/NspAssociationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/resourceAssociations/{associationName}/reconcile": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/AssociationNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkSecurityPerimeterAssociations"
        ],
        "operationId": "NetworkSecurityPerimeterAssociations_Reconcile",
        "description": "Reconcile NSP association",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspAssociationReconcile"
            },
            "description": "Parameters for NSP association reconcile"
          }
        ],
        "responses": {
          "200": {
            "description": "Reconcile NSP association.",
            "schema": {
              "$ref": "#/definitions/NspAssociationReconcile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAssociationReconcile": {
            "$ref": "./examples/NspAssociationReconcile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/perimeterAssociableResourceTypes": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterAssociableResourceTypes"
        ],
        "operationId": "NetworkSecurityPerimeterAssociableResourceTypes_List",
        "description": "Gets the list of resources that are onboarded with NSP. These resources can be associated with a network security perimeter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the list of resources that are onboarded with network security perimeter feature.",
            "schema": {
              "$ref": "#/definitions/PerimeterAssociableResourcesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterAssociableResourceTypes": {
            "$ref": "./examples/PerimeterAssociableResourcesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles/{profileName}/accessRules/{accessRuleName}/reconcile": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/ProfileNameParameter"
        },
        {
          "$ref": "#/parameters/AccessRuleNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "NetworkSecurityPerimeterAccessRules"
        ],
        "operationId": "NetworkSecurityPerimeterAccessRules_Reconcile",
        "description": "Reconcile NSP access rules",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspAccessRuleReconcile"
            },
            "description": "Parameters for NSP access rule reconcile"
          }
        ],
        "responses": {
          "200": {
            "description": "Reconcile NSP access rule.",
            "schema": {
              "$ref": "#/definitions/NspAccessRuleReconcile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspAccessRuleReconcile": {
            "$ref": "./examples/NspAccessRuleReconcile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/links/{linkName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/LinkNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLinks"
        ],
        "operationId": "NetworkSecurityPerimeterLinks_Get",
        "description": "Gets the specified NSP link resource.",
        "responses": {
          "200": {
            "description": "OK - Returns NSP link resource.",
            "schema": {
              "$ref": "#/definitions/NspLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLinksGet": {
            "$ref": "./examples/NspLinkGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeterLinks"
        ],
        "operationId": "NetworkSecurityPerimeterLinks_CreateOrUpdate",
        "description": "Creates or updates NSP link resource.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspLink"
            },
            "description": "Parameters that hold the NspLink resource to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Existing NspLink resource is updated. Returns the resource.",
            "schema": {
              "$ref": "#/definitions/NspLink"
            }
          },
          "201": {
            "description": "Create - Returns the NspLink resource created.",
            "schema": {
              "$ref": "#/definitions/NspLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLinksPut": {
            "$ref": "./examples/NspLinkPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterLinks"
        ],
        "operationId": "NetworkSecurityPerimeterLinks_Delete",
        "description": "Deletes an NSP Link resource.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Delete in progress.",
            "headers": {
              "location": {
                "description": "location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NspLinkDelete": {
            "$ref": "./examples/NspLinkDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/links": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLinks"
        ],
        "operationId": "NetworkSecurityPerimeterLinks_List",
        "description": "Lists the NSP Link resources in the specified network security perimeter.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP link resources.",
            "schema": {
              "$ref": "#/definitions/NspLinkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLinkList": {
            "$ref": "./examples/NspLinkList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/linkReferences/{linkReferenceName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/LinkReferenceNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLinkReferences"
        ],
        "operationId": "NetworkSecurityPerimeterLinkReferences_Get",
        "description": "Gets the specified NSP linkReference resource.",
        "responses": {
          "200": {
            "description": "OK - Returns the NSP linkReference resource.",
            "schema": {
              "$ref": "#/definitions/NspLinkReference"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLinkReferencesGet": {
            "$ref": "./examples/NspLinkReferenceGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterLinkReferences"
        ],
        "operationId": "NetworkSecurityPerimeterLinkReferences_Delete",
        "description": "Deletes an NSP LinkReference resource.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Delete in progress.",
            "headers": {
              "location": {
                "description": "location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NspLinkReferenceDelete": {
            "$ref": "./examples/NspLinkReferenceDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/linkReferences": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLinkReferences"
        ],
        "operationId": "NetworkSecurityPerimeterLinkReferences_List",
        "description": "Lists the NSP LinkReference resources in the specified network security perimeter.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP linkReference resources.",
            "schema": {
              "$ref": "#/definitions/NspLinkReferenceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLinkReferenceList": {
            "$ref": "./examples/NspLinkReferenceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/loggingConfigurations/{loggingConfigurationName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "#/parameters/LoggingConfigurationNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLoggingConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterLoggingConfigurations_Get",
        "description": "Gets the NSP logging configuration.",
        "responses": {
          "200": {
            "description": "OK - Returns NSP logging configuration.",
            "schema": {
              "$ref": "#/definitions/NspLoggingConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLoggingConfigurationGet": {
            "$ref": "./examples/NspLoggingConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityPerimeterLoggingConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterLoggingConfigurations_CreateOrUpdate",
        "description": "Creates or updates NSP logging configuration.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NspLoggingConfiguration"
            },
            "description": "Parameters that hold the NspLoggingConfiguration to be created/updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Existing NspLoggingConfiguration is updated. Returns the logging configuration.",
            "schema": {
              "$ref": "#/definitions/NspLoggingConfiguration"
            }
          },
          "201": {
            "description": "Create - Returns the NspLoggingConfiguration resource created.",
            "schema": {
              "$ref": "#/definitions/NspLoggingConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLoggingConfigurationPut": {
            "$ref": "./examples/NspLoggingConfigurationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkSecurityPerimeterLoggingConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterLoggingConfigurations_Delete",
        "description": "Deletes an NSP Logging configuration.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The logging configuration does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLoggingConfigurationDelete": {
            "$ref": "./examples/NspLoggingConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/loggingConfigurations": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkSecurityPerimeterNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterLoggingConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterLoggingConfigurations_List",
        "description": "Lists the NSP logging configuration.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "responses": {
          "200": {
            "description": "OK - Returns the list of NSP logging configuration.",
            "schema": {
              "$ref": "#/definitions/NspLoggingConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspLoggingConfigurationList": {
            "$ref": "./examples/NspLoggingConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/networkSecurityPerimeterOperationStatuses/{operationId}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/LocationParameter"
        },
        {
          "$ref": "#/parameters/OperationIdParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkSecurityPerimeterOperationStatuses"
        ],
        "operationId": "NetworkSecurityPerimeterOperationStatuses_Get",
        "description": "Gets the operation status for the given operation id.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the Nsp operation.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NspOperationStatusGet": {
            "$ref": "./examples/NspOperationStatusGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTags": {
      "get": {
        "operationId": "ServiceTags_List",
        "description": "Gets a list of service tag information resources.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location that will be used as a reference for version (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to)."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns a list of service tag information resources.",
            "schema": {
              "$ref": "#/definitions/ServiceTagsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get list of service tags": {
            "$ref": "./examples/ServiceTagsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTagDetails": {
      "get": {
        "operationId": "ServiceTagInformation_List",
        "description": "Gets a list of service tag information resources with pagination.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location that will be used as a reference for cloud (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to)."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "noAddressPrefixes",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Do not return address prefixes for the tag(s)."
          },
          {
            "name": "tagName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return tag information for a particular tag."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns a list of service tag information resources.",
            "schema": {
              "$ref": "#/definitions/ServiceTagInformationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get list of service tags": {
            "$ref": "./examples/ServiceTagInformationListResult.json"
          },
          "Get list of service tags with no address prefixes": {
            "$ref": "./examples/ServiceTagInformationListResultWithNoAddressPrefixes.json"
          },
          "Get list of service tags with tag name.": {
            "$ref": "./examples/ServiceTagInformationListResultWithTagname.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkGroupNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "NetworkGroups"
        ],
        "operationId": "NetworkGroups_Get",
        "description": "Gets the specified network group.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the network group.",
            "schema": {
              "$ref": "#/definitions/NetworkGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkGroupsGet": {
            "$ref": "./examples/NetworkManagerGroupGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkGroups"
        ],
        "operationId": "NetworkGroups_CreateOrUpdate",
        "description": "Creates or updates a network group.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkGroup"
            },
            "description": "Parameters supplied to the specify which network group need to create"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the network group.",
            "schema": {
              "$ref": "#/definitions/NetworkGroup"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag.",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created - Returns information about the network group.",
            "schema": {
              "$ref": "#/definitions/NetworkGroup"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkGroupsPut": {
            "$ref": "./examples/NetworkManagerGroupPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkGroups"
        ],
        "operationId": "NetworkGroups_Delete",
        "description": "Deletes a network group.",
        "parameters": [
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "202": {
            "description": "Accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkGroupsDelete": {
            "$ref": "./examples/NetworkManagerGroupDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups": {
      "get": {
        "tags": [
          "NetworkGroups"
        ],
        "operationId": "NetworkGroups_List",
        "description": "Lists the specified network group.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the network group.",
            "schema": {
              "$ref": "#/definitions/NetworkGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkGroupsList": {
            "$ref": "./examples/NetworkManagerGroupList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkGroupNameParameter"
        },
        {
          "$ref": "#/parameters/StaticMemberNameParameter"
        },
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "StaticMembers"
        ],
        "operationId": "StaticMembers_Get",
        "description": "Gets the specified static member.",
        "responses": {
          "200": {
            "description": "OK - Returns information about the static member.",
            "schema": {
              "$ref": "#/definitions/StaticMember"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StaticMembersGet": {
            "$ref": "./examples/NetworkManagerStaticMemberGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticMembers"
        ],
        "operationId": "StaticMembers_CreateOrUpdate",
        "description": "Creates or updates a static member.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticMember"
            },
            "description": "Parameters supplied to the specify the static member to create"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the static member.",
            "schema": {
              "$ref": "#/definitions/StaticMember"
            }
          },
          "201": {
            "description": "Created - Returns information about the static member.",
            "schema": {
              "$ref": "#/definitions/StaticMember"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StaticMemberPut": {
            "$ref": "./examples/NetworkManagerStaticMemberPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StaticMembers"
        ],
        "operationId": "StaticMembers_Delete",
        "description": "Deletes a static member.",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StaticMembersDelete": {
            "$ref": "./examples/NetworkManagerStaticMemberDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers": {
      "get": {
        "tags": [
          "StaticMembers"
        ],
        "operationId": "StaticMembers_List",
        "description": "Lists the specified static member.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the static member.",
            "schema": {
              "$ref": "#/definitions/StaticMemberListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StaticMembersList": {
            "$ref": "./examples/NetworkManagerStaticMemberList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}": {
      "delete": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_Delete",
        "description": "Deletes the specified DDoS protection plan.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosProtectionPlanName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS protection plan."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete DDoS protection plan": {
            "$ref": "./examples/DdosProtectionPlanDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_Get",
        "description": "Gets information about the specified DDoS protection plan.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosProtectionPlanName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS protection plan."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the specified DDoS protection plan resource.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DDoS protection plan": {
            "$ref": "./examples/DdosProtectionPlanGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_CreateOrUpdate",
        "description": "Creates or updates a DDoS protection plan.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosProtectionPlanName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS protection plan."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlan"
            },
            "description": "Parameters supplied to the create or update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting DDoS protection plan resource.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlan"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting DDoS protection plan resource.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create DDoS protection plan": {
            "$ref": "./examples/DdosProtectionPlanCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_UpdateTags",
        "description": "Update a DDoS protection plan tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ddosProtectionPlanName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the DDoS protection plan."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the update DDoS protection plan resource tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting DDoS protection plan resource.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DDoS protection plan Update tags": {
            "$ref": "./examples/DdosProtectionPlanUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans": {
      "get": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_List",
        "description": "Gets all DDoS protection plans in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of DDoS protection plan resources.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlanListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List all DDoS protection plans": {
            "$ref": "./examples/DdosProtectionPlanListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans": {
      "get": {
        "tags": [
          "DdosProtectionPlans"
        ],
        "operationId": "DdosProtectionPlans_ListByResourceGroup",
        "description": "Gets all the DDoS protection plans in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of DDoS protection plan resources.",
            "schema": {
              "$ref": "#/definitions/DdosProtectionPlanListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DDoS protection plans in resource group": {
            "$ref": "./examples/DdosProtectionPlanList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}": {
      "delete": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_Delete",
        "description": "Deletes the specified public IP address.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP address."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete public IP address": {
            "$ref": "./examples/PublicIpAddressDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_Get",
        "description": "Gets the specified public IP address in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP address."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get public IP address": {
            "$ref": "./examples/PublicIpAddressGet.json"
          },
          "Get public IP address with StandardV2 sku": {
            "$ref": "./examples/PublicIpAddressGetStandardV2Sku.json"
          }
        }
      },
      "put": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_CreateOrUpdate",
        "description": "Creates or updates a static or dynamic public IP address.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP address."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            },
            "description": "Parameters supplied to the create or update public IP address operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create public IP address defaults": {
            "$ref": "./examples/PublicIpAddressCreateDefaults.json"
          },
          "Create public IP address allocation method": {
            "$ref": "./examples/PublicIpAddressCreateCustomizedValues.json"
          },
          "Create public IP address DNS": {
            "$ref": "./examples/PublicIpAddressCreateDns.json"
          },
          "Create public IP address DNS with Domain Name Label Scope": {
            "$ref": "./examples/PublicIpAddressCreateDnsWithDomainNameLabelScope.json"
          },
          "Create public IP address defaults with StandardV2 Sku": {
            "$ref": "./examples/PublicIpAddressCreateDefaultsStandardV2Sku.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_UpdateTags",
        "description": "Updates public IP address tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP address."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update public IP address tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting PublicIPAddress resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update public IP address tags": {
            "$ref": "./examples/PublicIpAddressUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses": {
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_ListAll",
        "description": "Gets all the public IP addresses in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPAddress resources.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all public IP addresses": {
            "$ref": "./examples/PublicIpAddressListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses": {
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_List",
        "description": "Gets all public IP addresses in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPAddress resources.",
            "schema": {
              "$ref": "#/definitions/PublicIPAddressListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List resource group public IP addresses": {
            "$ref": "./examples/PublicIpAddressList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}/ddosProtectionStatus": {
      "post": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_DdosProtectionStatus",
        "description": "Gets the Ddos Protection Status of a Public IP Address",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP address."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the Ddos Protection Status of this Public IP.",
            "schema": {
              "$ref": "#/definitions/PublicIpDdosProtectionStatusResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Get Ddos Protection Status of a Public IP Address": {
            "$ref": "./examples/PublicIpAddressGetDdosProtectionStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}": {
      "delete": {
        "tags": [
          "VirtualRouters"
        ],
        "operationId": "VirtualRouters_Delete",
        "description": "Deletes the specified Virtual Router.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Delete VirtualRouter": {
            "$ref": "./examples/VirtualRouterDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualRouters"
        ],
        "operationId": "VirtualRouters_Get",
        "description": "Gets the specified Virtual Router.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Virtual Router resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get VirtualRouter": {
            "$ref": "./examples/VirtualRouterGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualRouters"
        ],
        "operationId": "VirtualRouters_CreateOrUpdate",
        "description": "Creates or updates the specified Virtual Router.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualRouter"
            },
            "description": "Parameters supplied to the create or update Virtual Router."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting Virtual Router resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouter"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting Virtual Router resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Create VirtualRouter": {
            "$ref": "./examples/VirtualRouterPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters": {
      "get": {
        "tags": [
          "VirtualRouters"
        ],
        "operationId": "VirtualRouters_ListByResourceGroup",
        "description": "Lists all Virtual Routers in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Virtual Router resources.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List all Virtual Router for a given resource group": {
            "$ref": "./examples/VirtualRouterListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters": {
      "get": {
        "tags": [
          "VirtualRouters"
        ],
        "operationId": "VirtualRouters_List",
        "description": "Gets all the Virtual Routers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Virtual Router resources.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List all Virtual Routers for a given subscription": {
            "$ref": "./examples/VirtualRouterListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}": {
      "delete": {
        "tags": [
          "VirtualRouterPeerings"
        ],
        "operationId": "VirtualRouterPeerings_Delete",
        "description": "Deletes the specified peering from a Virtual Router.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Delete VirtualRouterPeering": {
            "$ref": "./examples/VirtualRouterPeeringDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualRouterPeerings"
        ],
        "operationId": "VirtualRouterPeerings_Get",
        "description": "Gets the specified Virtual Router Peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router Peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Virtual Router Peering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Get Virtual Router Peering": {
            "$ref": "./examples/VirtualRouterPeeringGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualRouterPeerings"
        ],
        "operationId": "VirtualRouterPeerings_CreateOrUpdate",
        "description": "Creates or updates the specified Virtual Router Peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router Peering."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualRouterPeering"
            },
            "description": "Parameters supplied to the create or update Virtual Router Peering operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting Virtual Router Peering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterPeering"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting Virtual Router Peering resource.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Create Virtual Router Peering": {
            "$ref": "./examples/VirtualRouterPeeringPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings": {
      "get": {
        "tags": [
          "VirtualRouterPeerings"
        ],
        "operationId": "VirtualRouterPeerings_List",
        "description": "Lists all Virtual Router Peerings in a Virtual Router resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualRouterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Virtual Router."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of Virtual Router Peering resources.",
            "schema": {
              "$ref": "#/definitions/VirtualRouterPeeringListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "List all Virtual Router Peerings for a given Virtual Router": {
            "$ref": "./examples/VirtualRouterPeeringList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Network/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "Lists all of the available Network Rest API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of operations for a resource provider": {
            "$ref": "./examples/OperationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}": {
      "delete": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_Delete",
        "description": "Deletes the specified IpAllocation.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipAllocationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IpAllocation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete IpAllocation": {
            "$ref": "./examples/IpAllocationDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_Get",
        "description": "Gets the specified IpAllocation by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipAllocationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IpAllocation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting IpAllocation resource.",
            "schema": {
              "$ref": "#/definitions/IpAllocation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get IpAllocation": {
            "$ref": "./examples/IpAllocationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_CreateOrUpdate",
        "description": "Creates or updates an IpAllocation in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipAllocationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IpAllocation."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpAllocation"
            },
            "description": "Parameters supplied to the create or update virtual network operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting IpAllocation resource.",
            "schema": {
              "$ref": "#/definitions/IpAllocation"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting IpAllocation resource.",
            "schema": {
              "$ref": "#/definitions/IpAllocation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create IpAllocation": {
            "$ref": "./examples/IpAllocationCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_UpdateTags",
        "description": "Updates a IpAllocation tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "ipAllocationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the IpAllocation."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update IpAllocation tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting IpAllocation resource.",
            "schema": {
              "$ref": "#/definitions/IpAllocation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update virtual network tags": {
            "$ref": "./examples/IpAllocationUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations": {
      "get": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_List",
        "description": "Gets all IpAllocations in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of IpAllocation resources.",
            "schema": {
              "$ref": "#/definitions/IpAllocationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all IpAllocations": {
            "$ref": "./examples/IpAllocationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations": {
      "get": {
        "tags": [
          "IpAllocations"
        ],
        "operationId": "IpAllocations_ListByResourceGroup",
        "description": "Gets all IpAllocations in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of IpAllocation resources.",
            "schema": {
              "$ref": "#/definitions/IpAllocationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List IpAllocations in resource group": {
            "$ref": "./examples/IpAllocationListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}": {
      "delete": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_Delete",
        "description": "Deletes the specified network profile.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkProfileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the NetworkProfile."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete network profile": {
            "$ref": "./examples/NetworkProfileDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_Get",
        "description": "Gets the specified network profile in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkProfileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP prefix."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkProfile resource.",
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get network profile": {
            "$ref": "./examples/NetworkProfileGetConfigOnly.json"
          },
          "Get network profile with container network interfaces": {
            "$ref": "./examples/NetworkProfileGetWithContainerNic.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_CreateOrUpdate",
        "description": "Creates or updates a network profile.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkProfileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network profile."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            },
            "description": "Parameters supplied to the create or update network profile operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting NetworkProfile resource.",
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkProfile resource.",
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network profile defaults": {
            "$ref": "./examples/NetworkProfileCreateConfigOnly.json"
          }
        },
        "x-ms-long-running-operation": false
      },
      "patch": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_UpdateTags",
        "description": "Updates network profile tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkProfileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network profile."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network profile tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkProfile resource.",
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update network profile tags": {
            "$ref": "./examples/NetworkProfileUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles": {
      "get": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_ListAll",
        "description": "Gets all the network profiles in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkProfile resources.",
            "schema": {
              "$ref": "#/definitions/NetworkProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all network profiles": {
            "$ref": "./examples/NetworkProfileListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles": {
      "get": {
        "tags": [
          "NetworkProfiles"
        ],
        "operationId": "NetworkProfiles_List",
        "description": "Gets all network profiles in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkProfile resources.",
            "schema": {
              "$ref": "#/definitions/NetworkProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List resource group network profiles": {
            "$ref": "./examples/NetworkProfileList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}": {
      "delete": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_Delete",
        "description": "Deletes the specified public IP prefix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PublicIpPrefix."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete public IP prefix": {
            "$ref": "./examples/PublicIpPrefixDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_Get",
        "description": "Gets the specified public IP prefix in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP prefix."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting PublicIPPrefix resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get public IP prefix": {
            "$ref": "./examples/PublicIpPrefixGet.json"
          },
          "Get public IP prefix with StandardV2 sku": {
            "$ref": "./examples/PublicIpPrefixGetStandardV2Sku.json"
          }
        }
      },
      "put": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_CreateOrUpdate",
        "description": "Creates or updates a static or dynamic public IP prefix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP prefix."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicIPPrefix"
            },
            "description": "Parameters supplied to the create or update public IP prefix operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting PublicIPPrefix resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefix"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting PublicIPPrefix resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create public IP prefix defaults": {
            "$ref": "./examples/PublicIpPrefixCreateDefaults.json"
          },
          "Create public IP prefix allocation method": {
            "$ref": "./examples/PublicIpPrefixCreateCustomizedValues.json"
          },
          "Create public IP prefix defaults with StandardV2 Sku": {
            "$ref": "./examples/PublicIpPrefixCreateDefaultsStandardV2Sku.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_UpdateTags",
        "description": "Updates public IP prefix tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpPrefixName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the public IP prefix."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update public IP prefix tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting PublicIPPrefix resource.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update public IP prefix tags": {
            "$ref": "./examples/PublicIpPrefixUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPPrefixes": {
      "get": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_ListAll",
        "description": "Gets all the public IP prefixes in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPPrefix resources.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefixListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all public IP prefixes": {
            "$ref": "./examples/PublicIpPrefixListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes": {
      "get": {
        "tags": [
          "PublicIPPrefixes"
        ],
        "operationId": "PublicIPPrefixes_List",
        "description": "Gets all public IP prefixes in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of PublicIPPrefix resources.",
            "schema": {
              "$ref": "#/definitions/PublicIPPrefixListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List resource group public IP prefixes": {
            "$ref": "./examples/PublicIpPrefixList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/applicationGatewayWafDynamicManifests/dafault": {
      "get": {
        "operationId": "ApplicationGatewayWafDynamicManifestsDefault_Get",
        "description": "Gets the regional application gateway waf manifest.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The region where the nrp are located at."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the regional application gateway waf manifest",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayWafDynamicManifestResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets WAF default manifest": {
            "$ref": "./examples/GetApplicationGatewayWafDynamicManifestsDefault.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/applicationGatewayWafDynamicManifests": {
      "get": {
        "operationId": "ApplicationGatewayWafDynamicManifests_Get",
        "description": "Gets the regional application gateway waf manifest.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The region where the nrp are located at."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the regional application gateway waf manifest",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayWafDynamicManifestResultList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets WAF manifests": {
            "$ref": "./examples/GetApplicationGatewayWafDynamicManifests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "NetworkManagerRoutingConfigurationParameter": {
      "name": "configurationName",
      "in": "path",
      "description": "The name of the network manager Routing Configuration.",
      "pattern": "^[a-zA-Z0-9_.-]*$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RuleCollectionParameter": {
      "name": "ruleCollectionName",
      "in": "path",
      "description": "The name of the network manager security Configuration rule collection.",
      "pattern": "^[a-zA-Z0-9_.-]*$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NetworkManagerRoutingConfigurationsRuleParameter": {
      "name": "ruleName",
      "in": "path",
      "description": "The name of the rule.",
      "pattern": "^[a-zA-Z0-9_.-]*$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NetworkManagerNameParameter": {
      "name": "networkManagerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network manager.",
      "x-ms-parameter-location": "method"
    },
    "ListTopParameter": {
      "name": "$top",
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 20,
      "x-ms-parameter-location": "method"
    },
    "ListSkipTokenParameter": {
      "name": "$skipToken",
      "description": "SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ForceDeleteParameter": {
      "name": "force",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete.",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "BastionShareableLinkRequest": {
      "name": "bslRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/BastionShareableLinkListRequest"
      },
      "description": "Post request for Create/Delete/Get Bastion Shareable Link endpoints.",
      "x-ms-parameter-location": "method"
    },
    "BastionShareableLinkTokenRequest": {
      "name": "bslTokenRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/BastionShareableLinkTokenListRequest"
      },
      "description": "Post request for Delete Bastion Shareable Link By Token endpoint.",
      "x-ms-parameter-location": "method"
    },
    "BastionHostName": {
      "name": "bastionHostName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Bastion Host.",
      "x-ms-parameter-location": "method"
    },
    "SessionIdsParameters": {
      "name": "sessionIds",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SessionIds"
      },
      "description": "The list of sessionids to disconnect.",
      "x-ms-parameter-location": "method"
    },
    "SecurityConfigurationParameter": {
      "name": "configurationName",
      "in": "path",
      "description": "The name of the network manager Security Configuration.",
      "pattern": "^[a-zA-Z0-9_.-]*$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SecurityConfigurationsRuleParameter": {
      "name": "ruleName",
      "in": "path",
      "description": "The name of the rule.",
      "pattern": "^[a-zA-Z0-9_.-]*$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The management group Id which uniquely identify the Microsoft Azure management group.",
      "x-ms-parameter-location": "method"
    },
    "NetworkManagerConnectionNameParameter": {
      "name": "networkManagerConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name for the network manager connection.",
      "x-ms-parameter-location": "method"
    },
    "ScopeConnectionName": {
      "name": "scopeConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name for the cross-tenant connection.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ApiVersionVmssParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "2017-03-30"
      ],
      "x-ms-enum": {
        "name": "ApiVersion",
        "modelAsString": true
      },
      "description": "Client API version."
    },
    "VirtualNetworkNameParameter": {
      "name": "virtualNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the virtual network.",
      "x-ms-parameter-location": "method"
    },
    "ConnectivityConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network manager connectivity configuration.",
      "x-ms-parameter-location": "method"
    },
    "OperationResultIdParameter": {
      "name": "operationResultId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id of operation Result.",
      "x-ms-parameter-location": "method"
    },
    "NetworkSecurityPerimeterNameParameter": {
      "name": "networkSecurityPerimeterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network security perimeter.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "ProfileNameParameter": {
      "name": "profileName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP profile.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "AccessRuleNameParameter": {
      "name": "accessRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP access rule.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "AssociationNameParameter": {
      "name": "associationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP association.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "LinkNameParameter": {
      "name": "linkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP link.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "LinkReferenceNameParameter": {
      "name": "linkReferenceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP linkReference.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "NetworkSecurityPerimeterProfileParameter": {
      "name": "networkSecurityPerimeterProfile",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network security perimeter profile.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "LoggingConfigurationNameParameter": {
      "name": "loggingConfigurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the NSP logging configuration. Accepts 'instance' as name.",
      "x-ms-parameter-location": "method",
      "pattern": "(^[a-zA-Z0-9]+[a-zA-Z0-9_.-]*[a-zA-Z0-9_]+$)|(^[a-zA-Z0-9]$)",
      "maxLength": 80
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "NetworkGroupNameParameter": {
      "name": "networkGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network group.",
      "x-ms-parameter-location": "method"
    },
    "StaticMemberNameParameter": {
      "name": "staticMemberName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the static member.",
      "x-ms-parameter-location": "method"
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ExpressRouteProviderPortProperties": {
      "type": "object",
      "properties": {
        "portPairDescriptor": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the port pair."
        },
        "primaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the primary port."
        },
        "secondaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the secondary port."
        },
        "peeringLocation": {
          "type": "string",
          "description": "The peering location of the port pair."
        },
        "overprovisionFactor": {
          "type": "integer",
          "format": "int32",
          "description": "Overprovisioning factor for the port pair."
        },
        "portBandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Bandwidth of the port in Mbps"
        },
        "usedBandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Used Bandwidth of the port in Mbps"
        },
        "remainingBandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Remaining Bandwidth of the port in Mbps"
        }
      },
      "description": "Properties of ExpressRouteProviderPort."
    },
    "ExpressRouteProviderPort": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteProviderPortProperties",
          "description": "Properties of the express route Service Provider Port."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteProviderPort resource."
    },
    "ExpressRouteProviderPortListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteProviderPort"
          },
          "description": "A list of ExpressRouteProviderPort resources."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteProviderPort API service call."
    },
    "GatewayLoadBalancerTunnelInterface": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port of gateway load balancer tunnel interface."
        },
        "identifier": {
          "type": "integer",
          "format": "int32",
          "description": "Identifier of gateway load balancer tunnel interface."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol of gateway load balancer tunnel interface.",
          "enum": [
            "None",
            "Native",
            "VXLAN"
          ],
          "x-ms-enum": {
            "name": "GatewayLoadBalancerTunnelProtocol",
            "modelAsString": true
          }
        },
        "type": {
          "type": "string",
          "description": "Traffic type of gateway load balancer tunnel interface.",
          "enum": [
            "None",
            "Internal",
            "External"
          ],
          "x-ms-enum": {
            "name": "GatewayLoadBalancerTunnelInterfaceType",
            "modelAsString": true
          }
        }
      },
      "description": "Gateway load balancer tunnel interface of a load balancer backend address pool."
    },
    "LoadBalancerSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a load balancer SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Gateway"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerSkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of a load balancer SKU.",
          "enum": [
            "Regional",
            "Global"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of a load balancer."
    },
    "FrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "inboundNatRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to inbound rules that use this frontend IP."
        },
        "inboundNatPools": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to inbound pools that use this frontend IP."
        },
        "outboundRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to outbound rules that use this frontend IP."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to load balancing rules that use this frontend IP."
        },
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The Private IP allocation method."
        },
        "privateIPAddressVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4."
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
          "description": "The reference to the Public IP resource."
        },
        "publicIPPrefix": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the Public IP Prefix resource."
        },
        "gatewayLoadBalancer": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to gateway load balancer frontend IP."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend IP configuration resource."
        }
      },
      "description": "Properties of Frontend IP Configuration of the load balancer."
    },
    "FrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FrontendIPConfigurationPropertiesFormat",
          "description": "Properties of the load balancer probe."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP address of the load balancer."
    },
    "LoadBalancerBackendAddressPropertiesFormat": {
      "properties": {
        "virtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to an existing virtual network."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to an existing subnet."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP Address belonging to the referenced virtual network.",
          "x-ms-azure-resource": false
        },
        "networkInterfaceIPConfiguration": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to IP address defined in network interfaces."
        },
        "loadBalancerFrontendIPConfiguration": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the frontend ip address configuration defined in regional loadbalancer."
        },
        "inboundNatRulesPortMapping": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NatRulePortMapping"
          },
          "description": "Collection of inbound NAT rule port mappings."
        },
        "adminState": {
          "type": "string",
          "description": "A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.",
          "enum": [
            "None",
            "Up",
            "Down"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerBackendAddressAdminState",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of the load balancer backend addresses."
    },
    "LoadBalancerBackendAddress": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancerBackendAddressPropertiesFormat",
          "description": "Properties of load balancer backend address pool."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend address."
        }
      },
      "description": "Load balancer backend addresses."
    },
    "BackendAddressPoolPropertiesFormat": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the backend address pool."
        },
        "tunnelInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayLoadBalancerTunnelInterface"
          },
          "description": "An array of gateway load balancer tunnel interfaces."
        },
        "loadBalancerBackendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancerBackendAddress"
          },
          "description": "An array of backend addresses."
        },
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "An array of references to IP addresses defined in network interfaces."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to load balancing rules that use this backend address pool."
        },
        "outboundRule": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to an outbound rule that uses this backend address pool."
        },
        "outboundRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to outbound rules that use this backend address pool."
        },
        "inboundNatRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to inbound NAT rules that use this backend address pool."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend address pool resource."
        },
        "drainPeriodInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address."
        },
        "virtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to a virtual network."
        },
        "syncMode": {
          "type": "string",
          "description": "Backend address synchronous mode for the backend pool",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "SyncMode",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of the backend address pool."
    },
    "BackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendAddressPoolPropertiesFormat",
          "description": "Properties of load balancer backend address pool."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Pool of backend IP addresses."
    },
    "LoadBalancingRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs."
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to pool of DIPs."
        },
        "probe": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the load balancer probe used by the load balancing rule."
        },
        "protocol": {
          "$ref": "#/definitions/TransportProtocol",
          "description": "The reference to the transport protocol used by the load balancing rule."
        },
        "loadDistribution": {
          "type": "string",
          "description": "The load distribution policy for this rule.",
          "enum": [
            "Default",
            "SourceIP",
            "SourceIPProtocol"
          ],
          "x-ms-enum": {
            "name": "LoadDistribution",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\"."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \"Any Port\"."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "enableTcpReset": {
          "type": "boolean",
          "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."
        },
        "disableOutboundSnat": {
          "type": "boolean",
          "description": "Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule."
        },
        "enableConnectionTracking": {
          "type": "boolean",
          "description": "Defines whether connections between 2 communicating endpoints can be tracked and associated to the same backend VM over its lifetime when using UDP protocol."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the load balancing rule resource."
        }
      },
      "required": [
        "protocol",
        "frontendPort"
      ],
      "description": "Properties of the load balancer."
    },
    "LoadBalancingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancingRulePropertiesFormat",
          "description": "Properties of load balancer load balancing rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "A load balancing rule for a load balancer."
    },
    "ProbePropertiesFormat": {
      "properties": {
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The load balancer rules that use this probe."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.",
          "enum": [
            "Http",
            "Tcp",
            "Https"
          ],
          "x-ms-enum": {
            "name": "ProbeProtocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port for communicating the probe. Possible values range from 1 to 65535, inclusive."
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5."
        },
        "noHealthyBackendsBehavior": {
          "type": "string",
          "description": "Determines how new connections are handled by the load balancer when all backend instances are probed down.",
          "enum": [
            "AllProbedDown",
            "AllProbedUp"
          ],
          "x-ms-enum": {
            "name": "ProbeNoHealthyBackendsBehavior",
            "modelAsString": true,
            "values": [
              {
                "value": "AllProbedDown",
                "description": "No new flows will be sent to the backend pool."
              },
              {
                "value": "AllProbedUp",
                "description": "When all backend instances are probed down, incoming packets will be sent to all instances."
              }
            ]
          }
        },
        "numberOfProbes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure."
        },
        "probeThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation."
        },
        "requestPath": {
          "type": "string",
          "description": "The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the probe resource."
        }
      },
      "required": [
        "protocol",
        "port"
      ],
      "description": "Load balancer probe resource."
    },
    "Probe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProbePropertiesFormat",
          "description": "Properties of load balancer probe."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "A load balancer probe."
    },
    "InboundNatRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "backendIPConfiguration": {
          "readOnly": true,
          "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration",
          "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP."
        },
        "protocol": {
          "$ref": "#/definitions/TransportProtocol",
          "description": "The reference to the transport protocol used by the load balancing rule."
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "enableTcpReset": {
          "type": "boolean",
          "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to backendAddressPool resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the inbound NAT rule resource."
        }
      },
      "description": "Properties of the inbound NAT rule."
    },
    "InboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatRulePropertiesFormat",
          "description": "Properties of load balancer inbound NAT rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT rule of the load balancer."
    },
    "InboundNatPoolPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "protocol": {
          "$ref": "#/definitions/TransportProtocol",
          "description": "The reference to the transport protocol used by the inbound NAT pool."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "enableTcpReset": {
          "type": "boolean",
          "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the inbound NAT pool resource."
        }
      },
      "required": [
        "protocol",
        "frontendPortRangeStart",
        "frontendPortRangeEnd",
        "backendPort"
      ],
      "description": "Properties of Inbound NAT pool."
    },
    "InboundNatPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatPoolPropertiesFormat",
          "description": "Properties of load balancer inbound nat pool."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT pool of the load balancer."
    },
    "OutboundRulePropertiesFormat": {
      "properties": {
        "allocatedOutboundPorts": {
          "type": "integer",
          "format": "int32",
          "description": "The number of outbound ports to be used for NAT."
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The Frontend IP addresses of the load balancer."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the outbound rule resource."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol for the outbound rule in load balancer.",
          "enum": [
            "Tcp",
            "Udp",
            "All"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerOutboundRuleProtocol",
            "modelAsString": true
          }
        },
        "enableTcpReset": {
          "type": "boolean",
          "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "description": "The timeout for the TCP idle connection."
        }
      },
      "required": [
        "backendAddressPool",
        "frontendIPConfigurations",
        "protocol"
      ],
      "description": "Outbound rule of the load balancer."
    },
    "OutboundRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OutboundRulePropertiesFormat",
          "description": "Properties of load balancer outbound rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Outbound rule of the load balancer."
    },
    "LoadBalancerPropertiesFormat": {
      "properties": {
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendIPConfiguration"
          },
          "description": "Object representing the frontend IPs to be used for the load balancer."
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "Collection of backend address pools used by a load balancer."
        },
        "loadBalancingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancingRule"
          },
          "description": "Object collection representing the load balancing rules Gets the provisioning."
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Probe"
          },
          "description": "Collection of probe objects used in the load balancer."
        },
        "inboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules."
        },
        "inboundNatPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatPool"
          },
          "description": "Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules."
        },
        "outboundRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundRule"
          },
          "description": "The outbound rules."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the load balancer resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the load balancer resource."
        }
      },
      "description": "Properties of the load balancer."
    },
    "LoadBalancer": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the load balancer."
        },
        "sku": {
          "$ref": "#/definitions/LoadBalancerSku",
          "description": "The load balancer SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancerPropertiesFormat",
          "description": "Properties of load balancer."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "LoadBalancer resource."
    },
    "LoadBalancerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancer"
          },
          "description": "A list of load balancers in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListLoadBalancers API service call."
    },
    "InboundNatRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "A list of inbound NAT rules in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListInboundNatRule API service call."
    },
    "LoadBalancerBackendAddressPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "A list of backend address pools in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListBackendAddressPool API service call."
    },
    "LoadBalancerFrontendIPConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendIPConfiguration"
          },
          "description": "A list of frontend IP configurations in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListFrontendIPConfiguration API service call."
    },
    "LoadBalancerLoadBalancingRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancingRule"
          },
          "description": "A list of load balancing rules in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListLoadBalancingRule API service call."
    },
    "LoadBalancerOutboundRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundRule"
          },
          "description": "A list of outbound rules in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListOutboundRule API service call."
    },
    "LoadBalancerProbeListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Probe"
          },
          "description": "A list of probes in a load balancer."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListProbe API service call."
    },
    "TransportProtocol": {
      "type": "string",
      "description": "The transport protocol for the endpoint.",
      "enum": [
        "Udp",
        "Tcp",
        "All"
      ],
      "x-ms-enum": {
        "name": "TransportProtocol",
        "modelAsString": true
      }
    },
    "LoadBalancerVipSwapRequest": {
      "properties": {
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancerVipSwapRequestFrontendIPConfiguration"
          },
          "description": "A list of frontend IP configuration resources that should swap VIPs."
        }
      },
      "description": "The request for a VIP swap."
    },
    "LoadBalancerVipSwapRequestFrontendIPConfiguration": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of frontend IP configuration resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancerVipSwapRequestFrontendIPConfigurationProperties",
          "description": "The properties of VIP swap request's frontend IP configuration object."
        }
      },
      "description": "VIP swap request's frontend IP configuration object."
    },
    "LoadBalancerVipSwapRequestFrontendIPConfigurationProperties": {
      "properties": {
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to public IP address resource."
        }
      },
      "description": "The properties of VIP swap request's frontend IP configuration object."
    },
    "NatRulePortMapping": {
      "type": "object",
      "properties": {
        "inboundNatRuleName": {
          "type": "string",
          "description": "Name of inbound NAT rule."
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend port."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Backend port."
        }
      },
      "description": "Individual port mappings for inbound NAT rule created for backend pool."
    },
    "QueryInboundNatRulePortMappingRequest": {
      "type": "object",
      "properties": {
        "ipConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "NetworkInterfaceIPConfiguration set in load balancer backend address."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address set in load balancer backend address."
        }
      },
      "description": "The request for a QueryInboundNatRulePortMapping API. Either IpConfiguration or IpAddress should be set"
    },
    "BackendAddressInboundNatRulePortMappings": {
      "type": "object",
      "properties": {
        "inboundNatRulePortMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRulePortMapping"
          },
          "description": "Collection of inbound NAT rule port mappings."
        }
      },
      "description": "The response for a QueryInboundNatRulePortMapping API."
    },
    "InboundNatRulePortMapping": {
      "type": "object",
      "properties": {
        "inboundNatRuleName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of inbound NAT rule."
        },
        "protocol": {
          "readOnly": true,
          "$ref": "#/definitions/TransportProtocol",
          "description": "The reference to the transport protocol used by the inbound NAT rule."
        },
        "frontendPort": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Frontend port."
        },
        "backendPort": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Backend port."
        }
      },
      "description": "Individual port mappings for inbound NAT rule created for backend pool."
    },
    "LoadBalancerHealthPerRule": {
      "type": "object",
      "properties": {
        "up": {
          "type": "integer",
          "format": "int32",
          "description": "Number of backend instances associated to the LB rule that are considered healthy."
        },
        "down": {
          "type": "integer",
          "format": "int32",
          "description": "Number of backend instances associated to the LB rule that are considered unhealthy."
        },
        "loadBalancerBackendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancerHealthPerRulePerBackendAddress"
          },
          "description": "Information about the health per rule of the backend addresses."
        }
      },
      "description": "The response for a Health API."
    },
    "LoadBalancerHealthPerRulePerBackendAddress": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IP address belonging to the backend address."
        },
        "networkInterfaceIPConfigurationId": {
          "type": "string",
          "description": "Resource ID of the Network Interface IP Configuration."
        },
        "state": {
          "type": "string",
          "description": "The current health of the backend instances that is associated to the LB rule."
        },
        "reason": {
          "type": "string",
          "description": "The explanation of the State"
        }
      },
      "description": "The information about health per rule per backend address."
    },
    "MigrateLoadBalancerToIpBasedRequest": {
      "type": "object",
      "properties": {
        "pools": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of pool names that should be migrated from Nic based to IP based pool"
        }
      },
      "description": "The request for a migrateToIpBased API."
    },
    "MigratedPools": {
      "type": "object",
      "properties": {
        "migratedPools": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of pools migrated from Nic based to IP based pool"
        }
      },
      "description": "The response for a migrateToIpBased API."
    },
    "NetworkInterfaceTapConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceTapConfigurationPropertiesFormat",
          "description": "Properties of the Virtual Network Tap configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Tap configuration in a Network Interface."
    },
    "NetworkInterfaceTapConfigurationPropertiesFormat": {
      "properties": {
        "virtualNetworkTap": {
          "$ref": "./virtualNetworkTap.json#/definitions/VirtualNetworkTap",
          "description": "The reference to the Virtual Network Tap resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface tap configuration resource."
        }
      },
      "description": "Properties of Virtual Network Tap configuration."
    },
    "NetworkInterfaceIPConfigurationPropertiesFormat": {
      "properties": {
        "gatewayLoadBalancer": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to gateway load balancer frontend IP."
        },
        "virtualNetworkTaps": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkTap.json#/definitions/VirtualNetworkTap"
          },
          "description": "The reference to Virtual Network Taps."
        },
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "./applicationGateway.json#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "The reference to ApplicationGatewayBackendAddressPool resource."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "./loadBalancer.json#/definitions/BackendAddressPool"
          },
          "description": "The reference to LoadBalancerBackendAddressPool resource."
        },
        "loadBalancerInboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "./loadBalancer.json#/definitions/InboundNatRule"
          },
          "description": "A list of references of LoadBalancerInboundNatRules."
        },
        "privateIPAddress": {
          "type": "string",
          "description": "Private IP address of the IP configuration. It can be a single IP address or a CIDR block in the format <address>/<prefix-length>."
        },
        "privateIPAddressPrefixLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 128,
          "x-nullable": true,
          "description": "The private IP address prefix length. If specified and the allocation method is dynamic, the service will allocate a CIDR block instead of a single IP address."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "privateIPAddressVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4."
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "Subnet bound to the IP configuration."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether this is a primary customer address on the network interface."
        },
        "publicIPAddress": {
          "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
          "description": "Public IP address bound to the IP configuration."
        },
        "applicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "./applicationSecurityGroup.json#/definitions/ApplicationSecurityGroup"
          },
          "description": "Application security groups in which the IP configuration is included."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface IP configuration."
        },
        "privateLinkConnectionProperties": {
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties",
          "description": "PrivateLinkConnection properties for the network interface.",
          "readOnly": true
        }
      },
      "description": "Properties of IP configuration."
    },
    "NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties": {
      "properties": {
        "groupId": {
          "type": "string",
          "readOnly": true,
          "description": "The group ID for current private link connection."
        },
        "requiredMemberName": {
          "type": "string",
          "readOnly": true,
          "description": "The required member name for current private link connection."
        },
        "fqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "List of FQDNs for current private link connection."
        }
      },
      "description": "PrivateLinkConnection properties for the network interface."
    },
    "NetworkInterfaceIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat",
          "description": "Network interface IP configuration properties."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration in a network interface."
    },
    "NetworkInterfaceDnsSettings": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."
        },
        "appliedDnsServers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."
        },
        "internalDnsNameLabel": {
          "type": "string",
          "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."
        },
        "internalFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network."
        },
        "internalDomainNameSuffix": {
          "readOnly": true,
          "type": "string",
          "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix."
        }
      },
      "description": "DNS settings of a network interface."
    },
    "NetworkInterfacePropertiesFormat": {
      "properties": {
        "virtualMachine": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to a virtual machine.",
          "readOnly": true
        },
        "networkSecurityGroup": {
          "$ref": "./networkSecurityGroup.json#/definitions/NetworkSecurityGroup",
          "description": "The reference to the NetworkSecurityGroup resource."
        },
        "privateEndpoint": {
          "readOnly": true,
          "$ref": "./privateEndpoint.json#/definitions/PrivateEndpoint",
          "description": "A reference to the private endpoint to which the network interface is linked."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "A list of IPConfigurations of the network interface."
        },
        "tapConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
          },
          "description": "A list of TapConfigurations of the network interface."
        },
        "dnsSettings": {
          "$ref": "#/definitions/NetworkInterfaceDnsSettings",
          "description": "The DNS settings in network interface."
        },
        "macAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The MAC address of the network interface."
        },
        "primary": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether this is a primary network interface on a virtual machine."
        },
        "vnetEncryptionSupported": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether the virtual machine this nic is attached to supports encryption."
        },
        "defaultOutboundConnectivityEnabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether default outbound connectivity for nic was configured or not."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking."
        },
        "disableTcpStateTracking": {
          "type": "boolean",
          "description": "Indicates whether to disable tcp state tracking."
        },
        "enableIPForwarding": {
          "type": "boolean",
          "description": "Indicates whether IP forwarding is enabled on this network interface."
        },
        "hostedWorkloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "A list of references to linked BareMetal resources."
        },
        "dscpConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to the dscp configuration to which the network interface is linked.",
          "readOnly": true
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the network interface resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface resource."
        },
        "workloadType": {
          "type": "string",
          "description": "WorkloadType of the NetworkInterface for BareMetal resources"
        },
        "nicType": {
          "type": "string",
          "description": "Type of Network Interface resource.",
          "enum": [
            "Standard",
            "Elastic"
          ],
          "x-ms-enum": {
            "name": "NetworkInterfaceNicType",
            "modelAsString": true
          }
        },
        "privateLinkService": {
          "$ref": "./privateLinkService.json#/definitions/PrivateLinkService",
          "description": "Privatelinkservice of the network interface resource."
        },
        "migrationPhase": {
          "type": "string",
          "description": "Migration phase of Network Interface resource.",
          "enum": [
            "None",
            "Prepare",
            "Commit",
            "Abort",
            "Committed"
          ],
          "x-ms-enum": {
            "name": "NetworkInterfaceMigrationPhase",
            "modelAsString": true
          }
        },
        "auxiliaryMode": {
          "type": "string",
          "description": "Auxiliary mode of Network Interface resource.",
          "enum": [
            "None",
            "MaxConnections",
            "Floating",
            "AcceleratedConnections"
          ],
          "x-ms-enum": {
            "name": "NetworkInterfaceAuxiliaryMode",
            "modelAsString": true
          }
        },
        "auxiliarySku": {
          "type": "string",
          "description": "Auxiliary sku of Network Interface resource.",
          "enum": [
            "None",
            "A1",
            "A2",
            "A4",
            "A8"
          ],
          "x-ms-enum": {
            "name": "NetworkInterfaceAuxiliarySku",
            "modelAsString": true
          }
        }
      },
      "description": "NetworkInterface properties."
    },
    "NetworkInterface": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the network interface."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfacePropertiesFormat",
          "description": "Properties of the network interface."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A network interface in a resource group."
    },
    "NetworkInterfaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "A list of network interfaces in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListNetworkInterface API service call."
    },
    "NetworkInterfaceTapConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
          },
          "description": "A list of tap configurations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list tap configurations API service call."
    },
    "NetworkInterfaceIPConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "A list of ip configurations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list ip configurations API service call."
    },
    "NetworkInterfaceLoadBalancerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "./loadBalancer.json#/definitions/LoadBalancer"
          },
          "description": "A list of load balancers."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list ip configurations API service call."
    },
    "EffectiveNetworkSecurityGroup": {
      "properties": {
        "networkSecurityGroup": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The ID of network security group that is applied."
        },
        "association": {
          "$ref": "#/definitions/EffectiveNetworkSecurityGroupAssociation",
          "description": "Associated resources."
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "A collection of effective security rules."
        },
        "tagMap": {
          "type": "string",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IP Addresses within the tag (key)."
          },
          "description": "Mapping of tags to list of IP Addresses included within the tag."
        }
      },
      "description": "Effective network security group."
    },
    "EffectiveNetworkSecurityGroupAssociation": {
      "properties": {
        "networkManager": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The ID of the Azure network manager if assigned."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The ID of the subnet if assigned."
        },
        "networkInterface": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The ID of the network interface if assigned."
        }
      },
      "description": "The effective network security group association."
    },
    "EffectiveNetworkSecurityRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the security rule specified by the user (if created by the user)."
        },
        "protocol": {
          "type": "string",
          "description": "The network protocol this rule applies to.",
          "enum": [
            "Tcp",
            "Udp",
            "All"
          ],
          "x-ms-enum": {
            "name": "EffectiveSecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The source port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*)."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*)."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The source address prefix."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The source address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*)."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*)."
        },
        "expandedSourceAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The expanded source address prefix."
        },
        "expandedDestinationAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Expanded destination address prefix."
        },
        "access": {
          "$ref": "./networkSecurityGroup.json#/definitions/SecurityRuleAccess",
          "description": "Whether network traffic is allowed or denied."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule."
        },
        "direction": {
          "$ref": "./networkSecurityGroup.json#/definitions/SecurityRuleDirection",
          "description": "The direction of the rule."
        }
      },
      "description": "Effective network security rules."
    },
    "EffectiveNetworkSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityGroup"
          },
          "description": "A list of effective network security groups."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list effective network security groups API service call."
    },
    "EffectiveRoute": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user defined route. This is optional."
        },
        "disableBgpRoutePropagation": {
          "type": "boolean",
          "description": "If true, on-premises routes are not propagated to the network interfaces in the subnet."
        },
        "source": {
          "type": "string",
          "description": "Who created the route.",
          "enum": [
            "Unknown",
            "User",
            "VirtualNetworkGateway",
            "Default"
          ],
          "x-ms-enum": {
            "name": "EffectiveRouteSource",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "description": "The value of effective route.",
          "enum": [
            "Active",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EffectiveRouteState",
            "modelAsString": true
          }
        },
        "addressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The address prefixes of the effective routes in CIDR notation."
        },
        "nextHopIpAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IP address of the next hop of the effective route."
        },
        "nextHopType": {
          "$ref": "./routeTable.json#/definitions/RouteNextHopType",
          "description": "The type of Azure hop the packet should be sent to."
        }
      },
      "description": "Effective Route."
    },
    "EffectiveRouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveRoute"
          },
          "description": "A list of effective routes."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list effective route API service call."
    },
    "IPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method.",
          "default": "Dynamic"
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
          "description": "The reference to the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration resource."
        }
      },
      "description": "Properties of IP configuration."
    },
    "IPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationPropertiesFormat",
          "description": "Properties of the IP configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration."
    },
    "RouteFilterRulePropertiesFormat": {
      "required": [
        "access",
        "routeFilterRuleType",
        "communities"
      ],
      "properties": {
        "access": {
          "$ref": "./network.json#/definitions/Access",
          "description": "The access type of the rule."
        },
        "routeFilterRuleType": {
          "type": "string",
          "description": "The rule type of the rule.",
          "enum": [
            "Community"
          ],
          "x-ms-enum": {
            "name": "RouteFilterRuleType",
            "modelAsString": true
          }
        },
        "communities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route filter rule resource."
        }
      },
      "description": "Route Filter Rule Resource."
    },
    "RouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat",
          "description": "Properties of the route filter rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource."
    },
    "PatchRouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat",
          "description": "Properties of the route filter rule."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource."
    },
    "RouteFilterPropertiesFormat": {
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "Collection of RouteFilterRules contained within a route filter."
        },
        "peerings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "A collection of references to express route circuit peerings."
        },
        "ipv6Peerings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "A collection of references to express route circuit ipv6 peerings."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route filter resource."
        }
      },
      "description": "Route Filter Resource."
    },
    "RouteFilter": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat",
          "description": "Properties of the route filter."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "PatchRouteFilter": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat",
          "description": "Properties of the route filter."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "RouteFilterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilter"
          },
          "description": "A list of route filters in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilters API service call."
    },
    "RouteFilterRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "A list of RouteFilterRules in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilterRules API service call."
    },
    "ApplicationGatewayOnDemandProbe": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to backend pool of application gateway to which probe request will be sent."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to backend http setting of application gateway to be used for test probe."
        }
      },
      "description": "Details of on demand test probe request."
    },
    "ApplicationGatewayBackendHealthOnDemand": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference to an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHealthHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings",
          "description": "Application gateway BackendHealthHttp settings."
        }
      },
      "description": "Result of on demand test probe."
    },
    "ApplicationGatewayBackendHealth": {
      "properties": {
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthPool"
          },
          "description": "A list of ApplicationGatewayBackendHealthPool resources."
        }
      },
      "description": "Response for ApplicationGatewayBackendHealth API service call."
    },
    "ApplicationGatewayBackendHealthPool": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference to an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings"
          },
          "description": "List of ApplicationGatewayBackendHealthHttpSettings resources."
        }
      },
      "description": "Application gateway BackendHealth pool."
    },
    "ApplicationGatewayBackendHealthHttpSettings": {
      "properties": {
        "backendHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings",
          "description": "Reference to an ApplicationGatewayBackendHttpSettings resource."
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthServer"
          },
          "description": "List of ApplicationGatewayBackendHealthServer resources."
        }
      },
      "description": "Application gateway BackendHealthHttp settings."
    },
    "ApplicationGatewayBackendHealthServer": {
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address or FQDN of backend server."
        },
        "ipConfiguration": {
          "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration",
          "description": "Reference to IP configuration of backend server."
        },
        "health": {
          "type": "string",
          "description": "Health of backend server.",
          "enum": [
            "Unknown",
            "Up",
            "Down",
            "Partial",
            "Draining"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayBackendHealthServerHealth",
            "modelAsString": true
          }
        },
        "healthProbeLog": {
          "type": "string",
          "description": "Health Probe Log."
        }
      },
      "description": "Application gateway backendhealth http settings."
    },
    "ApplicationGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of an application gateway SKU.",
          "enum": [
            "Standard_Small",
            "Standard_Medium",
            "Standard_Large",
            "WAF_Medium",
            "WAF_Large",
            "Standard_v2",
            "WAF_v2",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of an application gateway.",
          "enum": [
            "Standard",
            "WAF",
            "Standard_v2",
            "WAF_v2",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity (instance count) of an application gateway."
        },
        "family": {
          "type": "string",
          "description": "Family of an application gateway SKU.",
          "enum": [
            "Generation_1",
            "Generation_2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuFamily",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of an application gateway."
    },
    "ApplicationGatewaySslPolicy": {
      "properties": {
        "disabledSslProtocols": {
          "type": "array",
          "description": "Ssl protocols to be disabled on application gateway.",
          "items": {
            "type": "string",
            "$ref": "#/definitions/ProtocolsEnum"
          }
        },
        "policyType": {
          "type": "string",
          "description": "Type of Ssl Policy.",
          "enum": [
            "Predefined",
            "Custom",
            "CustomV2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySslPolicyType",
            "modelAsString": true
          }
        },
        "policyName": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of Ssl predefined policy."
        },
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order to application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Application Gateway Ssl policy."
    },
    "ApplicationGatewayClientAuthConfiguration": {
      "properties": {
        "verifyClientCertIssuerDN": {
          "type": "boolean",
          "description": "Verify client certificate issuer name on the application gateway."
        },
        "verifyClientRevocation": {
          "type": "string",
          "description": "Verify client certificate revocation status.",
          "enum": [
            "None",
            "OCSP"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayClientRevocationOptions",
            "modelAsString": true
          }
        }
      },
      "description": "Application gateway client authentication configuration."
    },
    "ApplicationGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource. A subnet from where application gateway gets its private address."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway IP configuration resource."
        }
      },
      "description": "Properties of IP configuration of an application gateway."
    },
    "ApplicationGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed."
    },
    "ApplicationGatewayAuthenticationCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the authentication certificate resource."
        }
      },
      "description": "Authentication certificates properties of an application gateway."
    },
    "ApplicationGatewayAuthenticationCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificatePropertiesFormat",
          "description": "Properties of the application gateway authentication certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the authentication certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Authentication certificates of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the trusted root certificate resource."
        }
      },
      "description": "Trusted Root certificates properties of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificatePropertiesFormat",
          "description": "Properties of the application gateway trusted root certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the trusted root certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Trusted Root certificates of an application gateway."
    },
    "ApplicationGatewayTrustedClientCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "validatedCertData": {
          "readOnly": true,
          "type": "string",
          "description": "Validated certificate data."
        },
        "clientCertIssuerDN": {
          "readOnly": true,
          "type": "string",
          "description": "Distinguished name of client certificate issuer."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the trusted client certificate resource."
        }
      },
      "description": "Trusted client certificates properties of an application gateway."
    },
    "ApplicationGatewayTrustedClientCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayTrustedClientCertificatePropertiesFormat",
          "description": "Properties of the application gateway trusted client certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the trusted client certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Trusted client certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request."
        },
        "password": {
          "type": "string",
          "description": "Password for the pfx file specified in data. Only applicable in PUT request."
        },
        "publicCertData": {
          "readOnly": true,
          "type": "string",
          "description": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the SSL certificate resource."
        }
      },
      "description": "Properties of SSL certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslCertificatePropertiesFormat",
          "description": "Properties of the application gateway SSL certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the SSL certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "SSL certificates of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "PrivateIPAddress of the network interface IP Configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the PublicIP resource."
        },
        "privateLinkConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the application gateway private link configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend IP configuration resource."
        }
      },
      "description": "Properties of Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway frontend IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendPortPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend port."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend port resource."
        }
      },
      "description": "Properties of Frontend port of an application gateway."
    },
    "ApplicationGatewayFrontendPort": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendPortPropertiesFormat",
          "description": "Properties of the application gateway frontend port."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend port that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Frontend port of an application gateway."
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN)."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address."
        }
      },
      "description": "Backend address of an application gateway."
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in network interfaces."
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend address pool resource."
        }
      },
      "description": "Properties of Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat",
          "description": "Properties of the application gateway backend address pool."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend address pool that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettingsPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port on the backend."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used to communicate with the backend."
        },
        "cookieBasedAffinity": {
          "type": "string",
          "description": "Cookie based affinity.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCookieBasedAffinity",
            "modelAsString": true
          }
        },
        "requestTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds."
        },
        "probe": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Probe resource of an application gateway."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway authentication certificates."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted root certificates."
        },
        "connectionDraining": {
          "$ref": "#/definitions/ApplicationGatewayConnectionDraining",
          "description": "Connection draining of the backend http settings resource."
        },
        "hostName": {
          "type": "string",
          "description": "Host header to be sent to the backend servers."
        },
        "pickHostNameFromBackendAddress": {
          "type": "boolean",
          "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false."
        },
        "affinityCookieName": {
          "type": "string",
          "description": "Cookie name to use for the affinity cookie."
        },
        "probeEnabled": {
          "type": "boolean",
          "description": "Whether the probe is enabled. Default value is false."
        },
        "path": {
          "type": "string",
          "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend HTTP settings resource."
        }
      },
      "description": "Properties of Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettings": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettingsPropertiesFormat",
          "description": "Properties of the application gateway backend HTTP settings."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend http settings that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendSettingsPropertiesFormat": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port on the backend."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used to communicate with the backend."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds."
        },
        "probe": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Probe resource of an application gateway."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted root certificates."
        },
        "hostName": {
          "type": "string",
          "description": "Server name indication to be sent to the backend servers for Tls protocol."
        },
        "pickHostNameFromBackendAddress": {
          "type": "boolean",
          "description": "Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend HTTP settings resource."
        }
      },
      "description": "Properties of Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendSettings": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendSettingsPropertiesFormat",
          "description": "Properties of the application gateway backend settings."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend settings that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of an application gateway."
    },
    "ApplicationGatewaySslProfilePropertiesFormat": {
      "properties": {
        "trustedClientCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted client certificates."
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of the application gateway resource."
        },
        "clientAuthConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayClientAuthConfiguration",
          "description": "Client authentication configuration of the application gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the HTTP listener resource."
        }
      },
      "description": "Properties of SSL profile of an application gateway."
    },
    "ApplicationGatewaySslProfile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslProfilePropertiesFormat",
          "description": "Properties of the application gateway SSL profile."
        },
        "name": {
          "type": "string",
          "description": "Name of the SSL profile that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "SSL profile of an application gateway."
    },
    "ApplicationGatewayHttpListenerPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend IP configuration resource of an application gateway."
        },
        "frontendPort": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend port resource of an application gateway."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "Protocol of the HTTP listener."
        },
        "hostName": {
          "type": "string",
          "description": "Host name of HTTP listener."
        },
        "sslCertificate": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL certificate resource of an application gateway."
        },
        "sslProfile": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL profile resource of the application gateway."
        },
        "requireServerNameIndication": {
          "type": "boolean",
          "description": "Applicable only if protocol is https. Enables SNI for multi-hosting."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the HTTP listener resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the HTTP listener."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Host names for HTTP Listener that allows special wildcard characters as well."
        }
      },
      "description": "Properties of HTTP listener of an application gateway."
    },
    "ApplicationGatewayHttpListener": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayHttpListenerPropertiesFormat",
          "description": "Properties of the application gateway HTTP listener."
        },
        "name": {
          "type": "string",
          "description": "Name of the HTTP listener that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Http listener of an application gateway."
    },
    "ApplicationGatewayListenerPropertiesFormat": {
      "type": "object",
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend IP configuration resource of an application gateway."
        },
        "frontendPort": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend port resource of an application gateway."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "Protocol of the listener."
        },
        "sslCertificate": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL certificate resource of an application gateway."
        },
        "sslProfile": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL profile resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the listener resource."
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Server Name Indications(SNI) for TLS Multi-site Listener that allows special wildcard characters as well."
        }
      },
      "description": "Properties of listener of an application gateway."
    },
    "ApplicationGatewayListener": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayListenerPropertiesFormat",
          "description": "Properties of the application gateway listener."
        },
        "name": {
          "type": "string",
          "description": "Name of the listener that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Listener of an application gateway."
    },
    "ApplicationGatewayPathRulePropertiesFormat": {
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Path rules of URL path map."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of URL path map path rule."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend http settings resource of URL path map path rule."
        },
        "redirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Redirect configuration resource of URL path map path rule."
        },
        "rewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Rewrite rule set resource of URL path map path rule."
        },
        "loadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Load Distribution Policy resource of URL path map path rule."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the path rule resource."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        }
      },
      "description": "Properties of path rule of an application gateway."
    },
    "ApplicationGatewayPathRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPathRulePropertiesFormat",
          "description": "Properties of the application gateway path rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the path rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Path rule of URL path map of an application gateway."
    },
    "ApplicationGatewayProbePropertiesFormat": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "unhealthyThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "pickHostNameFromBackendSettings": {
          "type": "boolean",
          "description": "Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false."
        },
        "minServers": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of servers that are always marked healthy. Default value is 0."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the probe resource."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Basic, Standard_v2 and WAF_v2 only.",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "description": "Properties of probe of an application gateway."
    },
    "ApplicationGatewayProbeHealthResponseMatch": {
      "properties": {
        "body": {
          "type": "string",
          "description": "Body that must be contained in the health response. Default value is empty."
        },
        "statusCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399."
        }
      },
      "description": "Application gateway probe health response match."
    },
    "ApplicationGatewayProbe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayProbePropertiesFormat",
          "description": "Properties of the application gateway probe."
        },
        "name": {
          "type": "string",
          "description": "Name of the probe that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Probe of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRulePropertiesFormat": {
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type.",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 20000,
          "exclusiveMaximum": false,
          "description": "Priority of the request routing rule."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend http settings resource of the application gateway."
        },
        "httpListener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Http listener resource of the application gateway."
        },
        "urlPathMap": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "URL path map resource of the application gateway."
        },
        "rewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Rewrite Rule Set resource in Basic rule of the application gateway."
        },
        "redirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Redirect configuration resource of the application gateway."
        },
        "loadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Load Distribution Policy resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the request routing rule resource."
        }
      },
      "description": "Properties of request routing rule of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRequestRoutingRulePropertiesFormat",
          "description": "Properties of the application gateway request routing rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the request routing rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Request routing rule of an application gateway."
    },
    "ApplicationGatewayRoutingRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type.",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 20000,
          "exclusiveMaximum": false,
          "description": "Priority of the routing rule."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        },
        "backendSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend settings resource of the application gateway."
        },
        "listener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Listener resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the request routing rule resource."
        }
      },
      "required": [
        "priority"
      ],
      "description": "Properties of routing rule of the application gateway."
    },
    "ApplicationGatewayRoutingRule": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRoutingRulePropertiesFormat",
          "description": "Properties of the application gateway routing rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the routing rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Routing rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleSetPropertiesFormat",
          "description": "Properties of the application gateway rewrite rule set."
        },
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule set that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rewrite rule set of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSetPropertiesFormat": {
      "properties": {
        "rewriteRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRule"
          },
          "description": "Rewrite rules in the rewrite rule set."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the rewrite rule set resource."
        }
      },
      "description": "Properties of rewrite rule set of the application gateway."
    },
    "ApplicationGatewayRewriteRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule that is unique within an Application Gateway."
        },
        "ruleSequence": {
          "type": "integer",
          "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleCondition"
          },
          "description": "Conditions based on which the action set execution will be evaluated."
        },
        "actionSet": {
          "type": "object",
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleActionSet",
          "description": "Set of actions to be done as part of the rewrite Rule."
        }
      },
      "description": "Rewrite rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleCondition": {
      "properties": {
        "variable": {
          "type": "string",
          "description": "The condition parameter of the RewriteRuleCondition."
        },
        "pattern": {
          "type": "string",
          "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition."
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison."
        },
        "negate": {
          "type": "boolean",
          "description": "Setting this value as truth will force to check the negation of the condition given by the user."
        }
      },
      "description": "Set of conditions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayRewriteRuleActionSet": {
      "properties": {
        "requestHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Request Header Actions in the Action Set."
        },
        "responseHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Response Header Actions in the Action Set."
        },
        "urlConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayUrlConfiguration",
          "description": "Url Configuration Action in the Action Set."
        }
      },
      "description": "Set of actions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayHeaderConfiguration": {
      "properties": {
        "headerName": {
          "type": "string",
          "description": "Header name of the header configuration."
        },
        "headerValueMatcher": {
          "type": "object",
          "$ref": "#/definitions/HeaderValueMatcher",
          "description": "An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud"
        },
        "headerValue": {
          "type": "string",
          "description": "Header value of the header configuration."
        }
      },
      "description": "Header configuration of the Actions set in Application Gateway."
    },
    "HeaderValueMatcher": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "The pattern, either fixed string or regular expression, that evaluates if a header value should be selected for rewrite."
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison."
        },
        "negate": {
          "type": "boolean",
          "description": "Setting this value as truth will force to check the negation of the condition given by the user in the pattern field."
        }
      },
      "description": "An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud"
    },
    "ApplicationGatewayUrlConfiguration": {
      "properties": {
        "modifiedPath": {
          "type": "string",
          "description": "Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null."
        },
        "modifiedQueryString": {
          "type": "string",
          "description": "Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null."
        },
        "reroute": {
          "type": "boolean",
          "description": "If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false."
        }
      },
      "description": "Url configuration of the Actions set in Application Gateway."
    },
    "ApplicationGatewayRedirectConfigurationPropertiesFormat": {
      "properties": {
        "redirectType": {
          "type": "string",
          "$ref": "#/definitions/RedirectTypeEnum",
          "description": "HTTP redirection type."
        },
        "targetListener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to a listener to redirect the request to."
        },
        "targetUrl": {
          "type": "string",
          "description": "Url to redirect the request to."
        },
        "includePath": {
          "type": "boolean",
          "description": "Include path in the redirected url."
        },
        "includeQueryString": {
          "type": "boolean",
          "description": "Include query string in the redirected url."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Request routing specifying redirect configuration."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Url path maps specifying default redirect configuration."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Path rules specifying redirect configuration."
        }
      },
      "description": "Properties of redirect configuration of the application gateway."
    },
    "ApplicationGatewayRedirectConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRedirectConfigurationPropertiesFormat",
          "description": "Properties of the application gateway redirect configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the redirect configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Redirect configuration of an application gateway."
    },
    "ApplicationGatewayPrivateLinkConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkConfigurationProperties",
          "description": "Properties of the application gateway private link configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the private link configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Private Link Configuration on an application gateway."
    },
    "ApplicationGatewayPrivateLinkConfigurationProperties": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkIpConfiguration"
          },
          "description": "An array of application gateway private link ip configurations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private link configuration."
        }
      },
      "description": "Properties of private link configuration on an application gateway."
    },
    "ApplicationGatewayPrivateLinkIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkIpConfigurationProperties",
          "description": "Properties of an application gateway private link ip configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of application gateway private link ip configuration."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "The application gateway private link ip configuration."
    },
    "ApplicationGatewayPrivateLinkIpConfigurationProperties": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether the ip configuration is primary or not."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private link IP configuration."
        }
      },
      "description": "Properties of an application gateway private link IP configuration."
    },
    "ApplicationGatewayPrivateLinkResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkResourceProperties",
          "description": "Properties of the application gateway private link resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the private link resource that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "PrivateLink Resource of an application gateway."
    },
    "ApplicationGatewayPrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "Group identifier of private link resource.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required member names of private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required DNS zone names of the the private link resource."
        }
      },
      "description": "Properties of a private link resource."
    },
    "ApplicationGatewayPrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkResource"
          },
          "description": "List of private link resources of an application gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGatewayPrivateLinkResources API service call. Gets all private link resources for an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnectionProperties",
          "description": "Properties of the application gateway private endpoint connection."
        },
        "name": {
          "type": "string",
          "description": "Name of the private endpoint connection on an application gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Private Endpoint connection on an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "readOnly": true,
          "$ref": "./privateEndpoint.json#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "./privateLinkService.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private endpoint connection resource."
        },
        "linkIdentifier": {
          "readOnly": true,
          "type": "string",
          "description": "The consumer link id."
        }
      },
      "description": "Properties of Private Link Resource of an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
          },
          "description": "List of private endpoint connections on an application gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGatewayPrivateEndpointConnection API service call. Gets all private endpoint connections for an application gateway."
    },
    "ApplicationGatewayPropertiesFormat": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ApplicationGatewaySku",
          "description": "SKU of the application gateway resource."
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of the application gateway resource."
        },
        "operationalState": {
          "readOnly": true,
          "type": "string",
          "description": "Operational state of the application gateway resource.",
          "enum": [
            "Stopped",
            "Starting",
            "Running",
            "Stopping"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayOperationalState",
            "modelAsString": true
          }
        },
        "gatewayIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayIPConfiguration"
          },
          "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificate"
          },
          "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificate"
          },
          "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "trustedClientCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayTrustedClientCertificate"
          },
          "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "sslCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslCertificate"
          },
          "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendIPConfiguration"
          },
          "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendPort"
          },
          "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayProbe"
          },
          "description": "Probes of the application gateway resource."
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings"
          },
          "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "backendSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendSettings"
          },
          "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "httpListeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHttpListener"
          },
          "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "listeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayListener"
          },
          "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "sslProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslProfile"
          },
          "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayUrlPathMap"
          },
          "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRequestRoutingRule"
          },
          "description": "Request routing rules of the application gateway resource."
        },
        "routingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRoutingRule"
          },
          "description": "Routing rules of the application gateway resource."
        },
        "rewriteRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleSet"
          },
          "description": "Rewrite rules for the application gateway resource."
        },
        "redirectConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRedirectConfiguration"
          },
          "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "webApplicationFirewallConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayWebApplicationFirewallConfiguration",
          "description": "Web application firewall configuration."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        },
        "enableHttp2": {
          "type": "boolean",
          "description": "Whether HTTP2 is enabled on the application gateway resource."
        },
        "enableFips": {
          "type": "boolean",
          "description": "Whether FIPS is enabled on the application gateway resource."
        },
        "autoscaleConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayAutoscaleConfiguration",
          "description": "Autoscale Configuration."
        },
        "privateLinkConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkConfiguration"
          },
          "description": "PrivateLink configurations on application gateway."
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
          },
          "description": "Private Endpoint connections on application gateway."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the application gateway resource."
        },
        "forceFirewallPolicyAssociation": {
          "type": "boolean",
          "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config."
        },
        "loadDistributionPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayLoadDistributionPolicy"
          },
          "description": "Load distribution policies of the application gateway resource."
        },
        "globalConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayGlobalConfiguration",
          "description": "Global Configuration."
        },
        "defaultPredefinedSslPolicy": {
          "$ref": "#/definitions/PolicyNameEnum",
          "readOnly": true,
          "description": "The default predefined SSL Policy applied on the application gateway resource."
        }
      },
      "description": "Properties of the application gateway."
    },
    "ApplicationGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPropertiesFormat",
          "description": "Properties of the application gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the application gateway, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Application gateway resource."
    },
    "ApplicationGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGateway"
          },
          "description": "List of an application gateways in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGateways API service call."
    },
    "ApplicationGatewayUrlPathMapPropertiesFormat": {
      "properties": {
        "defaultBackendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default backend address pool resource of URL path map."
        },
        "defaultBackendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default backend http settings resource of URL path map."
        },
        "defaultRewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default Rewrite rule set resource of URL path map."
        },
        "defaultRedirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default redirect configuration resource of URL path map."
        },
        "defaultLoadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default Load Distribution Policy resource of URL path map."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPathRule"
          },
          "description": "Path rule of URL path map resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the URL path map resource."
        }
      },
      "description": "Properties of UrlPathMap of the application gateway."
    },
    "ApplicationGatewayUrlPathMap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayUrlPathMapPropertiesFormat",
          "description": "Properties of the application gateway URL path map."
        },
        "name": {
          "type": "string",
          "description": "Name of the URL path map that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting."
    },
    "ApplicationGatewayWebApplicationFirewallConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the web application firewall is enabled or not."
        },
        "firewallMode": {
          "type": "string",
          "description": "Web application firewall mode.",
          "enum": [
            "Detection",
            "Prevention"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayFirewallMode",
            "modelAsString": true
          }
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the rule set type."
        },
        "disabledRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallDisabledRuleGroup"
          },
          "description": "The disabled rule groups."
        },
        "requestBodyCheck": {
          "type": "boolean",
          "description": "Whether allow WAF to check request Body."
        },
        "maxRequestBodySize": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size for WAF."
        },
        "maxRequestBodySizeInKb": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size in Kb for WAF."
        },
        "fileUploadLimitInMb": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Maximum file upload size in Mb for WAF."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallExclusion"
          },
          "description": "The exclusion list."
        }
      },
      "required": [
        "enabled",
        "firewallMode",
        "ruleSetType",
        "ruleSetVersion"
      ],
      "description": "Application gateway web application firewall configuration."
    },
    "ApplicationGatewayAutoscaleConfiguration": {
      "properties": {
        "minCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Lower bound on number of Application Gateway capacity."
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "exclusiveMinimum": false,
          "description": "Upper bound on number of Application Gateway capacity."
        }
      },
      "required": [
        "minCapacity"
      ],
      "description": "Application Gateway autoscale configuration."
    },
    "ApplicationGatewayConnectionDraining": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether connection draining is enabled or not."
        },
        "drainTimeoutInSec": {
          "type": "integer",
          "format": "int32",
          "maximum": 3600,
          "exclusiveMaximum": false,
          "minimum": 1,
          "exclusiveMinimum": false,
          "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds."
        }
      },
      "required": [
        "enabled",
        "drainTimeoutInSec"
      ],
      "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration."
    },
    "ApplicationGatewayFirewallDisabledRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the rule group that will be disabled."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled."
        }
      },
      "required": [
        "ruleGroupName"
      ],
      "description": "Allows to disable rules within a rule group or an entire rule group."
    },
    "ApplicationGatewayAvailableServerVariablesResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableServerVariables API service call."
    },
    "ApplicationGatewayAvailableRequestHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableRequestHeaders API service call."
    },
    "ApplicationGatewayAvailableResponseHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableResponseHeaders API service call."
    },
    "ApplicationGatewayFirewallExclusion": {
      "properties": {
        "matchVariable": {
          "type": "string",
          "description": "The variable to be excluded."
        },
        "selectorMatchOperator": {
          "type": "string",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to."
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."
        }
      },
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ],
      "description": "Allow to exclude some variable satisfy the condition for the WAF check."
    },
    "ApplicationGatewayAvailableWafRuleSetsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleSet"
          },
          "description": "The list of application gateway rule sets."
        }
      },
      "description": "Response for ApplicationGatewayAvailableWafRuleSets API service call."
    },
    "ApplicationGatewayFirewallRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFirewallRuleSetPropertiesFormat",
          "description": "Properties of the application gateway firewall rule set."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleSetPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the web application firewall rule set."
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the web application firewall rule set type."
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleGroup"
          },
          "description": "The rule groups of the web application firewall rule set."
        },
        "tiers": {
          "type": "array",
          "description": "Tier of an application gateway that support the rule set.",
          "items": {
            "type": "string",
            "enum": [
              "Standard",
              "WAF",
              "Standard_v2",
              "WAF_v2"
            ],
            "x-ms-enum": {
              "name": "ApplicationGatewayTierTypes",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion",
        "ruleGroups"
      ],
      "description": "Properties of the web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the web application firewall rule group."
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule group."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRule"
          },
          "description": "The rules of the web application firewall rule group."
        }
      },
      "required": [
        "ruleGroupName",
        "rules"
      ],
      "description": "A web application firewall rule group."
    },
    "ApplicationGatewayFirewallRule": {
      "properties": {
        "ruleId": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the web application firewall rule."
        },
        "ruleIdString": {
          "type": "string",
          "description": "The string representation of the web application firewall rule identifier."
        },
        "state": {
          "type": "string",
          "description": "The string representation of the web application firewall rule state.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayWafRuleStateTypes",
            "modelAsString": true
          }
        },
        "action": {
          "type": "string",
          "description": "The string representation of the web application firewall rule action.",
          "enum": [
            "None",
            "AnomalyScoring",
            "Allow",
            "Block",
            "Log"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayWafRuleActionTypes",
            "modelAsString": true
          }
        },
        "sensitivity": {
          "type": "string",
          "description": "The string representation of the web application firewall rule sensitivity.",
          "enum": [
            "None",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayWafRuleSensitivityTypes",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule."
        }
      },
      "required": [
        "ruleId"
      ],
      "description": "A web application firewall rule."
    },
    "ApplicationGatewayAvailableSslOptions": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAvailableSslOptionsPropertiesFormat",
          "description": "Properties of the application gateway available SSL options."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewayAvailableSslOptionsPropertiesFormat": {
      "properties": {
        "predefinedPolicies": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of available Ssl predefined policy."
        },
        "defaultPolicy": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of the Ssl predefined policy applied by default to application gateway."
        },
        "availableCipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "List of available Ssl cipher suites."
        },
        "availableProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtocolsEnum"
          },
          "description": "List of available Ssl protocols."
        }
      },
      "description": "Properties of ApplicationGatewayAvailableSslOptions."
    },
    "ApplicationGatewayAvailableSslPredefinedPolicies": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicy"
          },
          "description": "List of available Ssl predefined policy."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewaySslPredefinedPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Ssl predefined policy."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicyPropertiesFormat",
          "description": "Properties of the application gateway SSL predefined policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "An Ssl predefined policy."
    },
    "ApplicationGatewaySslPredefinedPolicyPropertiesFormat": {
      "properties": {
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order for application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Properties of ApplicationGatewaySslPredefinedPolicy."
    },
    "ApplicationGatewayCustomError": {
      "properties": {
        "statusCode": {
          "type": "string",
          "description": "Status code of the application gateway custom error.",
          "enum": [
            "HttpStatus400",
            "HttpStatus403",
            "HttpStatus404",
            "HttpStatus405",
            "HttpStatus408",
            "HttpStatus500",
            "HttpStatus502",
            "HttpStatus503",
            "HttpStatus504"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCustomErrorStatusCode",
            "modelAsString": true
          }
        },
        "customErrorPageUrl": {
          "type": "string",
          "description": "Error page URL of the application gateway custom error."
        }
      },
      "description": "Custom error of an application gateway."
    },
    "PolicyNameEnum": {
      "type": "string",
      "description": "Ssl predefined policy name enums.",
      "enum": [
        "AppGwSslPolicy20150501",
        "AppGwSslPolicy20170401",
        "AppGwSslPolicy20170401S",
        "AppGwSslPolicy20220101",
        "AppGwSslPolicy20220101S"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslPolicyName",
        "modelAsString": true
      }
    },
    "ProtocolsEnum": {
      "type": "string",
      "description": "Ssl protocol enums.",
      "enum": [
        "TLSv1_0",
        "TLSv1_1",
        "TLSv1_2",
        "TLSv1_3"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslProtocol",
        "modelAsString": true
      }
    },
    "CipherSuitesEnum": {
      "type": "string",
      "description": "Ssl cipher suites enums.",
      "enum": [
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA256",
        "TLS_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA",
        "TLS_RSA_WITH_AES_128_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
        "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslCipherSuite",
        "modelAsString": true
      }
    },
    "RedirectTypeEnum": {
      "type": "string",
      "description": "Redirect type enum.",
      "enum": [
        "Permanent",
        "Found",
        "SeeOther",
        "Temporary"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayRedirectType",
        "modelAsString": true
      }
    },
    "ApplicationGatewayProtocol": {
      "type": "string",
      "description": "Application Gateway protocol.",
      "enum": [
        "Http",
        "Https",
        "Tcp",
        "Tls"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayProtocol",
        "modelAsString": true,
        "values": [
          {
            "value": "Http",
            "description": "Supported for httpListeners and  backendHttpSettingsCollection properties."
          },
          {
            "value": "Https",
            "description": "Supported for httpListeners and  backendHttpSettingsCollection properties."
          },
          {
            "value": "Tcp",
            "description": "Supported for listeners and backendSettingsCollection properties."
          },
          {
            "value": "Tls",
            "description": "Supported for listeners and backendSettingsCollection properties."
          }
        ]
      }
    },
    "ApplicationGatewayLoadDistributionPolicyPropertiesFormat": {
      "properties": {
        "loadDistributionTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayLoadDistributionTarget"
          },
          "description": "Load Distribution Targets resource of an application gateway."
        },
        "loadDistributionAlgorithm": {
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionAlgorithmEnum",
          "description": "Load Distribution Targets resource of an application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Load Distribution Policy resource."
        }
      },
      "description": "Properties of Load Distribution Policy of an application gateway."
    },
    "ApplicationGatewayLoadDistributionPolicy": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionPolicyPropertiesFormat",
          "description": "Properties of the application gateway load distribution policy."
        },
        "name": {
          "type": "string",
          "description": "Name of the load distribution policy that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Load Distribution Policy of an application gateway."
    },
    "ApplicationGatewayLoadDistributionTargetPropertiesFormat": {
      "properties": {
        "weightPerServer": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "exclusiveMaximum": false,
          "minimum": 1,
          "exclusiveMinimum": false,
          "description": "Weight per server. Range between 1 and 100."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        }
      }
    },
    "ApplicationGatewayLoadDistributionTarget": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionTargetPropertiesFormat",
          "description": "Properties of the application gateway load distribution target."
        },
        "name": {
          "type": "string",
          "description": "Name of the load distribution policy that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Load Distribution Target of an application gateway."
    },
    "ApplicationGatewayLoadDistributionAlgorithmEnum": {
      "type": "string",
      "description": "Load Distribution Algorithm enums.",
      "enum": [
        "RoundRobin",
        "LeastConnections",
        "IpHash"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayLoadDistributionAlgorithm",
        "modelAsString": true
      }
    },
    "ApplicationGatewayGlobalConfiguration": {
      "properties": {
        "enableRequestBuffering": {
          "type": "boolean",
          "description": "Enable request buffering."
        },
        "enableResponseBuffering": {
          "type": "boolean",
          "description": "Enable response buffering."
        }
      },
      "description": "Application Gateway global configuration."
    },
    "VirtualNetworkGatewayMigrationParameters": {
      "type": "object",
      "properties": {
        "migrationType": {
          "$ref": "#/definitions/VirtualNetworkGatewayMigrationType"
        },
        "resourceUrl": {
          "type": "string",
          "description": "Resource url that needs to be passed in to migration."
        }
      },
      "required": [
        "migrationType"
      ],
      "description": "Virtual network gateway migration parameters."
    },
    "VirtualNetworkGatewayMigrationType": {
      "type": "string",
      "enum": [
        "UpgradeDeploymentToStandardIP"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayMigrationType",
        "modelAsString": true,
        "values": [
          {
            "value": "UpgradeDeploymentToStandardIP",
            "name": "UpgradeDeploymentToStandardIP",
            "description": "Indicates that it is a migration process from basic IP CSES to standard IP VMSS."
          }
        ]
      },
      "description": "MigrationType for the virtual network gateway."
    },
    "VirtualNetworkGatewayMigrationStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "Represent the current state of gateway migration.",
          "enum": [
            "None",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayMigrationState",
            "modelAsString": true
          }
        },
        "phase": {
          "type": "string",
          "description": "Represent the current migration phase of gateway.",
          "enum": [
            "None",
            "Prepare",
            "PrepareSucceeded",
            "Execute",
            "ExecuteSucceeded",
            "Commit",
            "CommitSucceeded",
            "AbortSucceeded",
            "Abort"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayMigrationPhase",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "name": "None",
                "description": "No migration phase set on gateway."
              },
              {
                "value": "Prepare",
                "name": "Prepare",
                "description": "Gateway is going through prepare migration or prepare has failed. Please see state and error details for more information."
              },
              {
                "value": "PrepareSucceeded",
                "name": "PrepareSucceeded",
                "description": "Prepare succeeded on gateway."
              },
              {
                "value": "Execute",
                "name": "Execute",
                "description": "Gateway is going through execute migration or execute has failed. Please see state and error details for more information."
              },
              {
                "value": "ExecuteSucceeded",
                "name": "ExecuteSucceeded",
                "description": "Execute succeeded on gateway."
              },
              {
                "value": "Commit",
                "name": "Commit",
                "description": "Gateway is going through commit migration or commit has failed. Please see state and error details for more information."
              },
              {
                "value": "CommitSucceeded",
                "name": "CommitSucceeded",
                "description": "Commit succeeded, represent migration is complete for the gateway."
              },
              {
                "value": "AbortSucceeded",
                "name": "AbortSucceeded",
                "description": "Represent abort succeeded on gateway, start with prepare to retrigger migration."
              },
              {
                "value": "Abort",
                "name": "Abort",
                "description": "Gateway is going through abort migration or abort has failed. Please see state and error details for more information."
              }
            ]
          }
        },
        "errorMessage": {
          "type": "string",
          "description": "Error if any occurs during migration."
        }
      },
      "description": "Migration status for the Virtual Network Gateway."
    },
    "VirtualNetworkGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the public IP resource."
        },
        "privateIPAddress": {
          "readOnly": true,
          "type": "string",
          "description": "Private IP Address for this gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway IP configuration resource."
        }
      },
      "description": "Properties of VirtualNetworkGatewayIPConfiguration."
    },
    "VirtualNetworkGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat",
          "description": "Properties of the virtual network gateway ip configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration for virtual network gateway."
    },
    "VirtualNetworkGatewayNatRuleProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the NAT Rule resource."
        },
        "type": {
          "type": "string",
          "description": "The type of NAT rule for VPN NAT.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "VpnNatRuleType",
            "modelAsString": true
          }
        },
        "mode": {
          "type": "string",
          "description": "The Source NAT direction of a VPN NAT.",
          "enum": [
            "EgressSnat",
            "IngressSnat"
          ],
          "x-ms-enum": {
            "name": "VpnNatRuleMode",
            "modelAsString": true
          }
        },
        "internalMappings": {
          "type": "array",
          "items": {
            "$ref": "./virtualWan.json#/definitions/VpnNatRuleMapping"
          },
          "description": "The private IP address internal mapping for NAT."
        },
        "externalMappings": {
          "type": "array",
          "items": {
            "$ref": "./virtualWan.json#/definitions/VpnNatRuleMapping"
          },
          "description": "The private IP address external mapping for NAT."
        },
        "ipConfigurationId": {
          "type": "string",
          "description": "The IP Configuration ID this NAT rule applies to."
        }
      },
      "description": "Parameters for VirtualNetworkGatewayNatRule."
    },
    "VirtualNetworkGatewayNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayNatRuleProperties",
          "description": "Properties of the Virtual Network Gateway NAT rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VirtualNetworkGatewayNatRule Resource."
    },
    "VirtualNetworkGatewayPropertiesFormat": {
      "properties": {
        "autoScaleConfiguration": {
          "$ref": "#/definitions/VirtualNetworkGatewayAutoScaleConfiguration",
          "description": "Autoscale configuration for virutal network gateway"
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayIPConfiguration"
          },
          "description": "IP configurations for virtual network gateway."
        },
        "gatewayType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "Vpn",
            "ExpressRoute",
            "LocalGateway"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayType",
            "modelAsString": true
          }
        },
        "vpnType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "PolicyBased",
            "RouteBased"
          ],
          "x-ms-enum": {
            "name": "VpnType",
            "modelAsString": true
          }
        },
        "vpnGatewayGeneration": {
          "type": "string",
          "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
          "enum": [
            "None",
            "Generation1",
            "Generation2"
          ],
          "x-ms-enum": {
            "name": "VpnGatewayGeneration",
            "modelAsString": true
          }
        },
        "enableBgp": {
          "type": "boolean",
          "description": "Whether BGP is enabled for this virtual network gateway or not."
        },
        "enablePrivateIpAddress": {
          "type": "boolean",
          "description": "Whether private IP needs to be enabled on this gateway for connections or not."
        },
        "virtualNetworkGatewayMigrationStatus": {
          "$ref": "#/definitions/VirtualNetworkGatewayMigrationStatus",
          "description": "The reference to the VirtualNetworkGatewayMigrationStatus which represents the status of migration."
        },
        "activeActive": {
          "type": "boolean",
          "description": "ActiveActive flag."
        },
        "enableHighBandwidthVpnGateway": {
          "type": "boolean",
          "description": "To enable Advanced Connectivity feature for VPN gateway"
        },
        "disableIPSecReplayProtection": {
          "type": "boolean",
          "description": "disableIPSecReplayProtection flag."
        },
        "gatewayDefaultSite": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting."
        },
        "sku": {
          "$ref": "#/definitions/VirtualNetworkGatewaySku",
          "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
        },
        "vpnClientConfiguration": {
          "$ref": "#/definitions/VpnClientConfiguration",
          "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations."
        },
        "virtualNetworkGatewayPolicyGroups": {
          "type": "array",
          "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayPolicyGroup"
          }
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Virtual network gateway's BGP speaker settings."
        },
        "customRoutes": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway resource."
        },
        "enableDnsForwarding": {
          "type": "boolean",
          "description": "Whether dns forwarding is enabled or not."
        },
        "inboundDnsForwardingEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "The IP address allocated by the gateway to which dns requests can be sent."
        },
        "vNetExtendedLocationResourceId": {
          "type": "string",
          "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet."
        },
        "natRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
          },
          "description": "NatRules for virtual network gateway."
        },
        "enableBgpRouteTranslationForNat": {
          "type": "boolean",
          "description": "EnableBgpRouteTranslationForNat flag."
        },
        "allowVirtualWanTraffic": {
          "type": "boolean",
          "description": "Configures this gateway to accept traffic from remote Virtual WAN networks."
        },
        "allowRemoteVnetTraffic": {
          "type": "boolean",
          "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN."
        },
        "adminState": {
          "type": "string",
          "description": "Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "adminState",
            "modelAsString": true
          }
        },
        "resiliencyModel": {
          "type": "string",
          "description": "Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed",
          "enum": [
            "SingleHomed",
            "MultiHomed"
          ],
          "x-ms-enum": {
            "name": "resiliencyModel",
            "modelAsString": true
          }
        }
      },
      "description": "VirtualNetworkGateway properties."
    },
    "VirtualNetworkGatewayAutoScaleConfiguration": {
      "properties": {
        "bounds": {
          "$ref": "#/definitions/VirtualNetworkGatewayAutoScaleBounds",
          "description": "The bounds of the autoscale configuration"
        }
      },
      "description": "Virtual Network Gateway Autoscale Configuration details"
    },
    "VirtualNetworkGatewayAutoScaleBounds": {
      "properties": {
        "min": {
          "type": "integer",
          "description": "Minimum scale Units for Autoscale configuration"
        },
        "max": {
          "type": "integer",
          "description": "Maximum Scale Units for Autoscale configuration"
        }
      }
    },
    "VpnClientRootCertificatePropertiesFormat": {
      "properties": {
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN client root certificate resource."
        }
      },
      "required": [
        "publicCertData"
      ],
      "description": "Properties of SSL certificates of application gateway."
    },
    "VpnClientRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRootCertificatePropertiesFormat",
          "description": "Properties of the vpn client root certificate."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "VPN client root certificate of virtual network gateway."
    },
    "VpnClientRevokedCertificatePropertiesFormat": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The revoked VPN client certificate thumbprint."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN client revoked certificate resource."
        }
      },
      "description": "Properties of the revoked VPN client certificate of virtual network gateway."
    },
    "VpnClientRevokedCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRevokedCertificatePropertiesFormat",
          "description": "Properties of the vpn client revoked certificate."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VPN client revoked certificate of virtual network gateway."
    },
    "RadiusServer": {
      "properties": {
        "radiusServerAddress": {
          "type": "string",
          "description": "The address of this radius server."
        },
        "radiusServerScore": {
          "type": "integer",
          "format": "int64",
          "description": "The initial score assigned to this radius server."
        },
        "radiusServerSecret": {
          "type": "string",
          "description": "The secret used for this radius server."
        }
      },
      "required": [
        "radiusServerAddress"
      ],
      "description": "Radius Server Settings."
    },
    "VpnClientConfiguration": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The reference to the address space resource which represents Address space for P2S VpnClient."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRootCertificate"
          },
          "description": "VpnClientRootCertificate for virtual network gateway."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRevokedCertificate"
          },
          "description": "VpnClientRevokedCertificate for Virtual network gateway."
        },
        "vpnClientProtocols": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN client protocol enabled for the virtual network gateway.",
            "enum": [
              "IkeV2",
              "SSTP",
              "OpenVPN"
            ],
            "x-ms-enum": {
              "name": "VpnClientProtocol",
              "modelAsString": true
            }
          },
          "description": "VpnClientProtocols for Virtual network gateway."
        },
        "vpnAuthenticationTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN authentication types enabled for the virtual network gateway.",
            "enum": [
              "Certificate",
              "Radius",
              "AAD"
            ],
            "x-ms-enum": {
              "name": "VpnAuthenticationType",
              "modelAsString": true
            }
          },
          "description": "VPN authentication types for the virtual network gateway.."
        },
        "vpnClientIpsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "VpnClientIpsecPolicies for virtual network gateway P2S client."
        },
        "radiusServerAddress": {
          "type": "string",
          "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection."
        },
        "radiusServerSecret": {
          "type": "string",
          "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection."
        },
        "radiusServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadiusServer"
          },
          "description": "The radiusServers property for multiple radius server configuration."
        },
        "aadTenant": {
          "type": "string",
          "description": "The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        },
        "aadAudience": {
          "type": "string",
          "description": "The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        },
        "aadIssuer": {
          "type": "string",
          "description": "The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        },
        "vngClientConnectionConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VngClientConnectionConfiguration"
          },
          "description": "per ip address pool connection policy for virtual network gateway P2S client."
        }
      },
      "description": "VpnClientConfiguration for P2S client."
    },
    "VirtualNetworkGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gateway SKU name.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3",
            "VpnGw4",
            "VpnGw5",
            "VpnGw1AZ",
            "VpnGw2AZ",
            "VpnGw3AZ",
            "VpnGw4AZ",
            "VpnGw5AZ",
            "ErGw1AZ",
            "ErGw2AZ",
            "ErGw3AZ",
            "ErGwScale"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Gateway SKU tier.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3",
            "VpnGw4",
            "VpnGw5",
            "VpnGw1AZ",
            "VpnGw2AZ",
            "VpnGw3AZ",
            "VpnGw4AZ",
            "VpnGw5AZ",
            "ErGw1AZ",
            "ErGw2AZ",
            "ErGw3AZ",
            "ErGwScale"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The capacity."
        }
      },
      "description": "VirtualNetworkGatewaySku details."
    },
    "BgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "The BGP speaker's ASN."
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "The BGP peering address and BGP identifier of this BGP speaker."
        },
        "peerWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight added to routes learned from this BGP speaker."
        },
        "bgpPeeringAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfigurationBgpPeeringAddress"
          },
          "description": "BGP peering address with IP configuration ID for virtual network gateway."
        }
      },
      "description": "BGP settings details."
    },
    "BgpPeerStatus": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The virtual network gateway's local address."
        },
        "neighbor": {
          "type": "string",
          "readOnly": true,
          "description": "The remote BGP peer."
        },
        "asn": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "minimum": 0,
          "maximum": 4294967295,
          "description": "The autonomous system number of the remote BGP peer."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The BGP peer state.",
          "enum": [
            "Unknown",
            "Stopped",
            "Idle",
            "Connecting",
            "Connected"
          ],
          "x-ms-enum": {
            "name": "BgpPeerState",
            "modelAsString": true
          }
        },
        "connectedDuration": {
          "type": "string",
          "readOnly": true,
          "description": "For how long the peering has been up."
        },
        "routesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of routes learned from this peer."
        },
        "messagesSent": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages sent."
        },
        "messagesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages received."
        }
      },
      "description": "BGP peer status details."
    },
    "GatewayRoute": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The gateway's local address."
        },
        "network": {
          "type": "string",
          "readOnly": true,
          "description": "The route's network prefix."
        },
        "nextHop": {
          "type": "string",
          "readOnly": true,
          "description": "The route's next hop."
        },
        "sourcePeer": {
          "type": "string",
          "readOnly": true,
          "description": "The peer this route was learned from."
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The source this route was learned from."
        },
        "asPath": {
          "type": "string",
          "readOnly": true,
          "description": "The route's AS path sequence."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The route's weight."
        }
      },
      "description": "Gateway routing details."
    },
    "VirtualNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayPropertiesFormat",
          "description": "Properties of the virtual network gateway."
        },
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of type local virtual network gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the virtual network gateway, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VpnClientParameters": {
      "properties": {
        "processorArchitecture": {
          "type": "string",
          "description": "VPN client Processor Architecture.",
          "enum": [
            "Amd64",
            "X86"
          ],
          "x-ms-enum": {
            "name": "ProcessorArchitecture",
            "modelAsString": true
          }
        },
        "authenticationMethod": {
          "$ref": "./network.json#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        },
        "radiusServerAuthCertificate": {
          "type": "string",
          "description": "The public certificate data for the radius server authentication certificate as a Base-64 encoded string. Required only if external radius authentication has been configured with EAPTLS authentication."
        },
        "clientRootCertificates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of client root certificates public certificate data encoded as Base-64 strings. Optional parameter for external radius based authentication with EAPTLS."
        }
      },
      "description": "Vpn Client Parameters for package generation."
    },
    "VirtualNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGateway"
          },
          "description": "A list of VirtualNetworkGateway resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGateways API service call."
    },
    "ListVirtualNetworkGatewayNatRulesResult": {
      "description": "Result of the request to list all nat rules to a virtual network gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayNatRule"
          },
          "description": "List of Nat Rules."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "BgpPeerStatusListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpPeerStatus"
          },
          "description": "List of BGP peers."
        }
      },
      "description": "Response for list BGP peer status API service call."
    },
    "GatewayRouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRoute"
          },
          "description": "List of gateway routes."
        }
      },
      "description": "List of virtual network gateway routes."
    },
    "GatewayResiliencyInformation": {
      "type": "object",
      "properties": {
        "overallScore": {
          "type": "string",
          "description": "Current Resiliency Score for the gateway"
        },
        "scoreChange": {
          "type": "string",
          "description": "Update in the Resiliency Score for the gateway from the last computed score"
        },
        "minScoreFromRecommendations": {
          "type": "string",
          "description": "Minimum increase expected in the score if the at least one of the recommendations is applied for the gateway"
        },
        "maxScoreFromRecommendations": {
          "type": "string",
          "description": "Maximum increase expected in the score if all of the recommendations are applied for the gateway"
        },
        "lastComputedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp denoting the last time when the resiliency score was computed for the gateway"
        },
        "nextEligibleComputeTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp denoting the next eligible time to re-compute the resiliency score for the gateway"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResiliencyRecommendationComponents"
          },
          "description": "List of Resiliency based Recommendation Components for the gateway"
        }
      },
      "description": "Gateway Resiliency Information"
    },
    "ResiliencyRecommendationComponents": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Resiliency based Recommendation Component"
        },
        "currentScore": {
          "type": "string",
          "description": "Current Score of the gateway"
        },
        "maxScore": {
          "type": "string",
          "description": "Max score that the gateway can achieve if the specified recommendation is applied"
        },
        "recommendations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayResiliencyRecommendation"
          },
          "description": "List of Gateway Resiliency based Recommendations"
        }
      },
      "description": "Gateway Resiliency based Recommendations"
    },
    "GatewayResiliencyRecommendation": {
      "type": "object",
      "properties": {
        "recommendationTitle": {
          "type": "string",
          "description": "Recommendation Title"
        },
        "recommendationId": {
          "type": "string",
          "description": "Recommendation Id"
        },
        "severity": {
          "type": "string",
          "description": "Impact associated with the recommendation"
        },
        "recommendationText": {
          "type": "string",
          "description": "Recommendation details"
        },
        "callToActionText": {
          "type": "string",
          "description": "Acton items to apply the recommendation"
        },
        "callToActionLink": {
          "type": "string",
          "description": "Link to the public documentation for the associated recommendation"
        }
      },
      "description": "Resiliency Recommendation details"
    },
    "RouteSourceDetails": {
      "type": "object",
      "properties": {
        "circuit": {
          "type": "string",
          "description": "Express Route Circuit identifier"
        },
        "pri": {
          "type": "string",
          "description": "Flag to indicate if the route learned from the primary device is active or passive"
        },
        "sec": {
          "type": "string",
          "description": "Flag to indicate if the route learned from the secondary device is active or passive"
        }
      }
    },
    "CircuitMetadataMap": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Express Route Circuit Name"
        },
        "link": {
          "type": "string",
          "description": "Link to the Express Route circuit"
        },
        "location": {
          "type": "string",
          "description": "Peering location of the Express Route Circuit"
        }
      }
    },
    "GatewayRouteSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Route Set name"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of different locations from where the routes are learned"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RouteSourceDetails"
            }
          },
          "description": "List of different Route Sources"
        }
      }
    },
    "GatewayRouteSetsInformation": {
      "type": "object",
      "properties": {
        "lastComputedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp denoting the last time when the route sets were computed for the gateway"
        },
        "nextEligibleComputeTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp denoting the next eligible time to re-compute the route sets for the gateway"
        },
        "routeSetVersion": {
          "type": "string",
          "description": "Version for the route set"
        },
        "routeSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRouteSet"
          },
          "description": "List of Gateway Route Sets"
        },
        "circuitsMetadataMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CircuitMetadataMap"
          },
          "description": "Dictionary containing map of the circuit id and circuit details"
        }
      },
      "description": "Gateway Route Sets Information"
    },
    "TunnelConnectionHealth": {
      "properties": {
        "tunnel": {
          "readOnly": true,
          "type": "string",
          "description": "Tunnel name."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Ingress Bytes Transferred in this connection."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Egress Bytes Transferred in this connection."
        },
        "lastConnectionEstablishedUtcTime": {
          "readOnly": true,
          "type": "string",
          "description": "The time at which connection was established in Utc format."
        }
      },
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnectionPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkGateway",
          "description": "The reference to virtual network gateway resource."
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkGateway",
          "description": "The reference to virtual network gateway resource."
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/LocalNetworkGateway",
          "description": "The reference to local network gateway resource."
        },
        "ingressNatRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of ingress NatRules."
        },
        "egressNatRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of egress NatRules."
        },
        "connectionType": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionType",
          "description": "Gateway connection type."
        },
        "connectionProtocol": {
          "$ref": "#/definitions/ConnectionProtocol",
          "description": "Connection protocol used for this connection."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The routing weight."
        },
        "dpdTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The dead peer detection timeout of this connection in seconds."
        },
        "connectionMode": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionMode",
          "description": "The connection mode for this connection."
        },
        "tunnelProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnectionTunnelProperties"
          },
          "description": "Tunnel properties for virtual network gateway connection"
        },
        "sharedKey": {
          "type": "string",
          "description": "The IPSec shared key."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "tunnelConnectionStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TunnelConnectionHealth"
          },
          "description": "Collection of all tunnels' connection health status."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The egress bytes transferred in this connection."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The ingress bytes transferred in this connection."
        },
        "peer": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "gatewayCustomBgpIpAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayCustomBgpIpAddressIpConfiguration"
          },
          "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
          "x-ms-identifiers": []
        },
        "useLocalAzureIpAddress": {
          "type": "boolean",
          "description": "Use private local Azure IP for the connection."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "trafficSelectorPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficSelectorPolicy"
          },
          "description": "The Traffic Selector Policies to be considered by this connection."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway connection resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway connection resource."
        },
        "expressRouteGatewayBypass": {
          "type": "boolean",
          "description": "Bypass ExpressRoute Gateway for data forwarding."
        },
        "enablePrivateLinkFastPath": {
          "type": "boolean",
          "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."
        }
      },
      "required": [
        "virtualNetworkGateway1",
        "connectionType"
      ],
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionPropertiesFormat",
          "description": "Properties of the virtual network gateway connection."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VirtualNetworkGatewayConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnection"
          },
          "description": "A list of VirtualNetworkGatewayConnection resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGatewayConnections API service call."
    },
    "ConnectionResetSharedKey": {
      "properties": {
        "keyLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 128,
          "description": "The virtual network connection reset shared key length, should between 1 and 128."
        }
      },
      "required": [
        "keyLength"
      ],
      "description": "The virtual network connection reset shared key."
    },
    "ConnectionSharedKey": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The virtual network connection shared key value."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "required": [
        "value"
      ],
      "description": "Response for GetConnectionSharedKey API service call."
    },
    "IpsecPolicy": {
      "properties": {
        "saLifeTimeSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
        },
        "saDataSizeKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
        },
        "ipsecEncryption": {
          "$ref": "#/definitions/IpsecEncryption",
          "description": "The IPSec encryption algorithm (IKE phase 1)."
        },
        "ipsecIntegrity": {
          "$ref": "#/definitions/IpsecIntegrity",
          "description": "The IPSec integrity algorithm (IKE phase 1)."
        },
        "ikeEncryption": {
          "$ref": "#/definitions/IkeEncryption",
          "description": "The IKE encryption algorithm (IKE phase 2)."
        },
        "ikeIntegrity": {
          "$ref": "#/definitions/IkeIntegrity",
          "description": "The IKE integrity algorithm (IKE phase 2)."
        },
        "dhGroup": {
          "$ref": "#/definitions/DhGroup",
          "description": "The DH Group used in IKE Phase 1 for initial SA."
        },
        "pfsGroup": {
          "$ref": "#/definitions/PfsGroup",
          "description": "The Pfs Group used in IKE Phase 2 for new child SA."
        }
      },
      "required": [
        "saLifeTimeSeconds",
        "saDataSizeKilobytes",
        "ipsecEncryption",
        "ipsecIntegrity",
        "ikeEncryption",
        "ikeIntegrity",
        "dhGroup",
        "pfsGroup"
      ],
      "description": "An IPSec Policy configuration for a virtual network gateway connection."
    },
    "VngClientConnectionConfigurationProperties": {
      "type": "object",
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The reference to the address space resource which represents Address space for P2S VpnClient."
        },
        "virtualNetworkGatewayPolicyGroups": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of references to virtualNetworkGatewayPolicyGroups"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VngClientConnectionConfiguration resource."
        }
      },
      "required": [
        "vpnClientAddressPool",
        "virtualNetworkGatewayPolicyGroups"
      ],
      "description": "Properties of VngClientConnectionConfiguration."
    },
    "VngClientConnectionConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VngClientConnectionConfigurationProperties",
          "description": "Properties of the vpn client root certificate."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "A vpn client connection configuration for client connection configuration."
    },
    "VirtualNetworkGatewayPolicyGroupProperties": {
      "type": "object",
      "properties": {
        "isDefault": {
          "type": "boolean",
          "description": "Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority for VirtualNetworkGatewayPolicyGroup."
        },
        "policyMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayPolicyGroupMember"
          },
          "description": "Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.",
          "x-ms-identifiers": []
        },
        "vngClientConnectionConfigurations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of references to vngClientConnectionConfigurations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VirtualNetworkGatewayPolicyGroup resource."
        }
      },
      "required": [
        "priority",
        "policyMembers",
        "isDefault"
      ],
      "description": "Properties of VirtualNetworkGatewayPolicyGroup."
    },
    "VirtualNetworkGatewayPolicyGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayPolicyGroupProperties",
          "description": "Properties of tVirtualNetworkGatewayPolicyGroup."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Parameters for VirtualNetworkGatewayPolicyGroup."
    },
    "VirtualNetworkGatewayPolicyGroupMember": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the VirtualNetworkGatewayPolicyGroupMember."
        },
        "attributeType": {
          "type": "string",
          "description": "The Vpn Policy member attribute type.",
          "enum": [
            "CertificateGroupId",
            "AADGroupId",
            "RadiusAzureGroupId"
          ],
          "x-ms-enum": {
            "name": "VpnPolicyMemberAttributeType",
            "modelAsString": true
          }
        },
        "attributeValue": {
          "type": "string",
          "description": "The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember."
        }
      },
      "description": "Vpn Client Connection configuration PolicyGroup member",
      "type": "object"
    },
    "TrafficSelectorPolicy": {
      "properties": {
        "localAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of local address spaces in CIDR format."
        },
        "remoteAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of remote address spaces in CIDR format."
        }
      },
      "required": [
        "localAddressRanges",
        "remoteAddressRanges"
      ],
      "description": "An traffic selector policy for a virtual network gateway connection."
    },
    "ConnectionProtocol": {
      "type": "string",
      "description": "Gateway connection protocol.",
      "enum": [
        "IKEv2",
        "IKEv1"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionProtocol",
        "modelAsString": true
      }
    },
    "VpnClientIPsecParameters": {
      "properties": {
        "saLifeTimeSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client."
        },
        "saDataSizeKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for P2S client.."
        },
        "ipsecEncryption": {
          "$ref": "#/definitions/IpsecEncryption",
          "description": "The IPSec encryption algorithm (IKE phase 1)."
        },
        "ipsecIntegrity": {
          "$ref": "#/definitions/IpsecIntegrity",
          "description": "The IPSec integrity algorithm (IKE phase 1)."
        },
        "ikeEncryption": {
          "$ref": "#/definitions/IkeEncryption",
          "description": "The IKE encryption algorithm (IKE phase 2)."
        },
        "ikeIntegrity": {
          "$ref": "#/definitions/IkeIntegrity",
          "description": "The IKE integrity algorithm (IKE phase 2)."
        },
        "dhGroup": {
          "$ref": "#/definitions/DhGroup",
          "description": "The DH Group used in IKE Phase 1 for initial SA."
        },
        "pfsGroup": {
          "$ref": "#/definitions/PfsGroup",
          "description": "The Pfs Group used in IKE Phase 2 for new child SA."
        }
      },
      "required": [
        "saLifeTimeSeconds",
        "saDataSizeKilobytes",
        "ipsecEncryption",
        "ipsecIntegrity",
        "ikeEncryption",
        "ikeIntegrity",
        "dhGroup",
        "pfsGroup"
      ],
      "description": "An IPSec parameters for a virtual network gateway P2S connection."
    },
    "LocalNetworkGatewayPropertiesFormat": {
      "properties": {
        "localNetworkAddressSpace": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "Local network site address space."
        },
        "gatewayIpAddress": {
          "type": "string",
          "description": "IP address of local network gateway."
        },
        "fqdn": {
          "type": "string",
          "description": "FQDN of local network gateway."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the local network gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the local network gateway resource."
        }
      },
      "description": "LocalNetworkGateway properties."
    },
    "LocalNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LocalNetworkGatewayPropertiesFormat",
          "description": "Properties of the local network gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "LocalNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalNetworkGateway"
          },
          "description": "A list of local network gateways that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListLocalNetworkGateways API service call."
    },
    "VirtualNetworkConnectionGatewayReference": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of VirtualNetworkGateway or LocalNetworkGateway resource."
        }
      },
      "required": [
        "id"
      ],
      "description": "A reference to VirtualNetworkGateway or LocalNetworkGateway resource."
    },
    "VirtualNetworkGatewayConnectionListEntityPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to virtual network gateway resource."
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to virtual network gateway resource."
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to local network gateway resource."
        },
        "connectionType": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionType",
          "description": "Gateway connection type."
        },
        "connectionProtocol": {
          "$ref": "#/definitions/ConnectionProtocol",
          "description": "Connection protocol used for this connection."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The routing weight."
        },
        "connectionMode": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionMode",
          "description": "The connection mode for this connection."
        },
        "sharedKey": {
          "type": "string",
          "description": "The IPSec shared key."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "tunnelConnectionStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TunnelConnectionHealth"
          },
          "description": "Collection of all tunnels' connection health status."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The egress bytes transferred in this connection."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The ingress bytes transferred in this connection."
        },
        "peer": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "gatewayCustomBgpIpAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayCustomBgpIpAddressIpConfiguration"
          },
          "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
          "x-ms-identifiers": []
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "trafficSelectorPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficSelectorPolicy"
          },
          "description": "The Traffic Selector Policies to be considered by this connection."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway connection resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway connection resource."
        },
        "expressRouteGatewayBypass": {
          "type": "boolean",
          "description": "Bypass ExpressRoute Gateway for data forwarding."
        },
        "enablePrivateLinkFastPath": {
          "type": "boolean",
          "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."
        }
      },
      "required": [
        "virtualNetworkGateway1",
        "connectionType"
      ],
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnectionListEntity": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionListEntityPropertiesFormat",
          "description": "Properties of the virtual network gateway connection."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VirtualNetworkGatewayListConnectionsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnectionListEntity"
          },
          "description": "A list of VirtualNetworkGatewayConnection resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the VirtualNetworkGatewayListConnections API service call."
    },
    "VpnDeviceScriptParameters": {
      "properties": {
        "vendor": {
          "type": "string",
          "description": "The vendor for the vpn device."
        },
        "deviceFamily": {
          "type": "string",
          "description": "The device family for the vpn device."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version for the vpn device."
        }
      },
      "description": "Vpn device configuration script generation parameters."
    },
    "DhGroup": {
      "type": "string",
      "description": "The DH Groups used in IKE Phase 1 for initial SA.",
      "enum": [
        "None",
        "DHGroup1",
        "DHGroup2",
        "DHGroup14",
        "DHGroup2048",
        "ECP256",
        "ECP384",
        "DHGroup24"
      ],
      "x-ms-enum": {
        "name": "DhGroup",
        "modelAsString": true
      }
    },
    "IkeEncryption": {
      "type": "string",
      "description": "The IKE encryption algorithm (IKE phase 2).",
      "enum": [
        "DES",
        "DES3",
        "AES128",
        "AES192",
        "AES256",
        "GCMAES256",
        "GCMAES128"
      ],
      "x-ms-enum": {
        "name": "IkeEncryption",
        "modelAsString": true
      }
    },
    "IkeIntegrity": {
      "type": "string",
      "description": "The IKE integrity algorithm (IKE phase 2).",
      "enum": [
        "MD5",
        "SHA1",
        "SHA256",
        "SHA384",
        "GCMAES256",
        "GCMAES128"
      ],
      "x-ms-enum": {
        "name": "IkeIntegrity",
        "modelAsString": true
      }
    },
    "IpsecEncryption": {
      "type": "string",
      "description": "The IPSec encryption algorithm (IKE phase 1).",
      "enum": [
        "None",
        "DES",
        "DES3",
        "AES128",
        "AES192",
        "AES256",
        "GCMAES128",
        "GCMAES192",
        "GCMAES256"
      ],
      "x-ms-enum": {
        "name": "IpsecEncryption",
        "modelAsString": true
      }
    },
    "IpsecIntegrity": {
      "type": "string",
      "description": "The IPSec integrity algorithm (IKE phase 1).",
      "enum": [
        "MD5",
        "SHA1",
        "SHA256",
        "GCMAES128",
        "GCMAES192",
        "GCMAES256"
      ],
      "x-ms-enum": {
        "name": "IpsecIntegrity",
        "modelAsString": true
      }
    },
    "PfsGroup": {
      "type": "string",
      "description": "The Pfs Groups used in IKE Phase 2 for new child SA.",
      "enum": [
        "None",
        "PFS1",
        "PFS2",
        "PFS2048",
        "ECP256",
        "ECP384",
        "PFS24",
        "PFS14",
        "PFSMM"
      ],
      "x-ms-enum": {
        "name": "PfsGroup",
        "modelAsString": true
      }
    },
    "VirtualNetworkGatewayConnectionStatus": {
      "type": "string",
      "description": "Virtual Network Gateway connection status.",
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionStatus",
        "modelAsString": true
      }
    },
    "VirtualNetworkGatewayConnectionType": {
      "type": "string",
      "description": "Gateway connection type.",
      "enum": [
        "IPsec",
        "Vnet2Vnet",
        "ExpressRoute",
        "VPNClient"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionType",
        "modelAsString": true
      }
    },
    "VirtualNetworkGatewayConnectionMode": {
      "type": "string",
      "description": "Gateway connection type.",
      "enum": [
        "Default",
        "ResponderOnly",
        "InitiatorOnly"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionMode",
        "modelAsString": true
      }
    },
    "VpnClientConnectionHealthDetailListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientConnectionHealthDetail"
          },
          "description": "List of vpn client connection health."
        }
      },
      "description": "List of virtual network gateway vpn client connection health."
    },
    "VpnClientConnectionHealthDetail": {
      "properties": {
        "vpnConnectionId": {
          "type": "string",
          "readOnly": true,
          "description": "The vpn client Id."
        },
        "vpnConnectionDuration": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The duration time of a connected vpn client."
        },
        "vpnConnectionTime": {
          "type": "string",
          "readOnly": true,
          "description": "The start time of a connected vpn client."
        },
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The public Ip of a connected vpn client."
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The assigned private Ip of a connected vpn client."
        },
        "vpnUserName": {
          "type": "string",
          "readOnly": true,
          "description": "The user name of a connected vpn client."
        },
        "maxBandwidth": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The max band width."
        },
        "egressPacketsTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The egress packets per second."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The egress bytes per second."
        },
        "ingressPacketsTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The ingress packets per second."
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The ingress bytes per second."
        },
        "maxPacketsPerSecond": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The max packets transferred per second."
        }
      },
      "description": "VPN client connection health detail."
    },
    "VpnPacketCaptureStopParameters": {
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "SAS url for packet capture on virtual network gateway."
        }
      },
      "description": "Stop packet capture parameters."
    },
    "VpnPacketCaptureStartParameters": {
      "properties": {
        "filterData": {
          "type": "string",
          "description": "Start Packet capture parameters."
        }
      },
      "description": "Start packet capture parameters on virtual network gateway."
    },
    "ExpressRouteFailoverAllTestDetails": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExpressRouteFailoverTestDetails"
      },
      "description": "Gateway Failover All Test Details"
    },
    "ExpressRouteFailoverTestDetails": {
      "type": "object",
      "properties": {
        "peeringLocation": {
          "type": "string",
          "description": "Peering location of the test"
        },
        "circuits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteFailoverCircuitResourceDetails"
          },
          "description": "All circuits in the peering location"
        },
        "status": {
          "type": "string",
          "description": "The current status of the test",
          "enum": [
            "NotStarted",
            "Starting",
            "Running",
            "StartFailed",
            "Stopping",
            "Completed",
            "StopFailed",
            "Invalid",
            "Expired"
          ],
          "x-ms-enum": {
            "name": "FailoverTestStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "type": "string",
          "description": "Time when the test was started"
        },
        "endTime": {
          "type": "string",
          "description": "Time when the test was completed"
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteFailoverConnectionResourceDetails"
          },
          "description": "All connections to the circuits in the peering location"
        },
        "testGuid": {
          "type": "string",
          "description": "The unique GUID associated with the test"
        },
        "testType": {
          "type": "string",
          "description": "The type of failover test",
          "enum": [
            "SingleSiteFailover",
            "MultiSiteFailover",
            "All"
          ],
          "x-ms-enum": {
            "name": "FailoverTestType",
            "modelAsString": true
          }
        },
        "issues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of all issues with the test"
        }
      },
      "description": "ExpressRoute failover test details"
    },
    "ExpressRouteFailoverCircuitResourceDetails": {
      "type": "object",
      "properties": {
        "nrpResourceUri": {
          "type": "string",
          "description": "NRP Resource URI of the circuit",
          "format": "arm-id"
        },
        "name": {
          "type": "string",
          "description": "Circuit Name"
        },
        "connectionName": {
          "type": "string",
          "description": "Connection name associated with the circuit"
        }
      }
    },
    "ExpressRouteFailoverConnectionResourceDetails": {
      "type": "object",
      "properties": {
        "nrpResourceUri": {
          "type": "string",
          "description": "NRP Resource URI of the connection",
          "format": "arm-id"
        },
        "name": {
          "type": "string",
          "description": "Connection Name"
        },
        "status": {
          "type": "string",
          "description": "The current status of the connection",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "FailoverConnectionStatus",
            "modelAsString": true
          }
        },
        "lastUpdatedTime": {
          "type": "string",
          "description": "Time when the connection was last updated"
        }
      }
    },
    "ExpressRouteFailoverSingleTestDetailsObject": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExpressRouteFailoverSingleTestDetails"
      },
      "description": "Gateway Failover Single Test Details Object"
    },
    "ExpressRouteFailoverSingleTestDetails": {
      "type": "object",
      "properties": {
        "peeringLocation": {
          "type": "string",
          "description": "Peering location of the test"
        },
        "status": {
          "type": "string",
          "description": "The current status of the test",
          "enum": [
            "NotStarted",
            "Starting",
            "Running",
            "StartFailed",
            "Stopping",
            "Completed",
            "StopFailed",
            "Invalid",
            "Expired"
          ],
          "x-ms-enum": {
            "name": "FailoverTestStatusForSingleTest",
            "modelAsString": true
          }
        },
        "startTimeUtc": {
          "type": "string",
          "description": "Time when the test was started"
        },
        "endTimeUtc": {
          "type": "string",
          "description": "Time when the test was completed"
        },
        "redundantRoutes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteFailoverRedundantRoute"
          },
          "description": "List of routes received from this peering as well as some other peering location"
        },
        "nonRedundantRoutes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of al the routes that were received only from this peering location"
        },
        "wasSimulationSuccessful": {
          "type": "boolean",
          "description": "Whether the failover simulation was successful or not"
        },
        "failoverConnectionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverConnectionDetails"
          },
          "description": "List of all the failover connections for this peering location"
        }
      },
      "description": "ExpressRoute failover single test details"
    },
    "ExpressRouteFailoverRedundantRoute": {
      "type": "object",
      "properties": {
        "peeringLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of all the peering locations for the redundant routes"
        },
        "routes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of all the redundant routes in the peering locations"
        }
      }
    },
    "FailoverConnectionDetails": {
      "type": "object",
      "properties": {
        "failoverConnectionName": {
          "type": "string",
          "description": "Name of the failover connection"
        },
        "failoverLocation": {
          "type": "string",
          "description": "Location of the failover connection"
        },
        "isVerified": {
          "type": "boolean",
          "description": "Whether the customer was able to establish connectivity through this failover connection or not"
        }
      }
    },
    "ExpressRouteFailoverStopApiParameters": {
      "type": "object",
      "properties": {
        "peeringLocation": {
          "type": "string",
          "description": "Peering location of the test"
        },
        "wasSimulationSuccessful": {
          "type": "boolean",
          "description": "Whether the failover simulation was successful or not"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverConnectionDetails"
          },
          "description": "List of all the failover connections for this peering location"
        }
      },
      "description": "Start packet capture parameters on virtual network gateway."
    },
    "IPConfigurationBgpPeeringAddress": {
      "properties": {
        "ipconfigurationId": {
          "type": "string",
          "description": "The ID of IP configuration which belongs to gateway."
        },
        "defaultBgpIpAddresses": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of default BGP peering addresses which belong to IP configuration."
        },
        "customBgpIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of custom BGP peering addresses which belong to IP configuration."
        },
        "tunnelIpAddresses": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of tunnel public IP addresses which belong to IP configuration."
        }
      },
      "description": "Properties of IPConfigurationBgpPeeringAddress."
    },
    "GatewayCustomBgpIpAddressIpConfiguration": {
      "type": "object",
      "properties": {
        "ipConfigurationId": {
          "type": "string",
          "description": "The IpconfigurationId of ipconfiguration which belongs to gateway."
        },
        "customBgpIpAddress": {
          "type": "string",
          "description": "The custom BgpPeeringAddress which belongs to IpconfigurationId."
        }
      },
      "required": [
        "ipConfigurationId",
        "customBgpIpAddress"
      ],
      "description": "GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection."
    },
    "VirtualNetworkGatewayConnectionTunnelProperties": {
      "type": "object",
      "properties": {
        "tunnelIpAddress": {
          "type": "string",
          "description": "Tunnel remote IP address"
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "Tunnel BGP peering address"
        }
      }
    },
    "IpType": {
      "description": "Enumeration to indicate the IP type.",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "IpType"
      }
    },
    "IpamPool": {
      "description": "Instance of Pool resource.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpamPoolProperties"
        },
        "etag": {
          "description": "String representing unique etag for the resource document.",
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/CommonTrackedResource"
        }
      ]
    },
    "IpamPoolList": {
      "description": "List of IpamPool",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpamPool"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      }
    },
    "IpamPoolProperties": {
      "description": "Properties of IpamPool resource properties which are specific to the Pool resource.",
      "required": [
        "addressPrefixes"
      ],
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "description": "String representing a friendly name for the resource.",
          "type": "string"
        },
        "ipAddressType": {
          "description": "List of IP address type for the IpamPool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpType"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "parentPoolName": {
          "description": "String representing parent IpamPool resource name. If empty the IpamPool will be a root pool.",
          "type": "string"
        },
        "addressPrefixes": {
          "description": "List of IP address prefixes of the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "IpamPoolUpdate": {
      "description": "Represents the IpamPool update API request interface.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/IpamPoolUpdateProperties"
        }
      }
    },
    "IpamPoolUpdateProperties": {
      "description": "Represents the IpamPool update properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "description": "String representing a friendly name for the resource.",
          "type": "string"
        }
      }
    },
    "PoolAssociation": {
      "description": "IpamPool association information.",
      "required": [
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "Resource id of the associated Azure resource.",
          "type": "string"
        },
        "poolId": {
          "format": "arm-id",
          "description": "IpamPool id for which the resource is associated to.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "addressPrefixes": {
          "description": "List of assigned IP address prefixes in the IpamPool of the associated resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "reservedPrefixes": {
          "description": "List of reserved IP address prefixes in the IpamPool of the associated resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "totalNumberOfIPAddresses": {
          "description": "Total number of assigned IP addresses of the association.",
          "type": "string",
          "readOnly": true
        },
        "numberOfReservedIPAddresses": {
          "description": "Total number of reserved IP addresses of the association.",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "format": "date-time",
          "description": "Creation time of the association.",
          "type": "string",
          "readOnly": true
        },
        "reservationExpiresAt": {
          "format": "date-time",
          "description": "Expire time for IP addresses reserved.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PoolAssociationList": {
      "description": "List of PoolAssociation",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolAssociation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      }
    },
    "PoolUsage": {
      "description": "IpamPool usage information.",
      "type": "object",
      "properties": {
        "addressPrefixes": {
          "description": "List of IP address prefixes of the resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "childPools": {
          "description": "List of IpamPool that are children of this IpamPool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceBasics"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "allocatedAddressPrefixes": {
          "description": "List of assigned IP address prefixes.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "reservedAddressPrefixes": {
          "description": "List of reserved IP address prefixes. These IP addresses could be reclaimed if not assigned in the given time.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "availableAddressPrefixes": {
          "description": "List of available IP address prefixes.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "totalNumberOfIPAddresses": {
          "description": "Total number of IP addresses managed in the IpamPool.",
          "type": "string",
          "readOnly": true
        },
        "numberOfAllocatedIPAddresses": {
          "description": "Total number of assigned IP addresses in the IpamPool.",
          "type": "string",
          "readOnly": true
        },
        "numberOfReservedIPAddresses": {
          "description": "Total number of reserved IP addresses in the IpamPool.",
          "type": "string",
          "readOnly": true
        },
        "numberOfAvailableIPAddresses": {
          "description": "Total number of available IP addresses in the IpamPool.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceBasics": {
      "description": "Representation of basic resource information.",
      "type": "object",
      "properties": {
        "resourceId": {
          "format": "arm-id",
          "description": "ResourceId of the Azure resource.",
          "type": "string"
        },
        "addressPrefixes": {
          "description": "List of IP address prefixes of the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StaticCidr": {
      "description": "Instance of StaticCidr resource.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StaticCidrProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/CommonProxyResource"
        }
      ]
    },
    "StaticCidrList": {
      "description": "List of StaticCidr",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticCidr"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      }
    },
    "StaticCidrProperties": {
      "description": "Properties of static CIDR resource.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "numberOfIPAddressesToAllocate": {
          "description": "Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.",
          "type": "string"
        },
        "addressPrefixes": {
          "description": "List of IP address prefixes of the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalNumberOfIPAddresses": {
          "description": "Total number of IP addresses allocated for the static CIDR resource.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "PrivateLinkService": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the load balancer."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateLinkServiceProperties",
          "description": "Properties of the private link service."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Private link service resource."
    },
    "PrivateLinkServiceProperties": {
      "properties": {
        "loadBalancerFrontendIpConfigurations": {
          "type": "array",
          "items": {
            "$ref": "./loadBalancer.json#/definitions/FrontendIPConfiguration"
          },
          "description": "An array of references to the load balancer IP configurations."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceIpConfiguration"
          },
          "description": "An array of private link service IP configurations."
        },
        "destinationIPAddress": {
          "readOnly": false,
          "type": "string",
          "description": "The destination IP address of the private link service."
        },
        "networkInterfaces": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterface"
          },
          "description": "An array of references to the network interfaces created for this private link service."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private link service resource."
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "An array of list about connections to the private endpoint."
        },
        "visibility": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceSet"
            }
          ],
          "description": "The visibility list of the private link service."
        },
        "autoApproval": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceSet"
            }
          ],
          "description": "The auto-approval list of the private link service."
        },
        "fqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Fqdn."
        },
        "alias": {
          "readOnly": true,
          "type": "string",
          "description": "The alias of the private link service."
        },
        "enableProxyProtocol": {
          "type": "boolean",
          "description": "Whether the private link service is enabled for proxy protocol or not."
        }
      },
      "description": "Properties of the private link service."
    },
    "ResourceSet": {
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of subscriptions."
        }
      },
      "description": "The base resource set for visibility and auto-approval."
    },
    "PrivateLinkServiceIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateLinkServiceIpConfigurationProperties",
          "description": "Properties of the private link service ip configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of private link service ip configuration."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "The private link service ip configuration."
    },
    "PrivateLinkServiceIpConfigurationProperties": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether the ip configuration is primary or not."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private link service IP configuration resource."
        },
        "privateIPAddressVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4."
        }
      },
      "description": "Properties of private link service IP configuration."
    },
    "PrivateEndpointConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Properties of the private end point connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "PrivateEndpointConnection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "readOnly": true,
          "$ref": "./privateEndpoint.json#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        },
        "linkIdentifier": {
          "readOnly": true,
          "type": "string",
          "description": "The consumer link id."
        },
        "privateEndpointLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the private endpoint."
        }
      },
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateLinkServiceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkService"
          },
          "description": "A list of PrivateLinkService resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListPrivateLinkService API service call."
    },
    "PrivateEndpointConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "A list of PrivateEndpointConnection resources for a specific private link service."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListPrivateEndpointConnection API service call."
    },
    "CheckPrivateLinkServiceVisibilityRequest": {
      "properties": {
        "privateLinkServiceAlias": {
          "type": "string",
          "description": "The alias of the private link service."
        }
      },
      "description": "Request body of the CheckPrivateLinkServiceVisibility API service call."
    },
    "PrivateLinkServiceVisibility": {
      "properties": {
        "visible": {
          "type": "boolean",
          "description": "Private Link Service Visibility (True/False)."
        }
      },
      "description": "Response for the CheckPrivateLinkServiceVisibility API service call."
    },
    "AutoApprovedPrivateLinkServicesResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoApprovedPrivateLinkService"
          },
          "description": "An array of auto approved private link service."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "An array of private link service id that can be linked to a private end point with auto approved."
    },
    "AutoApprovedPrivateLinkService": {
      "properties": {
        "privateLinkService": {
          "type": "string",
          "description": "The id of the private link service resource."
        }
      },
      "description": "The information of an AutoApprovedPrivateLinkService."
    },
    "NetworkManagerRoutingConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkManagerRoutingConfigurationPropertiesFormat",
          "description": "Indicates the properties for the network manager routing configuration."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the routing configuration"
    },
    "NetworkManagerRoutingConfigurationPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the routing configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "description": "Defines the routing configuration properties."
    },
    "NetworkManagerRoutingConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkManagerRoutingConfiguration"
          },
          "description": "Gets a page of routing configurations"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "A list of network manager routing configurations"
    },
    "RoutingRuleCollection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutingRuleCollectionPropertiesFormat",
          "description": "Indicates the properties for the network manager routing rule collection."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the routing rule collection."
    },
    "RoutingRuleCollectionPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the routing rule collection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        },
        "appliesTo": {
          "type": "array",
          "x-ms-identifiers": [
            "networkGroupId"
          ],
          "items": {
            "$ref": "#/definitions/NetworkManagerRoutingGroupItem"
          },
          "description": "Groups for configuration"
        },
        "disableBgpRoutePropagation": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "DisableBgpRoutePropagation",
            "modelAsString": true
          },
          "description": "Determines whether BGP route propagation is enabled. Defaults to true."
        }
      },
      "required": [
        "appliesTo"
      ],
      "description": "Defines the routing rule collection properties."
    },
    "NetworkManagerRoutingGroupItem": {
      "type": "object",
      "properties": {
        "networkGroupId": {
          "type": "string",
          "description": "Network manager group Id."
        }
      },
      "required": [
        "networkGroupId"
      ],
      "description": "Network manager routing group item."
    },
    "RoutingRuleCollectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingRuleCollection"
          },
          "description": "A list of network manager routing configuration rule collections"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Routing configuration rule collection list result."
    },
    "RoutingRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RoutingRulePropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the routing rule"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Network routing rule."
    },
    "RoutingRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        },
        "destination": {
          "$ref": "#/definitions/RoutingRuleRouteDestination",
          "description": "Indicates the destination for this particular rule."
        },
        "nextHop": {
          "$ref": "#/definitions/RoutingRuleNextHop",
          "description": "Indicates the next hop for this particular rule."
        }
      },
      "required": [
        "destination",
        "nextHop"
      ],
      "description": "Routing rule resource."
    },
    "RoutingRuleRouteDestination": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RoutingRuleDestinationType",
          "description": "Destination type."
        },
        "destinationAddress": {
          "type": "string",
          "description": "Destination address."
        }
      },
      "required": [
        "type",
        "destinationAddress"
      ],
      "description": "Route destination."
    },
    "RoutingRuleNextHop": {
      "type": "object",
      "properties": {
        "nextHopType": {
          "$ref": "#/definitions/RoutingRuleNextHopType",
          "description": "Next hop type."
        },
        "nextHopAddress": {
          "type": "string",
          "description": "Next hop address. Only required if the next hop type is VirtualAppliance."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Next hop."
    },
    "RoutingRuleNextHopType": {
      "type": "string",
      "description": "Routing rule next hop type.",
      "enum": [
        "Internet",
        "NoNextHop",
        "VirtualAppliance",
        "VirtualNetworkGateway",
        "VnetLocal"
      ],
      "x-ms-enum": {
        "name": "RoutingRuleNextHopType",
        "modelAsString": true
      }
    },
    "RoutingRuleDestinationType": {
      "type": "string",
      "description": "Routing rule destination type.",
      "enum": [
        "AddressPrefix",
        "ServiceTag"
      ],
      "x-ms-enum": {
        "name": "RoutingRuleDestinationType",
        "modelAsString": true
      }
    },
    "RoutingRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingRule"
          },
          "description": "A list of routing rules."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Routing configuration rule list result."
    },
    "UsageName": {
      "properties": {
        "value": {
          "type": "string",
          "description": "A string describing the resource name."
        },
        "localizedValue": {
          "type": "string",
          "description": "A localized string describing the resource name."
        }
      },
      "description": "The usage names."
    },
    "Usage": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource identifier."
        },
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "The current value of the usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The limit of usage."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ],
      "description": "The network resource usage."
    },
    "UsagesListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list network resource usages."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "The list usages operation response."
    },
    "DscpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DscpConfigurationPropertiesFormat",
          "description": "Properties of the network interface."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Differentiated Services Code Point configuration for any given network interface"
    },
    "DscpConfigurationPropertiesFormat": {
      "properties": {
        "markings": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of markings to be used in the configuration."
        },
        "sourceIpRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosIpRange"
          },
          "description": "Source IP ranges."
        },
        "destinationIpRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosIpRange"
          },
          "description": "Destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosPortRange"
          },
          "description": "Sources port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosPortRange"
          },
          "description": "Destination port ranges."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "DoNotUse",
            "Icmp",
            "Tcp",
            "Udp",
            "Gre",
            "Esp",
            "Ah",
            "Vxlan",
            "All"
          ],
          "x-ms-enum": {
            "name": "ProtocolType",
            "modelAsString": true
          },
          "description": "RNM supported protocol types."
        },
        "qosDefinitionCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosDefinition"
          },
          "description": "QoS object definitions"
        },
        "qosCollectionId": {
          "type": "string",
          "readOnly": true,
          "description": "Qos Collection ID generated by RNM."
        },
        "associatedNetworkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterface"
          },
          "readOnly": true,
          "description": "Associated Network Interfaces to the DSCP Configuration."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the DSCP Configuration resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the DSCP Configuration resource."
        }
      },
      "description": "Differentiated Services Code Point configuration properties."
    },
    "QosDefinition": {
      "type": "object",
      "properties": {
        "markings": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of markings to be used in the configuration."
        },
        "sourceIpRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosIpRange"
          },
          "description": "Source IP ranges."
        },
        "destinationIpRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosIpRange"
          },
          "description": "Destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosPortRange"
          },
          "description": "Sources port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QosPortRange"
          },
          "description": "Destination port ranges."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "DoNotUse",
            "Icmp",
            "Tcp",
            "Udp",
            "Gre",
            "Esp",
            "Ah",
            "Vxlan",
            "All"
          ],
          "x-ms-enum": {
            "name": "ProtocolType",
            "modelAsString": true
          },
          "description": "RNM supported protocol types."
        }
      },
      "description": "Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking."
    },
    "QosIpRange": {
      "properties": {
        "startIP": {
          "type": "string",
          "description": "Start IP Address."
        },
        "endIP": {
          "type": "string",
          "description": "End IP Address."
        }
      },
      "description": "Qos Traffic Profiler IP Range properties."
    },
    "QosPortRange": {
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Qos Port Range start."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "Qos Port Range end."
        }
      },
      "description": "Qos Traffic Profiler Port range properties."
    },
    "DscpConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscpConfiguration"
          },
          "description": "A list of dscp configurations in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the DscpConfigurationList API service call."
    },
    "AuthorizationPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorization key."
        },
        "authorizationUseStatus": {
          "type": "string",
          "description": "The authorization use status.",
          "enum": [
            "Available",
            "InUse"
          ],
          "x-ms-enum": {
            "name": "AuthorizationUseStatus",
            "modelAsString": true
          }
        },
        "connectionResourceUri": {
          "readOnly": true,
          "type": "string",
          "description": "The reference to the ExpressRoute connection resource using the authorization."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the authorization resource."
        }
      },
      "description": "Properties of ExpressRouteCircuitAuthorization."
    },
    "ExpressRouteCircuitAuthorization": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationPropertiesFormat",
          "description": "Properties of the express route circuit authorization."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Authorization in an ExpressRouteCircuit resource."
    },
    "AuthorizationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "The authorizations in an ExpressRoute Circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit."
    },
    "AdvertisedPublicPrefixProperties": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "Advertised Public Prefix."
        },
        "validationId": {
          "type": "string",
          "description": "Validation string that contains circuit peering info."
        },
        "signature": {
          "type": "string",
          "description": "Signed string generated by encrypting validationId with a private key."
        },
        "validationState": {
          "readOnly": true,
          "type": "string",
          "description": "Advertised Public Prefix State that denotes if the prefix is validated or not.",
          "enum": [
            "NotConfigured",
            "Configuring",
            "Configured",
            "ValidationNeeded",
            "ValidationFailed",
            "ManualValidationNeeded",
            "AsnValidationFailed",
            "CertificateMissingInRoutingRegistry",
            "InvalidSignatureEncoding",
            "SignatureVerificationFailed"
          ],
          "x-ms-enum": {
            "name": "AdvertisedPublicPrefixPropertiesValidationState",
            "modelAsString": true
          }
        }
      },
      "description": "Prefix properties required to perform validation using openssl signature."
    },
    "ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "advertisedPublicPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The reference to AdvertisedPublicPrefixes."
        },
        "advertisedCommunities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The communities of bgp peering. Specified for microsoft peering."
        },
        "advertisedPublicPrefixesState": {
          "readOnly": true,
          "type": "string",
          "description": "The advertised public prefix state of the Peering resource.",
          "enum": [
            "NotConfigured",
            "Configuring",
            "Configured",
            "ValidationNeeded"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState",
            "modelAsString": true
          }
        },
        "legacyMode": {
          "type": "integer",
          "format": "int32",
          "description": "The legacy mode of the peering."
        },
        "customerASN": {
          "type": "integer",
          "format": "int32",
          "description": "The CustomerASN of the peering."
        },
        "routingRegistryName": {
          "type": "string",
          "description": "The RoutingRegistryName of the configuration."
        },
        "advertisedPublicPrefixInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvertisedPublicPrefixProperties"
          },
          "x-ms-identifiers": [],
          "description": "List of Prefix information required to perform validation."
        }
      },
      "description": "Specifies the peering configuration."
    },
    "Ipv6ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "routeFilter": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the RouteFilter resource."
        },
        "state": {
          "type": "string",
          "description": "The state of peering.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringState",
            "modelAsString": true
          }
        }
      },
      "description": "Contains IPv6 peering config."
    },
    "ExpressRouteCircuitStats": {
      "properties": {
        "primarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "The Primary BytesIn of the peering."
        },
        "primarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "The primary BytesOut of the peering."
        },
        "secondarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "The secondary BytesIn of the peering."
        },
        "secondarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "The secondary BytesOut of the peering."
        }
      },
      "description": "Contains stats associated with the peering."
    },
    "ExpressRouteCircuitPeeringPropertiesFormat": {
      "properties": {
        "peeringType": {
          "$ref": "#/definitions/ExpressRoutePeeringType",
          "description": "The peering type."
        },
        "state": {
          "$ref": "#/definitions/ExpressRoutePeeringState",
          "description": "The peering state."
        },
        "azureASN": {
          "type": "integer",
          "format": "int32",
          "description": "The Azure ASN."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "The peer ASN."
        },
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "primaryAzurePort": {
          "type": "string",
          "description": "The primary port."
        },
        "secondaryAzurePort": {
          "type": "string",
          "description": "The secondary port."
        },
        "sharedKey": {
          "type": "string",
          "description": "The shared key."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "The VLAN ID."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "stats": {
          "$ref": "#/definitions/ExpressRouteCircuitStats",
          "description": "The peering stats of express route circuit."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route circuit peering resource."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        },
        "lastModifiedBy": {
          "readOnly": true,
          "type": "string",
          "description": "Who was the last to modify the peering."
        },
        "routeFilter": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the RouteFilter resource."
        },
        "ipv6PeeringConfig": {
          "$ref": "#/definitions/Ipv6ExpressRouteCircuitPeeringConfig",
          "description": "The IPv6 peering configuration."
        },
        "expressRouteConnection": {
          "$ref": "./virtualWan.json#/definitions/ExpressRouteConnectionId",
          "description": "The ExpressRoute connection."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitConnection"
          },
          "description": "The list of circuit connections associated with Azure Private Peering for this circuit."
        },
        "peeredConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerExpressRouteCircuitConnection"
          },
          "readOnly": true,
          "description": "The list of peered circuit connections associated with Azure Private Peering for this circuit."
        }
      },
      "description": "Properties of the express route circuit peering."
    },
    "ExpressRouteCircuitPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPeeringPropertiesFormat",
          "description": "Properties of the express route circuit peering."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Peering in an ExpressRouteCircuit resource."
    },
    "ExpressRouteCircuitPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "The peerings in an express route circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit."
    },
    "ExpressRoutePeeringType": {
      "type": "string",
      "description": "The peering type.",
      "enum": [
        "AzurePublicPeering",
        "AzurePrivatePeering",
        "MicrosoftPeering"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringType",
        "modelAsString": true
      }
    },
    "ExpressRoutePeeringState": {
      "type": "string",
      "description": "The state of peering.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringState",
        "modelAsString": true
      }
    },
    "Ipv6CircuitConnectionConfig": {
      "description": "IPv6 Circuit Connection properties for global reach.",
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "/125 IP address space to carve out customer addresses for global reach."
        },
        "circuitConnectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/CircuitConnectionStatus",
          "description": "Express Route Circuit connection state."
        }
      }
    },
    "ExpressRouteCircuitConnectionPropertiesFormat": {
      "properties": {
        "expressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."
        },
        "peerExpressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit."
        },
        "addressPrefix": {
          "type": "string",
          "description": "/29 IP address space to carve out Customer addresses for tunnels."
        },
        "authorizationKey": {
          "type": "string",
          "description": "The authorization key."
        },
        "ipv6CircuitConnectionConfig": {
          "$ref": "#/definitions/Ipv6CircuitConnectionConfig",
          "description": "IPv6 Address PrefixProperties of the express route circuit connection."
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/CircuitConnectionStatus",
          "description": "Express Route Circuit connection state."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route circuit connection resource."
        }
      },
      "description": "Properties of the express route circuit connection."
    },
    "ExpressRouteCircuitConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitConnectionPropertiesFormat",
          "description": "Properties of the express route circuit connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
    },
    "ExpressRouteCircuitConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitConnection"
          },
          "description": "The global reach connection associated with Private Peering in an ExpressRoute Circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListConnections API service call retrieves all global reach connections that belongs to a Private Peering for an ExpressRouteCircuit."
    },
    "PeerExpressRouteCircuitConnectionPropertiesFormat": {
      "properties": {
        "expressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the circuit."
        },
        "peerExpressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit."
        },
        "addressPrefix": {
          "type": "string",
          "description": "/29 IP address space to carve out Customer addresses for tunnels."
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/CircuitConnectionStatus",
          "description": "Express Route Circuit connection state."
        },
        "connectionName": {
          "type": "string",
          "description": "The name of the express route circuit connection resource."
        },
        "authResourceGuid": {
          "type": "string",
          "description": "The resource guid of the authorization used for the express route circuit connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the peer express route circuit connection resource."
        }
      },
      "description": "Properties of the peer express route circuit connection."
    },
    "PeerExpressRouteCircuitConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PeerExpressRouteCircuitConnectionPropertiesFormat",
          "description": "Properties of the peer express route circuit connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
    },
    "PeerExpressRouteCircuitConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerExpressRouteCircuitConnection"
          },
          "description": "The global reach peer circuit connection associated with Private Peering in an ExpressRoute Circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPeeredConnections API service call retrieves all global reach peer circuit connections that belongs to a Private Peering for an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the SKU.",
          "enum": [
            "Standard",
            "Premium",
            "Basic",
            "Local"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuTier",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "The family of the SKU.",
          "enum": [
            "UnlimitedData",
            "MeteredData"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuFamily",
            "modelAsString": true
          }
        }
      },
      "description": "Contains SKU in an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitServiceProviderProperties": {
      "properties": {
        "serviceProviderName": {
          "type": "string",
          "description": "The serviceProviderName."
        },
        "peeringLocation": {
          "type": "string",
          "description": "The peering location."
        },
        "bandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "The BandwidthInMbps."
        }
      },
      "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitPropertiesFormat": {
      "properties": {
        "allowClassicOperations": {
          "type": "boolean",
          "description": "Allow classic operations."
        },
        "circuitProvisioningState": {
          "type": "string",
          "description": "The CircuitProvisioningState state of the resource."
        },
        "serviceProviderProvisioningState": {
          "$ref": "#/definitions/ServiceProviderProvisioningState",
          "description": "The ServiceProviderProvisioningState state of the resource."
        },
        "authorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "The list of authorizations."
        },
        "peerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "The list of peerings."
        },
        "serviceKey": {
          "type": "string",
          "description": "The ServiceKey."
        },
        "serviceProviderNotes": {
          "type": "string",
          "description": "The ServiceProviderNotes."
        },
        "serviceProviderProperties": {
          "$ref": "#/definitions/ExpressRouteCircuitServiceProviderProperties",
          "description": "The ServiceProviderProperties."
        },
        "expressRoutePort": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource."
        },
        "bandwidthInGbps": {
          "type": "number",
          "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource."
        },
        "stag": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the circuit traffic. Outer tag for QinQ encapsulation."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route circuit resource."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        },
        "globalReachEnabled": {
          "type": "boolean",
          "description": "Flag denoting global reach status."
        },
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "authorizationStatus": {
          "readOnly": true,
          "type": "string",
          "description": "The authorization status of the Circuit."
        },
        "enableDirectPortRateLimit": {
          "type": "boolean",
          "description": "Flag denoting rate-limiting status of the ExpressRoute direct-port circuit."
        }
      },
      "description": "Properties of ExpressRouteCircuit."
    },
    "ExpressRouteCircuit": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ExpressRouteCircuitSku",
          "description": "The SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPropertiesFormat",
          "description": "Properties of the express route circuit."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteCircuit resource."
    },
    "ExpressRouteCircuitArpTable": {
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "description": "Entry age in minutes."
        },
        "interface": {
          "type": "string",
          "description": "Interface address."
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address."
        },
        "macAddress": {
          "type": "string",
          "description": "The MAC address."
        }
      },
      "description": "The ARP table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCircuitsArpTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitArpTable"
          },
          "description": "A list of the ARP tables."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListArpTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitRoutesTable": {
      "properties": {
        "network": {
          "type": "string",
          "description": "IP address of a network entity."
        },
        "nextHop": {
          "type": "string",
          "description": "NextHop address."
        },
        "locPrf": {
          "type": "string",
          "description": "Local preference value as set with the set local-preference route-map configuration command."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Route Weight."
        },
        "path": {
          "type": "string",
          "description": "Autonomous system paths to the destination network."
        }
      },
      "description": "The routes table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCircuitsRoutesTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTable"
          },
          "description": "The list of routes table."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitRoutesTableSummary": {
      "properties": {
        "neighbor": {
          "type": "string",
          "description": "IP address of the neighbor."
        },
        "v": {
          "type": "integer",
          "format": "int32",
          "description": "BGP version number spoken to the neighbor."
        },
        "as": {
          "type": "integer",
          "format": "int32",
          "description": "Autonomous system number."
        },
        "upDown": {
          "type": "string",
          "description": "The length of time that the BGP session has been in the Established state, or the current status if not in the Established state."
        },
        "statePfxRcd": {
          "type": "string",
          "description": "Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group."
        }
      },
      "description": "The routes table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCircuitsRoutesTableSummaryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTableSummary"
          },
          "description": "A list of the routes table."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuit"
          },
          "description": "A list of ExpressRouteCircuits in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteCircuit API service call."
    },
    "ExpressRouteServiceProviderBandwidthsOffered": {
      "properties": {
        "offerName": {
          "type": "string",
          "description": "The OfferName."
        },
        "valueInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "The ValueInMbps."
        }
      },
      "description": "Contains bandwidths offered in ExpressRouteServiceProvider resources."
    },
    "ExpressRouteServiceProviderPropertiesFormat": {
      "properties": {
        "peeringLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of peering locations."
        },
        "bandwidthsOffered": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProviderBandwidthsOffered"
          },
          "description": "A list of bandwidths offered."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route service provider resource."
        }
      },
      "description": "Properties of ExpressRouteServiceProvider."
    },
    "ExpressRouteServiceProvider": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteServiceProviderPropertiesFormat",
          "description": "Properties of the express route service provider."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A ExpressRouteResourceProvider object."
    },
    "ExpressRouteServiceProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProvider"
          },
          "description": "A list of ExpressRouteResourceProvider resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListExpressRouteServiceProvider API service call."
    },
    "CircuitConnectionStatus": {
      "type": "string",
      "readOnly": true,
      "description": "Express Route Circuit connection state.",
      "enum": [
        "Connected",
        "Connecting",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "CircuitConnectionStatus",
        "modelAsString": true
      }
    },
    "ServiceProviderProvisioningState": {
      "type": "string",
      "description": "The ServiceProviderProvisioningState state of the resource.",
      "enum": [
        "NotProvisioned",
        "Provisioning",
        "Provisioned",
        "Deprovisioning"
      ],
      "x-ms-enum": {
        "name": "ServiceProviderProvisioningState",
        "modelAsString": true
      }
    },
    "AzureWebCategoryPropertiesFormat": {
      "properties": {
        "group": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the group that the category belongs to."
        }
      },
      "description": "Azure Web Category Properties."
    },
    "AzureWebCategory": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureWebCategoryPropertiesFormat",
          "description": "Properties of the Azure Web Category."
        },
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "Azure Web Category Resource."
    },
    "AzureWebCategoryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureWebCategory"
          },
          "description": "List of Azure Web Categories for a given Subscription."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListAzureWebCategories API service call."
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "NetworkWatcher": {
      "properties": {
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkWatcherPropertiesFormat",
          "description": "Properties of the network watcher."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Network watcher in a resource group."
    },
    "NetworkWatcherPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network watcher resource."
        }
      },
      "description": "The network watcher properties."
    },
    "NetworkWatcherListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkWatcher"
          },
          "description": "List of network watcher resources."
        }
      },
      "description": "Response for ListNetworkWatchers API service call."
    },
    "TopologyParameters": {
      "properties": {
        "targetResourceGroupName": {
          "type": "string",
          "description": "The name of the target resource group to perform topology on."
        },
        "targetVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the Virtual Network resource."
        },
        "targetSubnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the Subnet resource."
        }
      },
      "description": "Parameters that define the representation of topology."
    },
    "Topology": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "GUID representing the operation id."
        },
        "createdDateTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was initially created for the resource group."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was last modified."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologyResource"
          },
          "description": "A list of topology resources."
        }
      },
      "description": "Topology of the specified resource group."
    },
    "TopologyResource": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "id": {
          "type": "string",
          "description": "ID of the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "associations": {
          "type": "array",
          "description": "Holds the associations the resource has with other resources in the resource group.",
          "items": {
            "$ref": "#/definitions/TopologyAssociation"
          }
        }
      },
      "description": "The network resource topology information for the given resource group."
    },
    "TopologyAssociation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource that is associated with the parent resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource that is associated with the parent resource."
        },
        "associationType": {
          "type": "string",
          "enum": [
            "Associated",
            "Contains"
          ],
          "x-ms-enum": {
            "name": "AssociationType",
            "modelAsString": true
          },
          "description": "The association type of the child resource to the parent resource."
        }
      },
      "description": "Resources that have an association with the parent resource."
    },
    "VerificationIPFlowParameters": {
      "description": "Parameters that define the IP flow to be verified.",
      "required": [
        "targetResourceId",
        "direction",
        "protocol",
        "localPort",
        "remotePort",
        "localIPAddress",
        "remoteIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The ID of the target resource to perform next-hop on."
        },
        "direction": {
          "$ref": "#/definitions/Direction",
          "description": "The direction of the packet represented as a 5-tuple."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "IpFlowProtocol",
            "modelAsString": true
          },
          "description": "Protocol to be verified on."
        },
        "localPort": {
          "type": "string",
          "description": "The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "remotePort": {
          "type": "string",
          "description": "The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "localIPAddress": {
          "type": "string",
          "description": "The local IP address. Acceptable values are valid IPv4 addresses."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "The remote IP address. Acceptable values are valid IPv4 addresses."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "VerificationIPFlowResult": {
      "description": "Results of IP flow verification on the target resource.",
      "properties": {
        "access": {
          "$ref": "./network.json#/definitions/Access",
          "description": "Indicates whether the traffic is allowed or denied."
        },
        "ruleName": {
          "type": "string",
          "description": "Name of the rule. If input is not matched against any security rule, it is not displayed."
        }
      }
    },
    "NextHopParameters": {
      "description": "Parameters that define the source and destination endpoint.",
      "required": [
        "targetResourceId",
        "sourceIPAddress",
        "destinationIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The resource identifier of the target resource against which the action is to be performed."
        },
        "sourceIPAddress": {
          "type": "string",
          "description": "The source IP address."
        },
        "destinationIPAddress": {
          "type": "string",
          "description": "The destination IP address."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "NextHopResult": {
      "description": "The information about next hop from the specified VM.",
      "properties": {
        "nextHopType": {
          "type": "string",
          "enum": [
            "Internet",
            "VirtualAppliance",
            "VirtualNetworkGateway",
            "VnetLocal",
            "HyperNetGateway",
            "None"
          ],
          "x-ms-enum": {
            "name": "NextHopType",
            "modelAsString": true
          },
          "description": "Next hop type."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "Next hop IP Address."
        },
        "routeTableId": {
          "type": "string",
          "description": "The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'."
        }
      }
    },
    "SecurityGroupViewParameters": {
      "description": "Parameters that define the VM to check security groups for.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "ID of the target VM."
        }
      }
    },
    "SecurityGroupViewResult": {
      "description": "The information about security rules applied to the specified VM.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "List of network interfaces on the specified VM.",
          "items": {
            "$ref": "#/definitions/SecurityGroupNetworkInterface"
          }
        }
      }
    },
    "SecurityGroupNetworkInterface": {
      "description": "Network interface and all its associated security rules.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the network interface."
        },
        "securityRuleAssociations": {
          "$ref": "#/definitions/SecurityRuleAssociations",
          "description": "All security rules associated with the network interface."
        }
      }
    },
    "SecurityRuleAssociations": {
      "description": "All security rules associated with the network interface.",
      "properties": {
        "networkInterfaceAssociation": {
          "$ref": "#/definitions/NetworkInterfaceAssociation",
          "description": "Network interface and it's custom security rules."
        },
        "subnetAssociation": {
          "$ref": "#/definitions/SubnetAssociation",
          "description": "Subnet and it's custom security rules."
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          },
          "description": "Collection of default security rules of the network security group."
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "Collection of effective security rules."
        }
      }
    },
    "NetworkInterfaceAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Network interface ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          }
        }
      }
    },
    "SubnetAssociation": {
      "description": "Subnet and it's custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Subnet ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          }
        }
      }
    },
    "PacketCapture": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureParameters",
          "description": "Properties of the packet capture."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureParameters": {
      "properties": {
        "target": {
          "type": "string",
          "description": "The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported."
        },
        "scope": {
          "$ref": "#/definitions/PacketCaptureMachineScope",
          "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS."
        },
        "targetType": {
          "description": "Target type of the resource provided.",
          "type": "string",
          "enum": [
            "AzureVM",
            "AzureVMSS"
          ],
          "x-ms-enum": {
            "name": "PacketCaptureTargetType",
            "modelAsString": false
          }
        },
        "bytesToCapturePerPacket": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "default": 0,
          "description": "Number of bytes captured per packet, the remaining bytes are truncated."
        },
        "totalBytesPerSession": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "default": 1073741824,
          "description": "Maximum size of the capture output."
        },
        "timeLimitInSeconds": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 18000,
          "default": 18000,
          "description": "Maximum duration of the capture session in seconds."
        },
        "storageLocation": {
          "$ref": "#/definitions/PacketCaptureStorageLocation",
          "description": "The storage location for a packet capture session."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureFilter"
          },
          "description": "A list of packet capture filters."
        },
        "continuousCapture": {
          "description": "This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'.",
          "type": "boolean"
        },
        "captureSettings": {
          "type": "object",
          "$ref": "#/definitions/PacketCaptureSettings",
          "description": "The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values."
        }
      },
      "required": [
        "target",
        "storageLocation"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureMachineScope": {
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "description": "List of AzureVMSS instances to run packet capture on.",
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "description": "List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS."
    },
    "PacketCaptureStorageLocation": {
      "properties": {
        "storageId": {
          "type": "string",
          "description": "The ID of the storage account to save the packet capture session. Required if no localPath or filePath is provided."
        },
        "storagePath": {
          "type": "string",
          "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."
        },
        "filePath": {
          "type": "string",
          "description": "This path is invalid if 'Continuous Capture' is provided with 'true' or 'false'. A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."
        },
        "localPath": {
          "type": "string",
          "description": "This path is valid if 'Continuous Capture' is provided with 'true' or 'false' and required if no storage ID is provided, otherwise optional. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures."
        }
      },
      "description": "The storage location for a packet capture session."
    },
    "PacketCaptureSettings": {
      "properties": {
        "fileCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 10000,
          "default": 10,
          "description": "Number of file count. Default value of count is 10 and maximum number is 10000."
        },
        "fileSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "default": 104857600,
          "description": "Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB)."
        },
        "sessionTimeLimitInSeconds": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 604800,
          "default": 86400,
          "description": "Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day)."
        }
      },
      "description": "The storage location for a packet capture session."
    },
    "PacketCaptureFilter": {
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP",
            "Any"
          ],
          "x-ms-enum": {
            "name": "PcProtocol",
            "modelAsString": true
          },
          "default": "Any",
          "description": "Protocol to be filtered on."
        },
        "localIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "localPort": {
          "type": "string",
          "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remotePort": {
          "type": "string",
          "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        }
      },
      "description": "Filter that is applied to packet capture request. Multiple filters can be applied."
    },
    "PacketCaptureListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureResult"
          },
          "description": "Information about packet capture sessions."
        }
      },
      "description": "List of packet capture sessions."
    },
    "PacketCaptureResult": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the packet capture session."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the packet capture operation."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureResultProperties",
          "description": "Properties of the packet capture result."
        }
      },
      "description": "Information about packet capture session."
    },
    "PacketCaptureResultProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the packet capture session."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      ],
      "description": "The properties of a packet capture session."
    },
    "PacketCaptureQueryStatusResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the packet capture resource."
        },
        "id": {
          "type": "string",
          "description": "The ID of the packet capture resource."
        },
        "captureStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the packet capture session."
        },
        "packetCaptureStatus": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Stopped",
            "Error",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PcStatus",
            "modelAsString": true
          },
          "description": "The status of the packet capture session."
        },
        "stopReason": {
          "type": "string",
          "description": "The reason the current packet capture session was stopped."
        },
        "packetCaptureError": {
          "type": "array",
          "description": "List of errors of packet capture session.",
          "items": {
            "type": "string",
            "enum": [
              "InternalError",
              "AgentStopped",
              "CaptureFailed",
              "LocalFileFailed",
              "StorageFailed"
            ],
            "x-ms-enum": {
              "name": "PcError",
              "modelAsString": true
            }
          }
        }
      },
      "description": "Status of packet capture session."
    },
    "TroubleshootingParameters": {
      "description": "Parameters that define the resource to troubleshoot.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource to troubleshoot.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TroubleshootingProperties",
          "description": "Properties of the troubleshooting resource."
        }
      }
    },
    "QueryTroubleshootingParameters": {
      "description": "Parameters that define the resource to query the troubleshooting result.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource ID to query the troubleshooting result.",
          "type": "string"
        }
      }
    },
    "TroubleshootingProperties": {
      "description": "Storage location provided for troubleshoot.",
      "required": [
        "storageId",
        "storagePath"
      ],
      "properties": {
        "storageId": {
          "description": "The ID for the storage account to save the troubleshoot result.",
          "type": "string"
        },
        "storagePath": {
          "description": "The path to the blob to save the troubleshoot result in.",
          "type": "string"
        }
      }
    },
    "TroubleshootingResult": {
      "description": "Troubleshooting information gained from specified resource.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the troubleshooting."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the troubleshooting."
        },
        "code": {
          "type": "string",
          "description": "The result code of the troubleshooting."
        },
        "results": {
          "type": "array",
          "description": "Information from troubleshooting.",
          "items": {
            "$ref": "#/definitions/TroubleshootingDetails"
          }
        }
      }
    },
    "TroubleshootingDetails": {
      "description": "Information gained from troubleshooting of specified resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the get troubleshoot operation."
        },
        "reasonType": {
          "type": "string",
          "description": "Reason type of failure."
        },
        "summary": {
          "type": "string",
          "description": "A summary of troubleshooting."
        },
        "detail": {
          "type": "string",
          "description": "Details on troubleshooting results."
        },
        "recommendedActions": {
          "type": "array",
          "description": "List of recommended actions.",
          "items": {
            "$ref": "#/definitions/TroubleshootingRecommendedActions"
          }
        }
      }
    },
    "TroubleshootingRecommendedActions": {
      "description": "Recommended actions based on discovered issues.",
      "properties": {
        "actionId": {
          "description": "ID of the recommended action.",
          "type": "string"
        },
        "actionText": {
          "description": "Description of recommended actions.",
          "type": "string"
        },
        "actionUri": {
          "description": "The uri linking to a documentation for the recommended troubleshooting actions.",
          "type": "string"
        },
        "actionUriText": {
          "description": "The information from the URI for the recommended troubleshooting actions.",
          "type": "string"
        }
      }
    },
    "FlowLogListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowLog"
          },
          "description": "Information about flow log resource."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "List of flow logs."
    },
    "FlowLog": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FlowLogPropertiesFormat",
          "description": "Properties of the flow log."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "description": "FlowLog resource Managed Identity",
          "$ref": "./network.json#/definitions/ManagedServiceIdentity"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A flow log resource."
    },
    "FlowLogPropertiesFormat": {
      "description": "Parameters that define the configuration of flow log.",
      "required": [
        "targetResourceId",
        "storageId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "ID of network security group to which flow log will be applied.",
          "type": "string"
        },
        "targetResourceGuid": {
          "readOnly": true,
          "description": "Guid of network security group to which flow log will be applied.",
          "type": "string"
        },
        "storageId": {
          "description": "ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "enabledFilteringCriteria": {
          "description": "Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.",
          "type": "string"
        },
        "enabled": {
          "description": "Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicyParameters",
          "description": "Parameters that define the retention policy for flow log."
        },
        "format": {
          "$ref": "#/definitions/FlowLogFormatParameters",
          "description": "Parameters that define the flow log format."
        },
        "flowAnalyticsConfiguration": {
          "$ref": "#/definitions/TrafficAnalyticsProperties",
          "description": "Parameters that define the configuration of traffic analytics."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the flow log."
        }
      }
    },
    "FlowLogProperties": {
      "description": "Parameters that define the configuration of flow log.",
      "required": [
        "storageId",
        "enabled"
      ],
      "properties": {
        "storageId": {
          "description": "ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "enabledFilteringCriteria": {
          "description": "Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.",
          "type": "string"
        },
        "enabled": {
          "description": "Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicyParameters",
          "description": "Parameters that define the retention policy for flow log."
        },
        "format": {
          "$ref": "#/definitions/FlowLogFormatParameters",
          "description": "Parameters that define the flow log format."
        }
      }
    },
    "FlowLogStatusParameters": {
      "description": "Parameters that define a resource to query flow log and traffic analytics (optional) status.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource where getting the flow log and traffic analytics (optional) status.",
          "type": "string"
        }
      }
    },
    "RetentionPolicyParameters": {
      "description": "Parameters that define the retention policy for flow log.",
      "properties": {
        "days": {
          "description": "Number of days to retain flow log records.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "enabled": {
          "description": "Flag to enable/disable retention.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "FlowLogFormatParameters": {
      "description": "Parameters that define the flow log format.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The file type of flow log.",
          "enum": [
            "JSON"
          ],
          "x-ms-enum": {
            "name": "FlowLogFormatType",
            "modelAsString": true
          }
        },
        "version": {
          "description": "The version (revision) of the flow log.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "FlowLogInformation": {
      "description": "Information on the configuration of flow log and traffic analytics (optional) .",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The ID of the resource to configure for flow log and traffic analytics (optional) .",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FlowLogProperties",
          "description": "Properties of the flow log."
        },
        "flowAnalyticsConfiguration": {
          "$ref": "#/definitions/TrafficAnalyticsProperties",
          "description": "Parameters that define the configuration of traffic analytics."
        },
        "identity": {
          "description": "FlowLog resource Managed Identity",
          "$ref": "./network.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "TrafficAnalyticsProperties": {
      "description": "Parameters that define the configuration of traffic analytics.",
      "properties": {
        "networkWatcherFlowAnalyticsConfiguration": {
          "$ref": "#/definitions/TrafficAnalyticsConfigurationProperties",
          "description": "Parameters that define the configuration of traffic analytics."
        }
      }
    },
    "TrafficAnalyticsConfigurationProperties": {
      "description": "Parameters that define the configuration of traffic analytics.",
      "properties": {
        "enabled": {
          "description": "Flag to enable/disable traffic analytics.",
          "type": "boolean"
        },
        "workspaceId": {
          "description": "The resource guid of the attached workspace.",
          "type": "string"
        },
        "workspaceRegion": {
          "description": "The location of the attached workspace.",
          "type": "string"
        },
        "workspaceResourceId": {
          "description": "Resource Id of the attached workspace.",
          "type": "string"
        },
        "trafficAnalyticsInterval": {
          "description": "The interval in minutes which would decide how frequently TA service should do flow analytics.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConnectivityParameters": {
      "description": "Parameters that determine how the connectivity check will be performed.",
      "required": [
        "source",
        "destination"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectivitySource",
          "description": "The source of the connection."
        },
        "destination": {
          "$ref": "#/definitions/ConnectivityDestination",
          "description": "The destination of connection."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol.",
          "enum": [
            "Tcp",
            "Http",
            "Https",
            "Icmp"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          }
        },
        "protocolConfiguration": {
          "$ref": "#/definitions/ProtocolConfiguration",
          "description": "Configuration of the protocol."
        },
        "preferredIPVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "Preferred IP version of the connection."
        }
      }
    },
    "ConnectivitySource": {
      "description": "Parameters that define the source of the connection.",
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "description": "The ID of the resource from which a connectivity check will be initiated.",
          "type": "string"
        },
        "port": {
          "description": "The source port from which a connectivity check will be performed.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "ConnectivityDestination": {
      "description": "Parameters that define destination of connection.",
      "properties": {
        "resourceId": {
          "description": "The ID of the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "address": {
          "description": "The IP address or URI the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "port": {
          "description": "Port on which check connectivity will be performed.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "ConnectivityInformation": {
      "description": "Information on the connectivity status.",
      "properties": {
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Connected",
            "Disconnected",
            "Degraded"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          },
          "description": "The connection status."
        },
        "avgLatencyInMs": {
          "description": "Average latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "minLatencyInMs": {
          "description": "Minimum latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "maxLatencyInMs": {
          "description": "Maximum latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "probesSent": {
          "description": "Total number of probes sent.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "probesFailed": {
          "description": "Number of failed probes.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConnectivityHop": {
      "description": "Information about a hop between the source and the destination.",
      "properties": {
        "type": {
          "description": "The type of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "address": {
          "description": "The IP address of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true,
          "type": "string"
        },
        "nextHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "previousHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of previous hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "links": {
          "readOnly": true,
          "type": "array",
          "description": "List of hop links.",
          "items": {
            "$ref": "#/definitions/HopLink"
          }
        },
        "previousLinks": {
          "readOnly": true,
          "type": "array",
          "description": "List of previous hop links.",
          "items": {
            "$ref": "#/definitions/HopLink"
          }
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          }
        }
      }
    },
    "HopLink": {
      "description": "Hop link.",
      "properties": {
        "nextHopId": {
          "description": "The ID of the next hop.",
          "readOnly": true,
          "type": "string"
        },
        "linkType": {
          "description": "Link type.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HopLinkProperties",
          "description": "Hop link properties."
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          }
        },
        "context": {
          "readOnly": true,
          "type": "object",
          "description": "Provides additional context on links.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceId": {
          "description": "Resource ID.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "HopLinkProperties": {
      "description": "Hop link properties.",
      "properties": {
        "roundTripTimeMin": {
          "description": "Minimum roundtrip time in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295
        },
        "roundTripTimeAvg": {
          "description": "Average roundtrip time in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295
        },
        "roundTripTimeMax": {
          "description": "Maximum roundtrip time in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295
        }
      }
    },
    "ConnectivityIssue": {
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "properties": {
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Local",
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "description": "The origin of the issue."
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Error",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          },
          "description": "The severity of the issue."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "AgentStopped",
            "GuestFirewall",
            "DnsResolution",
            "SocketBind",
            "NetworkSecurityRule",
            "UserDefinedRoute",
            "PortThrottled",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": true
          },
          "description": "The type of issue."
        },
        "context": {
          "readOnly": true,
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "$ref": "#/definitions/IssueContext"
          }
        }
      }
    },
    "IssueContext": {
      "description": "A key-value pair that provides additional context on the issue.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ProtocolConfiguration": {
      "description": "Configuration of the protocol.",
      "properties": {
        "HTTPConfiguration": {
          "$ref": "#/definitions/HTTPConfiguration",
          "description": "HTTP configuration of the connectivity check."
        }
      }
    },
    "HTTPConfiguration": {
      "properties": {
        "method": {
          "type": "string",
          "description": "HTTP method.",
          "enum": [
            "Get"
          ],
          "x-ms-enum": {
            "name": "HTTPMethod",
            "modelAsString": true
          }
        },
        "headers": {
          "type": "array",
          "description": "List of HTTP headers.",
          "items": {
            "$ref": "#/definitions/HTTPHeader"
          }
        },
        "validStatusCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Valid status codes."
        }
      },
      "description": "HTTP configuration of the connectivity check."
    },
    "HTTPHeader": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name in HTTP header."
        },
        "value": {
          "type": "string",
          "description": "The value in HTTP header."
        }
      },
      "description": "The HTTP header."
    },
    "AzureReachabilityReportParameters": {
      "properties": {
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation",
          "description": "Parameters that define a geographic location."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Internet service providers."
        },
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional Azure regions to scope the query to."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the Azure reachability report."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the Azure reachability report."
        }
      },
      "required": [
        "providerLocation",
        "startTime",
        "endTime"
      ],
      "description": "Geographic and time constraints for Azure reachability report."
    },
    "AzureReachabilityReportLocation": {
      "properties": {
        "country": {
          "type": "string",
          "description": "The name of the country."
        },
        "state": {
          "type": "string",
          "description": "The name of the state."
        },
        "city": {
          "type": "string",
          "description": "The name of the city or town."
        }
      },
      "required": [
        "country"
      ],
      "description": "Parameters that define a geographic location."
    },
    "AzureReachabilityReport": {
      "properties": {
        "aggregationLevel": {
          "type": "string",
          "description": "The aggregation level of Azure reachability report. Can be Country, State or City."
        },
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation",
          "description": "Parameters that define a geographic location."
        },
        "reachabilityReport": {
          "type": "array",
          "description": "List of Azure reachability report items.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportItem"
          }
        }
      },
      "required": [
        "aggregationLevel",
        "providerLocation",
        "reachabilityReport"
      ],
      "description": "Azure reachability report details."
    },
    "AzureReachabilityReportItem": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The Internet service provider."
        },
        "azureLocation": {
          "type": "string",
          "description": "The Azure region."
        },
        "latencies": {
          "type": "array",
          "description": "List of latency details for each of the time series.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportLatencyInfo"
          }
        }
      },
      "description": "Azure reachability report details for a given provider location."
    },
    "AzureReachabilityReportLatencyInfo": {
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time stamp."
        },
        "score": {
          "type": "integer",
          "format": "int32",
          "description": "The relative latency score between 1 and 100, higher values indicating a faster connection.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "description": "Details on latency for a time series."
    },
    "AvailableProvidersListParameters": {
      "properties": {
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Azure regions."
        },
        "country": {
          "type": "string",
          "description": "The country for available providers list."
        },
        "state": {
          "type": "string",
          "description": "The state for available providers list."
        },
        "city": {
          "type": "string",
          "description": "The city or town for available providers list."
        }
      },
      "description": "Constraints that determine the list of available Internet service providers."
    },
    "AvailableProvidersList": {
      "properties": {
        "countries": {
          "type": "array",
          "description": "List of available countries.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCountry"
          }
        }
      },
      "required": [
        "countries"
      ],
      "description": "List of available countries with details."
    },
    "AvailableProvidersListCountry": {
      "properties": {
        "countryName": {
          "type": "string",
          "description": "The country name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "states": {
          "type": "array",
          "description": "List of available states in the country.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListState"
          }
        }
      },
      "description": "Country details."
    },
    "AvailableProvidersListState": {
      "properties": {
        "stateName": {
          "type": "string",
          "description": "The state name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "cities": {
          "type": "array",
          "description": "List of available cities or towns in the state.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCity"
          }
        }
      },
      "description": "State details."
    },
    "AvailableProvidersListCity": {
      "properties": {
        "cityName": {
          "type": "string",
          "description": "The city or town name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        }
      },
      "description": "City or town details."
    },
    "NetworkConfigurationDiagnosticParameters": {
      "description": "Parameters to get network configuration diagnostic.",
      "required": [
        "targetResourceId",
        "profiles"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The ID of the target resource to perform network configuration diagnostic. Valid options are VM, NetworkInterface, VMSS/NetworkInterface and Application Gateway."
        },
        "verbosityLevel": {
          "type": "string",
          "enum": [
            "Normal",
            "Minimum",
            "Full"
          ],
          "x-ms-enum": {
            "name": "VerbosityLevel",
            "modelAsString": true
          },
          "description": "Verbosity level."
        },
        "profiles": {
          "type": "array",
          "description": "List of network configuration diagnostic profiles.",
          "items": {
            "$ref": "#/definitions/NetworkConfigurationDiagnosticProfile"
          }
        }
      }
    },
    "NetworkConfigurationDiagnosticProfile": {
      "description": "Parameters to compare with network configuration.",
      "required": [
        "direction",
        "protocol",
        "source",
        "destination",
        "destinationPort"
      ],
      "properties": {
        "direction": {
          "$ref": "#/definitions/Direction",
          "description": "The direction of the traffic."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol to be verified on. Accepted values are '*', TCP, UDP."
        },
        "source": {
          "type": "string",
          "description": "Traffic source. Accepted values are '*', IP Address/CIDR, Service Tag."
        },
        "destination": {
          "type": "string",
          "description": "Traffic destination. Accepted values are: '*', IP Address/CIDR, Service Tag."
        },
        "destinationPort": {
          "type": "string",
          "description": "Traffic destination port. Accepted values are '*' and a single port in the range (0 - 65535)."
        }
      }
    },
    "NetworkConfigurationDiagnosticResponse": {
      "description": "Results of network configuration diagnostic on the target resource.",
      "properties": {
        "results": {
          "readOnly": true,
          "type": "array",
          "description": "List of network configuration diagnostic results.",
          "items": {
            "$ref": "#/definitions/NetworkConfigurationDiagnosticResult"
          }
        }
      }
    },
    "NetworkConfigurationDiagnosticResult": {
      "description": "Network configuration diagnostic result corresponded to provided traffic query.",
      "properties": {
        "profile": {
          "$ref": "#/definitions/NetworkConfigurationDiagnosticProfile",
          "description": "Network configuration diagnostic profile."
        },
        "networkSecurityGroupResult": {
          "$ref": "#/definitions/NetworkSecurityGroupResult",
          "description": "Network security group result."
        }
      }
    },
    "NetworkSecurityGroupResult": {
      "description": "Network configuration diagnostic result corresponded provided traffic query.",
      "properties": {
        "securityRuleAccessResult": {
          "$ref": "./networkSecurityGroup.json#/definitions/SecurityRuleAccess",
          "description": "The network traffic is allowed or denied."
        },
        "evaluatedNetworkSecurityGroups": {
          "readOnly": true,
          "type": "array",
          "description": "List of results network security groups diagnostic.",
          "items": {
            "$ref": "#/definitions/EvaluatedNetworkSecurityGroup"
          }
        }
      }
    },
    "EvaluatedNetworkSecurityGroup": {
      "description": "Results of network security group evaluation.",
      "properties": {
        "networkSecurityGroupId": {
          "type": "string",
          "description": "Network security group ID."
        },
        "appliedTo": {
          "type": "string",
          "description": "Resource ID of nic or subnet to which network security group is applied."
        },
        "matchedRule": {
          "$ref": "#/definitions/MatchedRule",
          "description": "Matched network security rule."
        },
        "rulesEvaluationResult": {
          "readOnly": true,
          "type": "array",
          "description": "List of network security rules evaluation results.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityRulesEvaluationResult"
          }
        }
      }
    },
    "MatchedRule": {
      "description": "Matched rule.",
      "properties": {
        "ruleName": {
          "type": "string",
          "description": "Name of the matched network security rule."
        },
        "action": {
          "type": "string",
          "description": "The network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'."
        }
      }
    },
    "NetworkSecurityRulesEvaluationResult": {
      "description": "Network security rules evaluation result.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network security rule."
        },
        "protocolMatched": {
          "type": "boolean",
          "description": "Value indicating whether protocol is matched."
        },
        "sourceMatched": {
          "type": "boolean",
          "description": "Value indicating whether source is matched."
        },
        "sourcePortMatched": {
          "type": "boolean",
          "description": "Value indicating whether source port is matched."
        },
        "destinationMatched": {
          "type": "boolean",
          "description": "Value indicating whether destination is matched."
        },
        "destinationPortMatched": {
          "type": "boolean",
          "description": "Value indicating whether destination port is matched."
        }
      }
    },
    "Direction": {
      "type": "string",
      "description": "The direction of the traffic.",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "Direction",
        "modelAsString": true
      }
    },
    "ConnectionMonitor": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Connection monitor location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection monitor tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionMonitorParameters",
          "description": "Properties of the connection monitor."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the operation to create a connection monitor."
    },
    "ConnectionMonitorParameters": {
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectionMonitorSource",
          "description": "Describes the source of connection monitor."
        },
        "destination": {
          "$ref": "#/definitions/ConnectionMonitorDestination",
          "description": "Describes the destination of connection monitor."
        },
        "autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Determines if the connection monitor will start automatically once created."
        },
        "monitoringIntervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 1800,
          "default": 60,
          "description": "Monitoring interval in seconds."
        },
        "endpoints": {
          "type": "array",
          "description": "List of connection monitor endpoints.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorEndpoint"
          }
        },
        "testConfigurations": {
          "type": "array",
          "description": "List of connection monitor test configurations.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorTestConfiguration"
          }
        },
        "testGroups": {
          "type": "array",
          "description": "List of connection monitor test groups.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorTestGroup"
          }
        },
        "outputs": {
          "type": "array",
          "description": "List of connection monitor outputs.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorOutput"
          }
        },
        "notes": {
          "type": "string",
          "description": "Optional notes to be associated with the connection monitor."
        }
      },
      "description": "Parameters that define the operation to create a connection monitor."
    },
    "ConnectionMonitorSource": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource used as the source by connection monitor."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "The source port used by connection monitor."
        }
      },
      "required": [
        "resourceId"
      ],
      "description": "Describes the source of connection monitor."
    },
    "ConnectionMonitorDestination": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource used as the destination by connection monitor."
        },
        "address": {
          "type": "string",
          "description": "Address of the connection monitor destination (IP or domain name)."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "The destination port used by connection monitor."
        }
      },
      "description": "Describes the destination of connection monitor."
    },
    "ConnectionMonitorEndpoint": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the connection monitor endpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureVM",
            "AzureVNet",
            "AzureSubnet",
            "ExternalAddress",
            "MMAWorkspaceMachine",
            "MMAWorkspaceNetwork",
            "AzureArcVM",
            "AzureVMSS",
            "AzureArcNetwork"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          },
          "description": "The endpoint type."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID of the connection monitor endpoint are supported for AzureVM, AzureVMSS, AzureVNet, AzureSubnet, MMAWorkspaceMachine, MMAWorkspaceNetwork, AzureArcVM endpoint type."
        },
        "address": {
          "type": "string",
          "description": "Address of the connection monitor endpoint. Supported for AzureVM, ExternalAddress, ArcMachine, MMAWorkspaceMachine endpoint type."
        },
        "filter": {
          "$ref": "#/definitions/ConnectionMonitorEndpointFilter",
          "description": "Filter field is getting deprecated and should not be used. Instead use Include/Exclude scope fields for it."
        },
        "scope": {
          "$ref": "#/definitions/ConnectionMonitorEndpointScope",
          "description": "Endpoint scope defines which target resource to monitor in case of compound resource endpoints like VMSS, AzureSubnet, AzureVNet, MMAWorkspaceNetwork, AzureArcNetwork."
        },
        "coverageLevel": {
          "type": "string",
          "enum": [
            "Default",
            "Low",
            "BelowAverage",
            "Average",
            "AboveAverage",
            "Full"
          ],
          "x-ms-enum": {
            "name": "CoverageLevel",
            "modelAsString": true
          },
          "description": "Test coverage for the endpoint."
        },
        "locationDetails": {
          "$ref": "#/definitions/ConnectionMonitorEndpointLocationDetails",
          "description": "Location details is optional and only being used for 'AzureArcNetwork' type endpoints, which contains region details."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription ID for connection monitor endpoint. It's an optional parameter which is being used for 'AzureArcNetwork' type endpoint."
        }
      },
      "required": [
        "name"
      ],
      "description": "Describes the connection monitor endpoint."
    },
    "ConnectionMonitorEndpointScope": {
      "properties": {
        "include": {
          "type": "array",
          "description": "List of items which needs to be included to the endpoint scope.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorEndpointScopeItem"
          }
        },
        "exclude": {
          "type": "array",
          "description": "List of items which needs to be excluded from the endpoint scope.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorEndpointScopeItem"
          }
        }
      },
      "description": "Describes the connection monitor endpoint scope."
    },
    "ConnectionMonitorEndpointScopeItem": {
      "properties": {
        "address": {
          "type": "string",
          "description": "The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address."
        }
      },
      "description": "Describes the connection monitor endpoint scope item."
    },
    "ConnectionMonitorEndpointFilter": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Include"
          ],
          "x-ms-enum": {
            "name": "ConnectionMonitorEndpointFilterType",
            "modelAsString": true
          },
          "description": "The behavior of the endpoint filter. Currently only 'Include' is supported."
        },
        "items": {
          "type": "array",
          "description": "List of items in the filter.",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorEndpointFilterItem"
          }
        }
      },
      "description": "Describes the connection monitor endpoint filter."
    },
    "ConnectionMonitorEndpointFilterItem": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AgentAddress"
          ],
          "x-ms-enum": {
            "name": "ConnectionMonitorEndpointFilterItemType",
            "modelAsString": true
          },
          "description": "The type of item included in the filter. Currently only 'AgentAddress' is supported."
        },
        "address": {
          "type": "string",
          "description": "The address of the filter item."
        }
      },
      "description": "Describes the connection monitor endpoint filter item."
    },
    "ConnectionMonitorTestGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the connection monitor test group."
        },
        "disable": {
          "type": "boolean",
          "description": "Value indicating whether test group is disabled."
        },
        "testConfigurations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of test configuration names."
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of source endpoint names."
        },
        "destinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of destination endpoint names."
        }
      },
      "required": [
        "name",
        "testConfigurations",
        "sources",
        "destinations"
      ],
      "description": "Describes the connection monitor test group."
    },
    "ConnectionMonitorTestConfiguration": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the connection monitor test configuration."
        },
        "testFrequencySec": {
          "type": "integer",
          "format": "int32",
          "description": "The frequency of test evaluation, in seconds."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "Tcp",
            "Http",
            "Icmp"
          ],
          "x-ms-enum": {
            "name": "ConnectionMonitorTestConfigurationProtocol",
            "modelAsString": true
          },
          "description": "The protocol to use in test evaluation."
        },
        "preferredIPVersion": {
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "PreferredIPVersion",
            "modelAsString": true
          },
          "description": "The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters."
        },
        "httpConfiguration": {
          "$ref": "#/definitions/ConnectionMonitorHttpConfiguration",
          "description": "The parameters used to perform test evaluation over HTTP."
        },
        "tcpConfiguration": {
          "$ref": "#/definitions/ConnectionMonitorTcpConfiguration",
          "description": "The parameters used to perform test evaluation over TCP."
        },
        "icmpConfiguration": {
          "$ref": "#/definitions/ConnectionMonitorIcmpConfiguration",
          "description": "The parameters used to perform test evaluation over ICMP."
        },
        "successThreshold": {
          "$ref": "#/definitions/ConnectionMonitorSuccessThreshold",
          "description": "The threshold for declaring a test successful."
        }
      },
      "required": [
        "name",
        "protocol"
      ],
      "description": "Describes a connection monitor test configuration."
    },
    "ConnectionMonitorHttpConfiguration": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "The port to connect to."
        },
        "method": {
          "type": "string",
          "description": "The HTTP method to use.",
          "enum": [
            "Get",
            "Post"
          ],
          "x-ms-enum": {
            "name": "HTTPConfigurationMethod",
            "modelAsString": true
          }
        },
        "path": {
          "type": "string",
          "description": "The path component of the URI. For instance, \"/dir1/dir2\"."
        },
        "requestHeaders": {
          "type": "array",
          "description": "The HTTP headers to transmit with the request.",
          "items": {
            "$ref": "#/definitions/HTTPHeader"
          }
        },
        "validStatusCodeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "HTTP status codes to consider successful. For instance, \"2xx,301-304,418\"."
        },
        "preferHTTPS": {
          "type": "boolean",
          "description": "Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit."
        }
      },
      "description": "Describes the HTTP configuration."
    },
    "ConnectionMonitorTcpConfiguration": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "The port to connect to."
        },
        "disableTraceRoute": {
          "type": "boolean",
          "description": "Value indicating whether path evaluation with trace route should be disabled."
        },
        "destinationPortBehavior": {
          "type": "string",
          "description": "Destination port behavior.",
          "enum": [
            "None",
            "ListenIfAvailable"
          ],
          "x-ms-enum": {
            "name": "DestinationPortBehavior",
            "modelAsString": true
          }
        }
      },
      "description": "Describes the TCP configuration."
    },
    "ConnectionMonitorIcmpConfiguration": {
      "properties": {
        "disableTraceRoute": {
          "type": "boolean",
          "description": "Value indicating whether path evaluation with trace route should be disabled."
        }
      },
      "description": "Describes the ICMP configuration."
    },
    "ConnectionMonitorSuccessThreshold": {
      "properties": {
        "checksFailedPercent": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of failed checks permitted for a test to evaluate as successful."
        },
        "roundTripTimeMs": {
          "type": "number",
          "description": "The maximum round-trip time in milliseconds permitted for a test to evaluate as successful."
        }
      },
      "description": "Describes the threshold for declaring a test successful."
    },
    "ConnectionMonitorOutput": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Connection monitor output destination type. Currently, only \"Workspace\" is supported.",
          "enum": [
            "Workspace"
          ],
          "x-ms-enum": {
            "name": "OutputType",
            "modelAsString": true
          }
        },
        "workspaceSettings": {
          "$ref": "#/definitions/ConnectionMonitorWorkspaceSettings",
          "description": "Describes the settings for producing output into a log analytics workspace."
        }
      },
      "description": "Describes a connection monitor output destination."
    },
    "ConnectionMonitorWorkspaceSettings": {
      "properties": {
        "workspaceResourceId": {
          "type": "string",
          "description": "Log analytics workspace resource ID."
        }
      },
      "description": "Describes the settings for producing output into a log analytics workspace."
    },
    "ConnectionStateSnapshot": {
      "properties": {
        "connectionState": {
          "type": "string",
          "enum": [
            "Reachable",
            "Unreachable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ConnectionState",
            "modelAsString": true
          },
          "description": "The connection state."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the connection snapshot."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the connection snapshot."
        },
        "evaluationState": {
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "EvaluationState",
            "modelAsString": true
          },
          "description": "Connectivity analysis evaluation state."
        },
        "avgLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Average latency in ms."
        },
        "minLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Minimum latency in ms."
        },
        "maxLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Maximum latency in ms."
        },
        "probesSent": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "The number of sent probes."
        },
        "probesFailed": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "The number of failed probes."
        },
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "./networkWatcher.json#/definitions/ConnectivityHop"
          }
        }
      },
      "description": "Connection state snapshot."
    },
    "ConnectionMonitorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorResult"
          },
          "description": "Information about connection monitors."
        }
      },
      "description": "List of connection monitors."
    },
    "ConnectionMonitorResult": {
      "x-ms-azure-resource": true,
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the connection monitor."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the connection monitor."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Connection monitor type."
        },
        "location": {
          "type": "string",
          "description": "Connection monitor location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection monitor tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionMonitorResultProperties",
          "description": "Properties of the connection monitor result."
        }
      },
      "description": "Information about the connection monitor."
    },
    "ConnectionMonitorResultProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the connection monitor."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the connection monitor was started."
        },
        "monitoringStatus": {
          "readOnly": true,
          "type": "string",
          "description": "The monitoring status of the connection monitor."
        },
        "connectionMonitorType": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "MultiEndpoint",
            "SingleSourceDestination"
          ],
          "x-ms-enum": {
            "name": "ConnectionMonitorType",
            "modelAsString": true
          },
          "description": "Type of connection monitor."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ConnectionMonitorParameters"
        }
      ],
      "description": "Describes the properties of a connection monitor."
    },
    "ConnectionMonitorQueryResult": {
      "properties": {
        "sourceStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Active",
            "Inactive"
          ],
          "x-ms-enum": {
            "name": "ConnectionMonitorSourceStatus",
            "modelAsString": true
          },
          "description": "Status of connection monitor source."
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionStateSnapshot"
          },
          "description": "Information about connection states."
        }
      },
      "description": "List of connection states snapshots."
    },
    "ConnectionMonitorEndpointLocationDetails": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "Region for connection monitor endpoint."
        }
      },
      "description": "Connection monitor endpoint location details only being used for 'AzureArcNetwork' type endpoints, which contains the region details."
    },
    "WebApplicationFirewallPolicy": {
      "description": "Defines web application firewall policy.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebApplicationFirewallPolicyPropertiesFormat",
          "description": "Properties of the web application firewall policy."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "WebApplicationFirewallPolicyPropertiesFormat": {
      "description": "Defines web application firewall policy properties.",
      "required": [
        "managedRules"
      ],
      "properties": {
        "policySettings": {
          "description": "The PolicySettings for policy.",
          "$ref": "#/definitions/PolicySettings"
        },
        "customRules": {
          "description": "The custom rules inside the policy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallCustomRule"
          }
        },
        "applicationGateways": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./applicationGateway.json#/definitions/ApplicationGateway"
          },
          "description": "A collection of references to application gateways."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the web application firewall policy resource."
        },
        "resourceState": {
          "title": "Resource status of the policy.",
          "readOnly": true,
          "type": "string",
          "description": "Resource status of the policy.",
          "enum": [
            "Creating",
            "Enabling",
            "Enabled",
            "Disabling",
            "Disabled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallPolicyResourceState",
            "modelAsString": true
          }
        },
        "managedRules": {
          "description": "Describes the managedRules structure.",
          "$ref": "#/definitions/ManagedRulesDefinition"
        },
        "httpListeners": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "A collection of references to application gateway http listeners."
        },
        "pathBasedRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "A collection of references to application gateway path rules."
        },
        "applicationGatewayForContainers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayForContainersReferenceDefinition"
          },
          "description": "A collection of references to application gateway for containers."
        }
      }
    },
    "WebApplicationFirewallPolicyListResult": {
      "description": "Result of the request to list WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallPolicy"
          },
          "description": "List of WebApplicationFirewallPolicies within a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of WebApplicationFirewallPolicy objects if there are any."
        }
      }
    },
    "ManagedRulesDefinition": {
      "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
      "required": [
        "managedRuleSets"
      ],
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExceptionEntry"
          },
          "description": "The exceptions that are applied on the policy."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwaspCrsExclusionEntry"
          },
          "description": "The Exclusions that are applied on the policy."
        },
        "managedRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          },
          "description": "The managed rule sets that are associated with the policy."
        }
      }
    },
    "PolicySettings": {
      "description": "Defines contents of a web application firewall global configuration.",
      "properties": {
        "state": {
          "description": "The state of the policy.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallEnabledState",
            "modelAsString": true
          }
        },
        "mode": {
          "description": "The mode of the policy.",
          "type": "string",
          "enum": [
            "Prevention",
            "Detection"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallMode",
            "modelAsString": true
          }
        },
        "requestBodyCheck": {
          "type": "boolean",
          "description": "Whether to allow WAF to check request Body."
        },
        "requestBodyInspectLimitInKB": {
          "type": "integer",
          "format": "int32",
          "description": "Max inspection limit in KB for request body inspection for WAF."
        },
        "requestBodyEnforcement": {
          "type": "boolean",
          "default": true,
          "description": "Whether allow WAF to enforce request body limits."
        },
        "maxRequestBodySizeInKb": {
          "type": "integer",
          "format": "int32",
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size in Kb for WAF."
        },
        "fileUploadEnforcement": {
          "type": "boolean",
          "default": true,
          "description": "Whether allow WAF to enforce file upload limits."
        },
        "fileUploadLimitInMb": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Maximum file upload size in Mb for WAF."
        },
        "customBlockResponseStatusCode": {
          "description": "If the action type is block, customer can override the response status code.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "customBlockResponseBody": {
          "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
          "type": "string",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
          "maxLength": 32768
        },
        "logScrubbing": {
          "description": "To scrub sensitive log fields",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the log scrubbing config. Default value is Enabled.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "WebApplicationFirewallScrubbingState",
                "modelAsString": true
              }
            },
            "scrubbingRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebApplicationFirewallScrubbingRules"
              },
              "x-ms-identifiers": [],
              "description": "The rules that are applied to the logs for scrubbing."
            }
          }
        },
        "jsChallengeCookieExpirationInMins": {
          "description": "Web Application Firewall JavaScript Challenge Cookie Expiration time in minutes.",
          "type": "integer",
          "format": "int32",
          "minimum": 5,
          "maximum": 1440
        }
      }
    },
    "WebApplicationFirewallCustomRule": {
      "description": "Defines contents of a web application rule.",
      "required": [
        "priority",
        "ruleType",
        "matchConditions",
        "action"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a policy. This name can be used to access the resource.",
          "maxLength": 128
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "priority": {
          "description": "Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
          "type": "integer"
        },
        "state": {
          "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallState",
            "modelAsString": true
          }
        },
        "rateLimitDuration": {
          "type": "string",
          "description": "Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.",
          "enum": [
            "OneMin",
            "FiveMins"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayFirewallRateLimitDuration",
            "modelAsString": true
          }
        },
        "rateLimitThreshold": {
          "description": "Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1",
          "type": "integer",
          "format": "int32"
        },
        "ruleType": {
          "description": "The rule type.",
          "type": "string",
          "enum": [
            "MatchRule",
            "RateLimitRule",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallRuleType",
            "modelAsString": true
          }
        },
        "matchConditions": {
          "description": "List of match conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchCondition"
          }
        },
        "groupByUserSession": {
          "description": "List of user session identifier group by clauses.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/GroupByUserSession"
          }
        },
        "action": {
          "description": "Type of Actions.",
          "type": "string",
          "enum": [
            "Allow",
            "Block",
            "Log",
            "JSChallenge"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallAction",
            "modelAsString": true
          }
        }
      }
    },
    "Transform": {
      "description": "Transforms applied before matching.",
      "type": "string",
      "enum": [
        "Uppercase",
        "Lowercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls",
        "HtmlEntityDecode"
      ],
      "x-ms-enum": {
        "name": "WebApplicationFirewallTransform",
        "modelAsString": true
      }
    },
    "MatchVariable": {
      "description": "Define match variables.",
      "required": [
        "variableName"
      ],
      "properties": {
        "variableName": {
          "description": "Match Variable.",
          "type": "string",
          "enum": [
            "RemoteAddr",
            "RequestMethod",
            "QueryString",
            "PostArgs",
            "RequestUri",
            "RequestHeaders",
            "RequestBody",
            "RequestCookies"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallMatchVariable",
            "modelAsString": true
          }
        },
        "selector": {
          "description": "The selector of match variable.",
          "type": "string"
        }
      }
    },
    "MatchCondition": {
      "description": "Define match conditions.",
      "required": [
        "matchVariables",
        "operator",
        "matchValues"
      ],
      "properties": {
        "matchVariables": {
          "description": "List of match variables.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchVariable"
          }
        },
        "operator": {
          "description": "The operator to be matched.",
          "type": "string",
          "enum": [
            "IPMatch",
            "Equal",
            "Contains",
            "LessThan",
            "GreaterThan",
            "LessThanOrEqual",
            "GreaterThanOrEqual",
            "BeginsWith",
            "EndsWith",
            "Regex",
            "GeoMatch",
            "Any"
          ],
          "x-ms-enum": {
            "name": "WebApplicationFirewallOperator",
            "modelAsString": true
          }
        },
        "negationConditon": {
          "description": "Whether this is negate condition or not.",
          "type": "boolean"
        },
        "matchValues": {
          "description": "Match value.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "description": "List of transforms.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          }
        }
      }
    },
    "GroupByVariable": {
      "type": "object",
      "description": "Define user session group by clause variables.",
      "required": [
        "variableName"
      ],
      "properties": {
        "variableName": {
          "description": "User Session clause variable.",
          "type": "string",
          "enum": [
            "ClientAddr",
            "GeoLocation",
            "None",
            "ClientAddrXFFHeader",
            "GeoLocationXFFHeader"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayFirewallUserSessionVariable",
            "modelAsString": true
          }
        }
      }
    },
    "GroupByUserSession": {
      "type": "object",
      "description": "Define user session identifier group by clauses.",
      "required": [
        "groupByVariables"
      ],
      "properties": {
        "groupByVariables": {
          "description": "List of group by clause variables.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/GroupByVariable"
          }
        }
      }
    },
    "ManagedRuleSet": {
      "type": "object",
      "description": "Defines a managed rule set.",
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ],
      "properties": {
        "ruleSetType": {
          "description": "Defines the rule set type to use.",
          "type": "string"
        },
        "ruleSetVersion": {
          "description": "Defines the version of the rule set to use.",
          "type": "string"
        },
        "ruleGroupOverrides": {
          "description": "Defines the rule group overrides to apply to the rule set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleGroupOverride"
          }
        },
        "computedDisabledRules": {
          "readOnly": true,
          "description": "Stores the final list of disabled rule groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSetRuleGroup"
          }
        }
      }
    },
    "ManagedRuleGroupOverride": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "required": [
        "ruleGroupName"
      ],
      "properties": {
        "ruleGroupName": {
          "description": "The managed rule group to override.",
          "type": "string"
        },
        "rules": {
          "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleOverride"
          }
        }
      }
    },
    "ManagedRuleOverride": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "required": [
        "ruleId"
      ],
      "properties": {
        "ruleId": {
          "description": "Identifier for the managed rule.",
          "type": "string"
        },
        "state": {
          "description": "The state of the managed rule. Defaults to Disabled if not specified.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ManagedRuleEnabledState",
            "modelAsString": true
          }
        },
        "action": {
          "description": "Describes the override action to be applied when rule matches.",
          "$ref": "#/definitions/ActionType"
        },
        "sensitivity": {
          "description": "Describes the override sensitivity to be applied when rule matches.",
          "$ref": "#/definitions/SensitivityType"
        }
      }
    },
    "ManagedRuleSetRuleGroup": {
      "description": "Defines a managed rule set rule group",
      "type": "object",
      "required": [
        "ruleGroupName"
      ],
      "properties": {
        "ruleGroupName": {
          "description": "Name of the rule group",
          "type": "string"
        },
        "rules": {
          "description": "List of rules within the rule group",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExclusionManagedRuleSet": {
      "type": "object",
      "description": "Defines a managed rule set for Exclusions.",
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ],
      "properties": {
        "ruleSetType": {
          "description": "Defines the rule set type to use.",
          "type": "string"
        },
        "ruleSetVersion": {
          "description": "Defines the version of the rule set to use.",
          "type": "string"
        },
        "ruleGroups": {
          "description": "Defines the rule groups to apply to the rule set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExclusionManagedRuleGroup"
          }
        }
      }
    },
    "ExclusionManagedRuleGroup": {
      "type": "object",
      "description": "Defines a managed rule group to use for exclusion.",
      "required": [
        "ruleGroupName"
      ],
      "properties": {
        "ruleGroupName": {
          "description": "The managed rule group for exclusion.",
          "type": "string"
        },
        "rules": {
          "description": "List of rules that will be excluded. If none specified, all rules in the group will be excluded.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExclusionManagedRule"
          }
        }
      }
    },
    "ExclusionManagedRule": {
      "type": "object",
      "description": "Defines a managed rule to use for exclusion.",
      "required": [
        "ruleId"
      ],
      "properties": {
        "ruleId": {
          "description": "Identifier for the managed rule.",
          "type": "string"
        }
      }
    },
    "OwaspCrsExclusionEntry": {
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ],
      "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
      "properties": {
        "matchVariable": {
          "type": "string",
          "enum": [
            "RequestHeaderNames",
            "RequestCookieNames",
            "RequestArgNames",
            "RequestHeaderKeys",
            "RequestHeaderValues",
            "RequestCookieKeys",
            "RequestCookieValues",
            "RequestArgKeys",
            "RequestArgValues"
          ],
          "description": "The variable to be excluded.",
          "x-ms-enum": {
            "name": "OwaspCrsExclusionEntryMatchVariable",
            "modelAsString": true
          }
        },
        "selectorMatchOperator": {
          "type": "string",
          "enum": [
            "Equals",
            "Contains",
            "StartsWith",
            "EndsWith",
            "EqualsAny"
          ],
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
          "x-ms-enum": {
            "name": "OwaspCrsExclusionEntrySelectorMatchOperator",
            "modelAsString": true
          }
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."
        },
        "exclusionManagedRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExclusionManagedRuleSet"
          },
          "description": "The managed rule sets that are associated with the exclusion."
        }
      }
    },
    "ExceptionEntry": {
      "required": [
        "matchVariable",
        "valueMatchOperator"
      ],
      "description": "Adds exception to allow a request when the condition is satisfied.",
      "type": "object",
      "properties": {
        "matchVariable": {
          "type": "string",
          "enum": [
            "RequestURI",
            "RemoteAddr",
            "RequestHeader"
          ],
          "description": "The variable on which we evaluate the exception condition",
          "x-ms-enum": {
            "name": "ExceptionEntryMatchVariable",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed values for the matchVariable"
        },
        "valueMatchOperator": {
          "type": "string",
          "enum": [
            "Equals",
            "Contains",
            "StartsWith",
            "EndsWith",
            "IPMatch"
          ],
          "x-ms-enum": {
            "name": "ExceptionEntryValueMatchOperator",
            "modelAsString": true
          },
          "description": "Operates on the allowed values for the matchVariable"
        },
        "selectorMatchOperator": {
          "type": "string",
          "enum": [
            "Equals",
            "Contains",
            "StartsWith",
            "EndsWith"
          ],
          "description": "When the matchVariable points to a key-value pair (e.g, RequestHeader), this operates on the selector",
          "x-ms-enum": {
            "name": "ExceptionEntrySelectorMatchOperator",
            "modelAsString": true
          }
        },
        "selector": {
          "type": "string",
          "description": "When the matchVariable points to a key-value pair (e.g, RequestHeader), this identifies the key."
        },
        "exceptionManagedRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExclusionManagedRuleSet"
          },
          "description": "The managed rule sets that are associated with the exception."
        }
      }
    },
    "ActionType": {
      "description": "Defines the action to take on rule match.",
      "type": "string",
      "enum": [
        "AnomalyScoring",
        "Allow",
        "Block",
        "Log",
        "JSChallenge"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "SensitivityType": {
      "description": "Defines the sensitivity for the rule.",
      "type": "string",
      "enum": [
        "None",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "SensitivityType",
        "modelAsString": true
      }
    },
    "WebApplicationFirewallScrubbingRules": {
      "description": "Allow certain variables to be scrubbed on WAF logs",
      "type": "object",
      "required": [
        "matchVariable",
        "selectorMatchOperator"
      ],
      "properties": {
        "matchVariable": {
          "type": "string",
          "enum": [
            "RequestHeaderNames",
            "RequestCookieNames",
            "RequestArgNames",
            "RequestPostArgNames",
            "RequestJSONArgNames",
            "RequestIPAddress"
          ],
          "description": "The variable to be scrubbed from the logs.",
          "x-ms-enum": {
            "name": "scrubbingRuleEntryMatchVariable",
            "modelAsString": true
          }
        },
        "selectorMatchOperator": {
          "type": "string",
          "enum": [
            "Equals",
            "EqualsAny"
          ],
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.",
          "x-ms-enum": {
            "name": " scrubbingRuleEntryMatchOperator",
            "modelAsString": true
          }
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."
        },
        "state": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Defines the state of log scrubbing rule. Default value is Enabled.",
          "x-ms-enum": {
            "name": " scrubbingRuleEntryState",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationGatewayForContainersReferenceDefinition": {
      "type": "object",
      "description": "Defines an application gateway for containers reference.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Resource Id of the application gateway for containers.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ServiceNetworking/trafficControllers"
              }
            ]
          }
        }
      }
    },
    "AvailableDelegationsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableDelegation"
          },
          "description": "An array of available delegations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "An array of available delegations."
    },
    "AvailableDelegation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the AvailableDelegation resource."
        },
        "id": {
          "type": "string",
          "description": "A unique identifier of the AvailableDelegation resource."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the service and resource."
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The actions permitted to the service upon delegation."
        }
      },
      "description": "The serviceName of an AvailableDelegation indicates a possible delegation for a subnet."
    },
    "AvailableServiceAlias": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the service alias."
        },
        "id": {
          "type": "string",
          "description": "The ID of the service alias."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "The resource name of the service alias."
        }
      },
      "description": "The available service alias."
    },
    "AvailableServiceAliasesResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableServiceAlias"
          },
          "description": "An array of available service aliases."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "An array of available service aliases."
    },
    "DdosCustomPolicy": {
      "description": "A DDoS custom policy in a resource group.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DdosCustomPolicyPropertiesFormat",
          "description": "Properties of the DDoS custom policy."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "DdosCustomPolicyPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the DDoS custom policy resource."
        }
      },
      "description": "DDoS custom policy properties."
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to.",
          "enum": [
            "Tcp",
            "Udp",
            "Icmp",
            "Esp",
            "*",
            "Ah"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CIDR or source IP ranges."
        },
        "sourceApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "./applicationSecurityGroup.json#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as source."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "destinationApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "./applicationSecurityGroup.json#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as destination."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "$ref": "#/definitions/SecurityRuleAccess",
          "description": "The network traffic is allowed or denied."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "$ref": "#/definitions/SecurityRuleDirection",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the security rule resource."
        }
      },
      "required": [
        "protocol",
        "access",
        "priority",
        "direction"
      ],
      "description": "Security rule resource."
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat",
          "description": "Properties of the security rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Network security rule."
    },
    "SecurityRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The security rules in a network security group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group."
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "flushConnection": {
          "type": "boolean",
          "description": "When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation."
        },
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "A collection of security rules of the network security group."
        },
        "defaultSecurityRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The default security rules of network security group."
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterface"
          },
          "description": "A collection of references to network interfaces."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "flowLogs": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkWatcher.json#/definitions/FlowLog"
          },
          "description": "A collection of references to flow log resources."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the network security group resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network security group resource."
        }
      },
      "description": "Network Security Group resource."
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat",
          "description": "Properties of the network security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource."
    },
    "NetworkSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroup"
          },
          "description": "A list of NetworkSecurityGroup resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkSecurityGroups API service call."
    },
    "SecurityRuleAccess": {
      "type": "string",
      "description": "Whether network traffic is allowed or denied.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "SecurityRuleAccess",
        "modelAsString": true
      }
    },
    "SecurityRuleDirection": {
      "type": "string",
      "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "SecurityRuleDirection",
        "modelAsString": true
      }
    },
    "NatGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Nat Gateway SKU.",
          "enum": [
            "Standard",
            "StandardV2"
          ],
          "x-ms-enum": {
            "name": "NatGatewaySkuName",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of nat gateway."
    },
    "NatGatewayPropertiesFormat": {
      "properties": {
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The idle timeout of the nat gateway."
        },
        "publicIpAddresses": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of public ip addresses V4 associated with the nat gateway resource."
        },
        "publicIpAddressesV6": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of public ip addresses V6 associated with the nat gateway resource."
        },
        "publicIpPrefixes": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of public ip prefixes V4 associated with the nat gateway resource."
        },
        "publicIpPrefixesV6": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of public ip prefixes V6 associated with the nat gateway resource."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "An array of references to the subnets using this nat gateway resource."
        },
        "sourceVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to the source virtual network using this nat gateway resource."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the NAT gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the NAT gateway resource."
        }
      },
      "description": "Nat Gateway properties."
    },
    "NatGateway": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/NatGatewaySku",
          "description": "The nat gateway SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NatGatewayPropertiesFormat",
          "description": "Nat Gateway properties."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the zone in which Nat Gateway should be deployed."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Nat Gateway resource."
    },
    "NatGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NatGateway"
          },
          "description": "A list of Nat Gateways that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListNatGateways API service call."
    },
    "ServiceEndpointPolicyDefinitionPropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "service": {
          "type": "string",
          "description": "Service endpoint name."
        },
        "serviceResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of service resources."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint policy definition resource."
        }
      },
      "description": "Service Endpoint policy definition resource."
    },
    "ServiceEndpointPolicyDefinition": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceEndpointPolicyDefinitionPropertiesFormat",
          "description": "Properties of the service endpoint policy definition."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Service Endpoint policy definitions."
    },
    "ServiceEndpointPolicyDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
          },
          "description": "The service endpoint policy definition in a service endpoint policy."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListServiceEndpointPolicyDefinition API service call. Retrieves all service endpoint policy definition that belongs to a service endpoint policy."
    },
    "ServiceEndpointPolicyPropertiesFormat": {
      "properties": {
        "serviceEndpointPolicyDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
          },
          "description": "A collection of service endpoint policy definitions of the service endpoint policy."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the service endpoint policy resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint policy resource."
        },
        "serviceAlias": {
          "type": "string",
          "description": "The alias indicating if the policy belongs to a service"
        },
        "contextualServiceEndpointPolicies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of contextual service endpoint policy."
        }
      },
      "description": "Service Endpoint Policy resource."
    },
    "ServiceEndpointPolicy": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceEndpointPolicyPropertiesFormat",
          "description": "Properties of the service end point policy."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of service endpoint policy. This is metadata used for the Azure portal experience."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Service End point policy resource."
    },
    "ServiceEndpointPolicyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPolicy"
          },
          "description": "A list of ServiceEndpointPolicy resources."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListServiceEndpointPolicies API service call."
    },
    "ServiceAssociationLinkPropertiesFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the service association link resource."
        },
        "allowDelete": {
          "type": "boolean",
          "description": "If true, the resource can be deleted."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations."
        }
      },
      "description": "Properties of ServiceAssociationLink."
    },
    "ServiceAssociationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceAssociationLinkPropertiesFormat",
          "description": "Resource navigation link properties format."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "ServiceAssociationLink resource."
    },
    "ResourceNavigationLinkFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource navigation link resource."
        }
      },
      "description": "Properties of ResourceNavigationLink."
    },
    "ResourceNavigationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceNavigationLinkFormat",
          "description": "Resource navigation link properties format."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource navigation link identifier."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "ResourceNavigationLink resource."
    },
    "ServiceDelegationPropertiesFormat": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)."
        },
        "actions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The actions permitted to the service upon delegation."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the service delegation resource."
        }
      },
      "description": "Properties of a service delegation."
    },
    "Delegation": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceDelegationPropertiesFormat",
          "description": "Properties of the subnet."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a subnet. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Details the service to which the subnet is delegated."
    },
    "SubnetPropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The address prefix for the subnet."
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of address prefixes for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "./networkSecurityGroup.json#/definitions/NetworkSecurityGroup",
          "description": "The reference to the NetworkSecurityGroup resource."
        },
        "routeTable": {
          "$ref": "./routeTable.json#/definitions/RouteTable",
          "description": "The reference to the RouteTable resource."
        },
        "natGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Nat gateway associated with this subnet."
        },
        "serviceEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPropertiesFormat"
          },
          "description": "An array of service endpoints."
        },
        "serviceEndpointPolicies": {
          "type": "array",
          "items": {
            "$ref": "./serviceEndpointPolicy.json#/definitions/ServiceEndpointPolicy"
          },
          "description": "An array of service endpoint policies."
        },
        "privateEndpoints": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./privateEndpoint.json#/definitions/PrivateEndpoint"
          },
          "description": "An array of references to private endpoints."
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/IPConfiguration"
          },
          "description": "An array of references to the network interface IP configurations using subnet."
        },
        "ipConfigurationProfiles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkProfile.json#/definitions/IPConfigurationProfile"
          },
          "description": "Array of IP configuration profiles which reference this subnet."
        },
        "ipAllocations": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of IpAllocation which reference this subnet."
        },
        "resourceNavigationLinks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "An array of references to the external resources using subnet."
        },
        "serviceAssociationLinks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceAssociationLink"
          },
          "description": "An array of references to services injecting into this subnet."
        },
        "delegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegation"
          },
          "description": "An array of references to the delegations on the subnet."
        },
        "purpose": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the subnet resource."
        },
        "privateEndpointNetworkPolicies": {
          "type": "string",
          "default": "Disabled",
          "description": "Enable or Disable apply network policies on private end point in the subnet.",
          "enum": [
            "Enabled",
            "Disabled",
            "NetworkSecurityGroupEnabled",
            "RouteTableEnabled"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPrivateEndpointNetworkPolicies",
            "modelAsString": true
          }
        },
        "privateLinkServiceNetworkPolicies": {
          "type": "string",
          "default": "Enabled",
          "description": "Enable or Disable apply network policies on private link service in the subnet.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPrivateLinkServiceNetworkPolicies",
            "modelAsString": true
          }
        },
        "applicationGatewayIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "./applicationGateway.json#/definitions/ApplicationGatewayIPConfiguration"
          },
          "description": "Application gateway IP configurations of virtual network resource."
        },
        "sharingScope": {
          "type": "string",
          "default": null,
          "description": "Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.",
          "enum": [
            "Tenant",
            "DelegatedServices"
          ],
          "x-ms-enum": {
            "name": "SharingScope",
            "modelAsString": true
          }
        },
        "defaultOutboundAccess": {
          "type": "boolean",
          "description": "Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet."
        },
        "ipamPoolPrefixAllocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpamPoolPrefixAllocation"
          },
          "description": "A list of IPAM Pools for allocating IP address prefixes."
        }
      },
      "description": "Properties of the subnet."
    },
    "ServiceEndpointPropertiesFormat": {
      "properties": {
        "service": {
          "type": "string",
          "description": "The type of the endpoint service."
        },
        "networkIdentifier": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SubResource as network identifier."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint resource."
        }
      },
      "description": "The service endpoint properties."
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "remoteVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering)."
        },
        "localAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The local address space of the local virtual network that is peered."
        },
        "localVirtualNetworkAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The current local address space of the local virtual network that is peered."
        },
        "remoteAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the address space peered with the remote virtual network."
        },
        "remoteVirtualNetworkAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the current address space of the remote virtual network."
        },
        "remoteBgpCommunities": {
          "$ref": "#/definitions/VirtualNetworkBgpCommunities",
          "default": null,
          "description": "The reference to the remote virtual network's Bgp Communities."
        },
        "remoteVirtualNetworkEncryption": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkEncryption",
          "default": null,
          "description": "The reference to the remote virtual network's encryption"
        },
        "peeringState": {
          "type": "string",
          "description": "The status of the virtual network peering.",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPeeringState",
            "modelAsString": true
          }
        },
        "peeringSyncLevel": {
          "type": "string",
          "description": "The peering sync status of the virtual network peering.",
          "enum": [
            "FullyInSync",
            "RemoteNotInSync",
            "LocalNotInSync",
            "LocalAndRemoteNotInSync"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPeeringLevel",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network peering resource."
        },
        "doNotVerifyRemoteGateways": {
          "type": "boolean",
          "description": "If we need to verify the provisioning state of the remote gateway."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resourceGuid property of the Virtual Network peering resource."
        },
        "peerCompleteVnets": {
          "type": "boolean",
          "description": "Whether complete virtual network address space is peered."
        },
        "enableOnlyIPv6Peering": {
          "type": "boolean",
          "description": "Whether only Ipv6 address space is peered for subnet peering."
        },
        "localSubnetNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of local subnet names that are subnet peered with remote virtual network."
        },
        "remoteSubnetNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of remote subnet names from remote virtual network that are subnet peered."
        }
      },
      "description": "Properties of the virtual network peering."
    },
    "Subnet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat",
          "description": "Properties of the subnet."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Subnet in a virtual network resource."
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPeeringPropertiesFormat",
          "description": "Properties of the virtual network peering."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Peerings in a virtual network resource."
    },
    "SubnetListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "The subnets in a virtual network."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets API service callRetrieves all subnet that belongs to a virtual network."
    },
    "ResourceNavigationLinksListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "The resource navigation links in a subnet."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ResourceNavigationLinks_List operation."
    },
    "ServiceAssociationLinksListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceAssociationLink"
          },
          "description": "The service association links in a subnet."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ServiceAssociationLinks_List operation."
    },
    "VirtualNetworkPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "The peerings in a virtual network."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets API service call. Retrieves all subnets that belong to a virtual network."
    },
    "VirtualNetworkPropertiesFormat": {
      "properties": {
        "addressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The AddressSpace that contains an array of IP address ranges that can be used by subnets."
        },
        "dhcpOptions": {
          "$ref": "#/definitions/DhcpOptions",
          "description": "The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network."
        },
        "flowTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The FlowTimeout value (in minutes) for the Virtual Network"
        },
        "subnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A list of subnets in a Virtual Network."
        },
        "virtualNetworkPeerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "A list of peerings in a Virtual Network."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resourceGuid property of the Virtual Network resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network resource."
        },
        "enableDdosProtection": {
          "type": "boolean",
          "default": false,
          "description": "Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource."
        },
        "enableVmProtection": {
          "type": "boolean",
          "default": false,
          "description": "Indicates if VM protection is enabled for all the subnets in the virtual network."
        },
        "ddosProtectionPlan": {
          "$ref": "./network.json#/definitions/SubResource",
          "default": null,
          "description": "The DDoS protection plan associated with the virtual network."
        },
        "bgpCommunities": {
          "$ref": "#/definitions/VirtualNetworkBgpCommunities",
          "default": null,
          "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET."
        },
        "encryption": {
          "$ref": "#/definitions/VirtualNetworkEncryption",
          "default": null,
          "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet."
        },
        "ipAllocations": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of IpAllocation which reference this VNET."
        },
        "flowLogs": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkWatcher.json#/definitions/FlowLog"
          },
          "description": "A collection of references to flow log resources."
        },
        "privateEndpointVNetPolicies": {
          "readOnly": false,
          "$ref": "#/definitions/PrivateEndpointVNetPolicies",
          "description": "Private Endpoint VNet Policies."
        },
        "defaultPublicNatGateway": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "A reference to the default public nat gateway being used by this virtual network resource."
        }
      },
      "description": "Properties of the virtual network."
    },
    "VirtualNetwork": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the virtual network."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPropertiesFormat",
          "description": "Properties of the virtual network."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Virtual Network resource."
    },
    "VirtualNetworkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetwork"
          },
          "description": "A list of VirtualNetwork resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworks API service call."
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        },
        "ipamPoolPrefixAllocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpamPoolPrefixAllocation"
          },
          "description": "A list of IPAM Pools allocating IP address prefixes."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    },
    "DhcpOptions": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of DNS servers IP addresses."
        }
      },
      "description": "DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options."
    },
    "PrivateEndpointVNetPolicies": {
      "type": "string",
      "description": "Private Endpoint VNet Policies.",
      "enum": [
        "Disabled",
        "Basic"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointVNetPolicies",
        "modelAsString": true
      }
    },
    "VirtualNetworkBgpCommunities": {
      "properties": {
        "virtualNetworkCommunity": {
          "type": "string",
          "description": "The BGP community associated with the virtual network."
        },
        "regionalCommunity": {
          "type": "string",
          "readOnly": true,
          "description": "The BGP community associated with the region of the virtual network."
        }
      },
      "required": [
        "virtualNetworkCommunity"
      ],
      "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET."
    },
    "VirtualNetworkEncryption": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates if encryption is enabled on the virtual network."
        },
        "enforcement": {
          "type": "string",
          "description": "If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.",
          "enum": [
            "DropUnencrypted",
            "AllowUnencrypted"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkEncryptionEnforcement",
            "modelAsString": true
          }
        }
      },
      "required": [
        "enabled"
      ],
      "description": "Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet."
    },
    "IPAddressAvailabilityResult": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Private IP address availability."
        },
        "availableIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Contains other available private IP addresses if the asked for address is taken."
        },
        "isPlatformReserved": {
          "type": "boolean",
          "description": "Private IP address platform reserved."
        }
      },
      "description": "Response for CheckIPAddressAvailability API service call."
    },
    "VirtualNetworkListUsageResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/VirtualNetworkUsage"
          },
          "description": "VirtualNetwork usage stats."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the virtual networks GetUsage API service call."
    },
    "VirtualNetworkUsage": {
      "properties": {
        "currentValue": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Indicates number of IPs used from the Subnet."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Subnet identifier."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Indicates the size of the subnet."
        },
        "name": {
          "$ref": "#/definitions/VirtualNetworkUsageName",
          "readOnly": true,
          "description": "The name containing common and localized value for usage."
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Usage units. Returns 'Count'."
        }
      },
      "description": "Usage details for subnet."
    },
    "VirtualNetworkUsageName": {
      "properties": {
        "localizedValue": {
          "type": "string",
          "readOnly": true,
          "description": "Localized subnet size and usage string."
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "Subnet size and usage string."
        }
      },
      "description": "Usage strings container."
    },
    "PrepareNetworkPoliciesRequest": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the service for which subnet is being prepared for."
        },
        "networkIntentPolicyConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkIntentPolicyConfiguration"
          },
          "description": "A list of NetworkIntentPolicyConfiguration."
        }
      },
      "description": "Details of PrepareNetworkPolicies for Subnet."
    },
    "UnprepareNetworkPoliciesRequest": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the service for which subnet is being unprepared for."
        }
      },
      "description": "Details of UnprepareNetworkPolicies for Subnet."
    },
    "NetworkIntentPolicyConfiguration": {
      "properties": {
        "networkIntentPolicyName": {
          "type": "string",
          "description": "The name of the Network Intent Policy for storing in target subscription."
        },
        "sourceNetworkIntentPolicy": {
          "$ref": "#/definitions/NetworkIntentPolicy",
          "description": "Source network intent policy."
        }
      },
      "description": "Details of NetworkIntentPolicyConfiguration for PrepareNetworkPoliciesRequest."
    },
    "NetworkIntentPolicy": {
      "properties": {
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Network Intent Policy resource."
    },
    "VirtualNetworkDdosProtectionStatusResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "./publicIpAddress.json#/definitions/PublicIpDdosProtectionStatusResult"
          },
          "x-ms-identifiers": [],
          "description": "The Ddos Protection Status Result for each public ip under a virtual network."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for GetVirtualNetworkDdosProtectionStatusOperation."
    },
    "IpamPoolPrefixAllocation": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Resource id of the associated Azure IpamPool resource."
            }
          }
        },
        "numberOfIpAddresses": {
          "type": "string",
          "description": "Number of IP addresses to allocate."
        },
        "allocatedAddressPrefixes": {
          "description": "List of assigned IP address prefixes in the IpamPool of the associated resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "description": "IpamPool prefix allocation reference."
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "IPRule": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
        }
      },
      "type": "object"
    },
    "BastionHostIPConfigurationPropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference of the PublicIP resource. Null for private only bastion"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the bastion host IP configuration resource."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "Private IP allocation method."
        }
      },
      "required": [
        "subnet"
      ],
      "description": "Properties of IP configuration of an Bastion Host."
    },
    "BastionHostIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BastionHostIPConfigurationPropertiesFormat",
          "description": "Represents the ip configuration associated with the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Ip configuration type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of an Bastion Host."
    },
    "BastionHostPropertiesFormat": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionHostIPConfiguration"
          },
          "description": "IP configuration of the Bastion Host resource."
        },
        "dnsName": {
          "type": "string",
          "description": "FQDN for the endpoint on which bastion host is accessible."
        },
        "virtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to an existing virtual network required for Developer Bastion Host only."
        },
        "networkAcls": {
          "properties": {
            "ipRules": {
              "type": "array",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "$ref": "#/definitions/IPRule"
              },
              "description": "Sets the IP ACL rules for Developer Bastion Host."
            }
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the bastion host resource."
        },
        "scaleUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The scale units for the Bastion Host resource.",
          "minimum": 2,
          "maximum": 50
        },
        "disableCopyPaste": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Copy/Paste feature of the Bastion Host resource."
        },
        "enableFileCopy": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable File Copy feature of the Bastion Host resource."
        },
        "enableIpConnect": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable IP Connect feature of the Bastion Host resource."
        },
        "enableShareableLink": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Shareable Link of the Bastion Host resource."
        },
        "enableTunneling": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Tunneling feature of the Bastion Host resource."
        },
        "enableKerberos": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Kerberos feature of the Bastion Host resource."
        },
        "enableSessionRecording": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Session Recording feature of the Bastion Host resource."
        },
        "enablePrivateOnlyBastion": {
          "type": "boolean",
          "default": false,
          "description": "Enable/Disable Private Only feature of the Bastion Host resource."
        }
      },
      "description": "Properties of the Bastion Host."
    },
    "BastionHost": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BastionHostPropertiesFormat",
          "description": "Represents the bastion host resource."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "sku": {
          "description": "The sku of this Bastion Host.",
          "$ref": "#/definitions/Sku"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Bastion Host resource."
    },
    "BastionHostListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionHost"
          },
          "description": "List of Bastion Hosts in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListBastionHosts API service call."
    },
    "BastionShareableLink": {
      "properties": {
        "vm": {
          "$ref": "#/definitions/VM",
          "description": "Reference of the virtual machine resource."
        },
        "bsl": {
          "type": "string",
          "readOnly": true,
          "description": "The unique Bastion Shareable Link to the virtual machine."
        },
        "createdAt": {
          "type": "string",
          "readOnly": true,
          "description": "The time when the link was created."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Optional field indicating the warning or error message related to the vm in case of partial failure."
        }
      },
      "required": [
        "vm"
      ],
      "description": "Bastion Shareable Link."
    },
    "BastionShareableLinkListRequest": {
      "properties": {
        "vms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionShareableLink"
          },
          "description": "List of VM references."
        }
      },
      "description": "Post request for Create/Delete/Get Bastion Shareable Link endpoints."
    },
    "BastionShareableLinkTokenListRequest": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Bastion Shareable Link Token."
        }
      },
      "description": "Post request for Delete Bastion Shareable Link By Token endpoint."
    },
    "BastionShareableLinkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionShareableLink"
          },
          "description": "List of Bastion Shareable Links for the request."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for all the Bastion Shareable Link endpoints."
    },
    "BastionActiveSession": {
      "properties": {
        "sessionId": {
          "type": "string",
          "readOnly": true,
          "description": "A unique id for the session."
        },
        "startTime": {
          "type": "object",
          "readOnly": true,
          "description": "The time when the session started."
        },
        "targetSubscriptionId": {
          "type": "string",
          "readOnly": true,
          "description": "The subscription id for the target virtual machine."
        },
        "resourceType": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the resource."
        },
        "targetHostName": {
          "type": "string",
          "readOnly": true,
          "description": "The host name of the target."
        },
        "targetResourceGroup": {
          "type": "string",
          "readOnly": true,
          "description": "The resource group of the target."
        },
        "userName": {
          "type": "string",
          "readOnly": true,
          "description": "The user name who is active on this session."
        },
        "targetIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The IP Address of the target."
        },
        "protocol": {
          "type": "string",
          "readOnly": true,
          "description": "The protocol used to connect to the target.",
          "enum": [
            "SSH",
            "RDP"
          ],
          "x-ms-enum": {
            "name": "BastionConnectProtocol",
            "modelAsString": true
          }
        },
        "targetResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The resource id of the target."
        },
        "sessionDurationInMins": {
          "type": "number",
          "readOnly": true,
          "description": "Duration in mins the session has been active."
        }
      },
      "description": "The session detail for a target."
    },
    "BastionActiveSessionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionActiveSession"
          },
          "description": "List of active sessions on the bastion."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for GetActiveSessions."
    },
    "BastionSessionState": {
      "properties": {
        "sessionId": {
          "type": "string",
          "readOnly": true,
          "description": "A unique id for the session."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Used for extra information."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the session. Disconnected/Failed/NotFound."
        }
      },
      "description": "The session state detail for a target."
    },
    "BastionSessionDeleteResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BastionSessionState"
          },
          "description": "List of sessions with their corresponding state."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for DisconnectActiveSessions."
    },
    "VM": {
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Describes a Virtual Machine."
    },
    "SessionIds": {
      "properties": {
        "sessionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of session IDs."
        }
      },
      "description": "List of session IDs."
    },
    "SecurityAdminConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityAdminConfigurationPropertiesFormat",
          "description": "Indicates the properties for the network manager security admin configuration."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the security admin configuration"
    },
    "SecurityAdminConfigurationPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the security configuration."
        },
        "applyOnNetworkIntentPolicyBasedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkIntentPolicyBasedService"
          },
          "description": "Enum list of network intent policy based services."
        },
        "networkGroupAddressSpaceAggregationOption": {
          "type": "string",
          "$ref": "#/definitions/AddressSpaceAggregationOption",
          "description": "Determine update behavior for changes to network groups referenced within the rules in this configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "description": "Defines the security admin configuration properties."
    },
    "SecurityAdminConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAdminConfiguration"
          },
          "description": "Gets a page of security admin configurations"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "A list of network manager security admin configurations"
    },
    "AdminRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAdminRule"
          },
          "description": "A list of admin rules"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "security configuration admin rule list result."
    },
    "AdminRuleCollectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminRuleCollection"
          },
          "description": "A list of network manager security admin configuration rule collections"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Security admin configuration rule collection list result."
    },
    "AdminRuleCollection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdminRuleCollectionPropertiesFormat",
          "description": "Indicates the properties for the network manager admin rule collection."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the admin rule collection."
    },
    "AdminRuleCollectionPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the admin rule collection."
        },
        "appliesToGroups": {
          "type": "array",
          "x-ms-identifiers": [
            "networkGroupId"
          ],
          "items": {
            "$ref": "#/definitions/NetworkManagerSecurityGroupItem"
          },
          "description": "Groups for configuration"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "appliesToGroups"
      ],
      "description": "Defines the admin rule collection properties."
    },
    "BaseAdminRule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Whether the rule is custom or default.",
          "enum": [
            "Custom",
            "Default"
          ],
          "x-ms-enum": {
            "name": "AdminRuleKind",
            "modelAsString": true
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "required": [
        "kind"
      ],
      "discriminator": "kind",
      "description": "Network base admin rule."
    },
    "AdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseAdminRule"
        }
      ],
      "description": "Network admin rule.",
      "x-ms-discriminator-value": "Custom"
    },
    "AdminPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "$ref": "#/definitions/RuleProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sources": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "items": {
            "$ref": "#/definitions/AddressPrefixItem"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinations": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "items": {
            "$ref": "#/definitions/AddressPrefixItem"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "$ref": "#/definitions/SecurityConfigurationRuleAccess",
          "description": "Indicates the access allowed for this particular rule"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 4096,
          "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "$ref": "#/definitions/SecurityConfigurationRuleDirection",
          "description": "Indicates if the traffic matched against the rule in inbound or outbound."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "protocol",
        "access",
        "direction",
        "priority"
      ],
      "description": "Security admin rule resource."
    },
    "DefaultAdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DefaultAdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseAdminRule"
        }
      ],
      "description": "Network default admin rule.",
      "x-ms-discriminator-value": "Default"
    },
    "DefaultAdminPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "flag": {
          "type": "string",
          "description": "Default rule flag."
        },
        "protocol": {
          "type": "string",
          "readOnly": true,
          "$ref": "#/definitions/RuleProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sources": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AddressPrefixItem"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinations": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AddressPrefixItem"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "$ref": "#/definitions/SecurityConfigurationRuleAccess",
          "readOnly": true,
          "description": "Indicates the access allowed for this particular rule"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "$ref": "#/definitions/SecurityConfigurationRuleDirection",
          "readOnly": true,
          "description": "Indicates if the traffic matched against the rule in inbound or outbound."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "description": "Security default admin rule resource."
    },
    "SecurityConfigurationRuleAccess": {
      "type": "string",
      "description": "Whether network traffic is allowed or denied.",
      "enum": [
        "Allow",
        "Deny",
        "AlwaysAllow"
      ],
      "x-ms-enum": {
        "name": "SecurityConfigurationRuleAccess",
        "modelAsString": true
      }
    },
    "SecurityConfigurationRuleDirection": {
      "type": "string",
      "description": "The direction of the rule. The direction specifies if the rule will be evaluated on incoming or outgoing traffic.",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "SecurityConfigurationRuleDirection",
        "modelAsString": true
      }
    },
    "RuleProtocol": {
      "type": "string",
      "description": "Network protocol this rule applies to.",
      "enum": [
        "Tcp",
        "Udp",
        "Icmp",
        "Esp",
        "Any",
        "Ah"
      ],
      "x-ms-enum": {
        "name": "SecurityConfigurationRuleProtocol",
        "modelAsString": true
      }
    },
    "NetworkManagerSecurityGroupItem": {
      "type": "object",
      "properties": {
        "networkGroupId": {
          "type": "string",
          "description": "Network manager group Id."
        }
      },
      "required": [
        "networkGroupId"
      ],
      "description": "Network manager security group item."
    },
    "AddressPrefixItem": {
      "type": "object",
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Address prefix."
        },
        "addressPrefixType": {
          "type": "string",
          "description": "Address prefix type.",
          "enum": [
            "IPPrefix",
            "ServiceTag",
            "NetworkGroup"
          ],
          "x-ms-enum": {
            "name": "AddressPrefixType",
            "modelAsString": true
          }
        }
      },
      "description": "Address prefix item."
    },
    "NetworkIntentPolicyBasedService": {
      "type": "string",
      "description": "Network intent policy based services.",
      "enum": [
        "None",
        "All",
        "AllowRulesOnly"
      ],
      "x-ms-enum": {
        "name": "NetworkIntentPolicyBasedService",
        "modelAsString": true
      }
    },
    "AddressSpaceAggregationOption": {
      "type": "string",
      "description": "Option indicating the update behavior of a resource's address prefixes referenced within a network manager configuration.",
      "enum": [
        "None",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "AddressSpaceAggregationOption",
        "modelAsString": true
      }
    },
    "ActiveConfigurationParameter": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "region Name."
          },
          "description": "List of regions."
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Effective Virtual Networks Parameter."
    },
    "ActiveConnectivityConfiguration": {
      "type": "object",
      "properties": {
        "commitTime": {
          "type": "string",
          "description": "Deployment time string.",
          "format": "date-time"
        },
        "region": {
          "type": "string",
          "description": "Deployment region."
        }
      },
      "allOf": [
        {
          "$ref": "./networkManagerEffectiveConfiguration.json#/definitions/EffectiveConnectivityConfiguration"
        }
      ],
      "description": "Active connectivity configuration."
    },
    "ActiveConnectivityConfigurationsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveConnectivityConfiguration"
          },
          "description": "Gets a page of active connectivity configurations."
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Result of the request to list active connectivity configurations. It contains a list of active connectivity configurations and a skiptoken to get the next set of results."
    },
    "ActiveSecurityAdminRulesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveBaseSecurityAdminRule"
          },
          "description": "Gets a page of active security admin rules."
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Result of the request to list active security admin rules. It contains a list of active security admin rules and a skiptoken to get the next set of results."
    },
    "ActiveBaseSecurityAdminRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "commitTime": {
          "type": "string",
          "description": "Deployment time string.",
          "format": "date-time"
        },
        "region": {
          "type": "string",
          "description": "Deployment region."
        },
        "configurationDescription": {
          "type": "string",
          "description": "A description of the security admin configuration."
        },
        "ruleCollectionDescription": {
          "type": "string",
          "description": "A description of the rule collection."
        },
        "ruleCollectionAppliesToGroups": {
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/NetworkManagerSecurityGroupItem"
          },
          "description": "Groups for rule collection"
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "./networkManagerEffectiveConfiguration.json#/definitions/ConfigurationGroup"
          },
          "description": "Effective configuration groups."
        },
        "kind": {
          "type": "string",
          "description": "Whether the rule is custom or default.",
          "enum": [
            "Custom",
            "Default"
          ],
          "x-ms-enum": {
            "name": "EffectiveAdminRuleKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ],
      "discriminator": "kind",
      "description": "Network base admin rule."
    },
    "ActiveSecurityAdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ActiveBaseSecurityAdminRule"
        }
      ],
      "description": "Network admin rule.",
      "x-ms-discriminator-value": "Custom"
    },
    "ActiveDefaultSecurityAdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/DefaultAdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the default security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ActiveBaseSecurityAdminRule"
        }
      ],
      "description": "Network default admin rule.",
      "x-ms-discriminator-value": "Default"
    },
    "BGPCommunity": {
      "properties": {
        "serviceSupportedRegion": {
          "type": "string",
          "description": "The region which the service support. e.g. For O365, region is Global."
        },
        "communityName": {
          "type": "string",
          "description": "The name of the bgp community. e.g. Skype."
        },
        "communityValue": {
          "type": "string",
          "description": "The value of the bgp community. For more information: https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing."
        },
        "communityPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The prefixes that the bgp community contains."
        },
        "isAuthorizedToUse": {
          "type": "boolean",
          "description": "Customer is authorized to use bgp community or not."
        },
        "serviceGroup": {
          "type": "string",
          "description": "The service group of the bgp community contains."
        }
      },
      "description": "Contains bgp community information offered in Service Community resources."
    },
    "BgpServiceCommunityPropertiesFormat": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the bgp community. e.g. Skype."
        },
        "bgpCommunities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BGPCommunity"
          },
          "description": "A list of bgp communities."
        }
      },
      "description": "Properties of Service Community."
    },
    "BgpServiceCommunity": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BgpServiceCommunityPropertiesFormat",
          "description": "Properties of the BGP service community."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Service Community Properties."
    },
    "BgpServiceCommunityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpServiceCommunity"
          },
          "description": "A list of service community resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListServiceCommunity API service call."
    },
    "ExpressRoutePortsLocationBandwidths": {
      "title": "ExpressRoutePorts Location Bandwidths",
      "description": "Real-time inventory of available ExpressRoute port bandwidths.",
      "properties": {
        "offerName": {
          "type": "string",
          "readOnly": true,
          "description": "Bandwidth descriptive name."
        },
        "valueInGbps": {
          "type": "integer",
          "readOnly": true,
          "description": "Bandwidth value in Gbps."
        }
      }
    },
    "ExpressRoutePortsLocationPropertiesFormat": {
      "title": "ExpressRoutePorts Location Properties",
      "description": "Properties specific to ExpressRoutePorts peering location resources.",
      "properties": {
        "address": {
          "type": "string",
          "readOnly": true,
          "description": "Address of peering location."
        },
        "contact": {
          "type": "string",
          "readOnly": true,
          "description": "Contact details of peering locations."
        },
        "availableBandwidths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRoutePortsLocationBandwidths"
          },
          "description": "The inventory of available ExpressRoutePort bandwidths."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route port location resource."
        }
      }
    },
    "ExpressRoutePortsLocation": {
      "title": "ExpressRoutePorts Peering Location",
      "description": "Definition of the ExpressRoutePorts peering location resource.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRoutePortsLocationPropertiesFormat",
          "description": "ExpressRoutePort peering location properties."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "ExpressRoutePortsLocationListResult": {
      "title": "ExpressRoutePorts Location List Result",
      "description": "Response for ListExpressRoutePortsLocations API service call.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRoutePortsLocation"
          },
          "description": "The list of all ExpressRoutePort peering locations."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "ExpressRouteLinkMacSecConfig": {
      "description": "ExpressRouteLink Mac Security Configuration.",
      "title": "Definition of ExpressRouteLink Mac Security configuration.",
      "properties": {
        "cknSecretIdentifier": {
          "type": "string",
          "description": "Keyvault Secret Identifier URL containing Mac security CKN key."
        },
        "cakSecretIdentifier": {
          "type": "string",
          "description": "Keyvault Secret Identifier URL containing Mac security CAK key."
        },
        "cipher": {
          "type": "string",
          "description": "Mac security cipher.",
          "enum": [
            "GcmAes256",
            "GcmAes128",
            "GcmAesXpn128",
            "GcmAesXpn256"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteLinkMacSecCipher",
            "modelAsString": true
          }
        },
        "sciState": {
          "type": "string",
          "description": "Sci mode enabled/disabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteLinkMacSecSciState",
            "modelAsString": true
          }
        }
      }
    },
    "ExpressRouteLinkPropertiesFormat": {
      "title": "ExpressRouteLink Resource Properties",
      "description": "Properties specific to ExpressRouteLink resources.",
      "properties": {
        "routerName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of Azure router associated with physical port."
        },
        "interfaceName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of Azure router interface."
        },
        "patchPanelId": {
          "readOnly": true,
          "type": "string",
          "description": "Mapping between physical port to patch panel port."
        },
        "rackId": {
          "readOnly": true,
          "type": "string",
          "description": "Mapping of physical patch panel to rack."
        },
        "coloLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Cololocation for ExpressRoute Hybrid Direct."
        },
        "connectorType": {
          "readOnly": true,
          "type": "string",
          "description": "Physical fiber port type.",
          "enum": [
            "LC",
            "SC"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteLinkConnectorType",
            "modelAsString": true
          }
        },
        "adminState": {
          "type": "string",
          "description": "Administrative state of the physical port.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteLinkAdminState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route link resource."
        },
        "macSecConfig": {
          "$ref": "#/definitions/ExpressRouteLinkMacSecConfig",
          "description": "MacSec configuration."
        }
      }
    },
    "ExpressRouteLink": {
      "title": "ExpressRouteLink",
      "description": "ExpressRouteLink child resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteLinkPropertiesFormat",
          "description": "ExpressRouteLink properties."
        },
        "name": {
          "type": "string",
          "description": "Name of child port resource that is unique among child port resources of the parent."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ]
    },
    "ExpressRouteLinkListResult": {
      "title": "ExpressRouteLink List Result",
      "description": "Response for ListExpressRouteLinks API service call.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteLink"
          },
          "description": "The list of ExpressRouteLink sub-resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "ExpressRoutePortPropertiesFormat": {
      "title": "ExpressRoutePort Properties",
      "description": "Properties specific to ExpressRoutePort resources.",
      "properties": {
        "peeringLocation": {
          "type": "string",
          "description": "The name of the peering location that the ExpressRoutePort is mapped to physically."
        },
        "bandwidthInGbps": {
          "type": "integer",
          "description": "Bandwidth of procured ports in Gbps."
        },
        "provisionedBandwidthInGbps": {
          "readOnly": true,
          "type": "number",
          "description": "Aggregate Gbps of associated circuit bandwidths."
        },
        "mtu": {
          "readOnly": true,
          "type": "string",
          "description": "Maximum transmission unit of the physical port pair(s)."
        },
        "encapsulation": {
          "type": "string",
          "description": "Encapsulation method on physical ports.",
          "enum": [
            "Dot1Q",
            "QinQ"
          ],
          "x-ms-enum": {
            "name": "ExpressRoutePortsEncapsulation",
            "modelAsString": true
          }
        },
        "etherType": {
          "readOnly": true,
          "type": "string",
          "description": "Ether type of the physical port."
        },
        "allocationDate": {
          "readOnly": true,
          "type": "string",
          "description": "Date of the physical port allocation to be used in Letter of Authorization."
        },
        "links": {
          "title": "ExpressRouteLink Sub-Resources",
          "description": "The set of physical links of the ExpressRoutePort resource.",
          "readOnly": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteLink"
          }
        },
        "circuits": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route port resource."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the express route port resource."
        },
        "billingType": {
          "type": "string",
          "description": "The billing type of the ExpressRoutePort resource.",
          "enum": [
            "MeteredData",
            "UnlimitedData"
          ],
          "x-ms-enum": {
            "name": "ExpressRoutePortsBillingType",
            "modelAsString": true
          }
        }
      }
    },
    "ExpressRoutePort": {
      "title": "ExpressRoute Port",
      "description": "ExpressRoutePort resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRoutePortPropertiesFormat",
          "description": "ExpressRoutePort properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of ExpressRoutePort, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "ExpressRoutePortListResult": {
      "title": "ExpressRoute Port List Result",
      "description": "Response for ListExpressRoutePorts API service call.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRoutePort"
          },
          "description": "A list of ExpressRoutePort resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "GenerateExpressRoutePortsLOARequest": {
      "description": "The customer name to be printed on a letter of authorization.",
      "properties": {
        "customerName": {
          "type": "string",
          "description": "The customer name."
        }
      },
      "required": [
        "customerName"
      ]
    },
    "GenerateExpressRoutePortsLOAResult": {
      "description": "Response for GenerateExpressRoutePortsLOA API service call.",
      "properties": {
        "encodedContent": {
          "type": "string",
          "description": "The content as a base64 encoded string."
        }
      }
    },
    "ExpressRoutePortAuthorizationPropertiesFormat": {
      "type": "object",
      "title": "ExpressRoute Port Authorization Properties",
      "description": "Properties of ExpressRoutePort Authorization.",
      "properties": {
        "authorizationKey": {
          "readOnly": true,
          "type": "string",
          "description": "The authorization key."
        },
        "authorizationUseStatus": {
          "readOnly": true,
          "type": "string",
          "description": "The authorization use status.",
          "enum": [
            "Available",
            "InUse"
          ],
          "x-ms-enum": {
            "name": "ExpressRoutePortAuthorizationUseStatus",
            "modelAsString": true
          }
        },
        "circuitResourceUri": {
          "readOnly": true,
          "type": "string",
          "description": "The reference to the ExpressRoute circuit resource using the authorization."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the authorization resource."
        }
      }
    },
    "ExpressRoutePortAuthorization": {
      "type": "object",
      "title": "ExpressRoute Port Authorization",
      "description": "ExpressRoutePort Authorization resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRoutePortAuthorizationPropertiesFormat",
          "description": "ExpressRoutePort properties."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ]
    },
    "ExpressRoutePortAuthorizationListResult": {
      "type": "object",
      "title": "ExpressRoute Port Authorization List Result",
      "description": "Response for ListExpressRoutePortAuthorizations API service call.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRoutePortAuthorization"
          },
          "description": "The authorizations in an ExpressRoute Port."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "NetworkVirtualAppliance": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkVirtualAppliancePropertiesFormat",
          "description": "Properties of the Network Virtual Appliance."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The service principal that has read access to cloud-init and config blob."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "NetworkVirtualAppliance Resource."
    },
    "NetworkVirtualAppliancePropertiesFormat": {
      "properties": {
        "nvaSku": {
          "readOnly": false,
          "description": "Network Virtual Appliance SKU.",
          "$ref": "#/definitions/VirtualApplianceSkuProperties"
        },
        "addressPrefix": {
          "type": "string",
          "readOnly": true,
          "description": "Address Prefix."
        },
        "bootStrapConfigurationBlobs": {
          "type": "array",
          "readOnly": false,
          "description": "BootStrapConfigurationBlobs storage URLs.",
          "items": {
            "type": "string"
          }
        },
        "virtualHub": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Virtual Hub where Network Virtual Appliance is being deployed."
        },
        "cloudInitConfigurationBlobs": {
          "type": "array",
          "readOnly": false,
          "description": "CloudInitConfigurationBlob storage URLs.",
          "items": {
            "type": "string"
          }
        },
        "cloudInitConfiguration": {
          "type": "string",
          "readOnly": false,
          "description": "CloudInitConfiguration string in plain text."
        },
        "virtualApplianceAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported."
        },
        "sshPublicKey": {
          "type": "string",
          "readOnly": false,
          "description": "Public key for SSH login."
        },
        "virtualApplianceNics": {
          "type": "array",
          "readOnly": true,
          "description": "List of Virtual Appliance Network Interfaces.",
          "items": {
            "$ref": "#/definitions/VirtualApplianceNicProperties"
          }
        },
        "networkProfile": {
          "type": "object",
          "readOnly": false,
          "description": "Network Profile containing configurations for Public and Private NIC.",
          "properties": {
            "networkInterfaceConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualApplianceNetworkInterfaceConfiguration"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "additionalNics": {
          "type": "array",
          "readOnly": false,
          "description": "Details required for Additional Network Interface.",
          "items": {
            "$ref": "#/definitions/VirtualApplianceAdditionalNicProperties"
          },
          "x-ms-identifiers": []
        },
        "internetIngressPublicIps": {
          "type": "array",
          "readOnly": false,
          "description": "List of Resource Uri of Public IPs for Internet Ingress Scenario.",
          "items": {
            "$ref": "#/definitions/InternetIngressPublicIpsProperties"
          },
          "x-ms-identifiers": []
        },
        "virtualApplianceSites": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to VirtualApplianceSite.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "virtualApplianceConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to VirtualApplianceConnections.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "inboundSecurityRules": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to InboundSecurityRules.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        },
        "deploymentType": {
          "type": "string",
          "readOnly": true,
          "description": "The deployment type. PartnerManaged for the SaaS NVA"
        },
        "delegation": {
          "description": "The delegation for the Virtual Appliance",
          "$ref": "#/definitions/DelegationProperties"
        },
        "partnerManagedResource": {
          "description": "The delegation for the Virtual Appliance",
          "$ref": "#/definitions/PartnerManagedResourceProperties"
        }
      },
      "description": "Network Virtual Appliance definition."
    },
    "VirtualApplianceSkuProperties": {
      "properties": {
        "vendor": {
          "type": "string",
          "readOnly": false,
          "description": "Virtual Appliance Vendor."
        },
        "bundledScaleUnit": {
          "type": "string",
          "readOnly": false,
          "description": "Virtual Appliance Scale Unit."
        },
        "marketPlaceVersion": {
          "type": "string",
          "readOnly": false,
          "description": "Virtual Appliance Version."
        }
      },
      "description": "Network Virtual Appliance Sku Properties."
    },
    "VirtualApplianceNicProperties": {
      "properties": {
        "nicType": {
          "type": "string",
          "readOnly": true,
          "description": "NIC type - PublicNic, PrivateNic, or AdditionalNic.",
          "enum": [
            "PublicNic",
            "PrivateNic",
            "AdditionalNic"
          ],
          "x-ms-enum": {
            "name": "NicTypeInResponse",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "NIC name."
        },
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Public IP address."
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Private IP address."
        },
        "instanceName": {
          "type": "string",
          "readOnly": true,
          "description": "Instance on which nic is attached."
        }
      },
      "description": "Network Virtual Appliance NIC properties."
    },
    "VirtualApplianceNetworkInterfaceConfiguration": {
      "type": "object",
      "readOnly": false,
      "description": "Represents a single NIC configuration.",
      "properties": {
        "type": {
          "type": "string",
          "description": "NIC type. This should be either PublicNic or PrivateNic.",
          "enum": [
            "PublicNic",
            "PrivateNic"
          ],
          "x-ms-enum": {
            "name": "NicTypeInRequest",
            "modelAsString": true
          },
          "x-ms-client-name": "NicType"
        },
        "properties": {
          "$ref": "#/definitions/VirtualApplianceNetworkInterfaceConfigurationProperties"
        }
      }
    },
    "VirtualApplianceNetworkInterfaceConfigurationProperties": {
      "type": "object",
      "readOnly": false,
      "description": "Represents a single NIC configuration properties.",
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplianceIPConfiguration"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VirtualApplianceIPConfiguration": {
      "type": "object",
      "readOnly": false,
      "description": "Represents a single IP configuration.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the IP configuration."
        },
        "properties": {
          "$ref": "#/definitions/VirtualApplianceIPConfigurationProperties"
        }
      }
    },
    "VirtualApplianceIPConfigurationProperties": {
      "type": "object",
      "readOnly": false,
      "description": "Represents a single IP configuration properties.",
      "properties": {
        "primary": {
          "type": "boolean",
          "description": "Whether or not this is primary IP configuration of the NIC."
        }
      }
    },
    "VirtualApplianceAdditionalNicProperties": {
      "type": "object",
      "title": "Network Virtual Appliance Additional Nic Properties",
      "description": "Network Virtual Appliance Additional NIC properties.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Name of additional nic"
        },
        "hasPublicIp": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag (true or false) for Intent for Public Ip on additional nic"
        }
      }
    },
    "InternetIngressPublicIpsProperties": {
      "type": "object",
      "title": "Internet Ingress Public Ip Properties",
      "description": "Resource Uri of Public Ip for Standard Load Balancer Frontend End.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": false,
          "description": "Resource Uri of Public Ip",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPAddresses"
              }
            ]
          }
        }
      }
    },
    "VirtualApplianceSite": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualApplianceSiteProperties",
          "description": "The properties of the Virtual Appliance Sites."
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual appliance site."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Site type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Virtual Appliance Site resource."
    },
    "VirtualApplianceSiteProperties": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "readOnly": false,
          "description": "Address Prefix."
        },
        "o365Policy": {
          "readOnly": false,
          "description": "Office 365 Policy.",
          "$ref": "#/definitions/Office365PolicyProperties"
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        }
      },
      "description": "Properties of the rule group."
    },
    "Office365PolicyProperties": {
      "properties": {
        "breakOutCategories": {
          "readOnly": false,
          "description": "Office 365 breakout categories.",
          "$ref": "#/definitions/BreakOutCategoryPolicies"
        }
      },
      "description": "Network Virtual Appliance Sku Properties."
    },
    "BreakOutCategoryPolicies": {
      "properties": {
        "allow": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control breakout of o365 allow category."
        },
        "optimize": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control breakout of o365 optimize category."
        },
        "default": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control breakout of o365 default category."
        }
      },
      "description": "Network Virtual Appliance Sku Properties."
    },
    "NetworkVirtualApplianceSku": {
      "title": "Available NetworkVirtualApplianceSkus",
      "description": "Definition of the NetworkVirtualApplianceSkus resource.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkVirtualApplianceSkuPropertiesFormat",
          "description": "NetworkVirtualApplianceSku properties."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "NetworkVirtualApplianceSkuPropertiesFormat": {
      "title": "Network Virtual Appliance Sku Properties",
      "description": "Properties specific to NetworkVirtualApplianceSkus.",
      "properties": {
        "vendor": {
          "type": "string",
          "readOnly": true,
          "description": "Network Virtual Appliance Sku vendor."
        },
        "availableVersions": {
          "type": "array",
          "readOnly": true,
          "description": "Available Network Virtual Appliance versions.",
          "items": {
            "type": "string"
          }
        },
        "availableScaleUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkVirtualApplianceSkuInstances"
          },
          "description": "The list of scale units available."
        }
      }
    },
    "NetworkVirtualApplianceSkuInstances": {
      "title": "Network Virtual Appliance Sku Instances",
      "description": "List of available Sku and instances.",
      "properties": {
        "scaleUnit": {
          "type": "string",
          "readOnly": true,
          "description": "Scale Unit."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Instance Count."
        }
      }
    },
    "NetworkVirtualApplianceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkVirtualAppliance"
          },
          "description": "List of Network Virtual Appliances."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkVirtualAppliances API service call."
    },
    "NetworkVirtualApplianceSiteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplianceSite"
          },
          "description": "List of Network Virtual Appliance sites."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkVirtualApplianceSites API service call."
    },
    "NetworkVirtualApplianceSkuListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkVirtualApplianceSku"
          },
          "description": "List of Network Virtual Appliance Skus that are available."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkVirtualApplianceSkus API service call."
    },
    "InboundSecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundSecurityRuleProperties",
          "description": "The properties of the Inbound Security Rules."
        },
        "name": {
          "type": "string",
          "description": "Name of security rule collection."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "NVA inbound security rule type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "NVA Inbound Security Rule resource."
    },
    "InboundSecurityRuleProperties": {
      "properties": {
        "ruleType": {
          "type": "string",
          "enum": [
            "AutoExpire",
            "Permanent"
          ],
          "x-ms-enum": {
            "name": "InboundSecurityRuleType",
            "modelAsString": true
          },
          "description": "Rule Type. This should be either AutoExpire or Permanent. Auto Expire Rule only creates NSG rules. Permanent Rule creates NSG rule and SLB LB Rule."
        },
        "rules": {
          "type": "array",
          "readOnly": false,
          "description": "List of allowed rules.",
          "items": {
            "$ref": "#/definitions/InboundSecurityRules"
          }
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        }
      },
      "description": "Properties of the Inbound Security Rules resource."
    },
    "InboundSecurityRules": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rule."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "InboundSecurityRulesProtocol",
            "modelAsString": true
          },
          "description": "Protocol. This should be either TCP or UDP."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range."
        },
        "destinationPortRange": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "NVA port ranges to be opened up. One needs to provide specific ports."
        },
        "destinationPortRanges": {
          "type": "array",
          "readOnly": false,
          "description": "NVA port ranges to be opened up. One can provide a range of ports. Allowed port value between 0 and 65535.",
          "items": {
            "type": "string"
          }
        },
        "appliesOn": {
          "type": "array",
          "readOnly": false,
          "description": "Public IP name in case of Permanent Rule type & Interface Name in case of Auto Expire Rule type",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Properties of the Inbound Security Rules resource."
    },
    "DelegationProperties": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The service name to which the NVA is delegated."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        }
      },
      "description": "Properties of the delegation."
    },
    "PartnerManagedResourceProperties": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "PaloAltoNetworks.Cloudngfw/firewalls"
              }
            ]
          },
          "description": "The partner managed resource id."
        },
        "internalLoadBalancerId": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/loadBalancers"
              }
            ]
          },
          "description": "The partner managed ILB resource id"
        },
        "standardLoadBalancerId": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/loadBalancers"
              }
            ]
          },
          "description": "The partner managed SLB resource id"
        }
      },
      "description": "Properties of the partner managed resource."
    },
    "NetworkVirtualApplianceInstanceIds": {
      "type": "object",
      "properties": {
        "instanceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The network virtual appliance instance ids. Omitting the network virtual appliance instance ids will result in the operation being performed on all virtual machines belonging to the network virtual appliance."
        }
      },
      "description": "Specifies a list of virtual machine instance IDs from the Network Virtual Appliance VM instances."
    },
    "NetworkVirtualApplianceInstanceId": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "integer",
          "format": "int32",
          "description": "The network virtual appliance instance id for which boot diagnostic logs is being requested"
        }
      }
    },
    "NetworkVirtualApplianceBootDiagnosticParameters": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "integer",
          "format": "int32",
          "description": "The network virtual appliance instance id for which boot diagnostic logs is being requested"
        },
        "serialConsoleStorageSasUrl": {
          "type": "string",
          "format": "uri",
          "description": "Specifies the sas-url to the storage blob into which serial console logs for the requested instance will be written"
        },
        "consoleScreenshotStorageSasUrl": {
          "type": "string",
          "format": "uri",
          "description": "Specifies the sas-url to the storage blob into which console screen shot for the requested instance will be written"
        }
      },
      "description": "Specifies input parameters required to retrieve the boot diagnostic logs for an NVA instance"
    },
    "FirewallPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyPropertiesFormat",
          "description": "Properties of the firewall policy."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the firewall policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "FirewallPolicy Resource."
    },
    "FirewallPolicyPropertiesFormat": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyPropertiesFormat in MB. (ex 0.5MB)"
        },
        "ruleCollectionGroups": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to FirewallPolicyRuleCollectionGroups.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall policy resource."
        },
        "basePolicy": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The parent firewall policy from which rules are inherited."
        },
        "firewalls": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Azure Firewalls that this Firewall Policy is associated with.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "childPolicies": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Child Firewall Policies.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "threatIntelMode": {
          "description": "The operation mode for Threat Intelligence.",
          "$ref": "./azureFirewall.json#/definitions/AzureFirewallThreatIntelMode"
        },
        "threatIntelWhitelist": {
          "description": "ThreatIntel Whitelist for Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyThreatIntelWhitelist"
        },
        "insights": {
          "description": "Insights on Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyInsights"
        },
        "snat": {
          "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
          "$ref": "#/definitions/FirewallPolicySNAT"
        },
        "sql": {
          "description": "SQL Settings definition.",
          "$ref": "#/definitions/FirewallPolicySQL"
        },
        "dnsSettings": {
          "description": "DNS Proxy Settings definition.",
          "$ref": "#/definitions/DnsSettings"
        },
        "explicitProxy": {
          "description": "Explicit Proxy Settings definition.",
          "$ref": "#/definitions/ExplicitProxy"
        },
        "intrusionDetection": {
          "description": "The configuration for Intrusion detection.",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetection"
        },
        "transportSecurity": {
          "description": "TLS Configuration definition.",
          "$ref": "#/definitions/FirewallPolicyTransportSecurity"
        },
        "sku": {
          "description": "The Firewall Policy SKU.",
          "$ref": "#/definitions/FirewallPolicySku"
        }
      },
      "description": "Firewall Policy definition."
    },
    "FirewallPolicyDraft": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyDraftProperties",
          "description": "Properties of the firewall policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "FirewallPolicy Resource."
    },
    "FirewallPolicyDraftProperties": {
      "type": "object",
      "properties": {
        "basePolicy": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The parent firewall policy from which rules are inherited."
        },
        "threatIntelMode": {
          "description": "The operation mode for Threat Intelligence.",
          "$ref": "./azureFirewall.json#/definitions/AzureFirewallThreatIntelMode"
        },
        "threatIntelWhitelist": {
          "description": "ThreatIntel Whitelist for Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyThreatIntelWhitelist"
        },
        "insights": {
          "description": "Insights on Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyInsights"
        },
        "snat": {
          "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
          "$ref": "#/definitions/FirewallPolicySNAT"
        },
        "sql": {
          "description": "SQL Settings definition.",
          "$ref": "#/definitions/FirewallPolicySQL"
        },
        "dnsSettings": {
          "description": "DNS Proxy Settings definition.",
          "$ref": "#/definitions/DnsSettings"
        },
        "explicitProxy": {
          "description": "Explicit Proxy Settings definition.",
          "$ref": "#/definitions/ExplicitProxy"
        },
        "intrusionDetection": {
          "description": "The configuration for Intrusion detection.",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetection"
        }
      }
    },
    "FirewallPolicyRuleCollectionGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupProperties",
          "description": "The properties of the firewall policy rule collection group."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Rule Group type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rule Collection Group resource."
    },
    "FirewallPolicyRuleCollectionGroupDraft": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraftProperties",
          "description": "The properties of the firewall policy rule collection group."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Rule Group type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rule Collection Group resource."
    },
    "FirewallPolicyRuleCollectionGroupProperties": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection Group resource."
        },
        "ruleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollection"
          },
          "description": "Group of Firewall Policy rule collections.",
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall policy rule collection group resource."
        }
      },
      "description": "Properties of the rule collection group."
    },
    "FirewallPolicyRuleCollectionGroupDraftProperties": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection Group resource."
        },
        "ruleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollection"
          },
          "description": "Group of Firewall Policy rule collections.",
          "x-ms-identifiers": []
        }
      },
      "description": "Properties of the rule collection group draft."
    },
    "FirewallPolicyRuleCollection": {
      "type": "object",
      "description": "Properties of the rule collection.",
      "discriminator": "ruleCollectionType",
      "required": [
        "ruleCollectionType"
      ],
      "properties": {
        "ruleCollectionType": {
          "type": "string",
          "description": "The type of the rule collection.",
          "enum": [
            "FirewallPolicyNatRuleCollection",
            "FirewallPolicyFilterRuleCollection"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyRuleCollectionType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the rule collection."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection resource."
        }
      }
    },
    "FirewallPolicyNatRuleCollection": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FirewallPolicyNatRuleCollectionAction",
          "description": "The action type of a Nat rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRule"
          },
          "description": "List of rules included in a rule collection.",
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRuleCollection"
        }
      ],
      "x-ms-discriminator-value": "FirewallPolicyNatRuleCollection",
      "description": "Firewall Policy NAT Rule Collection."
    },
    "FirewallPolicyFilterRuleCollection": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FirewallPolicyFilterRuleCollectionAction",
          "description": "The action type of a Filter rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRule"
          },
          "description": "List of rules included in a rule collection.",
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRuleCollection"
        }
      ],
      "x-ms-discriminator-value": "FirewallPolicyFilterRuleCollection",
      "description": "Firewall Policy Filter Rule Collection."
    },
    "FirewallPolicyRule": {
      "type": "object",
      "description": "Properties of a rule.",
      "discriminator": "ruleType",
      "required": [
        "ruleType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "ruleType": {
          "type": "string",
          "description": "Rule Type.",
          "enum": [
            "ApplicationRule",
            "NetworkRule",
            "NatRule"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyRuleType",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationRule": {
      "type": "object",
      "x-ms-discriminator-value": "ApplicationRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleApplicationProtocol"
          },
          "x-ms-identifiers": [],
          "description": "Array of Application Protocols."
        },
        "targetFqdns": {
          "type": "array",
          "description": "List of FQDNs for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "targetUrls": {
          "type": "array",
          "description": "List of Urls for this rule condition.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "fqdnTags": {
          "type": "array",
          "description": "List of FQDN Tags for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "terminateTLS": {
          "type": "boolean",
          "description": "Terminate TLS connections for this rule."
        },
        "webCategories": {
          "type": "array",
          "description": "List of destination azure web categories.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "httpHeadersToInsert": {
          "type": "array",
          "description": "List of HTTP/S headers to insert.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyHttpHeaderToInsert"
          },
          "x-ms-identifiers": []
        }
      },
      "description": "Rule of type application."
    },
    "NatRule": {
      "type": "object",
      "description": "Rule of type nat.",
      "x-ms-discriminator-value": "NatRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "ipProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleNetworkProtocol"
          },
          "description": "Array of FirewallPolicyRuleNetworkProtocols."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "translatedAddress": {
          "type": "string",
          "description": "The translated address for this NAT rule."
        },
        "translatedPort": {
          "type": "string",
          "description": "The translated port for this NAT rule."
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "translatedFqdn": {
          "type": "string",
          "description": "The translated FQDN for this NAT rule."
        }
      }
    },
    "NetworkRule": {
      "type": "object",
      "description": "Rule of type network.",
      "x-ms-discriminator-value": "NetworkRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "ipProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleNetworkProtocol"
          },
          "description": "Array of FirewallPolicyRuleNetworkProtocols."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationIpGroups": {
          "type": "array",
          "description": "List of destination IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationFqdns": {
          "type": "array",
          "description": "List of destination FQDNs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyRuleApplicationProtocol": {
      "type": "object",
      "properties": {
        "protocolType": {
          "description": "Protocol type.",
          "$ref": "#/definitions/FirewallPolicyRuleApplicationProtocolType"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for the protocol, cannot be greater than 64000."
        }
      },
      "description": "Properties of the application rule protocol."
    },
    "FirewallPolicyRuleApplicationProtocolType": {
      "type": "string",
      "description": "The application protocol type of a Rule.",
      "enum": [
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyRuleApplicationProtocolType",
        "modelAsString": true
      }
    },
    "FirewallPolicyNatRuleCollectionActionType": {
      "type": "string",
      "description": "The action type of a rule.",
      "enum": [
        "DNAT"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyNatRuleCollectionActionType",
        "modelAsString": true
      }
    },
    "FirewallPolicyNatRuleCollectionAction": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/FirewallPolicyNatRuleCollectionActionType"
        }
      },
      "description": "Properties of the FirewallPolicyNatRuleCollectionAction."
    },
    "FirewallPolicyFilterRuleCollectionActionType": {
      "type": "string",
      "description": "The action type of a rule.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyFilterRuleCollectionActionType",
        "modelAsString": true
      }
    },
    "FirewallPolicyFilterRuleCollectionAction": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/FirewallPolicyFilterRuleCollectionActionType"
        }
      },
      "description": "Properties of the FirewallPolicyFilterRuleCollectionAction."
    },
    "FirewallPolicyRuleNetworkProtocol": {
      "type": "string",
      "description": "The Network protocol of a Rule.",
      "enum": [
        "TCP",
        "UDP",
        "Any",
        "ICMP"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyRuleNetworkProtocol",
        "modelAsString": true
      }
    },
    "FirewallPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicy"
          },
          "description": "List of Firewall Policies in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListFirewallPolicies API service call."
    },
    "FirewallPolicyRuleCollectionGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
          },
          "description": "List of FirewallPolicyRuleCollectionGroups in a FirewallPolicy."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListFirewallPolicyRuleCollectionGroups API service call."
    },
    "FirewallPolicyThreatIntelWhitelist": {
      "type": "object",
      "description": "ThreatIntel Whitelist for Firewall Policy.",
      "properties": {
        "ipAddresses": {
          "type": "array",
          "description": "List of IP addresses for the ThreatIntel Whitelist.",
          "items": {
            "type": "string"
          }
        },
        "fqdns": {
          "type": "array",
          "description": "List of FQDNs for the ThreatIntel Whitelist.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyInsights": {
      "type": "object",
      "description": "Firewall Policy Insights.",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "A flag to indicate if the insights are enabled on the policy."
        },
        "retentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Number of days the insights should be enabled on the policy."
        },
        "logAnalyticsResources": {
          "description": "Workspaces needed to configure the Firewall Policy Insights.",
          "$ref": "#/definitions/FirewallPolicyLogAnalyticsResources"
        }
      }
    },
    "FirewallPolicySNAT": {
      "type": "object",
      "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
      "properties": {
        "privateRanges": {
          "type": "array",
          "description": "List of private IP addresses/IP address ranges to not be SNAT.",
          "items": {
            "type": "string"
          }
        },
        "autoLearnPrivateRanges": {
          "type": "string",
          "description": "The operation mode for automatically learning private ranges to not be SNAT",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AutoLearnPrivateRangesMode",
            "modelAsString": true
          }
        }
      }
    },
    "FirewallPolicySQL": {
      "type": "object",
      "description": "SQL Settings in Firewall Policy.",
      "properties": {
        "allowSqlRedirect": {
          "type": "boolean",
          "description": "A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999."
        }
      }
    },
    "DnsSettings": {
      "type": "object",
      "description": "DNS Proxy Settings in Firewall Policy.",
      "properties": {
        "servers": {
          "type": "array",
          "description": "List of Custom DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "enableProxy": {
          "type": "boolean",
          "description": "Enable DNS Proxy on Firewalls attached to the Firewall Policy."
        },
        "requireProxyForNetworkRules": {
          "type": "boolean",
          "description": "FQDNs in Network Rules are supported when set to true.",
          "x-nullable": true
        }
      }
    },
    "ExplicitProxy": {
      "description": "Explicit Proxy Settings in Firewall Policy.",
      "type": "object",
      "properties": {
        "enableExplicitProxy": {
          "type": "boolean",
          "description": "When set to true, explicit proxy mode is enabled.",
          "x-nullable": true
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for explicit proxy http protocol, cannot be greater than 64000."
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for explicit proxy https protocol, cannot be greater than 64000."
        },
        "enablePacFile": {
          "type": "boolean",
          "description": "When set to true, pac file port and url needs to be provided.",
          "x-nullable": true
        },
        "pacFilePort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for firewall to serve PAC file."
        },
        "pacFile": {
          "type": "string",
          "description": "SAS URL for PAC file."
        }
      }
    },
    "FirewallPolicyIntrusionDetection": {
      "type": "object",
      "description": "Configuration for intrusion detection mode and rules.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionStateOptions",
          "description": "Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two."
        },
        "profile": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionProfileOptions",
          "description": "IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy."
        },
        "configuration": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionConfiguration",
          "description": "Intrusion detection configuration properties."
        }
      }
    },
    "FirewallPolicyIntrusionDetectionStateOptions": {
      "type": "string",
      "description": "Possible state values.",
      "enum": [
        "Off",
        "Alert",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionStateType",
        "modelAsString": true
      }
    },
    "FirewallPolicyIntrusionDetectionProfileOptions": {
      "type": "string",
      "description": "Possible Intrusion Detection profile values.",
      "enum": [
        "Basic",
        "Standard",
        "Advanced",
        "Extended"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionProfileType",
        "modelAsString": true
      }
    },
    "FirewallPolicyIntrusionDetectionConfiguration": {
      "type": "object",
      "description": "The operation for configuring intrusion detection.",
      "properties": {
        "signatureOverrides": {
          "type": "array",
          "description": "List of specific signatures states.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyIntrusionDetectionSignatureSpecification"
          }
        },
        "bypassTrafficSettings": {
          "type": "array",
          "description": "List of rules for traffic to bypass.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyIntrusionDetectionBypassTrafficSpecifications"
          },
          "x-ms-identifiers": []
        },
        "privateRanges": {
          "type": "array",
          "description": "IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FirewallPolicyIntrusionDetectionSignatureSpecification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Signature id."
        },
        "mode": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionStateOptions",
          "description": "The signature state."
        }
      },
      "description": "Intrusion detection signatures specification states."
    },
    "FirewallPolicyIntrusionDetectionBypassTrafficSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the bypass traffic rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the bypass traffic rule."
        },
        "protocol": {
          "type": "string",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionBypassTrafficProtocol",
          "description": "The rule bypass protocol."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses or ranges for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or ranges for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports or ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationIpGroups": {
          "type": "array",
          "description": "List of destination IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Intrusion detection bypass traffic specification."
    },
    "FirewallPolicyIntrusionDetectionBypassTrafficProtocol": {
      "type": "string",
      "description": "Possible intrusion detection bypass traffic protocols.",
      "enum": [
        "TCP",
        "UDP",
        "ICMP",
        "ANY"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionProtocol",
        "modelAsString": true
      }
    },
    "FirewallPolicyTransportSecurity": {
      "type": "object",
      "properties": {
        "certificateAuthority": {
          "$ref": "#/definitions/FirewallPolicyCertificateAuthority",
          "description": "The CA used for intermediate CA generation."
        }
      },
      "description": "Configuration needed to perform TLS termination & initiation."
    },
    "FirewallPolicyCertificateAuthority": {
      "type": "object",
      "properties": {
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "name": {
          "type": "string",
          "description": "Name of the CA certificate."
        }
      },
      "description": "Trusted Root certificates properties for tls."
    },
    "FirewallPolicySku": {
      "type": "object",
      "properties": {
        "tier": {
          "type": "string",
          "description": "Tier of Firewall Policy.",
          "enum": [
            "Standard",
            "Premium",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicySkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of Firewall policy."
    },
    "FirewallPolicyLogAnalyticsResources": {
      "type": "object",
      "description": "Log Analytics Resources for Firewall Policy Insights.",
      "properties": {
        "workspaces": {
          "type": "array",
          "description": "List of workspaces for Firewall Policy Insights.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyLogAnalyticsWorkspace"
          },
          "x-ms-identifiers": []
        },
        "defaultWorkspaceId": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The default workspace Id for Firewall Policy Insights."
        }
      }
    },
    "FirewallPolicyLogAnalyticsWorkspace": {
      "type": "object",
      "description": "Log Analytics Workspace for Firewall Policy Insights.",
      "properties": {
        "region": {
          "type": "string",
          "description": "Region to configure the Workspace."
        },
        "workspaceId": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The workspace Id for Firewall Policy Insights."
        }
      }
    },
    "IDPSQueryObject": {
      "description": "Will describe the query to run against the IDPS signatures DB",
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "description": "Contain all filters names and values",
          "$ref": "#/definitions/Filters"
        },
        "search": {
          "type": "string",
          "description": "Search term in all columns"
        },
        "orderBy": {
          "type": "object",
          "$ref": "#/definitions/OrderBy",
          "description": "Column to sort response by"
        },
        "resultsPerPage": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "The number of the results to return in each page"
        },
        "skip": {
          "type": "integer",
          "format": "int32",
          "description": "The number of records matching the filter to skip"
        }
      }
    },
    "Filters": {
      "description": "Describers the filters to filter response by",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FilterItems"
      },
      "x-ms-identifiers": []
    },
    "FilterItems": {
      "description": "Will contain the filter name and values to operate on",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "The name of the field we would like to filter"
        },
        "values": {
          "type": "array",
          "description": "List of values to filter the current field by",
          "items": {
            "type": "string",
            "description": "Value of the field to filter by"
          }
        }
      }
    },
    "OrderBy": {
      "description": "Describes a column to sort",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "Describes the actual column name to sort by"
        },
        "order": {
          "type": "string",
          "description": "Describes if results should be in ascending/descending order",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSQuerySortOrder",
            "modelAsString": true
          }
        }
      }
    },
    "QueryResults": {
      "description": "Query result",
      "type": "object",
      "properties": {
        "matchingRecordsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of total records matching the query."
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleQueryResult"
          },
          "description": "Array containing the results of the query",
          "x-ms-identifiers": []
        }
      }
    },
    "SingleQueryResult": {
      "type": "object",
      "properties": {
        "signatureId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the signature"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "description": "The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny",
          "enum": [
            0,
            1,
            2
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureMode",
            "modelAsString": false
          }
        },
        "severity": {
          "type": "integer",
          "format": "int32",
          "description": "Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low",
          "enum": [
            1,
            2,
            3
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureSeverity",
            "modelAsString": false
          }
        },
        "direction": {
          "type": "integer",
          "format": "int32",
          "description": "Describes in which direction signature is being enforced: 0 - OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound, 5 - InternalInbound",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureDirection",
            "modelAsString": false
          }
        },
        "group": {
          "type": "string",
          "description": "Describes the groups the signature belongs to"
        },
        "description": {
          "type": "string",
          "description": "Describes what is the signature enforces"
        },
        "protocol": {
          "type": "string",
          "description": "Describes the protocol the signatures is being enforced in"
        },
        "sourcePorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortsList"
          },
          "description": "Describes the list of source ports related to this signature"
        },
        "destinationPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortsList"
          },
          "description": "Describes the list of destination ports related to this signature"
        },
        "lastUpdated": {
          "type": "string",
          "description": "Describes the last updated time of the signature (provided from 3rd party vendor)"
        },
        "inheritedFromParentPolicy": {
          "type": "boolean",
          "description": "Describes if this override is inherited from base policy or not"
        }
      }
    },
    "PortsList": {
      "type": "string",
      "description": "Describes a port, port range, or negation of a port"
    },
    "Signatures": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "SignaturesOverridesList": {
      "type": "object",
      "description": "Describes an object containing an array with a single item",
      "properties": {
        "value": {
          "type": "array",
          "description": "Describes a list consisting exactly one item describing the policy's signature override status",
          "items": {
            "description": "Describes the single signatures overrides object related to that policy.",
            "$ref": "#/definitions/SignaturesOverrides"
          }
        }
      }
    },
    "SignaturesOverrides": {
      "x-ms-azure-resource": true,
      "type": "object",
      "description": "Contains all specific policy signatures overrides for the IDPS",
      "properties": {
        "name": {
          "type": "string",
          "description": "Contains the name of the resource (default)"
        },
        "id": {
          "description": "Will contain the resource id of the signature override resource",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Will contain the type of the resource: Microsoft.Network/firewallPolicies/intrusionDetectionSignaturesOverrides"
        },
        "properties": {
          "type": "object",
          "description": "Will contain the properties of the resource (the actual signature overrides)",
          "properties": {
            "signatures": {
              "type": "object",
              "$ref": "#/definitions/Signatures"
            }
          }
        }
      }
    },
    "SignatureOverridesFilterValuesQuery": {
      "description": "Describes the filter values possibles for a given column",
      "type": "object",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "Describes the name of the column which values will be returned"
        }
      }
    },
    "SignatureOverridesFilterValuesResponse": {
      "description": "Describes the list of all possible values for a specific filter value",
      "type": "object",
      "properties": {
        "filterValues": {
          "description": "Describes the possible values",
          "type": "array",
          "items": {
            "description": "Describes a single value of the filter",
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyHttpHeaderToInsert": {
      "description": "name and value of HTTP/S header to insert",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Contains the name of the header",
          "type": "string"
        },
        "headerValue": {
          "description": "Contains the value of the header",
          "type": "string"
        }
      }
    },
    "NetworkManagerConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkManagerConnectionProperties",
          "description": "The scope connection properties"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "The Network Manager Connection resource"
    },
    "NetworkManagerConnectionProperties": {
      "type": "object",
      "properties": {
        "networkManagerId": {
          "type": "string",
          "description": "Network Manager Id."
        },
        "connectionState": {
          "x-ms-client-flatten": true,
          "$ref": "./networkManagerScopeConnection.json#/definitions/ConnectionState",
          "description": "Connection state."
        },
        "description": {
          "type": "string",
          "description": "A description of the network manager connection."
        }
      },
      "description": "Information about the network manager connection."
    },
    "NetworkManagerConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkManagerConnection"
          },
          "description": "List of network manager connections."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "List of network manager connections."
    },
    "SecurityUserConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityUserConfigurationPropertiesFormat",
          "description": "Indicates the properties for the network manager security user configuration."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the security user configuration"
    },
    "SecurityUserConfigurationPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the security user configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "description": "Defines the security user configuration properties."
    },
    "SecurityUserConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityUserConfiguration"
          },
          "description": "Gets a page of security user configurations"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "A list of network manager security user configurations"
    },
    "SecurityUserRuleCollectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityUserRuleCollection"
          },
          "description": "A list of network manager security user configuration rule collections"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Security user configuration rule collection list result."
    },
    "SecurityUserRuleCollection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityUserRuleCollectionPropertiesFormat",
          "description": "Indicates the properties for the network manager security user rule collection."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Defines the security user rule collection."
    },
    "SecurityUserRuleCollectionPropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the security user rule collection."
        },
        "appliesToGroups": {
          "type": "array",
          "x-ms-identifiers": [
            "networkGroupId"
          ],
          "items": {
            "$ref": "#/definitions/SecurityUserGroupItem"
          },
          "description": "Groups for configuration"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "appliesToGroups"
      ],
      "description": "Defines the security user rule collection properties."
    },
    "SecurityUserGroupItem": {
      "type": "object",
      "properties": {
        "networkGroupId": {
          "type": "string",
          "description": "Network manager group Id."
        }
      },
      "required": [
        "networkGroupId"
      ],
      "description": "Network manager security user group item."
    },
    "SecurityUserRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityUserRule"
          },
          "description": "A list of security user rules"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "security user rule list result."
    },
    "SecurityUserRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityUserRulePropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security user rule"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "Network security user rule."
    },
    "SecurityUserRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule."
        },
        "protocol": {
          "type": "string",
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sources": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinations": {
          "type": "array",
          "x-ms-identifiers": [
            "addressPrefix"
          ],
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "direction": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfigurationRuleDirection",
          "description": "Indicates if the traffic matched against the rule in inbound or outbound."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the security configuration user rule resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "protocol",
        "direction"
      ],
      "description": "Security rule resource."
    },
    "IPTraffic": {
      "required": [
        "sourceIps",
        "destinationIps",
        "sourcePorts",
        "destinationPorts",
        "protocols"
      ],
      "description": "IP traffic information.",
      "type": "object",
      "properties": {
        "sourceIps": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Source IP address of the traffic.."
          },
          "description": "List of source IP addresses of the traffic.."
        },
        "destinationIps": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Destination IP address of the traffic.."
          },
          "description": "List of destination IP addresses of the traffic.."
        },
        "sourcePorts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source ports of the traffic."
        },
        "destinationPorts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination ports of the traffic."
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkProtocol",
            "description": "Network protocol this resource applies to."
          }
        }
      }
    },
    "IntentContent": {
      "required": [
        "destinationResourceId",
        "ipTraffic",
        "sourceResourceId"
      ],
      "description": "Intent information.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "sourceResourceId": {
          "format": "arm-id",
          "type": "string",
          "description": "Source resource id of the intent."
        },
        "destinationResourceId": {
          "format": "arm-id",
          "type": "string",
          "description": "Destination resource id of the intent."
        },
        "ipTraffic": {
          "$ref": "#/definitions/IPTraffic",
          "description": "IP traffic information."
        }
      }
    },
    "NetworkProtocol": {
      "enum": [
        "Any",
        "TCP",
        "UDP",
        "ICMP"
      ],
      "x-ms-enum": {
        "name": "NetworkProtocol",
        "modelAsString": true
      },
      "description": "Network Protocol.",
      "type": "string"
    },
    "ReachabilityAnalysisIntentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReachabilityAnalysisIntent"
          },
          "description": "Gets a page of Reachability Analysis Intents"
        },
        "nextLink": {
          "description": "Gets the URL to get the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of Reachability Analysis Intents."
    },
    "ReachabilityAnalysisIntent": {
      "description": "Configuration information or intent on which to do the analysis on.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReachabilityAnalysisIntentProperties"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/CommonProxyResource"
        }
      ]
    },
    "ReachabilityAnalysisIntentProperties": {
      "required": [
        "destinationResourceId",
        "ipTraffic",
        "sourceResourceId"
      ],
      "description": "Represents the Reachability Analysis Intent properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "description": {
          "type": "string"
        },
        "sourceResourceId": {
          "format": "arm-id",
          "type": "string",
          "description": "Source resource id to verify the reachability path of."
        },
        "destinationResourceId": {
          "format": "arm-id",
          "type": "string",
          "description": "Destination resource id to verify the reachability path of."
        },
        "ipTraffic": {
          "$ref": "#/definitions/IPTraffic",
          "description": "IP traffic information."
        }
      }
    },
    "ReachabilityAnalysisRunListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReachabilityAnalysisRun"
          },
          "description": "Gets a page of Reachability Analysis Runs."
        },
        "nextLink": {
          "description": "Gets the URL to get the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of Reachability Analysis Run"
    },
    "ReachabilityAnalysisRun": {
      "required": [
        "properties"
      ],
      "description": "Configuration information for analysis run.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReachabilityAnalysisRunProperties"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/CommonProxyResource"
        }
      ]
    },
    "ReachabilityAnalysisRunProperties": {
      "required": [
        "intentId"
      ],
      "description": "Represents the Reachability Analysis Run properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "intentId": {
          "type": "string",
          "description": "Id of the intent resource to run analysis on."
        },
        "intentContent": {
          "readOnly": true,
          "$ref": "#/definitions/IntentContent",
          "description": "Intent information."
        },
        "analysisResult": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "VerifierWorkspaceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifierWorkspace"
          },
          "description": "Gets a page of Verifier Workspaces."
        },
        "nextLink": {
          "description": "Gets the URL to get the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of Verifier Workspace"
    },
    "VerifierWorkspace": {
      "description": "Instance of Verifier Workspace.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VerifierWorkspaceProperties"
        },
        "etag": {
          "description": "String representing unique etag for the resource document.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/CommonTrackedResource"
        }
      ]
    },
    "VerifierWorkspaceProperties": {
      "type": "object",
      "description": "Properties of Verifier Workspace resource.",
      "properties": {
        "description": {
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "VerifierWorkspaceUpdate": {
      "type": "object",
      "description": "Represents the VerifierWorkspace update API request interface.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VerifierWorkspaceUpdateProperties"
        }
      }
    },
    "VerifierWorkspaceUpdateProperties": {
      "type": "object",
      "description": "Represents the VerifierWorkspace update properties.",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "AzureFirewallIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'."
        },
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the PublicIP resource. This field is a mandatory input if subnet is not null."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Azure firewall IP configuration resource."
        }
      },
      "description": "Properties of IP configuration of an Azure Firewall."
    },
    "AzureFirewallIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallIPConfigurationPropertiesFormat",
          "description": "Properties of the azure firewall IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of an Azure Firewall."
    },
    "AzureFirewallPublicIPAddress": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Public IP Address value."
        }
      },
      "description": "Public IP Address associated with azure firewall."
    },
    "AzureFirewallIpGroups": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource ID."
        },
        "changeNumber": {
          "type": "string",
          "readOnly": true,
          "description": "The iteration number."
        }
      },
      "description": "IpGroups associated with azure firewall."
    },
    "HubPublicIPAddresses": {
      "properties": {
        "addresses": {
          "type": "array",
          "description": "The list of Public IP addresses associated with azure firewall or IP addresses to be retained.",
          "items": {
            "$ref": "#/definitions/AzureFirewallPublicIPAddress"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Public IP addresses associated with azure firewall."
        }
      },
      "description": "Public IP addresses associated with azure firewall."
    },
    "HubIPAddresses": {
      "properties": {
        "publicIPs": {
          "description": "Public IP addresses associated with azure firewall.",
          "$ref": "#/definitions/HubPublicIPAddresses"
        },
        "privateIPAddress": {
          "type": "string",
          "description": "Private IP Address associated with azure firewall."
        }
      },
      "description": "IP addresses associated with azure firewall."
    },
    "IpGroups": {
      "type": "array",
      "description": "List of IpGroups associated with azure firewall.",
      "items": {
        "$ref": "#/definitions/AzureFirewallIpGroups"
      }
    },
    "AzureFirewallPropertiesFormat": {
      "properties": {
        "applicationRuleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallApplicationRuleCollection"
          },
          "description": "Collection of application rule collections used by Azure Firewall."
        },
        "natRuleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNatRuleCollection"
          },
          "description": "Collection of NAT rule collections used by Azure Firewall."
        },
        "networkRuleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNetworkRuleCollection"
          },
          "description": "Collection of network rule collections used by Azure Firewall."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallIPConfiguration"
          },
          "description": "IP configuration of the Azure Firewall resource."
        },
        "managementIpConfiguration": {
          "$ref": "#/definitions/AzureFirewallIPConfiguration",
          "description": "IP configuration of the Azure Firewall used for management traffic."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Azure firewall resource."
        },
        "threatIntelMode": {
          "description": "The operation mode for Threat Intelligence.",
          "$ref": "#/definitions/AzureFirewallThreatIntelMode"
        },
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The virtualHub to which the firewall belongs."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The firewallPolicy associated with this azure firewall."
        },
        "hubIPAddresses": {
          "description": "IP addresses associated with AzureFirewall.",
          "$ref": "#/definitions/HubIPAddresses"
        },
        "ipGroups": {
          "readOnly": true,
          "description": "IpGroups associated with AzureFirewall.",
          "$ref": "#/definitions/IpGroups"
        },
        "sku": {
          "description": "The Azure Firewall Resource SKU.",
          "$ref": "#/definitions/AzureFirewallSku"
        },
        "additionalProperties": {
          "$ref": "#/definitions/AzureFirewallAdditionalProperties",
          "description": "The additional properties used to further config this azure firewall."
        },
        "autoscaleConfiguration": {
          "$ref": "#/definitions/AzureFirewallAutoscaleConfiguration",
          "description": "Properties to provide a custom autoscale configuration to this azure firewall."
        }
      },
      "description": "Properties of the Azure Firewall."
    },
    "AzureFirewall": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallPropertiesFormat",
          "description": "Properties of the azure firewall."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Azure Firewall resource."
    },
    "AzureFirewallListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewall"
          },
          "description": "List of Azure Firewalls in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListAzureFirewalls API service call."
    },
    "AzureFirewallThreatIntelMode": {
      "type": "string",
      "description": "The operation mode for Threat Intel.",
      "enum": [
        "Alert",
        "Deny",
        "Off"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallThreatIntelMode",
        "modelAsString": true
      }
    },
    "AzureFirewallAdditionalProperties": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "The additional properties of azure firewall."
    },
    "AzureFirewallApplicationRuleCollectionPropertiesFormat": {
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the application rule collection resource."
        },
        "action": {
          "$ref": "#/definitions/AzureFirewallRCAction",
          "description": "The action type of a rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallApplicationRule"
          },
          "description": "Collection of rules used by a application rule collection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application rule collection resource."
        }
      },
      "description": "Properties of the application rule collection."
    },
    "AzureFirewallApplicationRuleCollection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallApplicationRuleCollectionPropertiesFormat",
          "description": "Properties of the azure firewall application rule collection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Application rule collection resource."
    },
    "AzureFirewallApplicationRuleProtocol": {
      "properties": {
        "protocolType": {
          "description": "Protocol type.",
          "$ref": "#/definitions/AzureFirewallApplicationRuleProtocolType"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for the protocol, cannot be greater than 64000. This field is optional."
        }
      },
      "description": "Properties of the application rule protocol."
    },
    "AzureFirewallApplicationRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the application rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallApplicationRuleProtocol"
          },
          "description": "Array of ApplicationRuleProtocols."
        },
        "targetFqdns": {
          "type": "array",
          "description": "List of FQDNs for this rule.",
          "items": {
            "type": "string"
          }
        },
        "fqdnTags": {
          "type": "array",
          "description": "List of FQDN Tags for this rule.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Properties of an application rule."
    },
    "AzureFirewallNatRuleCollectionProperties": {
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the NAT rule collection resource."
        },
        "action": {
          "$ref": "#/definitions/AzureFirewallNatRCAction",
          "description": "The action type of a NAT rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNatRule"
          },
          "description": "Collection of rules used by a NAT rule collection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the NAT rule collection resource."
        }
      },
      "description": "Properties of the NAT rule collection."
    },
    "AzureFirewallNatRuleCollection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallNatRuleCollectionProperties",
          "description": "Properties of the azure firewall NAT rule collection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "NAT rule collection resource."
    },
    "AzureFirewallNatRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the NAT rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNetworkRuleProtocol"
          },
          "description": "Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule."
        },
        "translatedAddress": {
          "type": "string",
          "description": "The translated address for this NAT rule."
        },
        "translatedPort": {
          "type": "string",
          "description": "The translated port for this NAT rule."
        },
        "translatedFqdn": {
          "type": "string",
          "description": "The translated FQDN for this NAT rule."
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Properties of a NAT rule."
    },
    "AzureFirewallNatRCAction": {
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/AzureFirewallNatRCActionType"
        }
      },
      "description": "AzureFirewall NAT Rule Collection Action."
    },
    "AzureFirewallNatRCActionType": {
      "type": "string",
      "description": "The action type of a NAT rule collection.",
      "enum": [
        "Snat",
        "Dnat"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallNatRCActionType",
        "modelAsString": true
      }
    },
    "AzureFirewallNetworkRuleCollectionPropertiesFormat": {
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the network rule collection resource."
        },
        "action": {
          "$ref": "#/definitions/AzureFirewallRCAction",
          "description": "The action type of a rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNetworkRule"
          },
          "description": "Collection of rules used by a network rule collection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network rule collection resource."
        }
      },
      "description": "Properties of the network rule collection."
    },
    "AzureFirewallNetworkRuleCollection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallNetworkRuleCollectionPropertiesFormat",
          "description": "Properties of the azure firewall network rule collection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the Azure firewall. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Network rule collection resource."
    },
    "AzureFirewallNetworkRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallNetworkRuleProtocol"
          },
          "description": "Array of AzureFirewallNetworkRuleProtocols."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "destinationFqdns": {
          "type": "array",
          "description": "List of destination FQDNs.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationIpGroups": {
          "type": "array",
          "description": "List of destination IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Properties of the network rule."
    },
    "AzureFirewallRCAction": {
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/AzureFirewallRCActionType"
        }
      },
      "description": "Properties of the AzureFirewallRCAction."
    },
    "AzureFirewallRCActionType": {
      "type": "string",
      "description": "The action type of a rule collection.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallRCActionType",
        "modelAsString": true
      }
    },
    "AzureFirewallNetworkRuleProtocol": {
      "type": "string",
      "description": "The protocol of a Network Rule resource.",
      "enum": [
        "TCP",
        "UDP",
        "Any",
        "ICMP"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallNetworkRuleProtocol",
        "modelAsString": true
      }
    },
    "AzureFirewallApplicationRuleProtocolType": {
      "type": "string",
      "description": "The protocol type of a Application Rule resource.",
      "enum": [
        "Http",
        "Https",
        "Mssql"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallApplicationRuleProtocolType",
        "modelAsString": true
      }
    },
    "AzureFirewallSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of an Azure Firewall SKU.",
          "enum": [
            "AZFW_VNet",
            "AZFW_Hub"
          ],
          "x-ms-enum": {
            "name": "AzureFirewallSkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of an Azure Firewall.",
          "enum": [
            "Standard",
            "Premium",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "AzureFirewallSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of an Azure Firewall."
    },
    "IPPrefixesList": {
      "type": "object",
      "properties": {
        "ipPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IP Prefix value."
        }
      },
      "description": "List of SNAT IP Prefixes learnt by firewall to not SNAT"
    },
    "FirewallPacketCaptureParameters": {
      "type": "object",
      "properties": {
        "durationInSeconds": {
          "type": "integer",
          "format": "int32",
          "maximum": 1800,
          "exclusiveMaximum": false,
          "minimum": 30,
          "exclusiveMinimum": false,
          "description": "Duration of packet capture in seconds."
        },
        "numberOfPacketsToCapture": {
          "type": "integer",
          "format": "int32",
          "maximum": 90000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Number of packets to be captured."
        },
        "sasUrl": {
          "type": "string",
          "description": "Upload capture location"
        },
        "fileName": {
          "type": "string",
          "description": "Name of file to be uploaded to sasURL"
        },
        "protocol": {
          "$ref": "#/definitions/AzureFirewallNetworkRuleProtocol",
          "description": "The protocol of packets to capture"
        },
        "flags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallPacketCaptureFlags"
          },
          "description": "The tcp-flag type to be captured. Used with protocol TCP",
          "x-ms-identifiers": []
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallPacketCaptureRule"
          },
          "description": "Rules to filter packet captures.",
          "x-ms-identifiers": []
        }
      },
      "description": "Azure Firewall Packet Capture Parameters."
    },
    "AzureFirewallPacketCaptureFlags": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Flags to capture",
          "$ref": "#/definitions/AzureFirewallPacketCaptureFlagsType"
        }
      },
      "description": "Properties of the AzureFirewallRCAction."
    },
    "AzureFirewallPacketCaptureFlagsType": {
      "type": "string",
      "description": "The flags type to be captured.",
      "enum": [
        "fin",
        "syn",
        "rst",
        "push",
        "ack",
        "urg"
      ],
      "x-ms-enum": {
        "name": "AzureFirewallPacketCaptureFlagsType",
        "modelAsString": true
      }
    },
    "AzureFirewallPacketCaptureRule": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "description": "List of source IP addresses/subnets to be captured.",
          "items": {
            "type": "string"
          }
        },
        "destinations": {
          "type": "array",
          "description": "List of destination IP addresses/subnets to be captured.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of ports to be captured.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Group of src/dest ips and ports to be captured."
    },
    "AzureFirewallAutoscaleConfiguration": {
      "type": "object",
      "properties": {
        "minCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "description": "The minimum number of capacity units for this azure firewall. Use null to reset the value to the service default.",
          "x-nullable": true
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "description": "The maximum number of capacity units for this azure firewall. Use null to reset the value to the service default.",
          "x-nullable": true
        }
      },
      "description": "Azure Firewall Autoscale Configuration parameters."
    },
    "VirtualNetworkTap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkTapPropertiesFormat",
          "description": "Virtual Network Tap Properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Virtual Network Tap resource."
    },
    "VirtualNetworkTapPropertiesFormat": {
      "description": "Virtual Network Tap properties.",
      "properties": {
        "networkInterfaceTapConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterfaceTapConfiguration",
            "description": "The reference to the Network Interface."
          },
          "description": "Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the virtual network tap resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network tap resource."
        },
        "destinationNetworkInterfaceIPConfiguration": {
          "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration",
          "description": "The reference to the private IP Address of the collector nic that will receive the tap."
        },
        "destinationLoadBalancerFrontEndIPConfiguration": {
          "$ref": "./loadBalancer.json#/definitions/FrontendIPConfiguration",
          "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap."
        },
        "destinationPort": {
          "type": "integer",
          "description": "The VXLAN destination port that will receive the tapped traffic."
        }
      }
    },
    "VirtualNetworkTapListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkTap"
          },
          "description": "A list of VirtualNetworkTaps in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualNetworkTap API service call."
    },
    "AzureFirewallFqdnTagPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Azure firewall FQDN tag resource."
        },
        "fqdnTagName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of this FQDN Tag."
        }
      },
      "description": "Azure Firewall FQDN Tag Properties."
    },
    "AzureFirewallFqdnTag": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFirewallFqdnTagPropertiesFormat",
          "description": "Properties of the azure firewall FQDN tag."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Azure Firewall FQDN Tag Resource."
    },
    "AzureFirewallFqdnTagListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFirewallFqdnTag"
          },
          "description": "List of Azure Firewall FQDN Tags in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListAzureFirewallFqdnTags API service call."
    },
    "ExpressRouteCrossConnectionRoutesTableSummary": {
      "properties": {
        "neighbor": {
          "type": "string",
          "description": "IP address of Neighbor router."
        },
        "asn": {
          "type": "integer",
          "format": "int32",
          "description": "Autonomous system number."
        },
        "upDown": {
          "type": "string",
          "description": "The length of time that the BGP session has been in the Established state, or the current status if not in the Established state."
        },
        "stateOrPrefixesReceived": {
          "type": "string",
          "description": "Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group."
        }
      },
      "description": "The routes table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCrossConnectionsRoutesTableSummaryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCrossConnectionRoutesTableSummary"
          },
          "description": "A list of the routes table."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Cross Connections."
    },
    "ExpressRouteCircuitReference": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Corresponding Express Route Circuit Id."
        }
      },
      "description": "Reference to an express route circuit."
    },
    "ExpressRouteCrossConnectionProperties": {
      "properties": {
        "primaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the primary port."
        },
        "secondaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the secondary port."
        },
        "sTag": {
          "readOnly": true,
          "type": "integer",
          "description": "The identifier of the circuit traffic."
        },
        "peeringLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The peering location of the ExpressRoute circuit."
        },
        "bandwidthInMbps": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The circuit bandwidth In Mbps."
        },
        "expressRouteCircuit": {
          "$ref": "#/definitions/ExpressRouteCircuitReference",
          "description": "The ExpressRouteCircuit."
        },
        "serviceProviderProvisioningState": {
          "$ref": "./expressRouteCircuit.json#/definitions/ServiceProviderProvisioningState",
          "description": "The provisioning state of the circuit in the connectivity provider system."
        },
        "serviceProviderNotes": {
          "type": "string",
          "description": "Additional read only notes set by the connectivity provider."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route cross connection resource."
        },
        "peerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
          },
          "description": "The list of peerings."
        }
      },
      "description": "Properties of ExpressRouteCrossConnection."
    },
    "ExpressRouteCrossConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCrossConnectionProperties",
          "description": "Properties of the express route cross connection."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteCrossConnection resource."
    },
    "ExpressRouteCrossConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCrossConnection"
          },
          "description": "A list of ExpressRouteCrossConnection resources."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteCrossConnection API service call."
    },
    "ExpressRouteCrossConnectionPeeringProperties": {
      "properties": {
        "peeringType": {
          "$ref": "./expressRouteCircuit.json#/definitions/ExpressRoutePeeringType",
          "description": "The peering type."
        },
        "state": {
          "$ref": "./expressRouteCircuit.json#/definitions/ExpressRoutePeeringState",
          "description": "The peering state."
        },
        "azureASN": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The Azure ASN."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "The peer ASN."
        },
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "primaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The primary port."
        },
        "secondaryAzurePort": {
          "readOnly": true,
          "type": "string",
          "description": "The secondary port."
        },
        "sharedKey": {
          "type": "string",
          "description": "The shared key."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "The VLAN ID."
        },
        "microsoftPeeringConfig": {
          "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route cross connection peering resource."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        },
        "lastModifiedBy": {
          "readOnly": true,
          "type": "string",
          "description": "Who was the last to modify the peering."
        },
        "ipv6PeeringConfig": {
          "$ref": "./expressRouteCircuit.json#/definitions/Ipv6ExpressRouteCircuitPeeringConfig",
          "description": "The IPv6 peering configuration."
        }
      },
      "description": "Properties of express route cross connection peering."
    },
    "ExpressRouteCrossConnectionPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCrossConnectionPeeringProperties",
          "description": "Properties of the express route cross connection peering."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Peering in an ExpressRoute Cross Connection resource."
    },
    "ExpressRouteCrossConnectionPeeringList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCrossConnectionPeering"
          },
          "description": "The peerings in an express route cross connection."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCrossConnection."
    },
    "IpGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IpGroupPropertiesFormat",
          "description": "Properties of the IpGroups."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "The IpGroups resource information."
    },
    "IpGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpGroup"
          },
          "description": "The list of IpGroups information resources."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for the ListIpGroups API service call."
    },
    "IpGroupPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the IpGroups resource.",
          "readOnly": true
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource."
        },
        "firewalls": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Firewall resources that this IpGroups is associated with.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "firewallPolicies": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Firewall Policies resources that this IpGroups is associated with.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        }
      },
      "description": "The IpGroups property information."
    },
    "ScopeConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScopeConnectionProperties",
          "description": "The scope connection properties"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "The Scope Connections resource"
    },
    "ScopeConnectionProperties": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID."
        },
        "connectionState": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionState",
          "description": "Connection State"
        },
        "description": {
          "type": "string",
          "description": "A description of the scope connection."
        }
      },
      "description": "Scope connection."
    },
    "ScopeConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeConnection"
          },
          "description": "List of scope connections."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "List of scope connections."
    },
    "ConnectionState": {
      "type": "string",
      "readOnly": true,
      "description": "The current scope connection state.",
      "enum": [
        "Connected",
        "Pending",
        "Conflict",
        "Revoked",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "ScopeConnectionState",
        "modelAsString": true
      }
    },
    "SwapResource": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/SwapResourceProperties"
        }
      },
      "description": "SwapResource to represent slot type on the specified cloud service."
    },
    "SwapResourceProperties": {
      "description": "Swap resource properties",
      "type": "object",
      "properties": {
        "slotType": {
          "description": "Specifies slot info on a cloud service",
          "type": "string",
          "enum": [
            "Production",
            "Staging"
          ],
          "x-ms-enum": {
            "name": "slotType",
            "modelAsString": false
          }
        }
      }
    },
    "SwapResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwapResource"
          }
        }
      },
      "description": "SwapResource List with single entry to represent slot type on the specified cloud service."
    },
    "EndpointServicesListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointServiceResult"
          },
          "description": "List of available endpoint services in a region."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListAvailableEndpointServices API service call."
    },
    "EndpointServiceResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the endpoint service.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the endpoint service.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Endpoint service."
    },
    "PrivateEndpoint": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the load balancer."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateEndpointProperties",
          "description": "Properties of the private endpoint."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Private endpoint resource."
    },
    "PrivateEndpointProperties": {
      "properties": {
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The ID of the subnet from which the private IP will be allocated."
        },
        "networkInterfaces": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterface"
          },
          "description": "An array of references to the network interfaces created for this private endpoint."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private endpoint resource."
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "description": "A grouping of information about the connection to the remote resource."
        },
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource."
        },
        "customDnsConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomDnsConfigPropertiesFormat"
          },
          "description": "An array of custom dns configurations."
        },
        "applicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "./applicationSecurityGroup.json#/definitions/ApplicationSecurityGroup"
          },
          "description": "Application security groups in which the private endpoint IP configuration is included."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointIPConfiguration"
          },
          "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints."
        },
        "customNetworkInterfaceName": {
          "type": "string",
          "description": "The custom name of the network interface attached to the private endpoint."
        }
      },
      "description": "Properties of the private endpoint."
    },
    "CustomDnsConfigPropertiesFormat": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fqdn that resolves to private endpoint ip address."
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of private ip addresses of the private endpoint."
        }
      },
      "description": "Contains custom Dns resolution configuration from customer."
    },
    "PrivateLinkServiceConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateLinkServiceConnectionProperties",
          "description": "Properties of the private link service connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "PrivateLinkServiceConnection resource."
    },
    "PrivateLinkServiceConnectionProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private link service connection resource."
        },
        "privateLinkServiceId": {
          "type": "string",
          "description": "The resource id of private link service."
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to."
        },
        "requestMessage": {
          "type": "string",
          "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "./privateLinkService.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of read-only information about the state of the connection to the remote resource."
        }
      },
      "description": "Properties of the PrivateLinkServiceConnection."
    },
    "PrivateEndpointListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpoint"
          },
          "description": "A list of private endpoint resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListPrivateEndpoints API service call."
    },
    "PrivateDnsZoneGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateDnsZoneGroup"
          },
          "description": "A list of private dns zone group resources in a private endpoint."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListPrivateDnsZoneGroups API service call."
    },
    "AvailablePrivateEndpointTypesResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailablePrivateEndpointType"
          },
          "description": "An array of available privateEndpoint type."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "An array of available PrivateEndpoint types."
    },
    "AvailablePrivateEndpointType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the service and resource."
        },
        "id": {
          "type": "string",
          "description": "A unique identifier of the AvailablePrivateEndpoint Type resource."
        },
        "type": {
          "type": "string",
          "description": "Resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The name of the service and resource."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the resource."
        }
      },
      "description": "The information of an AvailablePrivateEndpointType."
    },
    "PrivateDnsZoneGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateDnsZoneGroupPropertiesFormat",
          "description": "Properties of the private dns zone group."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Private dns zone group resource."
    },
    "PrivateDnsZoneGroupPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the private dns zone group resource."
        },
        "privateDnsZoneConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateDnsZoneConfig"
          },
          "description": "A collection of private dns zone configurations of the private dns zone group."
        }
      },
      "description": "Properties of the private dns zone group."
    },
    "PrivateDnsZoneConfig": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateDnsZonePropertiesFormat",
          "description": "Properties of the private dns zone configuration."
        }
      },
      "description": "PrivateDnsZoneConfig resource."
    },
    "PrivateDnsZonePropertiesFormat": {
      "properties": {
        "privateDnsZoneId": {
          "type": "string",
          "description": "The resource id of the private dns zone."
        },
        "recordSets": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/RecordSet"
          },
          "description": "A collection of information regarding a recordSet, holding information to identify private resources."
        }
      },
      "description": "Properties of the private dns zone configuration resource."
    },
    "RecordSet": {
      "properties": {
        "recordType": {
          "type": "string",
          "description": "Resource record type."
        },
        "recordSetName": {
          "type": "string",
          "description": "Recordset name."
        },
        "fqdn": {
          "type": "string",
          "description": "Fqdn that resolves to private endpoint ip address."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the recordset."
        },
        "ttl": {
          "type": "integer",
          "description": "Recordset time to live."
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private ip address of the private endpoint."
        }
      },
      "description": "A collective group of information about the record set information."
    },
    "PrivateEndpointIPConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateEndpointIPConfigurationProperties",
          "description": "Properties of private endpoint IP configurations."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "An IP Configuration of the private endpoint."
    },
    "PrivateEndpointIPConfigurationProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to."
        },
        "memberName": {
          "type": "string",
          "description": "The member name of a group obtained from the remote resource that this private endpoint should connect to."
        },
        "privateIPAddress": {
          "type": "string",
          "description": "A private ip address obtained from the private endpoint's subnet."
        }
      },
      "description": "Properties of an IP Configuration of the private endpoint."
    },
    "DnsNameAvailabilityResult": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Domain availability (True/False)."
        }
      },
      "description": "Response for the CheckDnsNameAvailability API service call."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "description": "Common error details representation."
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "description": "Error details."
        },
        "innerError": {
          "type": "string",
          "description": "Inner error message."
        }
      },
      "description": "Common error representation."
    },
    "CommonErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonErrorDetail"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonErrorAdditionalInfo"
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      }
    },
    "CommonErrorResponse": {
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/CommonErrorDetail"
        }
      }
    },
    "CommonErrorAdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      },
      "description": "An error response from the service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "AzureAsyncOperationResult": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the Azure async operation.",
          "enum": [
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "NetworkOperationStatus",
            "modelAsString": true
          }
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Details of the error occurred during specified asynchronous operation."
        }
      },
      "description": "The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure."
    },
    "CommonResource": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "systemData": {
          "readOnly": true,
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "#/definitions/SystemData"
        }
      },
      "x-ms-azure-resource": true
    },
    "CommonTrackedResource": {
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CommonResource"
        }
      ]
    },
    "CommonProxyResource": {
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CommonResource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ChildResource": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "Proxy resource representation.",
      "x-ms-azure-resource": true
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The type of identity that last modified the resource."
        }
      }
    },
    "ManagedServiceIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the resource."
    },
    "Access": {
      "type": "string",
      "description": "Access to be allowed or denied.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "Access",
        "modelAsString": true
      }
    },
    "AuthenticationMethod": {
      "type": "string",
      "description": "VPN client authentication method.",
      "enum": [
        "EAPTLS",
        "EAPMSCHAPv2"
      ],
      "x-ms-enum": {
        "name": "AuthenticationMethod",
        "modelAsString": true
      }
    },
    "IPAllocationMethod": {
      "type": "string",
      "description": "IP address allocation method.",
      "enum": [
        "Static",
        "Dynamic"
      ],
      "x-ms-enum": {
        "name": "IPAllocationMethod",
        "modelAsString": true
      }
    },
    "IPVersion": {
      "type": "string",
      "description": "IP address version.",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "name": "IPVersion",
        "modelAsString": true
      }
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The supported ExtendedLocation types. Currently only EdgeZone is supported in Microsoft.Network resources.",
      "enum": [
        "EdgeZone"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true
      }
    },
    "ExtendedLocation": {
      "description": "ExtendedLocation complex type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type of the extended location."
        }
      }
    },
    "CustomIpPrefixPropertiesFormat": {
      "properties": {
        "asn": {
          "type": "string",
          "description": "The ASN for CIDR advertising. Should be an integer as string."
        },
        "cidr": {
          "type": "string",
          "description": "The prefix range in CIDR notation. Should include the start address and the prefix length."
        },
        "signedMessage": {
          "type": "string",
          "description": "Signed message for WAN validation."
        },
        "authorizationMessage": {
          "type": "string",
          "description": "Authorization message for WAN validation."
        },
        "customIpPrefixParent": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix."
        },
        "childCustomIpPrefixes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The list of all Children for IPv6 /48 CustomIpPrefix."
        },
        "commissionedState": {
          "type": "string",
          "description": "The commissioned state of the Custom IP Prefix.",
          "enum": [
            "Provisioning",
            "Provisioned",
            "Commissioning",
            "CommissionedNoInternetAdvertise",
            "Commissioned",
            "Decommissioning",
            "Deprovisioning",
            "Deprovisioned"
          ],
          "x-ms-enum": {
            "name": "CommissionedState",
            "modelAsString": true
          }
        },
        "expressRouteAdvertise": {
          "type": "boolean",
          "description": "Whether to do express route advertise."
        },
        "geo": {
          "type": "string",
          "description": "The Geo for CIDR advertising. Should be an Geo code.",
          "enum": [
            "GLOBAL",
            "AFRI",
            "APAC",
            "EURO",
            "LATAM",
            "NAM",
            "ME",
            "OCEANIA",
            "AQ"
          ],
          "x-ms-enum": {
            "name": "Geo",
            "modelAsString": true
          }
        },
        "noInternetAdvertise": {
          "type": "boolean",
          "description": "Whether to Advertise the range to Internet."
        },
        "prefixType": {
          "type": "string",
          "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
          "enum": [
            "Singular",
            "Parent",
            "Child"
          ],
          "x-ms-enum": {
            "name": "CustomIpPrefixType",
            "modelAsString": true
          }
        },
        "publicIpPrefixes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The list of all referenced PublicIpPrefixes."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the custom IP prefix resource."
        },
        "failedReason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason why resource is in failed state."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the custom IP prefix resource."
        }
      },
      "description": "Custom IP prefix properties."
    },
    "CustomIpPrefix": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the custom IP prefix."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CustomIpPrefixPropertiesFormat",
          "description": "Custom IP prefix properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Custom IP prefix resource."
    },
    "CustomIpPrefixListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomIpPrefix"
          },
          "description": "A list of Custom IP prefixes that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListCustomIpPrefixes API service call."
    },
    "NetworkManagerEffectiveConnectivityConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveConnectivityConfiguration"
          },
          "description": "Gets a page of NetworkManagerEffectiveConnectivityConfiguration"
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Result of the request to list networkManagerEffectiveConnectivityConfiguration. It contains a list of groups and a skiptoken to get the next set of results."
    },
    "NetworkManagerEffectiveSecurityAdminRulesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveBaseSecurityAdminRule"
          },
          "description": "Gets a page of NetworkManagerEffectiveSecurityAdminRules"
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Result of the request to list networkManagerEffectiveSecurityAdminRules. It contains a list of groups and a skiptoken to get the next set of results."
    },
    "EffectiveConnectivityConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Connectivity configuration ID."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "./networkManagerConnectivityConfiguration.json#/definitions/ConnectivityConfigurationProperties",
          "description": "Properties of a network manager connectivity configuration"
        },
        "configurationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationGroup"
          },
          "description": "Effective configuration groups."
        }
      },
      "description": "The network manager effective connectivity configuration"
    },
    "EffectiveBaseSecurityAdminRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "configurationDescription": {
          "type": "string",
          "description": "A description of the security admin configuration."
        },
        "ruleCollectionDescription": {
          "type": "string",
          "description": "A description of the rule collection."
        },
        "ruleCollectionAppliesToGroups": {
          "type": "array",
          "x-ms-identifiers": [
            "networkGroupId"
          ],
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/NetworkManagerSecurityGroupItem"
          },
          "description": "Groups for rule collection"
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationGroup"
          },
          "description": "Effective configuration groups."
        },
        "kind": {
          "type": "string",
          "description": "Whether the rule is custom or default.",
          "enum": [
            "Custom",
            "Default"
          ],
          "x-ms-enum": {
            "name": "EffectiveAdminRuleKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ],
      "discriminator": "kind",
      "description": "Network base admin rule."
    },
    "EffectiveSecurityAdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EffectiveBaseSecurityAdminRule"
        }
      ],
      "description": "Network admin rule.",
      "x-ms-discriminator-value": "Custom"
    },
    "EffectiveDefaultSecurityAdminRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/DefaultAdminPropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the default security admin rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EffectiveBaseSecurityAdminRule"
        }
      ],
      "description": "Network default admin rule.",
      "x-ms-discriminator-value": "Default"
    },
    "ConfigurationGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Network group ID."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "./networkManagerGroup.json#/definitions/NetworkGroupProperties",
          "description": "The network configuration group properties"
        }
      },
      "description": "The network configuration group resource"
    },
    "VirtualWanProperties": {
      "properties": {
        "disableVpnEncryption": {
          "type": "boolean",
          "description": "Vpn encryption to be disabled or not."
        },
        "virtualHubs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of VirtualHubs in the VirtualWAN."
        },
        "vpnSites": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of VpnSites in the VirtualWAN."
        },
        "allowBranchToBranchTraffic": {
          "type": "boolean",
          "description": "True if branch to branch traffic is allowed."
        },
        "allowVnetToVnetTraffic": {
          "type": "boolean",
          "description": "True if Vnet to Vnet traffic is allowed."
        },
        "office365LocalBreakoutCategory": {
          "description": "The office local breakout category.",
          "$ref": "#/definitions/OfficeTrafficCategory"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual WAN resource."
        },
        "type": {
          "type": "string",
          "description": "The type of the VirtualWAN."
        }
      },
      "description": "Parameters for VirtualWAN."
    },
    "VirtualWAN": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualWanProperties",
          "description": "Properties of the virtual WAN."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VirtualWAN Resource."
    },
    "ListVirtualWANsResult": {
      "description": "Result of the request to list VirtualWANs. It contains a list of VirtualWANs and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualWAN"
          },
          "description": "List of VirtualWANs."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteProperties": {
      "properties": {
        "virtualWan": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualWAN to which the vpnSite belongs."
        },
        "deviceProperties": {
          "description": "The device properties.",
          "$ref": "#/definitions/DeviceProperties"
        },
        "ipAddress": {
          "type": "string",
          "description": "The ip-address for the vpn-site."
        },
        "siteKey": {
          "type": "string",
          "description": "The key for vpn-site that can be used for connections."
        },
        "addressSpace": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The AddressSpace that contains an array of IP address ranges."
        },
        "bgpProperties": {
          "$ref": "./virtualNetworkGateway.json#/definitions/BgpSettings",
          "description": "The set of bgp properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site resource."
        },
        "isSecuritySite": {
          "type": "boolean",
          "description": "IsSecuritySite flag."
        },
        "vpnSiteLinks": {
          "type": "array",
          "description": "List of all vpn site links.",
          "items": {
            "$ref": "#/definitions/VpnSiteLink"
          }
        },
        "o365Policy": {
          "readOnly": false,
          "description": "Office365 Policy.",
          "$ref": "#/definitions/O365PolicyProperties"
        }
      },
      "description": "Parameters for VpnSite."
    },
    "VpnSite": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteProperties",
          "description": "Properties of the VPN site."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnSite Resource."
    },
    "ListVpnSitesResult": {
      "description": "Result of the request to list VpnSites. It contains a list of VpnSites and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSite"
          },
          "description": "List of VpnSites."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteLinkProperties": {
      "properties": {
        "linkProperties": {
          "description": "The link provider properties.",
          "$ref": "#/definitions/VpnLinkProviderProperties"
        },
        "ipAddress": {
          "type": "string",
          "description": "The ip-address for the vpn-site-link."
        },
        "fqdn": {
          "type": "string",
          "description": "FQDN of vpn-site-link."
        },
        "bgpProperties": {
          "$ref": "#/definitions/VpnLinkBgpSettings",
          "description": "The set of bgp properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site link resource."
        }
      },
      "description": "Parameters for VpnSite."
    },
    "VpnSiteLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteLinkProperties",
          "description": "Properties of the VPN site link."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnSiteLink Resource."
    },
    "ListVpnSiteLinksResult": {
      "description": "Result of the request to list VpnSiteLinks. It contains a list of VpnSiteLinks and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSiteLink"
          },
          "description": "List of VpnSitesLinks."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "GetVpnSitesConfigurationRequest": {
      "properties": {
        "vpnSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of resource-ids of the vpn-sites for which config is to be downloaded."
        },
        "outputBlobSasUrl": {
          "type": "string",
          "description": "The sas-url to download the configurations for vpn-sites."
        }
      },
      "required": [
        "outputBlobSasUrl"
      ],
      "description": "List of Vpn-Sites."
    },
    "VirtualHubProperties": {
      "properties": {
        "virtualWan": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualWAN to which the VirtualHub belongs."
        },
        "vpnGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VpnGateway associated with this VirtualHub."
        },
        "p2SVpnGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The P2SVpnGateway associated with this VirtualHub."
        },
        "expressRouteGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The expressRouteGateway associated with this VirtualHub."
        },
        "azureFirewall": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The azureFirewall associated with this VirtualHub."
        },
        "securityPartnerProvider": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The securityPartnerProvider associated with this VirtualHub."
        },
        "addressPrefix": {
          "type": "string",
          "description": "Address-prefix for this VirtualHub."
        },
        "routeTable": {
          "$ref": "#/definitions/VirtualHubRouteTable",
          "description": "The routeTable associated with this virtual hub."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual hub resource."
        },
        "securityProviderName": {
          "type": "string",
          "description": "The Security Provider name."
        },
        "virtualHubRouteTableV2s": {
          "type": "array",
          "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteTableV2"
          }
        },
        "sku": {
          "type": "string",
          "description": "The sku of this VirtualHub."
        },
        "routingState": {
          "$ref": "#/definitions/RoutingState",
          "description": "The routing state."
        },
        "bgpConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Bgp Connections.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "ipConfigurations": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to IpConfigurations.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "routeMaps": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to RouteMaps.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "virtualRouterAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "VirtualRouter ASN."
        },
        "virtualRouterIps": {
          "type": "array",
          "readOnly": false,
          "description": "VirtualRouter IPs.",
          "items": {
            "type": "string"
          }
        },
        "allowBranchToBranchTraffic": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control transit for VirtualRouter hub."
        },
        "preferredRoutingGateway": {
          "$ref": "#/definitions/PreferredRoutingGateway",
          "description": "The preferred gateway to route on-prem traffic"
        },
        "hubRoutingPreference": {
          "$ref": "#/definitions/HubRoutingPreference",
          "description": "The hubRoutingPreference of this VirtualHub."
        },
        "virtualRouterAutoScaleConfiguration": {
          "$ref": "#/definitions/VirtualRouterAutoScaleConfiguration",
          "description": "The VirtualHub Router autoscale configuration."
        }
      },
      "description": "Parameters for VirtualHub."
    },
    "VirtualRouterAutoScaleConfiguration": {
      "type": "object",
      "properties": {
        "minCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The minimum number of scale units for VirtualHub Router."
        }
      },
      "description": "The VirtualHub Router autoscale configuration."
    },
    "PreferredRoutingGateway": {
      "type": "string",
      "description": "The preferred routing gateway types",
      "enum": [
        "ExpressRoute",
        "VpnGateway",
        "None"
      ],
      "x-ms-enum": {
        "name": "PreferredRoutingGateway",
        "modelAsString": true
      }
    },
    "HubRoutingPreference": {
      "type": "string",
      "description": "The hub routing preference gateway types",
      "enum": [
        "ExpressRoute",
        "VpnGateway",
        "ASPath"
      ],
      "x-ms-enum": {
        "name": "HubRoutingPreference",
        "modelAsString": true
      }
    },
    "RoutingState": {
      "type": "string",
      "description": "The current routing state of the VirtualHub.",
      "readOnly": true,
      "enum": [
        "None",
        "Provisioned",
        "Provisioning",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "RoutingState",
        "modelAsString": true
      }
    },
    "BgpConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BgpConnectionProperties",
          "description": "The properties of the Bgp connections."
        },
        "name": {
          "type": "string",
          "description": "Name of the connection."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Connection type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Virtual Appliance Site resource."
    },
    "BgpConnectionProperties": {
      "properties": {
        "peerAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Peer ASN."
        },
        "peerIp": {
          "type": "string",
          "readOnly": false,
          "description": "Peer IP."
        },
        "hubVirtualNetworkConnection": {
          "description": "The reference to the HubVirtualNetworkConnection resource.",
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource"
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        },
        "connectionState": {
          "type": "string",
          "description": "The current state of the VirtualHub to Peer.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "Connecting",
            "Connected",
            "NotConnected"
          ],
          "x-ms-enum": {
            "name": "HubBgpConnectionStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of the bgp connection."
    },
    "PeerRoute": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The peer's local address."
        },
        "network": {
          "type": "string",
          "readOnly": true,
          "description": "The route's network prefix."
        },
        "nextHop": {
          "type": "string",
          "readOnly": true,
          "description": "The route's next hop."
        },
        "sourcePeer": {
          "type": "string",
          "readOnly": true,
          "description": "The peer this route was learned from."
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The source this route was learned from."
        },
        "asPath": {
          "type": "string",
          "readOnly": true,
          "description": "The route's AS path sequence."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The route's weight."
        }
      },
      "description": "Peer routing details."
    },
    "PeerRouteList": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/PeerRoute"
        },
        "x-ms-identifiers": [],
        "description": "List of peer routes."
      },
      "description": "Map from virtual router instance to list of peer routes."
    },
    "HubIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubIPConfigurationPropertiesFormat",
          "description": "The properties of the Virtual Hub IPConfigurations."
        },
        "name": {
          "type": "string",
          "description": "Name of the Ip Configuration."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Ipconfiguration type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IpConfigurations."
    },
    "HubIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
          "description": "The reference to the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration resource."
        }
      },
      "description": "Properties of IP configuration."
    },
    "VirtualHubRouteTable": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/VirtualHubRoute"
          }
        }
      },
      "description": "VirtualHub route table."
    },
    "VirtualHubRoute": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "description": "List of all addressPrefixes.",
          "items": {
            "type": "string"
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "NextHop ip address."
        }
      },
      "description": "VirtualHub route."
    },
    "VirtualHub": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualHubProperties",
          "description": "Properties of the virtual hub."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VirtualHub Resource."
    },
    "ListVirtualHubsResult": {
      "description": "Result of the request to list VirtualHubs. It contains a list of VirtualHubs and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHub"
          },
          "description": "List of VirtualHubs."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnGatewayProperties": {
      "properties": {
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualHub to which the gateway belongs."
        },
        "connections": {
          "type": "array",
          "description": "List of all vpn connections to the gateway.",
          "items": {
            "$ref": "#/definitions/VpnConnection"
          }
        },
        "bgpSettings": {
          "$ref": "./virtualNetworkGateway.json#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN gateway resource."
        },
        "vpnGatewayScaleUnit": {
          "type": "integer",
          "format": "int32",
          "description": "The scale unit for this vpn gateway."
        },
        "ipConfigurations": {
          "type": "array",
          "readOnly": true,
          "description": "List of all IPs configured on the gateway.",
          "items": {
            "$ref": "#/definitions/VpnGatewayIpConfiguration"
          }
        },
        "enableBgpRouteTranslationForNat": {
          "type": "boolean",
          "description": "Enable BGP routes translation for NAT on this VpnGateway."
        },
        "isRoutingPreferenceInternet": {
          "type": "boolean",
          "description": "Enable Routing Preference property for the Public IP Interface of the VpnGateway."
        },
        "natRules": {
          "type": "array",
          "description": "List of all the nat Rules associated with the gateway.",
          "items": {
            "$ref": "#/definitions/VpnGatewayNatRule"
          }
        }
      },
      "description": "Parameters for VpnGateway."
    },
    "VpnGateway": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnGatewayProperties",
          "description": "Properties of the VPN gateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnGateway Resource."
    },
    "VpnGatewayIpConfiguration": {
      "description": "IP Configuration of a VPN Gateway Resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the IP configuration for a VPN Gateway."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "The public IP address of this IP configuration."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "The private IP address of this IP configuration."
        }
      }
    },
    "ListVpnGatewaysResult": {
      "description": "Result of the request to list VpnGateways. It contains a list of VpnGateways and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnGateway"
          },
          "description": "List of VpnGateways."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnNatRuleMapping": {
      "properties": {
        "addressSpace": {
          "type": "string",
          "description": "Address space for Vpn NatRule mapping."
        },
        "portRange": {
          "type": "string",
          "description": "Port range for Vpn NatRule mapping."
        }
      },
      "description": "Vpn NatRule mapping."
    },
    "VpnGatewayNatRuleProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the NAT Rule resource."
        },
        "type": {
          "type": "string",
          "description": "The type of NAT rule for VPN NAT.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "VpnNatRuleType",
            "modelAsString": true
          }
        },
        "mode": {
          "type": "string",
          "description": "The Source NAT direction of a VPN NAT.",
          "enum": [
            "EgressSnat",
            "IngressSnat"
          ],
          "x-ms-enum": {
            "name": "VpnNatRuleMode",
            "modelAsString": true
          }
        },
        "internalMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnNatRuleMapping"
          },
          "description": "The private IP address internal mapping for NAT."
        },
        "externalMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnNatRuleMapping"
          },
          "description": "The private IP address external mapping for NAT."
        },
        "ipConfigurationId": {
          "type": "string",
          "description": "The IP Configuration ID this NAT rule applies to."
        },
        "egressVpnSiteLinkConnections": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of egress VpnSiteLinkConnections."
        },
        "ingressVpnSiteLinkConnections": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of ingress VpnSiteLinkConnections."
        }
      },
      "description": "Parameters for VpnGatewayNatRule."
    },
    "VpnGatewayNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnGatewayNatRuleProperties",
          "description": "Properties of the VpnGateway NAT rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnGatewayNatRule Resource."
    },
    "ListVpnGatewayNatRulesResult": {
      "description": "Result of the request to list all nat rules to a virtual wan vpn gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnGatewayNatRule"
          },
          "description": "List of Nat Rules."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnConnectionProperties": {
      "properties": {
        "remoteVpnSite": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Id of the connected vpn site."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Routing weight for vpn connection."
        },
        "dpdTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "DPD timeout in seconds for vpn connection."
        },
        "connectionStatus": {
          "description": "The connection status.",
          "$ref": "#/definitions/VpnConnectionStatus"
        },
        "vpnConnectionProtocolType": {
          "description": "Connection protocol used for this connection.",
          "$ref": "./virtualNetworkGateway.json#/definitions/ConnectionProtocol"
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Ingress bytes transferred."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Egress bytes transferred."
        },
        "connectionBandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Expected bandwidth in MBPS."
        },
        "sharedKey": {
          "type": "string",
          "description": "SharedKey for the vpn connection."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "trafficSelectorPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/TrafficSelectorPolicy"
          },
          "description": "The Traffic Selector Policies to be considered by this connection."
        },
        "enableRateLimiting": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "useLocalAzureIpAddress": {
          "type": "boolean",
          "description": "Use local azure ip to initiate connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN connection resource."
        },
        "vpnLinkConnections": {
          "type": "array",
          "description": "List of all vpn site link connections to the gateway.",
          "items": {
            "$ref": "#/definitions/VpnSiteLinkConnection"
          }
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        }
      },
      "description": "Parameters for VpnConnection."
    },
    "VpnConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnConnectionProperties",
          "description": "Properties of the VPN connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnConnection Resource."
    },
    "ListVpnConnectionsResult": {
      "description": "Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnConnection"
          },
          "description": "List of Vpn Connections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnConnectionPacketCaptureStartParameters": {
      "description": "Vpn Connection packet capture parameters supplied to start packet capture on gateway connection.",
      "properties": {
        "filterData": {
          "type": "string",
          "description": "Start Packet capture parameters on vpn connection."
        },
        "linkConnectionNames": {
          "type": "array",
          "description": "List of site link connection names.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VpnConnectionPacketCaptureStopParameters": {
      "description": "Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection.",
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "SAS url for packet capture on vpn connection."
        },
        "linkConnectionNames": {
          "type": "array",
          "description": "List of site link connection names.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VpnGatewayPacketCaptureStartParameters": {
      "properties": {
        "filterData": {
          "type": "string",
          "description": "Start Packet capture parameters on vpn gateway."
        }
      },
      "description": "Start packet capture parameters."
    },
    "VpnGatewayPacketCaptureStopParameters": {
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "SAS url for packet capture on vpn gateway."
        }
      },
      "description": "Stop packet capture parameters."
    },
    "VpnSiteLinkConnectionProperties": {
      "properties": {
        "vpnSiteLink": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Id of the connected vpn site link."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Routing weight for vpn connection."
        },
        "vpnLinkConnectionMode": {
          "type": "string",
          "description": "Vpn link connection mode.",
          "enum": [
            "Default",
            "ResponderOnly",
            "InitiatorOnly"
          ],
          "x-ms-enum": {
            "name": "VpnLinkConnectionMode",
            "modelAsString": true
          }
        },
        "connectionStatus": {
          "description": "The connection status.",
          "$ref": "#/definitions/VpnConnectionStatus"
        },
        "vpnConnectionProtocolType": {
          "description": "Connection protocol used for this connection.",
          "$ref": "./virtualNetworkGateway.json#/definitions/ConnectionProtocol"
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Ingress bytes transferred."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Egress bytes transferred."
        },
        "connectionBandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Expected bandwidth in MBPS."
        },
        "sharedKey": {
          "type": "string",
          "description": "SharedKey for the vpn connection."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "vpnGatewayCustomBgpAddresses": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/GatewayCustomBgpIpAddressIpConfiguration"
          },
          "description": "vpnGatewayCustomBgpAddresses used by this connection.",
          "x-ms-identifiers": []
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "enableRateLimiting": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "useLocalAzureIpAddress": {
          "type": "boolean",
          "description": "Use local azure ip to initiate connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site link connection resource."
        },
        "ingressNatRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of ingress NatRules."
        },
        "egressNatRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of egress NatRules."
        },
        "dpdTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Dead Peer Detection timeout in seconds for VpnLink connection."
        }
      },
      "description": "Parameters for VpnConnection."
    },
    "VpnSiteLinkConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteLinkConnectionProperties",
          "description": "Properties of the VPN site link connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnSiteLinkConnection Resource."
    },
    "ListVpnSiteLinkConnectionsResult": {
      "description": "Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSiteLinkConnection"
          },
          "description": "List of VpnSiteLinkConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "HubVirtualNetworkConnectionProperties": {
      "properties": {
        "remoteVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the remote virtual network."
        },
        "allowHubToRemoteVnetTransit": {
          "type": "boolean",
          "description": "Deprecated: VirtualHub to RemoteVnet transit to enabled or not."
        },
        "allowRemoteVnetToUseHubVnetGateways": {
          "type": "boolean",
          "description": "Deprecated: Allow RemoteVnet to use Virtual Hub's gateways."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the hub virtual network connection resource."
        }
      },
      "description": "Parameters for HubVirtualNetworkConnection."
    },
    "HubVirtualNetworkConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubVirtualNetworkConnectionProperties",
          "description": "Properties of the hub virtual network connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "HubVirtualNetworkConnection Resource."
    },
    "ListHubVirtualNetworkConnectionsResult": {
      "description": "List of HubVirtualNetworkConnections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubVirtualNetworkConnection"
          },
          "description": "List of HubVirtualNetworkConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "HubRouteTableProperties": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/HubRoute"
          }
        },
        "labels": {
          "type": "array",
          "description": "List of labels associated with this route table.",
          "items": {
            "type": "string"
          }
        },
        "associatedConnections": {
          "type": "array",
          "description": "List of all connections associated with this route table.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "propagatingConnections": {
          "type": "array",
          "description": "List of all connections that advertise to this route table.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the RouteTable resource."
        }
      },
      "description": "Parameters for RouteTable."
    },
    "HubRouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubRouteTableProperties",
          "description": "Properties of the RouteTable resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "RouteTable resource in a virtual hub."
    },
    "HubRoute": {
      "required": [
        "name",
        "destinationType",
        "destinations",
        "nextHopType",
        "nextHop"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Route that is unique within a RouteTable. This name can be used to access this route."
        },
        "destinationType": {
          "type": "string",
          "description": "The type of destinations (eg: CIDR, ResourceId, Service)."
        },
        "destinations": {
          "type": "array",
          "description": "List of all destinations.",
          "items": {
            "type": "string"
          }
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of next hop (eg: ResourceId)."
        },
        "nextHop": {
          "type": "string",
          "description": "NextHop resource ID."
        }
      },
      "description": "RouteTable route."
    },
    "ListHubRouteTablesResult": {
      "description": "List of RouteTables and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubRouteTable"
          },
          "description": "List of RouteTables."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteId": {
      "properties": {
        "vpnSite": {
          "type": "string",
          "readOnly": true,
          "description": "The resource-uri of the vpn-site for which config is to be fetched."
        }
      },
      "description": "VpnSite Resource."
    },
    "DeviceProperties": {
      "properties": {
        "deviceVendor": {
          "type": "string",
          "description": "Name of the device Vendor."
        },
        "deviceModel": {
          "type": "string",
          "description": "Model of the device."
        },
        "linkSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Link speed."
        }
      },
      "description": "List of properties of the device."
    },
    "VirtualWanSecurityProviders": {
      "properties": {
        "supportedProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualWanSecurityProvider"
          },
          "description": "List of VirtualWAN security providers."
        }
      },
      "description": "Collection of SecurityProviders."
    },
    "VirtualWanSecurityProvider": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the security provider."
        },
        "url": {
          "type": "string",
          "description": "Url of the security provider."
        },
        "type": {
          "$ref": "#/definitions/VirtualWanSecurityProviderType",
          "description": "Name of the security provider."
        }
      },
      "description": "Collection of SecurityProviders."
    },
    "VpnConnectionStatus": {
      "type": "string",
      "description": "The current state of the vpn connection.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "VpnConnectionStatus",
        "modelAsString": true
      }
    },
    "TunnelConnectionStatus": {
      "type": "string",
      "description": "The current state of the tunnel.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "TunnelConnectionStatus",
        "modelAsString": true
      }
    },
    "HubVirtualNetworkConnectionStatus": {
      "type": "string",
      "description": "The current state of the VirtualHub to vnet connection.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "HubVirtualNetworkConnectionStatus",
        "modelAsString": true
      }
    },
    "OfficeTrafficCategory": {
      "type": "string",
      "description": "The office traffic category.",
      "readOnly": true,
      "enum": [
        "Optimize",
        "OptimizeAndAllow",
        "All",
        "None"
      ],
      "x-ms-enum": {
        "name": "OfficeTrafficCategory",
        "modelAsString": true
      }
    },
    "VirtualWanSecurityProviderType": {
      "type": "string",
      "description": "The virtual wan security provider type.",
      "readOnly": true,
      "enum": [
        "External",
        "Native"
      ],
      "x-ms-enum": {
        "name": "VirtualWanSecurityProviderType",
        "modelAsString": true
      }
    },
    "VpnServerConfigVpnClientRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        }
      },
      "description": "Properties of VPN client root certificate of VpnServerConfiguration."
    },
    "VpnServerConfigRadiusServerRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        }
      },
      "description": "Properties of Radius Server root certificate of VpnServerConfiguration."
    },
    "VpnServerConfigVpnClientRevokedCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "thumbprint": {
          "type": "string",
          "description": "The revoked VPN client certificate thumbprint."
        }
      },
      "description": "Properties of the revoked VPN client certificate of VpnServerConfiguration."
    },
    "VpnServerConfigRadiusClientRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "thumbprint": {
          "type": "string",
          "description": "The Radius client root certificate thumbprint."
        }
      },
      "description": "Properties of the Radius client root certificate of VpnServerConfiguration."
    },
    "AadAuthenticationParameters": {
      "properties": {
        "aadTenant": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD tenant."
        },
        "aadAudience": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD audience."
        },
        "aadIssuer": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD issuer."
        }
      },
      "description": "AAD Vpn authentication type related parameters."
    },
    "VpnServerConfigurationProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VpnServerConfiguration that is unique within a resource group."
        },
        "vpnProtocols": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN protocol enabled for the VpnServerConfiguration.",
            "enum": [
              "IkeV2",
              "OpenVPN"
            ],
            "x-ms-enum": {
              "name": "VpnGatewayTunnelingProtocol",
              "modelAsString": true
            }
          },
          "description": "VPN protocols for the VpnServerConfiguration."
        },
        "vpnAuthenticationTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN authentication types enabled for the VpnServerConfiguration.",
            "enum": [
              "Certificate",
              "Radius",
              "AAD"
            ],
            "x-ms-enum": {
              "name": "VpnAuthenticationType",
              "modelAsString": true
            }
          },
          "description": "VPN authentication types for the VpnServerConfiguration."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigVpnClientRootCertificate"
          },
          "description": "VPN client root certificate of VpnServerConfiguration."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigVpnClientRevokedCertificate"
          },
          "description": "VPN client revoked certificate of VpnServerConfiguration."
        },
        "radiusServerRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigRadiusServerRootCertificate"
          },
          "description": "Radius Server root certificate of VpnServerConfiguration."
        },
        "radiusClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigRadiusClientRootCertificate"
          },
          "description": "Radius client root certificate of VpnServerConfiguration."
        },
        "vpnClientIpsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "VpnClientIpsecPolicies for VpnServerConfiguration."
        },
        "radiusServerAddress": {
          "type": "string",
          "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection."
        },
        "radiusServerSecret": {
          "type": "string",
          "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection."
        },
        "radiusServers": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/RadiusServer"
          },
          "description": "Multiple Radius Server configuration for VpnServerConfiguration."
        },
        "aadAuthenticationParameters": {
          "$ref": "#/definitions/AadAuthenticationParameters",
          "description": "The set of aad vpn authentication parameters."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        },
        "p2SVpnGateways": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/P2SVpnGateway"
          },
          "description": "List of references to P2SVpnGateways."
        },
        "configurationPolicyGroups": {
          "type": "array",
          "description": "List of all VpnServerConfigurationPolicyGroups.",
          "items": {
            "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
          }
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "Parameters for VpnServerConfiguration."
    },
    "VpnServerConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnServerConfigurationProperties",
          "description": "Properties of the P2SVpnServer configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnServerConfiguration Resource."
    },
    "ListVpnServerConfigurationsResult": {
      "description": "Result of the request to list all VpnServerConfigurations. It contains a list of VpnServerConfigurations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfiguration"
          },
          "description": "List of VpnServerConfigurations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnClientConnectionHealth": {
      "properties": {
        "totalIngressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Total of the Ingress Bytes Transferred in this P2S Vpn connection."
        },
        "totalEgressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Total of the Egress Bytes Transferred in this connection."
        },
        "vpnClientConnectionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total of p2s vpn clients connected at this time to this P2SVpnGateway."
        },
        "allocatedIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of allocated ip addresses to the connected p2s vpn clients."
        }
      },
      "description": "VpnClientConnectionHealth properties."
    },
    "VpnServerConfigurationPolicyGroupProperties": {
      "type": "object",
      "properties": {
        "isDefault": {
          "type": "boolean",
          "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority for VpnServerConfigurationPolicyGroup."
        },
        "policyMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigurationPolicyGroupMember"
          },
          "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
          "x-ms-identifiers": []
        },
        "p2SConnectionConfigurations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of references to P2SConnectionConfigurations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VpnServerConfigurationPolicyGroup resource."
        }
      },
      "description": "Parameters for VpnServerConfigurationPolicyGroup."
    },
    "VpnServerConfigurationPolicyGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnServerConfigurationPolicyGroupProperties",
          "description": "Properties of the VpnServerConfigurationPolicyGroup."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnServerConfigurationPolicyGroup Resource."
    },
    "VpnServerConfigurationPolicyGroupMember": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the VpnServerConfigurationPolicyGroupMember."
        },
        "attributeType": {
          "type": "string",
          "description": "The Vpn Policy member attribute type.",
          "enum": [
            "CertificateGroupId",
            "AADGroupId",
            "RadiusAzureGroupId"
          ],
          "x-ms-enum": {
            "name": "VpnPolicyMemberAttributeType",
            "modelAsString": true
          }
        },
        "attributeValue": {
          "type": "string",
          "description": "The value of Attribute used for this VpnServerConfigurationPolicyGroupMember."
        }
      },
      "description": "VpnServerConfiguration PolicyGroup member",
      "type": "object"
    },
    "ListVpnServerConfigurationPolicyGroupsResult": {
      "type": "object",
      "description": "Result of the request to list VpnServerConfigurationPolicyGroups. It contains a list of VpnServerConfigurationPolicyGroups and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
          },
          "description": "List of VpnServerConfigurationPolicyGroups."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "P2SVpnGatewayProperties": {
      "properties": {
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualHub to which the gateway belongs."
        },
        "p2SConnectionConfigurations": {
          "type": "array",
          "description": "List of all p2s connection configurations of the gateway.",
          "items": {
            "$ref": "#/definitions/P2SConnectionConfiguration"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the P2S VPN gateway resource."
        },
        "vpnGatewayScaleUnit": {
          "type": "integer",
          "format": "int32",
          "description": "The scale unit for this p2s vpn gateway."
        },
        "vpnServerConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to."
        },
        "vpnClientConnectionHealth": {
          "readOnly": true,
          "$ref": "#/definitions/VpnClientConnectionHealth",
          "description": "All P2S VPN clients' connection health status."
        },
        "customDnsServers": {
          "type": "array",
          "description": "List of all customer specified DNS servers IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "isRoutingPreferenceInternet": {
          "type": "boolean",
          "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway."
        }
      },
      "description": "Parameters for P2SVpnGateway."
    },
    "P2SVpnGateway": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/P2SVpnGatewayProperties",
          "description": "Properties of the P2SVpnGateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "P2SVpnGateway Resource."
    },
    "ListP2SVpnGatewaysResult": {
      "description": "Result of the request to list P2SVpnGateways. It contains a list of P2SVpnGateways and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/P2SVpnGateway"
          },
          "description": "List of P2SVpnGateways."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "P2SVpnProfileParameters": {
      "properties": {
        "authenticationMethod": {
          "$ref": "./network.json#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        }
      },
      "description": "Vpn Client Parameters for package generation."
    },
    "VpnProfileResponse": {
      "properties": {
        "profileUrl": {
          "type": "string",
          "description": "URL to the VPN profile."
        }
      },
      "description": "Vpn Profile Response for package generation."
    },
    "VpnLinkBgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "description": "The BGP speaker's ASN."
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "The BGP peering address and BGP identifier of this BGP speaker."
        }
      },
      "description": "BGP settings details for a link."
    },
    "VpnLinkProviderProperties": {
      "properties": {
        "linkProviderName": {
          "type": "string",
          "description": "Name of the link provider."
        },
        "linkSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Link speed."
        }
      },
      "description": "List of properties of a link provider."
    },
    "VpnServerConfigurationsResponse": {
      "properties": {
        "vpnServerConfigurationResourceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VpnServerConfiguration partial resource uri."
          },
          "description": "List of VpnServerConfigurations associated with VirtualWan."
        }
      },
      "description": "VpnServerConfigurations list associated with VirtualWan Response."
    },
    "VirtualWanVpnProfileParameters": {
      "properties": {
        "vpnServerConfigurationResourceId": {
          "type": "string",
          "description": "VpnServerConfiguration partial resource uri with which VirtualWan is associated to."
        },
        "authenticationMethod": {
          "$ref": "./network.json#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        }
      },
      "description": "Virtual Wan Vpn profile parameters Vpn profile generation."
    },
    "P2SVpnConnectionHealthRequest": {
      "properties": {
        "vpnUserNamesFilter": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "P2S vpn user name."
          },
          "description": "The list of p2s vpn user names whose p2s vpn connection detailed health to retrieve for."
        },
        "outputBlobSasUrl": {
          "type": "string",
          "description": "The sas-url to download the P2S Vpn connection health detail."
        }
      },
      "description": "List of P2S Vpn connection health request."
    },
    "P2SVpnConnectionHealth": {
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "Returned sas url of the blob to which the p2s vpn connection detailed health will be written."
        }
      },
      "description": "P2S Vpn connection detailed health written to sas url."
    },
    "P2SConnectionConfigurationProperties": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The reference to the address space resource which represents Address space for P2S VpnClient."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not."
        },
        "configurationPolicyGroupAssociations": {
          "type": "array",
          "readOnly": false,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to."
        },
        "previousConfigurationPolicyGroupAssociations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/VpnServerConfigurationPolicyGroup"
          },
          "description": "List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the P2SConnectionConfiguration resource."
        }
      },
      "description": "Parameters for P2SConnectionConfiguration."
    },
    "P2SConnectionConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/P2SConnectionConfigurationProperties",
          "description": "Properties of the P2S connection configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "P2SConnectionConfiguration Resource."
    },
    "VirtualHubRouteTableV2Properties": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteV2"
          }
        },
        "attachedConnections": {
          "type": "array",
          "description": "List of all connections attached to this route table v2.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the virtual hub route table v2 resource."
        }
      },
      "description": "Parameters for VirtualHubRouteTableV2."
    },
    "VirtualHubRouteTableV2": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualHubRouteTableV2Properties",
          "description": "Properties of the virtual hub route table v2."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VirtualHubRouteTableV2 Resource."
    },
    "VirtualHubRouteV2": {
      "properties": {
        "destinationType": {
          "type": "string",
          "description": "The type of destinations."
        },
        "destinations": {
          "type": "array",
          "description": "List of all destinations.",
          "items": {
            "type": "string"
          }
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of next hops."
        },
        "nextHops": {
          "type": "array",
          "description": "NextHops ip address.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "VirtualHubRouteTableV2 route."
    },
    "ListVirtualHubRouteTableV2sResult": {
      "description": "List of VirtualHubRouteTableV2s and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteTableV2"
          },
          "description": "List of VirtualHubRouteTableV2s."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "P2SVpnConnectionRequest": {
      "description": "List of p2s vpn connections to be disconnected.",
      "properties": {
        "vpnConnectionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of p2s vpn connection Ids."
        }
      }
    },
    "VirtualHubId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription."
        }
      },
      "description": "Virtual Hub identifier."
    },
    "ExpressRouteCircuitPeeringId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the ExpressRoute circuit peering."
        }
      },
      "description": "ExpressRoute circuit peering identifier."
    },
    "ExpressRouteConnectionId": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The ID of the ExpressRouteConnection."
        }
      },
      "description": "The ID of the ExpressRouteConnection."
    },
    "ExpressRouteGatewayProperties": {
      "required": [
        "virtualHub"
      ],
      "properties": {
        "autoScaleConfiguration": {
          "properties": {
            "bounds": {
              "properties": {
                "min": {
                  "type": "integer",
                  "description": "Minimum number of scale units deployed for ExpressRoute gateway."
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of scale units deployed for ExpressRoute gateway."
                }
              },
              "description": "Minimum and maximum number of scale units to deploy."
            }
          },
          "description": "Configuration for auto scaling."
        },
        "expressRouteConnections": {
          "type": "array",
          "description": "List of ExpressRoute connections to the ExpressRoute gateway.",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnection"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route gateway resource."
        },
        "virtualHub": {
          "$ref": "#/definitions/VirtualHubId",
          "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed."
        },
        "allowNonVirtualWanTraffic": {
          "type": "boolean",
          "description": "Configures this gateway to accept traffic from non Virtual WAN networks."
        }
      },
      "description": "ExpressRoute gateway resource properties."
    },
    "ExpressRouteGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteGatewayProperties",
          "description": "Properties of the express route gateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRoute gateway resource."
    },
    "ExpressRouteGatewayList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteGateway"
          },
          "description": "List of ExpressRoute gateways."
        }
      },
      "description": "List of ExpressRoute gateways."
    },
    "ExpressRouteConnectionProperties": {
      "required": [
        "expressRouteCircuitPeering"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route connection resource."
        },
        "expressRouteCircuitPeering": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringId",
          "description": "The ExpressRoute circuit peering."
        },
        "authorizationKey": {
          "type": "string",
          "description": "Authorization key to establish the connection."
        },
        "routingWeight": {
          "type": "integer",
          "description": "The routing weight associated to the connection."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "expressRouteGatewayBypass": {
          "type": "boolean",
          "description": "Enable FastPath to vWan Firewall hub."
        },
        "enablePrivateLinkFastPath": {
          "type": "boolean",
          "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        }
      },
      "description": "Properties of the ExpressRouteConnection subresource."
    },
    "ExpressRouteConnection": {
      "required": [
        "name"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteConnectionProperties",
          "description": "Properties of the express route connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "ExpressRouteConnection resource."
    },
    "ExpressRouteConnectionList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnection"
          },
          "description": "The list of ExpressRoute connections."
        }
      },
      "description": "ExpressRouteConnection list."
    },
    "NetworkVirtualApplianceConnectionProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the NetworkVirtualApplianceConnection resource."
        },
        "asn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Network Virtual Appliance ASN."
        },
        "tunnelIdentifier": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Unique identifier for the connection."
        },
        "bgpPeerAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of bgpPeerAddresses for the NVA instances"
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        }
      },
      "description": "Properties of the NetworkVirtualApplianceConnection subresource."
    },
    "NetworkVirtualApplianceConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkVirtualApplianceConnectionProperties",
          "description": "Properties of the express route connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "NetworkVirtualApplianceConnection resource."
    },
    "NetworkVirtualApplianceConnectionList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkVirtualApplianceConnection"
          },
          "description": "The list of NetworkVirtualAppliance connections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "NetworkVirtualApplianceConnection list."
    },
    "ListVirtualHubBgpConnectionResults": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpConnection"
          },
          "description": "The list of VirtualHubBgpConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "VirtualHubBgpConnections list."
    },
    "ListVirtualHubIpConfigurationResults": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubIpConfiguration"
          },
          "description": "The list of VirtualHubIpConfigurations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "VirtualHubIpConfigurations list."
    },
    "RoutingConfiguration": {
      "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
      "properties": {
        "associatedRouteTable": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The resource id RouteTable associated with this RoutingConfiguration."
        },
        "propagatedRouteTables": {
          "$ref": "#/definitions/PropagatedRouteTable",
          "description": "The list of RouteTables to advertise the routes to."
        },
        "vnetRoutes": {
          "$ref": "#/definitions/VnetRoute",
          "description": "List of routes that control routing from VirtualHub into a virtual network connection."
        },
        "inboundRouteMap": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."
        },
        "outboundRouteMap": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."
        }
      }
    },
    "PropagatedRouteTable": {
      "description": "The list of RouteTables to advertise the routes to.",
      "properties": {
        "labels": {
          "type": "array",
          "description": "The list of labels.",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "description": "The list of resource ids of all the RouteTables.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        }
      }
    },
    "VnetRoute": {
      "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
      "properties": {
        "staticRoutesConfig": {
          "$ref": "#/definitions/StaticRoutesConfig",
          "description": "Configuration for static routes on this HubVnetConnection."
        },
        "staticRoutes": {
          "type": "array",
          "description": "List of all Static Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoute"
          }
        },
        "bgpConnections": {
          "type": "array",
          "readOnly": true,
          "description": "The list of references to HubBgpConnection objects.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        }
      }
    },
    "StaticRoutesConfig": {
      "description": "Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.",
      "type": "object",
      "properties": {
        "propagateStaticRoutes": {
          "description": "Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.",
          "type": "boolean",
          "readOnly": true
        },
        "vnetLocalRouteOverrideCriteria": {
          "description": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.",
          "$ref": "#/definitions/VnetLocalRouteOverrideCriteria"
        }
      }
    },
    "StaticRoute": {
      "description": "List of all Static Routes.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the StaticRoute that is unique within a VnetRoute."
        },
        "addressPrefixes": {
          "type": "array",
          "description": "List of all address prefixes.",
          "items": {
            "type": "string"
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The ip address of the next hop."
        }
      }
    },
    "VirtualHubEffectiveRouteList": {
      "description": "EffectiveRoutes List.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHubEffectiveRoute"
          },
          "description": "The list of effective routes configured on the virtual hub or the specified resource."
        }
      }
    },
    "VirtualHubEffectiveRoute": {
      "description": "The effective route configured on the virtual hub or specified resource.",
      "properties": {
        "addressPrefixes": {
          "description": "The list of address prefixes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextHops": {
          "description": "The list of next hops.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextHopType": {
          "description": "The type of the next hop.",
          "type": "string"
        },
        "asPath": {
          "description": "The ASPath of this route.",
          "type": "string"
        },
        "routeOrigin": {
          "description": "The origin of this route.",
          "type": "string"
        }
      }
    },
    "EffectiveRoutesParameters": {
      "description": "The parameters specifying the resource whose effective routes are being requested.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource whose effective routes are being requested."
        },
        "virtualWanResourceType": {
          "type": "string",
          "description": "The type of the specified resource like RouteTable, ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection."
        }
      }
    },
    "EffectiveRouteMapRouteList": {
      "description": "EffectiveRouteMapRoute List.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveRouteMapRoute"
          },
          "description": "The list of Effective RouteMap Routes configured on the connection resource.",
          "x-ms-identifiers": []
        }
      }
    },
    "EffectiveRouteMapRoute": {
      "description": "The effective RouteMap route configured on the connection resource.",
      "type": "object",
      "properties": {
        "prefix": {
          "description": "The address prefix of the route.",
          "type": "string"
        },
        "bgpCommunities": {
          "description": "BGP communities of the route.",
          "type": "string"
        },
        "asPath": {
          "description": "The ASPath of this route.",
          "type": "string"
        }
      }
    },
    "GetInboundRoutesParameters": {
      "description": "The parameters specifying the connection resource whose inbound routes are being requested.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The connection resource whose inbound routes are being requested."
        },
        "connectionType": {
          "type": "string",
          "description": "The type of the specified connection resource like ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection."
        }
      }
    },
    "GetOutboundRoutesParameters": {
      "description": "The parameters specifying the connection resource whose outbound routes are being requested.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The connection resource whose outbound routes are being requested."
        },
        "connectionType": {
          "type": "string",
          "description": "The type of the specified connection resource like ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection."
        }
      }
    },
    "O365PolicyProperties": {
      "properties": {
        "breakOutCategories": {
          "readOnly": false,
          "description": "Office365 breakout categories.",
          "$ref": "#/definitions/O365BreakOutCategoryPolicies"
        }
      },
      "description": "The Office365 breakout policy."
    },
    "O365BreakOutCategoryPolicies": {
      "properties": {
        "allow": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control allow category."
        },
        "optimize": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control optimize category."
        },
        "default": {
          "type": "boolean",
          "readOnly": false,
          "description": "Flag to control default category."
        }
      },
      "description": "Office365 breakout categories."
    },
    "ListRoutingIntentResult": {
      "description": "List of the routing intent result and a URL nextLink to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingIntent"
          },
          "description": "List of RoutingIntent resource."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "RoutingIntent": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutingIntentProperties",
          "description": "Properties of the RoutingIntent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "The routing intent child resource of a Virtual hub.",
      "type": "object"
    },
    "RoutingIntentProperties": {
      "properties": {
        "routingPolicies": {
          "type": "array",
          "description": "List of routing policies.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/RoutingPolicy"
          }
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the RoutingIntent resource."
        }
      },
      "description": "The properties of a RoutingIntent resource.",
      "type": "object"
    },
    "RoutingPolicy": {
      "required": [
        "name",
        "destinations",
        "nextHop"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name for the routing policy."
        },
        "destinations": {
          "type": "array",
          "description": "List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).",
          "items": {
            "type": "string"
          }
        },
        "nextHop": {
          "type": "string",
          "description": "The next hop resource id on which this routing policy is applicable to."
        }
      },
      "description": "The routing policy object used in a RoutingIntent resource.",
      "type": "object"
    },
    "RouteMap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteMapProperties",
          "description": "Properties of the RouteMap resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource id."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "The RouteMap child resource of a Virtual hub.",
      "type": "object"
    },
    "ListRouteMapsResult": {
      "description": "List of RouteMaps and a URL nextLink to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteMap"
          },
          "description": "List of RouteMaps."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "RouteMapProperties": {
      "properties": {
        "associatedInboundConnections": {
          "type": "array",
          "description": "List of connections which have this RoutMap associated for inbound traffic.",
          "items": {
            "type": "string"
          }
        },
        "associatedOutboundConnections": {
          "type": "array",
          "description": "List of connections which have this RoutMap associated for outbound traffic.",
          "items": {
            "type": "string"
          }
        },
        "rules": {
          "type": "array",
          "description": "List of RouteMap rules to be applied.",
          "items": {
            "$ref": "#/definitions/RouteMapRule"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the RouteMap resource."
        }
      },
      "description": "Properties of RouteMap resource",
      "type": "object"
    },
    "RouteMapRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name for the rule."
        },
        "matchCriteria": {
          "type": "array",
          "description": "List of matching criterion which will be applied to traffic.",
          "items": {
            "$ref": "#/definitions/Criterion"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "List of actions which will be applied on a match.",
          "items": {
            "$ref": "#/definitions/Action"
          },
          "x-ms-identifiers": []
        },
        "nextStepIfMatched": {
          "$ref": "#/definitions/NextStep",
          "description": "Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'."
        }
      },
      "description": "A RouteMap Rule.",
      "type": "object"
    },
    "Criterion": {
      "properties": {
        "routePrefix": {
          "type": "array",
          "description": "List of route prefixes which this criteria matches.",
          "items": {
            "type": "string"
          }
        },
        "community": {
          "type": "array",
          "description": "List of BGP communities which this criteria matches.",
          "items": {
            "type": "string"
          }
        },
        "asPath": {
          "type": "array",
          "description": "List of AS paths which this criteria matches.",
          "items": {
            "type": "string"
          }
        },
        "matchCondition": {
          "$ref": "#/definitions/RouteMapMatchCondition",
          "description": "Match condition to apply RouteMap rules."
        }
      },
      "description": "A matching criteria which matches routes based on route prefix, community, and AS path.",
      "type": "object"
    },
    "Action": {
      "properties": {
        "type": {
          "$ref": "#/definitions/RouteMapActionType",
          "description": "Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'"
        },
        "parameters": {
          "type": "array",
          "description": "List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added",
          "items": {
            "$ref": "#/definitions/Parameter"
          },
          "x-ms-identifiers": []
        }
      },
      "description": "Action to be taken on a route matching a RouteMap criterion.",
      "type": "object"
    },
    "Parameter": {
      "properties": {
        "routePrefix": {
          "type": "array",
          "description": "List of route prefixes.",
          "items": {
            "type": "string"
          }
        },
        "community": {
          "type": "array",
          "description": "List of BGP communities.",
          "items": {
            "type": "string"
          }
        },
        "asPath": {
          "type": "array",
          "description": "List of AS paths.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Parameters for an Action.",
      "type": "object"
    },
    "RouteMapMatchCondition": {
      "type": "string",
      "description": "Match condition to apply RouteMap rules.",
      "enum": [
        "Unknown",
        "Contains",
        "Equals",
        "NotContains",
        "NotEquals"
      ],
      "x-ms-enum": {
        "name": "RouteMapMatchCondition",
        "modelAsString": true
      }
    },
    "NextStep": {
      "type": "string",
      "description": "Supported next step behaviors after a rule is applied to a matched route",
      "enum": [
        "Unknown",
        "Continue",
        "Terminate"
      ],
      "x-ms-enum": {
        "name": "NextStep",
        "modelAsString": true
      }
    },
    "RouteMapActionType": {
      "type": "string",
      "description": "Kind of actions which can be taken on a matched route. Add, Replace, Remove refer to parameters on the route, like community or prefix",
      "enum": [
        "Unknown",
        "Remove",
        "Add",
        "Replace",
        "Drop"
      ],
      "x-ms-enum": {
        "name": "RouteMapActionType",
        "modelAsString": true
      }
    },
    "VnetLocalRouteOverrideCriteria": {
      "type": "string",
      "description": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke vnet.",
      "enum": [
        "Contains",
        "Equal"
      ],
      "x-ms-enum": {
        "name": "VnetLocalRouteOverrideCriteria",
        "modelAsString": true
      }
    },
    "SharedKeyProperties": {
      "type": "object",
      "properties": {
        "sharedKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "The value of the shared key for the vpn link connection."
        },
        "sharedKeyLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 128,
          "description": "The length of the shared key for the vpn link connection."
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the SharedKey resource."
        }
      },
      "description": "Parameters for SharedKey."
    },
    "ConnectionSharedKeyResult": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedKeyProperties",
          "description": "Properties of the shared key."
        },
        "id": {
          "type": "string",
          "description": "The identifier of the shared key for a vpn link connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "SharedKey Resource ."
    },
    "ConnectionSharedKeyResultList": {
      "description": "The list of shared keys for the vpn link connection. It should only contain one shared key for each vpn link connection.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionSharedKeyResult"
          },
          "description": "List of SharedKeys."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "ConnectivityConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectivityConfiguration"
          },
          "description": "Gets a page of Connectivity Configurations"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list network manager connectivity configurations. It contains a list of configurations and a link to get the next set of results."
    },
    "ConnectivityConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectivityConfigurationProperties",
          "description": "Properties of a network manager connectivity configuration"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "The network manager connectivity configuration resource"
    },
    "ConnectivityConfigurationProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the connectivity configuration."
        },
        "connectivityTopology": {
          "type": "string",
          "enum": [
            "HubAndSpoke",
            "Mesh"
          ],
          "x-ms-enum": {
            "name": "ConnectivityTopology",
            "modelAsString": true
          },
          "description": "Connectivity topology type."
        },
        "hubs": {
          "type": "array",
          "x-ms-identifiers": [
            "resourceId"
          ],
          "items": {
            "$ref": "#/definitions/Hub"
          },
          "description": "List of hubItems"
        },
        "isGlobal": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "IsGlobal",
            "modelAsString": true
          },
          "description": "Flag if global mesh is supported."
        },
        "connectivityCapabilities": {
          "type": "object",
          "description": "Collection of additional settings to enhance specific topology behaviors of the connectivity configuration resource.",
          "properties": {
            "connectedGroupPrivateEndpointsScale": {
              "type": "string",
              "enum": [
                "Standard",
                "HighScale"
              ],
              "x-ms-enum": {
                "name": "ConnectedGroupPrivateEndpointsScale",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "Default. Allows for up to 2K private endpoints in the connected group."
                  },
                  {
                    "value": "HighScale",
                    "description": "Allows for up to 20K private endpoints in the connected group."
                  }
                ]
              },
              "description": "Option indicating the scale of private endpoints allowed in the connected group of the connectivity configuration.",
              "default": "Standard"
            },
            "connectedGroupAddressOverlap": {
              "type": "string",
              "enum": [
                "Allowed",
                "Disallowed"
              ],
              "x-ms-enum": {
                "name": "ConnectedGroupAddressOverlap",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Allowed",
                    "description": "Default. Allows connected group members to have overlapping IP address space."
                  },
                  {
                    "value": "Disallowed",
                    "description": "Strictly disallows connected group members from having overlapping IP address space. Prevents the addition of a virtual network with overlapping address to the connected group, blocks peering between a virtual network and a connected group member if any connected group member has an overlapping range, and restricts address space modifications that would introduce overlap."
                  }
                ]
              },
              "description": "Behavior to handle overlapped IP address space among members of the connected group of the connectivity configuration.",
              "default": "Allowed"
            },
            "peeringEnforcement": {
              "type": "string",
              "enum": [
                "Unenforced",
                "Enforced"
              ],
              "x-ms-enum": {
                "name": "PeeringEnforcement",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Unenforced",
                    "description": "Default. Peerings created by the connectivity configuration may be modified or deleted outside of the network manager."
                  },
                  {
                    "value": "Enforced",
                    "description": "Peerings created by the connectivity configuration will not be modifiable or deletable outside of the network manager."
                  }
                ]
              },
              "description": "Option indicating enforcement of peerings created by the connectivity configuration.",
              "default": "Unenforced"
            }
          },
          "required": [
            "connectedGroupPrivateEndpointsScale",
            "connectedGroupAddressOverlap",
            "peeringEnforcement"
          ]
        },
        "appliesToGroups": {
          "type": "array",
          "x-ms-identifiers": [
            "networkGroupId"
          ],
          "items": {
            "$ref": "#/definitions/connectivityGroupItem"
          },
          "description": "Groups for configuration"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the connectivity configuration resource."
        },
        "deleteExistingPeering": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "DeleteExistingPeering",
            "modelAsString": true
          },
          "description": "Flag if need to remove current existing peerings."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "connectivityTopology",
        "appliesToGroups"
      ],
      "description": "Properties of network manager connectivity configuration"
    },
    "Hub": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource Id."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type."
        }
      },
      "description": "Hub Item."
    },
    "connectivityGroupItem": {
      "type": "object",
      "properties": {
        "networkGroupId": {
          "type": "string",
          "description": "Network group Id."
        },
        "useHubGateway": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "UseHubGateway",
            "modelAsString": true
          },
          "description": "Flag if need to use hub gateway."
        },
        "isGlobal": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "IsGlobal",
            "modelAsString": true
          },
          "description": "Flag if global is supported."
        },
        "groupConnectivity": {
          "type": "string",
          "enum": [
            "None",
            "DirectlyConnected"
          ],
          "x-ms-enum": {
            "name": "GroupConnectivity",
            "modelAsString": true
          },
          "description": "Group connectivity type."
        }
      },
      "description": "Connectivity group item.",
      "required": [
        "networkGroupId",
        "groupConnectivity"
      ]
    },
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopType": {
          "$ref": "#/definitions/RouteNextHopType",
          "description": "The type of Azure hop the packet should be sent to."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route resource."
        },
        "hasBgpOverride": {
          "type": "boolean",
          "readOnly": true,
          "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource."
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat",
          "description": "Properties of the route."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route resource."
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "disableBgpRoutePropagation": {
          "type": "boolean",
          "description": "Whether to disable the routes learned by BGP on that route table. True means disable."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route table resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the route table."
        }
      },
      "description": "Route Table resource."
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat",
          "description": "Properties of the route table."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Route table resource."
    },
    "RouteTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteTable"
          },
          "description": "A list of route tables in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteTable API service call."
    },
    "RouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "A list of routes in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRoute API service call."
    },
    "RouteNextHopType": {
      "type": "string",
      "description": "The type of Azure hop the packet should be sent to.",
      "enum": [
        "VirtualNetworkGateway",
        "VnetLocal",
        "Internet",
        "VirtualAppliance",
        "None"
      ],
      "x-ms-enum": {
        "name": "RouteNextHopType",
        "modelAsString": true
      }
    },
    "ApplicationSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationSecurityGroupPropertiesFormat",
          "description": "Properties of the application security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "An application security group in a resource group."
    },
    "ApplicationSecurityGroupPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application security group resource."
        }
      },
      "description": "Application security group properties."
    },
    "ApplicationSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "A list of application security groups."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of application security groups."
    },
    "NetworkManager": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkManagerProperties",
          "description": "The network manager properties"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "The Managed Network resource"
    },
    "NetworkManagerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkManager"
          },
          "description": "Gets a page of NetworkManager"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NetworkManager. It contains a list of network managers and a URL link to get the next set of results."
    },
    "NetworkManagerProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the network manager."
        },
        "networkManagerScopes": {
          "type": "object",
          "properties": {
            "managementGroups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of management groups."
            },
            "subscriptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of subscriptions."
            },
            "crossTenantScopes": {
              "readOnly": true,
              "type": "array",
              "x-ms-identifiers": [],
              "items": {
                "$ref": "#/definitions/CrossTenantScopes"
              },
              "description": "List of cross tenant scopes."
            }
          },
          "description": "Scope of Network Manager."
        },
        "networkManagerScopeAccesses": {
          "type": "array",
          "items": {
            "type": "string",
            "$ref": "#/definitions/ConfigurationType"
          },
          "description": "Scope Access."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network manager resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "required": [
        "networkManagerScopes"
      ],
      "description": "Properties of Managed Network"
    },
    "CrossTenantScopes": {
      "type": "object",
      "properties": {
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "Tenant ID."
        },
        "managementGroups": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "List of management groups."
        },
        "subscriptions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "List of subscriptions."
        }
      },
      "description": "Cross tenant scopes."
    },
    "NetworkManagerCommit": {
      "type": "object",
      "properties": {
        "commitId": {
          "type": "string",
          "readOnly": true,
          "description": "Commit Id."
        },
        "targetLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of target locations."
        },
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of configuration ids."
        },
        "commitType": {
          "type": "string",
          "$ref": "#/definitions/ConfigurationType",
          "description": "Commit Type."
        }
      },
      "required": [
        "targetLocations",
        "commitType"
      ],
      "description": "Network Manager Commit."
    },
    "PatchObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object for patch operations."
    },
    "NetworkManagerDeploymentStatusParameter": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of locations."
        },
        "deploymentTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationType"
          },
          "description": "List of deployment types."
        },
        "skipToken": {
          "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
          "type": "string"
        }
      },
      "description": "Network Manager Deployment Status Parameter."
    },
    "NetworkManagerDeploymentStatusListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/NetworkManagerDeploymentStatus"
          },
          "description": "Gets a page of Network Manager Deployment Status"
        },
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "A list of Network Manager Deployment Status"
    },
    "NetworkManagerDeploymentStatus": {
      "type": "object",
      "properties": {
        "commitTime": {
          "type": "string",
          "format": "date-time",
          "description": "Commit Time."
        },
        "region": {
          "type": "string",
          "description": "Region Name."
        },
        "deploymentStatus": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Deploying",
            "Deployed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "DeploymentStatus",
            "modelAsString": true
          },
          "description": "Deployment Status."
        },
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of configuration ids."
        },
        "deploymentType": {
          "type": "string",
          "$ref": "#/definitions/ConfigurationType"
        },
        "errorMessage": {
          "type": "string",
          "description": "Error Message."
        }
      },
      "description": "Network Manager Deployment Status."
    },
    "ConfigurationType": {
      "type": "string",
      "enum": [
        "SecurityAdmin",
        "Connectivity",
        "SecurityUser",
        "Routing"
      ],
      "x-ms-enum": {
        "name": "ConfigurationType",
        "modelAsString": true
      },
      "description": "Configuration Deployment Type."
    },
    "SecurityPartnerProviderPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Security Partner Provider resource."
        },
        "securityProviderName": {
          "description": "The security provider name.",
          "$ref": "#/definitions/SecurityPartnerProvidersecurityProviderName"
        },
        "connectionStatus": {
          "readOnly": true,
          "description": "The connection status with the Security Partner Provider.",
          "$ref": "#/definitions/SecurityPartnerProviderConnectionStatus"
        },
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The virtualHub to which the Security Partner Provider belongs."
        }
      },
      "description": "Properties of the Security Partner Provider."
    },
    "SecurityPartnerProvider": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityPartnerProviderPropertiesFormat",
          "description": "Properties of the Security Partner Provider."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Security Partner Provider resource."
    },
    "SecurityPartnerProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityPartnerProvider"
          },
          "description": "List of Security Partner Providers in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListSecurityPartnerProviders API service call."
    },
    "SecurityPartnerProvidersecurityProviderName": {
      "type": "string",
      "description": "The Security Providers.",
      "enum": [
        "ZScaler",
        "IBoss",
        "Checkpoint"
      ],
      "x-ms-enum": {
        "name": "SecurityProviderName",
        "modelAsString": true
      }
    },
    "SecurityPartnerProviderConnectionStatus": {
      "type": "string",
      "description": "The current state of the connection with Security Partner Provider.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "PartiallyConnected",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "SecurityPartnerProviderConnectionStatus",
        "modelAsString": true
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityPerimeterProperties",
          "description": "The network security perimeter properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The Network Security Perimeter resource"
    },
    "NetworkSecurityPerimeterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeter"
          },
          "description": "Gets a page of NetworkSecurityPerimeter"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NetworkSecurityPerimeter. It contains a list of network security perimeters and a URL link to get the next set of results."
    },
    "NetworkSecurityPerimeterProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/NSPProvisioningState",
          "description": "The provisioning state of the scope assignment resource."
        },
        "perimeterGuid": {
          "readOnly": true,
          "type": "string",
          "description": "perimeter guid of the network security perimeter."
        }
      },
      "description": "Properties of network security perimeter."
    },
    "UpdateTagsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/networkSecurityPerimeters"
              }
            ]
          },
          "description": "Network security perimeter identifier."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "List of tags for Network Security Perimeter"
        }
      },
      "description": "Update tags request."
    },
    "NspProfile": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspProfileProperties",
          "description": "Properties of the network security perimeter profile"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The network security perimeter profile resource"
    },
    "NspProfileListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspProfile"
          },
          "description": "Gets a page of NSP profile"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP profiles. Contains a list of NSP profiles and a URL link to get the next set of results."
    },
    "NspProfileProperties": {
      "type": "object",
      "properties": {
        "accessRulesVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Version number that increases with every update to access rules within the profile."
        },
        "diagnosticSettingsVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Version number that increases with every update to diagnostic settings within the profile."
        }
      },
      "description": "Properties of NSP profile."
    },
    "NspAccessRule": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspAccessRuleProperties",
          "description": "Properties of the NSP access rule."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The NSP access rule resource"
    },
    "NspAccessRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          },
          "description": "Gets a page of NSP access rule"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP access rules. Contains a list of NSP access rules and a URL link to get the next set of results."
    },
    "NspAccessRuleProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/NSPProvisioningState",
          "description": "The provisioning state of the scope assignment resource."
        },
        "direction": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "AccessRuleDirection",
            "modelAsString": true
          },
          "description": "Direction that specifies whether the access rules is inbound/outbound."
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Inbound address prefixes (IPv4/IPv6)"
        },
        "fullyQualifiedDomainNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Outbound rules in fully qualified domain name format."
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/SubscriptionId"
          },
          "description": "List of subscription ids"
        },
        "networkSecurityPerimeters": {
          "readOnly": true,
          "type": "array",
          "items": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/PerimeterBasedAccessRule"
          },
          "description": "Rule specified by the perimeter id."
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Outbound rules in email address format. This access rule type is currently unavailable for use."
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Outbound rules in phone number format. This access rule type is currently unavailable for use."
        },
        "serviceTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Inbound rules of type service tag. This access rule type is currently unavailable for use."
        }
      },
      "description": "Properties of NSP access rule."
    },
    "SubscriptionId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Resources/subscriptions"
              }
            ]
          },
          "description": "Subscription id in the ARM id format."
        }
      }
    },
    "PerimeterBasedAccessRule": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/networkSecurityPerimeters"
              }
            ]
          },
          "description": "NSP id in the ARM id format."
        },
        "perimeterGuid": {
          "readOnly": true,
          "type": "string",
          "description": "Resource guid of the NSP supplied."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Location of the NSP supplied."
        }
      }
    },
    "NspAssociation": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspAssociationProperties",
          "description": "Properties of the NSP resource association."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The NSP resource association resource"
    },
    "NspAssociationsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspAssociation"
          },
          "description": "Gets a page of NSP resource associations"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP resource associations. Contains a list of NSP resource associations and a URL link to get the next set of results."
    },
    "NspAssociationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/NSPProvisioningState",
          "description": "The provisioning state of the resource  association resource."
        },
        "privateLinkResource": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The PaaS resource to be associated."
        },
        "profile": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Profile id to which the PaaS resource is associated."
        },
        "accessMode": {
          "type": "string",
          "enum": [
            "Learning",
            "Enforced",
            "Audit"
          ],
          "x-ms-enum": {
            "name": "AssociationAccessMode",
            "modelAsString": true
          },
          "description": "Access mode on the association."
        },
        "hasProvisioningIssues": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies if there are provisioning issues"
        }
      }
    },
    "NspAssociationReconcile": {
      "type": "object",
      "properties": {},
      "description": "Request object for NSP association."
    },
    "PerimeterAssociableResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PerimeterAssociableResourceProperties",
          "description": "Properties of the perimeter associable resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Identifier of the perimeter associable resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "description": "Resource that is onboarded to use network security perimeter. Also referred as perimeter associable resource."
    },
    "PerimeterAssociableResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerimeterAssociableResource"
          },
          "description": "Gets paged list of perimeter associable resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Paged list of perimeter associable resources."
    },
    "PerimeterAssociableResourceProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "A friendly name for the properties of perimeter associable resources."
        },
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type/provider name."
        },
        "publicDnsZones": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Public DNS zone names of the resources."
        }
      },
      "description": "Properties of the perimeter associable resources."
    },
    "NSPProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Deleting",
        "Accepted",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "nspProvisioningState",
        "modelAsString": true
      }
    },
    "NSPLinkProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state of NSP Link/LinkReference.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Deleting",
        "Accepted",
        "Failed",
        "WaitForRemoteCompletion"
      ],
      "x-ms-enum": {
        "name": "nspLinkProvisioningState",
        "modelAsString": true
      }
    },
    "NspAccessRuleReconcile": {
      "type": "object",
      "properties": {},
      "description": "Request object for NSP reconcile."
    },
    "NspLink": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspLinkProperties",
          "description": "Properties of the network security perimeter link resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The network security perimeter link resource"
    },
    "NspLinkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspLink"
          },
          "description": "Gets a page of NSP Link resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP link resources. Contains a list of NSP link resources and a URL link to get the next set of results."
    },
    "NspLinkProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/NSPLinkProvisioningState",
          "description": "The provisioning state of the NSP Link resource."
        },
        "autoApprovedRemotePerimeterResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/networkSecurityPerimeters"
              }
            ]
          },
          "description": "Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "remotePerimeterGuid": {
          "readOnly": true,
          "type": "string",
          "description": "Remote NSP Guid with which the link gets created."
        },
        "remotePerimeterLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Remote NSP location with which the link gets created."
        },
        "localInboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.",
          "uniqueItems": true
        },
        "localOutboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.",
          "uniqueItems": true
        },
        "remoteInboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.",
          "uniqueItems": true
        },
        "remoteOutboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.",
          "uniqueItems": true
        },
        "description": {
          "type": "string",
          "description": "A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The NSP link state.",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "nspLinkStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of NSP Link resource."
    },
    "NspLinkReference": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspLinkReferenceProperties",
          "description": "Properties of the network security perimeter linkReference resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The network security perimeter linkReference resource"
    },
    "NspLinkReferenceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspLinkReference"
          },
          "description": "Gets a page of NSP LinkReference resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP linkReference resources. Contains a list of NSP linkReference resources and a URL link to get the next set of results."
    },
    "NspLinkReferenceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/NSPLinkProvisioningState",
          "description": "The provisioning state of the NSP LinkReference resource."
        },
        "remotePerimeterResourceId": {
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/networkSecurityPerimeters"
              }
            ]
          },
          "description": "Perimeter ARM Id for the remote NSP with which the link is created."
        },
        "remotePerimeterGuid": {
          "readOnly": true,
          "type": "string",
          "description": "Remote NSP Guid with which the link is created."
        },
        "remotePerimeterLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Remote NSP location with which the link gets created."
        },
        "localInboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.",
          "uniqueItems": true
        },
        "localOutboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.",
          "uniqueItems": true
        },
        "remoteInboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter."
        },
        "remoteOutboundProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto Approved'."
        },
        "status": {
          "type": "string",
          "description": "The NSP linkReference state. It cannot be changed if link is created in auto-approval mode.",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "nspLinkStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of NSP LinkReference resource."
    },
    "NspLoggingConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NspLoggingConfigurationProperties",
          "description": "Properties of the NSP logging configuration."
        }
      },
      "description": "The NSP logging configuration",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NspLoggingConfigurationProperties": {
      "type": "object",
      "properties": {
        "enabledLogCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The log categories to enable in the NSP logging configuration."
        },
        "version": {
          "type": "string",
          "description": "The version of the NSP logging configuration."
        }
      },
      "description": "The NSP logging configuration properties."
    },
    "NspLoggingConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspLoggingConfiguration"
          },
          "description": "Gets a page of NSP logging configuration"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next page of results."
        }
      },
      "description": "Result of the request to list NSP logging configuration. Contains a list of NSP logging configurations and a URL link to get the next set of results."
    },
    "ServiceTagsListResult": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the cloud."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The ID of the cloud."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The azure resource type."
        },
        "changeNumber": {
          "type": "string",
          "readOnly": true,
          "description": "The iteration number."
        },
        "cloud": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the cloud."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTagInformation"
          },
          "readOnly": true,
          "description": "The list of service tag information resources."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get next page of service tag information resources."
        }
      },
      "description": "Response for the ListServiceTags API service call."
    },
    "ServiceTagInformationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTagInformation"
          },
          "description": "The list of service tag information resources."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for Get ServiceTagInformation API service call. Retrieves the list of service tag information resources."
    },
    "ServiceTagInformation": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceTagInformationPropertiesFormat",
          "readOnly": true,
          "description": "Properties of the service tag information."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of service tag."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The ID of service tag."
        },
        "serviceTagChangeNumber": {
          "type": "string",
          "readOnly": true,
          "description": "The iteration number of service tag object for region."
        }
      },
      "description": "The service tag information."
    },
    "ServiceTagInformationPropertiesFormat": {
      "properties": {
        "changeNumber": {
          "type": "string",
          "readOnly": true,
          "description": "The iteration number of service tag."
        },
        "region": {
          "type": "string",
          "readOnly": true,
          "description": "The region of service tag."
        },
        "systemService": {
          "type": "string",
          "readOnly": true,
          "description": "The name of system service."
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "The list of IP address prefixes."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the service tag."
        }
      },
      "description": "Properties of the service tag information."
    },
    "NetworkGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkGroupProperties",
          "description": "The Network Group properties"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "The network group resource"
    },
    "NetworkGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkGroup"
          },
          "description": "Gets a page of NetworkGroup"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Result of the request to list NetworkGroup. It contains a list of groups and a URL link to get the next set of results."
    },
    "NetworkGroupProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the network group."
        },
        "memberType": {
          "$ref": "#/definitions/GroupMemberType",
          "description": "The type of the group member."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the scope assignment resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier for this resource."
        }
      },
      "description": "Properties of network group"
    },
    "GroupMemberType": {
      "type": "string",
      "description": "Network Group member type",
      "enum": [
        "VirtualNetwork",
        "Subnet"
      ],
      "x-ms-enum": {
        "name": "GroupMemberType",
        "modelAsString": true
      }
    },
    "StaticMember": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StaticMemberProperties",
          "description": "The Static Member properties"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ChildResource"
        }
      ],
      "description": "StaticMember Item."
    },
    "StaticMemberListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticMember"
          },
          "description": "Gets a page of StaticMember"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Result of the request to list StaticMember. It contains a list of groups and a URL link to get the next set of results."
    },
    "StaticMemberProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource Id."
        },
        "region": {
          "readOnly": true,
          "type": "string",
          "description": "Resource region."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the scope assignment resource."
        }
      },
      "description": "Properties of static member."
    },
    "QueryRequestOptions": {
      "type": "object",
      "properties": {
        "skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        }
      },
      "description": "Query Request Options"
    },
    "DdosProtectionPlan": {
      "description": "A DDoS protection plan in a resource group.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DdosProtectionPlanPropertiesFormat",
          "description": "Properties of the DDoS protection plan."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      }
    },
    "DdosProtectionPlanPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the DDoS protection plan resource."
        },
        "publicIPAddresses": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The list of public IPs associated with the DDoS protection plan resource. This list is read-only."
        },
        "virtualNetworks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "The list of virtual networks associated with the DDoS protection plan resource. This list is read-only."
        }
      },
      "description": "DDoS protection plan properties."
    },
    "DdosProtectionPlanListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DdosProtectionPlan"
          },
          "description": "A list of DDoS protection plans."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of DDoS protection plans."
    },
    "PublicIPAddressSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a public IP address SKU.",
          "enum": [
            "Basic",
            "Standard",
            "StandardV2"
          ],
          "x-ms-enum": {
            "name": "PublicIPAddressSkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of a public IP address SKU.",
          "enum": [
            "Regional",
            "Global"
          ],
          "x-ms-enum": {
            "name": "PublicIPAddressSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of a public IP address."
    },
    "PublicIPAddressPropertiesFormat": {
      "properties": {
        "publicIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The public IP address allocation method."
        },
        "publicIPAddressVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "The public IP address version."
        },
        "ipConfiguration": {
          "readOnly": true,
          "$ref": "./networkInterface.json#/definitions/IPConfiguration",
          "description": "The IP configuration associated with the public IP address."
        },
        "dnsSettings": {
          "$ref": "#/definitions/PublicIPAddressDnsSettings",
          "description": "The FQDN of the DNS record associated with the public IP address."
        },
        "ddosSettings": {
          "$ref": "#/definitions/DdosSettings",
          "description": "The DDoS protection custom policy associated with the public IP address."
        },
        "ipTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpTag"
          },
          "description": "The list of tags associated with the public IP address."
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address associated with the public IP address resource."
        },
        "publicIPPrefix": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Public IP Prefix this Public IP Address should be allocated from."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The idle timeout of the public IP address."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the public IP address resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the public IP address resource."
        },
        "servicePublicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The service public IP address of the public IP address resource."
        },
        "natGateway": {
          "$ref": "./natGateway.json#/definitions/NatGateway",
          "description": "The NatGateway for the Public IP address."
        },
        "migrationPhase": {
          "type": "string",
          "description": "Migration phase of Public IP Address.",
          "enum": [
            "None",
            "Prepare",
            "Commit",
            "Abort",
            "Committed"
          ],
          "x-ms-enum": {
            "name": "PublicIPAddressMigrationPhase",
            "modelAsString": true
          }
        },
        "linkedPublicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The linked public IP address of the public IP address resource."
        },
        "deleteOption": {
          "type": "string",
          "description": "Specify what happens to the public IP address when the VM using it is deleted",
          "enum": [
            "Delete",
            "Detach"
          ],
          "x-ms-enum": {
            "name": "DeleteOptions",
            "modelAsString": true
          }
        }
      },
      "description": "Public IP address properties."
    },
    "PublicIPAddress": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the public ip address."
        },
        "sku": {
          "$ref": "#/definitions/PublicIPAddressSku",
          "description": "The public IP address SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPAddressPropertiesFormat",
          "description": "Public IP address properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Public IP address resource."
    },
    "PublicIPAddressListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicIPAddress"
          },
          "description": "A list of public IP addresses that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPublicIpAddresses API service call."
    },
    "PublicIPAddressDnsSettings": {
      "properties": {
        "domainNameLabel": {
          "type": "string",
          "description": "The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."
        },
        "domainNameLabelScope": {
          "type": "string",
          "description": "The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.",
          "enum": [
            "TenantReuse",
            "SubscriptionReuse",
            "ResourceGroupReuse",
            "NoReuse"
          ],
          "x-ms-enum": {
            "name": "PublicIpAddressDnsSettingsDomainNameLabelScope",
            "modelAsString": false
          }
        },
        "fqdn": {
          "type": "string",
          "description": "The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."
        },
        "reverseFqdn": {
          "type": "string",
          "description": "The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN."
        }
      },
      "description": "Contains FQDN of the DNS record associated with the public IP address."
    },
    "DdosSettings": {
      "properties": {
        "protectionMode": {
          "readOnly": false,
          "type": "string",
          "enum": [
            "VirtualNetworkInherited",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DdosSettingsProtectionMode",
            "modelAsString": true
          },
          "description": "The DDoS protection mode of the public IP"
        },
        "ddosProtectionPlan": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled"
        }
      },
      "description": "Contains the DDoS protection settings of the public IP."
    },
    "IpTag": {
      "properties": {
        "ipTagType": {
          "type": "string",
          "description": "The IP tag type. Example: FirstPartyUsage."
        },
        "tag": {
          "type": "string",
          "description": "The value of the IP tag associated with the public IP. Example: SQL."
        }
      },
      "description": "Contains the IpTag associated with the object."
    },
    "PublicIpDdosProtectionStatusResult": {
      "type": "object",
      "properties": {
        "publicIpAddressId": {
          "type": "string",
          "description": "Public IP ARM resource ID"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "IP Address of the Public IP Resource"
        },
        "isWorkloadProtected": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ],
          "x-ms-enum": {
            "name": "IsWorkloadProtected",
            "modelAsString": true
          },
          "description": "Value indicating whether the IP address is DDoS workload protected or not."
        },
        "ddosProtectionPlanId": {
          "type": "string",
          "description": " DDoS protection plan Resource Id of a if IP address is protected through a plan."
        }
      },
      "description": "Response for GetPublicIpAddressDdosProtectionStatusOperation API service call."
    },
    "VirtualRouter": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualRouterPropertiesFormat",
          "description": "Properties of the Virtual Router."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VirtualRouter Resource."
    },
    "VirtualRouterPropertiesFormat": {
      "properties": {
        "virtualRouterAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "VirtualRouter ASN."
        },
        "virtualRouterIps": {
          "type": "array",
          "readOnly": false,
          "description": "VirtualRouter IPs.",
          "items": {
            "type": "string"
          }
        },
        "hostedSubnet": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Subnet on which VirtualRouter is hosted."
        },
        "hostedGateway": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Gateway on which VirtualRouter is hosted."
        },
        "peerings": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to VirtualRouterPeerings.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        }
      },
      "description": "Virtual Router definition."
    },
    "VirtualRouterPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualRouterPeeringProperties",
          "description": "The properties of the Virtual Router Peering."
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual router peering that is unique within a virtual router."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Peering type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Virtual Router Peering resource."
    },
    "VirtualRouterPeeringProperties": {
      "properties": {
        "peerAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Peer ASN."
        },
        "peerIp": {
          "type": "string",
          "readOnly": false,
          "description": "Peer IP."
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        }
      },
      "description": "Properties of the rule group."
    },
    "VirtualRouterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualRouter"
          },
          "description": "List of Virtual Routers."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualRouters API service call."
    },
    "VirtualRouterPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualRouterPeering"
          },
          "description": "List of VirtualRouterPeerings in a VirtualRouter."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualRouterPeerings API service call."
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationPropertiesFormat": {
      "description": "Description of operation properties format.",
      "properties": {
        "serviceSpecification": {
          "description": "Specification of the service.",
          "properties": {
            "metricSpecifications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSpecification"
              },
              "description": "Operation service specification."
            },
            "logSpecifications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogSpecification"
              },
              "description": "Operation log specification."
            }
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Description of logging specification.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the specification."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the specification."
        },
        "blobDuration": {
          "type": "string",
          "description": "Duration of the blob."
        }
      }
    },
    "MetricSpecification": {
      "description": "Description of metrics specification.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the metric."
        },
        "displayDescription": {
          "type": "string",
          "description": "The description of the metric."
        },
        "unit": {
          "type": "string",
          "description": "Units the metric to be displayed in."
        },
        "aggregationType": {
          "type": "string",
          "description": "The aggregation type."
        },
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "description": "List of availability."
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Whether regional MDM account enabled."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Whether gaps would be filled with zeros."
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "Pattern for the filter of the metric."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "description": "List of dimensions."
        },
        "isInternal": {
          "type": "boolean",
          "description": "Whether the metric is internal."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "The resource Id dimension name override."
        }
      }
    },
    "Dimension": {
      "description": "Dimension of the metric.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dimension."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the dimension."
        },
        "internalName": {
          "type": "string",
          "description": "The internal name of the dimension."
        }
      }
    },
    "Availability": {
      "description": "Availability of the metric.",
      "properties": {
        "timeGrain": {
          "type": "string",
          "description": "The time grain of the availability."
        },
        "retention": {
          "type": "string",
          "description": "The retention of the availability."
        },
        "blobDuration": {
          "type": "string",
          "description": "Duration of the availability blob."
        }
      }
    },
    "IpAllocationPropertiesFormat": {
      "properties": {
        "subnet": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The Subnet that using the prefix of this IpAllocation resource."
        },
        "virtualNetwork": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualNetwork that using the prefix of this IpAllocation resource."
        },
        "type": {
          "$ref": "#/definitions/IpAllocationType",
          "description": "The type for the IpAllocation."
        },
        "prefix": {
          "type": "string",
          "description": "The address prefix for the IpAllocation."
        },
        "prefixLength": {
          "type": "integer",
          "x-nullable": true,
          "default": 0,
          "description": "The address prefix length for the IpAllocation."
        },
        "prefixType": {
          "$ref": "./network.json#/definitions/IPVersion",
          "default": null,
          "description": "The address prefix Type for the IpAllocation."
        },
        "ipamAllocationId": {
          "type": "string",
          "description": "The IPAM allocation ID."
        },
        "allocationTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "IpAllocation tags."
        }
      },
      "description": "Properties of the IpAllocation."
    },
    "IpAllocation": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IpAllocationPropertiesFormat",
          "description": "Properties of the IpAllocation."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "IpAllocation resource."
    },
    "IpAllocationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpAllocation"
          },
          "description": "A list of IpAllocation resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListIpAllocations API service call."
    },
    "IpAllocationType": {
      "type": "string",
      "description": "IpAllocation type.",
      "enum": [
        "Undefined",
        "Hypernet"
      ],
      "x-ms-enum": {
        "name": "IpAllocationType",
        "modelAsString": true
      }
    },
    "NetworkProfilePropertiesFormat": {
      "properties": {
        "containerNetworkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerNetworkInterface"
          },
          "description": "List of child container network interfaces."
        },
        "containerNetworkInterfaceConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerNetworkInterfaceConfiguration"
          },
          "description": "List of chid container network interface configurations."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the network profile resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network profile resource."
        }
      },
      "description": "Network profile properties."
    },
    "NetworkProfile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkProfilePropertiesFormat",
          "description": "Network profile properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Network profile resource."
    },
    "NetworkProfileListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkProfile"
          },
          "description": "A list of network profiles that exist in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkProfiles API service call."
    },
    "ContainerNetworkInterfacePropertiesFormat": {
      "properties": {
        "containerNetworkInterfaceConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/ContainerNetworkInterfaceConfiguration",
          "description": "Container network interface configuration from which this container network interface is created."
        },
        "container": {
          "$ref": "#/definitions/Container",
          "description": "Reference to the container to which this container network interface is attached."
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerNetworkInterfaceIpConfiguration"
          },
          "description": "Reference to the ip configuration on this container nic."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the container network interface resource."
        }
      },
      "description": "Properties of container network interface."
    },
    "ContainerNetworkInterface": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContainerNetworkInterfacePropertiesFormat",
          "description": "Container network interface properties."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Container network interface child resource."
    },
    "ContainerNetworkInterfaceConfigurationPropertiesFormat": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfigurationProfile"
          },
          "description": "A list of ip configurations of the container network interface configuration."
        },
        "containerNetworkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "A list of container network interfaces created from this container network interface configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the container network interface configuration resource."
        }
      },
      "description": "Container network interface configuration properties."
    },
    "ContainerNetworkInterfaceConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContainerNetworkInterfaceConfigurationPropertiesFormat",
          "description": "Container network interface configuration properties."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Container network interface configuration child resource."
    },
    "IPConfigurationProfilePropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource to create a container network interface ip configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration profile resource."
        }
      },
      "description": "IP configuration profile properties."
    },
    "IPConfigurationProfile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationProfilePropertiesFormat",
          "description": "Properties of the IP configuration profile."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration profile child resource."
    },
    "Container": {
      "properties": {},
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Reference to container resource in remote resource provider."
    },
    "ContainerNetworkInterfaceIpConfigurationPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the container network interface IP configuration resource."
        }
      },
      "description": "Properties of the container network interface IP configuration."
    },
    "ContainerNetworkInterfaceIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContainerNetworkInterfaceIpConfigurationPropertiesFormat",
          "description": "Properties of the container network interface IP configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "The ip configuration for a container network interface."
    },
    "PublicIPPrefixSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a public IP prefix SKU.",
          "enum": [
            "Standard",
            "StandardV2"
          ],
          "x-ms-enum": {
            "name": "PublicIPPrefixSkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of a public IP prefix SKU.",
          "enum": [
            "Regional",
            "Global"
          ],
          "x-ms-enum": {
            "name": "PublicIPPrefixSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of a public IP prefix."
    },
    "PublicIPPrefixPropertiesFormat": {
      "properties": {
        "publicIPAddressVersion": {
          "$ref": "./network.json#/definitions/IPVersion",
          "description": "The public IP address version."
        },
        "ipTags": {
          "type": "array",
          "items": {
            "$ref": "./publicIpAddress.json#/definitions/IpTag"
          },
          "description": "The list of tags associated with the public IP prefix."
        },
        "prefixLength": {
          "type": "integer",
          "format": "int32",
          "description": "The Length of the Public IP Prefix."
        },
        "ipPrefix": {
          "readOnly": true,
          "type": "string",
          "description": "The allocated Prefix."
        },
        "publicIPAddresses": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencedPublicIpAddress"
          },
          "description": "The list of all referenced PublicIPAddresses."
        },
        "loadBalancerFrontendIpConfiguration": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference to load balancer frontend IP configuration associated with the public IP prefix."
        },
        "customIPPrefix": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The customIpPrefix that this prefix is associated with."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the public IP prefix resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the public IP prefix resource."
        },
        "natGateway": {
          "$ref": "./natGateway.json#/definitions/NatGateway",
          "description": "NatGateway of Public IP Prefix."
        }
      },
      "description": "Public IP prefix properties."
    },
    "PublicIPPrefix": {
      "properties": {
        "extendedLocation": {
          "$ref": "./network.json#/definitions/ExtendedLocation",
          "description": "The extended location of the public ip address."
        },
        "sku": {
          "$ref": "#/definitions/PublicIPPrefixSku",
          "description": "The public IP prefix SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPPrefixPropertiesFormat",
          "description": "Public IP prefix properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Public IP prefix resource."
    },
    "PublicIPPrefixListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicIPPrefix"
          },
          "description": "A list of public IP prefixes that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPublicIpPrefixes API service call."
    },
    "ReferencedPublicIpAddress": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The PublicIPAddress Reference."
        }
      },
      "description": "Reference to a public IP address."
    },
    "ApplicationGatewayWafDynamicManifestResultList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayWafDynamicManifestResult"
          },
          "description": "The list of application gateway waf manifest."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "type": "object",
      "description": "Response for ApplicationGatewayWafDynamicManifests API service call."
    },
    "ApplicationGatewayWafDynamicManifestResult": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayWafDynamicManifestPropertiesResult",
          "description": "Properties of the ApplicationGatewayWafDynamicManifest ."
        }
      },
      "type": "object",
      "description": "Response for ApplicationGatewayWafDynamicManifest API service call."
    },
    "ApplicationGatewayWafDynamicManifestPropertiesResult": {
      "description": "Properties of ApplicationGatewayWafDynamicManifest.",
      "type": "object",
      "properties": {
        "defaultRuleSet": {
          "description": "The default ruleset.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DefaultRuleSetPropertyFormat"
        },
        "availableRuleSets": {
          "description": "The available rulesets.",
          "x-ms-client-flatten": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallManifestRuleSet"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DefaultRuleSetPropertyFormat": {
      "description": "the default web application firewall rule set.",
      "type": "object",
      "properties": {
        "ruleSetType": {
          "description": "The type of the web application firewall rule set.",
          "type": "string"
        },
        "ruleSetVersion": {
          "description": "The version of the web application firewall rule set type.",
          "type": "string"
        }
      }
    },
    "ApplicationGatewayFirewallManifestRuleSet": {
      "description": "Properties of the web application firewall rule set.",
      "type": "object",
      "properties": {
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the web application firewall rule set type."
        },
        "status": {
          "type": "string",
          "description": "The rule set status",
          "enum": [
            "Preview",
            "GA",
            "Supported",
            "Deprecated"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRuleSetStatusOptions",
            "modelAsString": true
          }
        },
        "tiers": {
          "type": "array",
          "description": "Tier of an application gateway that support the rule set.",
          "items": {
            "type": "string",
            "enum": [
              "Standard",
              "WAF",
              "Standard_v2",
              "WAF_v2"
            ],
            "x-ms-enum": {
              "name": "ApplicationGatewayTierTypes",
              "modelAsString": true
            }
          }
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "applicationGateway.json#/definitions/ApplicationGatewayFirewallRuleGroup"
          },
          "description": "The rule groups of the web application firewall rule set.",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion",
        "ruleGroups"
      ]
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}