{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.SecurityInsights",
    "version": "2025-06-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/listRepositories": {
      "post": {
        "x-ms-examples": {
          "Get repository list.": {
            "$ref": "./examples/repositories/GetRepositories.json"
          }
        },
        "tags": [
          "Repositories"
        ],
        "description": "Gets a list of repositories metadata.",
        "operationId": "SourceControl_listRepositories",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RepositoryAccess"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RepoList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols": {
      "get": {
        "x-ms-examples": {
          "Get all source controls.": {
            "$ref": "./examples/sourcecontrols/GetSourceControls.json"
          }
        },
        "tags": [
          "SourceControls"
        ],
        "description": "Gets all source controls, without source control items.",
        "operationId": "SourceControls_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControlList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols/{sourceControlId}": {
      "get": {
        "x-ms-examples": {
          "Get a source control.": {
            "$ref": "./examples/sourcecontrols/GetSourceControlById.json"
          }
        },
        "tags": [
          "SourceControls"
        ],
        "description": "Gets a source control byt its identifier.",
        "operationId": "SourceControls_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SourceControlIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a source control.": {
            "$ref": "./examples/sourcecontrols/CreateSourceControl.json"
          }
        },
        "tags": [
          "SourceControls"
        ],
        "description": "Creates a source control.",
        "operationId": "SourceControls_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SourceControlIdParameter"
          },
          {
            "$ref": "#/parameters/SourceControl"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols/{sourceControlId}/delete": {
      "post": {
        "x-ms-examples": {
          "Delete a source control.": {
            "$ref": "./examples/sourcecontrols/DeleteSourceControl.json"
          }
        },
        "tags": [
          "SourceControls"
        ],
        "description": "Delete a source control.",
        "operationId": "SourceControls_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SourceControlIdParameter"
          },
          {
            "$ref": "#/parameters/RepositoryAccess"
          }
        ],
        "responses": {
          "200": {
            "description": "Source control deleted.",
            "schema": {
              "$ref": "#/definitions/Warning"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata": {
      "get": {
        "x-ms-examples": {
          "Get all metadata.": {
            "$ref": "./examples/metadata/GetAllMetadata.json"
          },
          "Get all metadata with OData filter/orderby/skip/top": {
            "$ref": "./examples/metadata/GetAllMetadataOData.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "List of all metadata",
        "operationId": "Metadata_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkip"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata/{metadataName}": {
      "get": {
        "x-ms-examples": {
          "Get single metadata by name": {
            "$ref": "./examples/metadata/GetMetadata.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Get a Metadata.",
        "operationId": "Metadata_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete metadata.": {
            "$ref": "./examples/metadata/DeleteMetadata.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Delete a Metadata.",
        "operationId": "Metadata_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create/update full metadata.": {
            "$ref": "./examples/metadata/PutMetadata.json"
          },
          "Create/update minimal metadata.": {
            "$ref": "./examples/metadata/PutMetadataMinimal.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Create a Metadata.",
        "operationId": "Metadata_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          },
          {
            "$ref": "#/parameters/Metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "x-ms-examples": {
          "Update metadata.": {
            "$ref": "./examples/metadata/PatchMetadata.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Update an existing Metadata.",
        "operationId": "Metadata_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          },
          {
            "$ref": "#/parameters/MetadataPatch"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentProductTemplates": {
      "get": {
        "x-ms-examples": {
          "Get all installed templates.": {
            "$ref": "./examples/contentTemplates/GetProductTemplates.json"
          }
        },
        "tags": [
          "ContentProductTemplates"
        ],
        "description": "Gets all templates in the catalog.",
        "operationId": "ProductTemplates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataSearch"
          },
          {
            "$ref": "#/parameters/ODataCount"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkip"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/productTemplateList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentproducttemplates/{templateId}": {
      "get": {
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/GetProductTemplateById.json"
          }
        },
        "tags": [
          "ContentProductTemplates"
        ],
        "description": "Gets a template by its identifier.",
        "operationId": "ProductTemplate_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/productTemplateModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules": {
      "get": {
        "x-ms-examples": {
          "Get all alert rules.": {
            "$ref": "./examples/alertRules/GetAllAlertRules.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets all alert rules.",
        "operationId": "AlertRules_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/AlertRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}": {
      "get": {
        "x-ms-examples": {
          "Get a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/GetScheduledAlertRule.json"
          },
          "Get a Fusion alert rule.": {
            "$ref": "./examples/alertRules/GetFusionAlertRule.json"
          },
          "Get a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/GetMicrosoftSecurityIncidentCreationAlertRule.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets the alert rule.",
        "operationId": "AlertRules_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/CreateScheduledAlertRule.json"
          },
          "Creates or updates a Fusion alert rule.": {
            "$ref": "./examples/alertRules/CreateFusionAlertRule.json"
          },
          "Creates or updates a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/CreateMicrosoftSecurityIncidentCreationAlertRule.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Creates or updates the alert rule.",
        "operationId": "AlertRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/AlertRule"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an alert rule.": {
            "$ref": "./examples/alertRules/DeleteAlertRule.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Delete the alert rule.",
        "operationId": "AlertRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions": {
      "get": {
        "x-ms-examples": {
          "Get all actions of alert rule.": {
            "$ref": "./examples/actions/GetAllActionsByAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets all actions of alert rule.",
        "operationId": "Actions_ListByAlertRule",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/ActionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions/{actionId}": {
      "get": {
        "x-ms-examples": {
          "Get an action of alert rule.": {
            "$ref": "./examples/actions/GetActionOfAlertRuleById.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets the action of alert rule.",
        "operationId": "Actions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an action of alert rule.": {
            "$ref": "./examples/actions/CreateActionOfAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Creates or updates the action of alert rule.",
        "operationId": "Actions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          },
          {
            "$ref": "#/parameters/Action"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an action of alert rule.": {
            "$ref": "./examples/actions/DeleteActionOfAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Delete the action of alert rule.",
        "operationId": "Actions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates": {
      "get": {
        "x-ms-examples": {
          "Get all alert rule templates.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplates.json"
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets all alert rule templates.",
        "operationId": "AlertRuleTemplates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplatesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates/{alertRuleTemplateId}": {
      "get": {
        "x-ms-examples": {
          "Get alert rule template by Id.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplateById.json"
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets the alert rule template.",
        "operationId": "AlertRuleTemplates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AlertRuleTemplateId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/createIndicator": {
      "post": {
        "x-ms-examples": {
          "Create a new Threat Intelligence": {
            "$ref": "./examples/threatintelligence/CreateThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Create a new threat intelligence indicator.",
        "operationId": "ThreatIntelligenceIndicator_CreateIndicator",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to create indicators.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators": {
      "get": {
        "x-ms-examples": {
          "Get all threat intelligence indicators": {
            "$ref": "./examples/threatintelligence/GetThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Get all threat intelligence indicators.",
        "operationId": "ThreatIntelligenceIndicators_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to get indicators.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}": {
      "get": {
        "x-ms-examples": {
          "View a threat intelligence indicator by name": {
            "$ref": "./examples/threatintelligence/GetThreatIntelligenceById.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "View a threat intelligence indicator by name.",
        "operationId": "ThreatIntelligenceIndicator_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to view an indicator.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Update a threat Intelligence indicator": {
            "$ref": "./examples/threatintelligence/UpdateThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Update a threat Intelligence indicator.",
        "operationId": "ThreatIntelligenceIndicator_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to update an indicator.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a threat intelligence indicator": {
            "$ref": "./examples/threatintelligence/DeleteThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Delete a threat intelligence indicator.",
        "operationId": "ThreatIntelligenceIndicator_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed to delete an indicator.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/queryIndicators": {
      "post": {
        "x-ms-examples": {
          "Query threat intelligence indicators as per filtering criteria": {
            "$ref": "./examples/threatintelligence/QueryThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Query threat intelligence indicators as per filtering criteria.",
        "operationId": "ThreatIntelligenceIndicator_QueryIndicators",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceFilteringCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/metrics": {
      "get": {
        "x-ms-examples": {
          "Get threat intelligence indicators metrics.": {
            "$ref": "./examples/threatintelligence/CollectThreatIntelligenceMetrics.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Get threat intelligence indicators metrics (Indicators counts by Type, Threat Type, Source).",
        "operationId": "ThreatIntelligenceIndicatorMetrics_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceMetricsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to get metrics.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}/appendTags": {
      "post": {
        "x-ms-examples": {
          "Append tags to a threat intelligence indicator": {
            "$ref": "./examples/threatintelligence/AppendTagsThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Append tags to a threat intelligence indicator.",
        "operationId": "ThreatIntelligenceIndicator_AppendTags",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceAppendTags"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed to append tags.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}/replaceTags": {
      "post": {
        "x-ms-examples": {
          "Replace tags to a Threat Intelligence": {
            "$ref": "./examples/threatintelligence/ReplaceTagsThreatIntelligence.json"
          }
        },
        "tags": [
          "ThreatIntelligence"
        ],
        "description": "Replace tags added to a threat intelligence indicator.",
        "operationId": "ThreatIntelligenceIndicator_ReplaceTags",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceName"
          },
          {
            "$ref": "#/parameters/ThreatIntelligenceReplaceTags"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed to replace tags.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.SecurityInsights/operations": {
      "get": {
        "x-ms-examples": {
          "Get all operations.": {
            "$ref": "./examples/operations/ListOperations.json"
          }
        },
        "operationId": "Operations_List",
        "description": "Lists all operations available Azure Security Insights Resource Provider.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully retrieved operations list.",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectorDefinitions": {
      "get": {
        "x-ms-examples": {
          "Get all data connector definitions.": {
            "$ref": "./examples/dataConnectorDefinitions/GetDataConnectorDefinitions.json"
          }
        },
        "tags": [
          "ConnectorDefinitions"
        ],
        "description": "Gets all data connector definitions.",
        "operationId": "DataConnectorDefinitions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinitionArmCollectionWrapper"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectorDefinitions/{dataConnectorDefinitionName}": {
      "get": {
        "x-ms-examples": {
          "Get customize data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/GetCustomizableDataConnectorDefinitionById.json"
          }
        },
        "tags": [
          "ConnectorDefinitions"
        ],
        "description": "Gets a data connector definition.",
        "operationId": "DataConnectorDefinitions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/dataConnectorDefinitionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/CreateCustomizableDataConnectorDefinition.json"
          }
        },
        "tags": [
          "ConnectorDefinitions"
        ],
        "description": "Creates or updates the data connector definition.",
        "operationId": "DataConnectorDefinitions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/dataConnectorDefinitionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "connectorDefinitionInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            },
            "description": "The data connector definition",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/DeleteDataConnectorDefinitionById.json"
          }
        },
        "tags": [
          "ConnectorDefinitions"
        ],
        "description": "Delete the data connector definition.",
        "operationId": "DataConnectorDefinitions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/dataConnectorDefinitionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents": {
      "get": {
        "x-ms-examples": {
          "Get all incidents.": {
            "$ref": "./examples/incidents/GetIncidents.json"
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Gets all incidents.",
        "operationId": "Incidents_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Returns only the first n results. Optional.",
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/IncidentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}": {
      "get": {
        "x-ms-examples": {
          "Get an incident.": {
            "$ref": "./examples/incidents/GetIncidentById.json"
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Gets a given incident.",
        "operationId": "Incidents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an incident.": {
            "$ref": "./examples/incidents/CreateIncident.json"
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Creates or updates an incident.",
        "operationId": "Incidents_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/Incident"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an incident.": {
            "$ref": "./examples/incidents/DeleteIncident.json"
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Deletes a given incident.",
        "operationId": "Incidents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/alerts": {
      "post": {
        "x-ms-examples": {
          "Get all incident alerts.": {
            "$ref": "./examples/incidents/GetAllIncidentAlerts.json"
          }
        },
        "tags": [
          "IncidentAlerts"
        ],
        "description": "Gets all alerts for an incident.",
        "operationId": "Incidents_ListAlerts",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentAlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/bookmarks": {
      "post": {
        "x-ms-examples": {
          "Get all incident bookmarks.": {
            "$ref": "./examples/incidents/GetAllIncidentBookmarks.json"
          }
        },
        "tags": [
          "IncidentBookmarks"
        ],
        "description": "Gets all bookmarks for an incident.",
        "operationId": "Incidents_ListBookmarks",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentBookmarkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments": {
      "get": {
        "x-ms-examples": {
          "Get all incident comments.": {
            "$ref": "./examples/incidents/comments/GetAllIncidentComments.json"
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets all comments for a given incident.",
        "operationId": "IncidentComments_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/IncidentCommentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-odata": "#/definitions/IncidentComment",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments/{incidentCommentId}": {
      "get": {
        "x-ms-examples": {
          "Get an incident comment.": {
            "$ref": "./examples/incidents/comments/GetIncidentCommentById.json"
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets a comment for a given incident.",
        "operationId": "IncidentComments_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentCommentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an incident comment.": {
            "$ref": "./examples/incidents/comments/CreateIncidentComment.json"
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Creates or updates a comment for a given incident.",
        "operationId": "IncidentComments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentCommentId"
          },
          {
            "$ref": "#/parameters/IncidentComment"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete the incident comment.": {
            "$ref": "./examples/incidents/comments/DeleteIncidentComment.json"
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Deletes a comment for a given incident.",
        "operationId": "IncidentComments_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentCommentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/entities": {
      "post": {
        "x-ms-examples": {
          "Gets all incident related entities": {
            "$ref": "./examples/incidents/GetAllIncidentEntities.json"
          }
        },
        "tags": [
          "IncidentEntities"
        ],
        "description": "Gets all entities for an incident.",
        "operationId": "Incidents_ListEntities",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentEntitiesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations": {
      "get": {
        "x-ms-examples": {
          "Get all incident relations.": {
            "$ref": "./examples/incidents/relations/GetAllIncidentRelations.json"
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Gets all relations for a given incident.",
        "operationId": "IncidentRelations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-odata": "#/definitions/Relation",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations/{relationName}": {
      "get": {
        "x-ms-examples": {
          "Get an incident relation.": {
            "$ref": "./examples/incidents/relations/GetIncidentRelationByName.json"
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Gets a relation for a given incident.",
        "operationId": "IncidentRelations_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/RelationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an incident relation.": {
            "$ref": "./examples/incidents/relations/CreateIncidentRelation.json"
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Creates or updates a relation for a given incident.",
        "operationId": "IncidentRelations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/RelationName"
          },
          {
            "$ref": "#/parameters/Relation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete the incident relation.": {
            "$ref": "./examples/incidents/relations/DeleteIncidentRelation.json"
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Deletes a relation for a given incident.",
        "operationId": "IncidentRelations_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/RelationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/tasks": {
      "get": {
        "tags": [
          "IncidentTasks"
        ],
        "description": "Gets all incident tasks.",
        "operationId": "IncidentTasks_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentTaskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IncidentTasks_List": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/tasks/{incidentTaskId}": {
      "get": {
        "tags": [
          "IncidentTasks"
        ],
        "description": "Gets an incident task.",
        "operationId": "IncidentTasks_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentTaskId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_Get": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "IncidentTasks"
        ],
        "description": "Creates or updates the incident task.",
        "operationId": "IncidentTasks_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentTaskId"
          },
          {
            "$ref": "#/parameters/IncidentTask"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_CreateOrUpdate": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IncidentTasks"
        ],
        "description": "Delete the incident task.",
        "operationId": "IncidentTasks_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/IncidentId"
          },
          {
            "$ref": "#/parameters/IncidentTaskId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_Delete": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings": {
      "get": {
        "x-ms-examples": {
          "Get all Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/GetAllSecurityMLAnalyticsSettings.json"
          }
        },
        "tags": [
          "Security ML Analytics Settings"
        ],
        "description": "Gets all Security ML Analytics Settings.",
        "operationId": "SecurityMLAnalyticsSettings_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSettingsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings/{settingsResourceName}": {
      "get": {
        "x-ms-examples": {
          "Get a Anomaly Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/GetAnomalySecurityMLAnalyticsSetting.json"
          }
        },
        "tags": [
          "Security ML Analytics Settings"
        ],
        "description": "Gets the Security ML Analytics Settings.",
        "operationId": "SecurityMLAnalyticsSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SettingsResourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a Anomaly Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/CreateAnomalySecurityMLAnalyticsSetting.json"
          }
        },
        "tags": [
          "Security ML Analytics Settings"
        ],
        "description": "Creates or updates the Security ML Analytics Settings.",
        "operationId": "SecurityMLAnalyticsSettings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SettingsResourceName"
          },
          {
            "$ref": "#/parameters/SecurityMLAnalyticsSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/DeleteSecurityMLAnalyticsSetting.json"
          }
        },
        "tags": [
          "Security ML Analytics Settings"
        ],
        "description": "Delete the Security ML Analytics Settings.",
        "operationId": "SecurityMLAnalyticsSettings_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SettingsResourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors": {
      "get": {
        "x-ms-examples": {
          "Get all data connectors.": {
            "$ref": "./examples/dataConnectors/GetDataConnectors.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets all data connectors.",
        "operationId": "DataConnectors_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/DataConnectorList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors/{dataConnectorId}": {
      "get": {
        "x-ms-examples": {
          "Get an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/GetOfficeDataConnetorById.json"
          },
          "Get a TI data connector.": {
            "$ref": "./examples/dataConnectors/GetThreatIntelligenceById.json"
          },
          "Get a MCAS data connector.": {
            "$ref": "./examples/dataConnectors/GetMicrosoftCloudAppSecurityById.json"
          },
          "Get a ASC data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureSecurityCenterById.json"
          },
          "Get an AAD data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureActiveDirectoryById.json"
          },
          "Get an AwsCloudTrail data connector.": {
            "$ref": "./examples/dataConnectors/GetAmazonWebServicesCloudTrailById.json"
          },
          "Get an AATP data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureAdvancedThreatProtectionById.json"
          },
          "Get a MDATP data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftDefenderAdvancedThreatProtectionById.json"
          },
          "Get a RestApiPoller data connector": {
            "$ref": "./examples/dataConnectors/GetRestApiPollerById.json"
          },
          "Get a MicrosoftThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftThreatIntelligenceById.json"
          },
          "Get a PremiumMicrosoftDefenderForThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/GetPremiumMicrosoftDefenderForThreatIntelligenceById.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets a data connector.",
        "operationId": "DataConnectors_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-azure-resource": true,
        "x-ms-examples": {
          "Creates or updates an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/CreateOfficeDataConnetor.json"
          },
          "Creates or updates an Threat Intelligence Platform data connector.": {
            "$ref": "./examples/dataConnectors/CreateThreatIntelligenceDataConnector.json"
          },
          "Creates or updates a MicrosoftThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/CreateMicrosoftThreatIntelligenceDataConnector.json"
          },
          "Creates or updates a PremiumMicrosoftDefenderForThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/CreatePremiumMicrosoftDefenderForThreatIntelligenceDataConnector.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Creates or updates the data connector.",
        "operationId": "DataConnectors_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          },
          {
            "$ref": "#/parameters/DataConnector"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/DeleteOfficeDataConnetor.json"
          },
          "Delete an MicrosoftThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/DeleteMicrosoftThreatIntelligenceDataConnector.json"
          },
          "Deletes a PremiumMicrosoftDefenderForThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/DeletePremiumMicrosoftDefenderForThreatIntelligenceDataConnector.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Delete the data connector.",
        "operationId": "DataConnectors_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates": {
      "get": {
        "x-ms-examples": {
          "Get all installed templates.": {
            "$ref": "./examples/contentTemplates/GetTemplates.json"
          }
        },
        "tags": [
          "ContentTemplates"
        ],
        "description": "Gets all installed templates.\nExpandable properties:\n- properties/mainTemplate\n- properties/dependantTemplates",
        "operationId": "ContentTemplates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataExpand"
          },
          {
            "$ref": "#/parameters/ODataSearch"
          },
          {
            "$ref": "#/parameters/ODataCount"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkip"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/templateList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates/{templateId}": {
      "put": {
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/InstallTemplate.json"
          }
        },
        "tags": [
          "ContentTemplates"
        ],
        "description": "Install a template.",
        "operationId": "ContentTemplate_Install",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          },
          {
            "$ref": "#/parameters/templateInstallationProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, a template is updated.",
            "schema": {
              "$ref": "#/definitions/templateModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/templateModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/GetTemplateById.json"
          }
        },
        "tags": [
          "ContentTemplates"
        ],
        "description": "Gets a template byt its identifier.\nExpandable properties:\n- properties/mainTemplate\n- properties/dependantTemplates",
        "operationId": "ContentTemplate_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/templateModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete metadata.": {
            "$ref": "./examples/contentTemplates/DeleteTemplate.json"
          }
        },
        "tags": [
          "ContentTemplates"
        ],
        "description": "Delete an installed template.",
        "operationId": "ContentTemplate_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/onboardingStates/{sentinelOnboardingStateName}": {
      "get": {
        "x-ms-examples": {
          "Get Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/GetSentinelOnboardingState.json"
          }
        },
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Get Sentinel onboarding state",
        "operationId": "SentinelOnboardingStates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SentinelOnboardingStateName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "default": {
            "description": "Error in getting the Sentinel onboarding state",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/CreateSentinelOnboardingState.json"
          }
        },
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Create Sentinel onboarding state",
        "operationId": "SentinelOnboardingStates_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SentinelOnboardingStateName"
          },
          {
            "$ref": "#/parameters/SentinelOnboardingStateParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "default": {
            "description": "Error in creating the Sentinel onboarding state",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/DeleteSentinelOnboardingState.json"
          }
        },
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Delete Sentinel onboarding state",
        "operationId": "SentinelOnboardingStates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SentinelOnboardingStateName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error in deleting the Sentinel onboarding state",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/onboardingStates": {
      "get": {
        "x-ms-examples": {
          "Get all Sentinel onboarding states": {
            "$ref": "./examples/onboardingStates/GetAllSentinelOnboardingStates.json"
          }
        },
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Gets all Sentinel onboarding states",
        "operationId": "SentinelOnboardingStates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingStatesList"
            }
          },
          "default": {
            "description": "Error in listing the Sentinel onboarding states",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentPackages": {
      "get": {
        "x-ms-examples": {
          "Get all available packages.": {
            "$ref": "./examples/contentPackages/GetPackages.json"
          }
        },
        "tags": [
          "ContentPackages"
        ],
        "description": "Gets all installed packages.",
        "operationId": "ContentPackages_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataSearch"
          },
          {
            "$ref": "#/parameters/ODataCount"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkip"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/packageList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentPackages/{packageId}": {
      "get": {
        "x-ms-examples": {
          "Get installed packages by id.": {
            "$ref": "./examples/contentPackages/GetPackageById.json"
          }
        },
        "tags": [
          "ContentPackages"
        ],
        "description": "Gets an installed packages by its id.",
        "operationId": "ContentPackages_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/PackageIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/packageModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Install a package to the workspace.": {
            "$ref": "./examples/contentPackages/InstallPackage.json"
          }
        },
        "tags": [
          "ContentPackages"
        ],
        "description": "Install a package to the workspace.",
        "operationId": "ContentPackage_Install",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/PackageIdParameter"
          },
          {
            "$ref": "#/parameters/PackageInstallationProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, a package is updated.",
            "schema": {
              "$ref": "#/definitions/packageModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/packageModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Uninstall a package from the workspace.": {
            "$ref": "./examples/contentPackages/UninstallPackage.json"
          }
        },
        "tags": [
          "ContentPackages"
        ],
        "description": "Uninstall a package from the workspace.",
        "operationId": "ContentPackage_Uninstall",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/PackageIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/automationRules/{automationRuleId}": {
      "get": {
        "tags": [
          "automationRules"
        ],
        "description": "Gets the automation rule.",
        "operationId": "AutomationRules_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AutomationRuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_Get": {
            "$ref": "./examples/automationRules/AutomationRules_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "automationRules"
        ],
        "description": "Creates or updates the automation rule.",
        "operationId": "AutomationRules_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AutomationRuleId"
          },
          {
            "in": "body",
            "name": "automationRuleToUpsert",
            "description": "The automation rule",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_CreateOrUpdate": {
            "$ref": "./examples/automationRules/AutomationRules_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "automationRules"
        ],
        "description": "Delete the automation rule.",
        "operationId": "AutomationRules_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AutomationRuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_Delete": {
            "$ref": "./examples/automationRules/AutomationRules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/automationRules": {
      "get": {
        "tags": [
          "automationRules"
        ],
        "description": "Gets all automation rules.",
        "operationId": "AutomationRules_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AutomationRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AutomationRules_List": {
            "$ref": "./examples/automationRules/AutomationRules_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entities/{entityIdentifier}/runPlaybook": {
      "post": {
        "tags": [
          "manualTrigger"
        ],
        "description": "Triggers playbook on a specific entity.",
        "operationId": "Entities_RunPlaybook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "in": "path",
            "name": "entityIdentifier",
            "required": true,
            "type": "string",
            "description": "Entity ID"
          },
          {
            "in": "body",
            "name": "requestBody",
            "description": "Describes the request body for triggering a playbook on an entity.",
            "schema": {
              "$ref": "#/definitions/EntityManualTriggerRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Entities_RunPlaybook": {
            "$ref": "./examples/manualTrigger/Entities_RunPlaybook.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentIdentifier}/runPlaybook": {
      "post": {
        "tags": [
          "manualTrigger"
        ],
        "description": "Triggers playbook on a specific incident",
        "operationId": "Incidents_RunPlaybook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "in": "path",
            "name": "incidentIdentifier",
            "required": true,
            "type": "string",
            "description": "Incident ID"
          },
          {
            "in": "body",
            "name": "requestBody",
            "description": "Describes the request body for triggering a playbook on an incident.",
            "schema": {
              "$ref": "#/definitions/ManualTriggerRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Incidents_RunPlaybook": {
            "$ref": "./examples/manualTrigger/Incidents_RunPlaybook.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists": {
      "get": {
        "x-ms-examples": {
          "Get all watchlists.": {
            "$ref": "./examples/watchlists/GetWatchlists.json"
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Get all watchlists, without watchlist items.",
        "operationId": "Watchlists_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WatchlistList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}": {
      "get": {
        "x-ms-examples": {
          "Get a watchlist.": {
            "$ref": "./examples/watchlists/GetWatchlistByAlias.json"
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Get a watchlist, without its watchlist items.",
        "operationId": "Watchlists_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a watchlist.": {
            "$ref": "./examples/watchlists/DeleteWatchlist.json"
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Delete a watchlist.",
        "operationId": "Watchlists_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Contains the status URL on which clients are expected to poll the status of the delete operation.",
                "type": "string"
              },
              "Location": {
                "description": "Location URL to poll for result.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "put": {
        "x-ms-examples": {
          "Create or update a watchlist.": {
            "$ref": "./examples/watchlists/CreateWatchlist.json"
          },
          "Create or update a watchlist and bulk creates watchlist items.": {
            "$ref": "./examples/watchlists/CreateWatchlistAndWatchlistItems.json"
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv content type). To create a Watchlist and its Items, we should call this endpoint with rawContent and contentType properties.",
        "operationId": "Watchlists_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/parameters/Watchlist"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          },
          "201": {
            "description": "Created. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field.",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Contains the status URL on which clients are expected to poll the status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems": {
      "get": {
        "x-ms-examples": {
          "Get all watchlist Items.": {
            "$ref": "./examples/watchlists/GetWatchlistItems.json"
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Get all watchlist Items.",
        "operationId": "WatchlistItems_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WatchlistItemList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems/{watchlistItemId}": {
      "get": {
        "x-ms-examples": {
          "Get a watchlist item.": {
            "$ref": "./examples/watchlists/GetWatchlistItemById.json"
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Get a watchlist item.",
        "operationId": "WatchlistItems_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/parameters/WatchlistItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a watchlist item.": {
            "$ref": "./examples/watchlists/DeleteWatchlistItem.json"
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Delete a watchlist item.",
        "operationId": "WatchlistItems_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/parameters/WatchlistItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create or update a watchlist item.": {
            "$ref": "./examples/watchlists/CreateWatchlistItem.json"
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Create or update a watchlist item.",
        "operationId": "WatchlistItems_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/parameters/WatchlistItemId"
          },
          {
            "$ref": "#/parameters/WatchlistItem"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks": {
      "get": {
        "x-ms-examples": {
          "Get all bookmarks.": {
            "$ref": "./examples/bookmarks/GetBookmarks.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets all bookmarks.",
        "operationId": "Bookmarks_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/BookmarkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks/{bookmarkId}": {
      "get": {
        "x-ms-examples": {
          "Get a bookmark.": {
            "$ref": "./examples/bookmarks/GetBookmarkById.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets a bookmark.",
        "operationId": "Bookmarks_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a bookmark.": {
            "$ref": "./examples/bookmarks/CreateBookmark.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Creates or updates the bookmark.",
        "operationId": "Bookmarks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          },
          {
            "$ref": "#/parameters/Bookmark"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a bookmark.": {
            "$ref": "./examples/bookmarks/DeleteBookmark.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Delete the bookmark.",
        "operationId": "Bookmarks_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Operation successfully completed"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentProductPackages": {
      "get": {
        "x-ms-examples": {
          "Get all available packages.": {
            "$ref": "./examples/contentPackages/GetProductPackages.json"
          }
        },
        "tags": [
          "ContentProductPackages"
        ],
        "description": "Gets all packages from the catalog.\nExpandable properties:\n- properties/installed\n- properties/packagedContent",
        "operationId": "ProductPackages_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          },
          {
            "$ref": "#/parameters/ODataSearch"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/productPackageList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentProductPackages/{packageId}": {
      "get": {
        "x-ms-examples": {
          "Get a package.": {
            "$ref": "./examples/contentPackages/GetProductPackageById.json"
          }
        },
        "tags": [
          "ContentProductPackages"
        ],
        "description": "Gets a package by its identifier from the catalog.",
        "operationId": "ProductPackage_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/PackageIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/productPackageModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "RepoTypeParameter": {
      "description": "The repo type.",
      "in": "body",
      "name": "repoType",
      "required": true,
      "schema": {
        "$ref": "#/definitions/RepoType"
      },
      "x-ms-parameter-location": "method"
    },
    "SourceControlIdParameter": {
      "description": "Source control Id",
      "in": "path",
      "name": "sourceControlId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SourceControl": {
      "description": "The SourceControl",
      "in": "body",
      "name": "sourceControl",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SourceControl"
      },
      "x-ms-parameter-location": "method"
    },
    "RepositoryAccess": {
      "description": "The repository access credentials.",
      "in": "body",
      "name": "repositoryAccess",
      "required": true,
      "schema": {
        "required": [
          "repositoryAccess"
        ],
        "$ref": "#/definitions/RepositoryAccessProperties"
      },
      "x-ms-parameter-location": "method"
    },
    "Metadata": {
      "description": "Metadata resource.",
      "in": "body",
      "name": "metadata",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MetadataModel"
      },
      "x-ms-parameter-location": "method"
    },
    "MetadataPatch": {
      "description": "Partial metadata request.",
      "in": "body",
      "name": "metadataPatch",
      "required": true,
      "schema": {
        "$ref": "#/definitions/metadataPatch"
      },
      "x-ms-parameter-location": "method"
    },
    "MetadataName": {
      "description": "The Metadata name.",
      "in": "path",
      "name": "metadataName",
      "required": true,
      "pattern": "^\\S+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "templateIdParameter": {
      "description": "template Id",
      "in": "path",
      "name": "templateId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Action": {
      "description": "The action",
      "in": "body",
      "name": "action",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ActionRequest"
      },
      "x-ms-parameter-location": "method"
    },
    "ActionId": {
      "description": "Action ID",
      "in": "path",
      "name": "actionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AlertRule": {
      "description": "The alert rule",
      "in": "body",
      "name": "alertRule",
      "required": true,
      "schema": {
        "$ref": "#/definitions/AlertRule"
      },
      "x-ms-parameter-location": "method"
    },
    "AlertRuleTemplateId": {
      "description": "Alert rule template ID",
      "in": "path",
      "name": "alertRuleTemplateId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RuleId": {
      "description": "Alert rule ID",
      "in": "path",
      "name": "ruleId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceName": {
      "description": "Threat intelligence indicator name field.",
      "in": "path",
      "name": "name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceProperties": {
      "description": "Properties of threat intelligence indicators to create and update.",
      "in": "body",
      "name": "ThreatIntelligenceProperties",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ThreatIntelligenceIndicatorModel"
      },
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceReplaceTags": {
      "description": "Tags in the threat intelligence indicator to be replaced.",
      "in": "body",
      "name": "ThreatIntelligenceReplaceTags",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ThreatIntelligenceIndicatorModel"
      },
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceFilteringCriteria": {
      "description": "Filtering criteria for querying threat intelligence indicators.",
      "in": "body",
      "name": "ThreatIntelligenceFilteringCriteria",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ThreatIntelligenceFilteringCriteria"
      },
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceIndicatorEntityKind": {
      "description": "The threat intelligence entity kind",
      "in": "query",
      "name": "ctiEntityKind",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ThreatIntelligenceAppendTags": {
      "description": "The threat intelligence append tags request body",
      "in": "body",
      "name": "ThreatIntelligenceAppendTags",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ThreatIntelligenceAppendTags"
      },
      "x-ms-parameter-location": "method"
    },
    "dataConnectorDefinitionName": {
      "in": "path",
      "name": "dataConnectorDefinitionName",
      "description": "The data connector definition name.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9A-Z-_]*$",
      "x-ms-parameter-location": "method"
    },
    "Incident": {
      "description": "The incident",
      "in": "body",
      "name": "incident",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Incident"
      },
      "x-ms-parameter-location": "method"
    },
    "IncidentComment": {
      "description": "The incident comment",
      "in": "body",
      "name": "incidentComment",
      "required": true,
      "schema": {
        "$ref": "#/definitions/IncidentComment"
      },
      "x-ms-parameter-location": "method"
    },
    "IncidentCommentId": {
      "description": "Incident comment ID",
      "in": "path",
      "name": "incidentCommentId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IncidentId": {
      "description": "Incident ID",
      "in": "path",
      "name": "incidentId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Relation": {
      "name": "relation",
      "in": "body",
      "description": "The relation model",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Relation"
      },
      "x-ms-parameter-location": "method"
    },
    "RelationName": {
      "name": "relationName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9-]{3,63}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "Relation Name",
      "x-ms-parameter-location": "method"
    },
    "IncidentTask": {
      "name": "incidentTask",
      "description": "The incident task",
      "required": true,
      "in": "body",
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/IncidentTask"
      }
    },
    "IncidentTaskId": {
      "in": "path",
      "name": "incidentTaskId",
      "description": "Incident task ID",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "SecurityMLAnalyticsSetting": {
      "description": "The security ML Analytics setting",
      "in": "body",
      "name": "securityMLAnalyticsSetting",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SecurityMLAnalyticsSetting"
      },
      "x-ms-parameter-location": "method"
    },
    "SettingsResourceName": {
      "description": "Security ML Analytics Settings resource name",
      "in": "path",
      "name": "settingsResourceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DataConnector": {
      "description": "The data connector",
      "in": "body",
      "name": "dataConnector",
      "required": true,
      "schema": {
        "$ref": "#/definitions/DataConnector"
      },
      "x-ms-parameter-location": "method"
    },
    "DataConnectorId": {
      "description": "Connector ID",
      "in": "path",
      "name": "dataConnectorId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "templateInstallationProperties": {
      "description": "Template installation properties",
      "in": "body",
      "name": "templateInstallationProperties",
      "required": true,
      "schema": {
        "$ref": "#/definitions/templateModel"
      },
      "x-ms-parameter-location": "method"
    },
    "SentinelOnboardingStateName": {
      "description": "The Sentinel onboarding state name. Supports - default",
      "in": "path",
      "name": "sentinelOnboardingStateName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SentinelOnboardingStateParameter": {
      "description": "The Sentinel onboarding state parameter",
      "in": "body",
      "name": "sentinelOnboardingStateParameter",
      "required": false,
      "schema": {
        "$ref": "#/definitions/SentinelOnboardingState"
      },
      "x-ms-parameter-location": "method"
    },
    "PackageIdParameter": {
      "description": "package Id",
      "in": "path",
      "name": "packageId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PackageInstallationProperties": {
      "description": "Package installation properties",
      "in": "body",
      "name": "packageInstallationProperties",
      "required": true,
      "schema": {
        "$ref": "#/definitions/packageModel"
      },
      "x-ms-parameter-location": "method"
    },
    "AutomationRule": {
      "name": "automationRule",
      "description": "The automation rule",
      "required": true,
      "in": "body",
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/AutomationRule"
      }
    },
    "AutomationRuleId": {
      "in": "path",
      "name": "automationRuleId",
      "description": "Automation rule ID",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "WatchlistAlias": {
      "description": "The watchlist alias",
      "in": "path",
      "name": "watchlistAlias",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Watchlist": {
      "description": "The watchlist",
      "in": "body",
      "name": "watchlist",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Watchlist"
      },
      "x-ms-parameter-location": "method"
    },
    "WatchlistItem": {
      "description": "The watchlist item",
      "in": "body",
      "name": "watchlistItem",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WatchlistItem"
      },
      "x-ms-parameter-location": "method"
    },
    "WatchlistItemId": {
      "description": "The watchlist item id (GUID)",
      "in": "path",
      "name": "watchlistItemId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Bookmark": {
      "description": "The bookmark",
      "in": "body",
      "name": "bookmark",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Bookmark"
      },
      "x-ms-parameter-location": "method"
    },
    "BookmarkId": {
      "description": "Bookmark ID",
      "in": "path",
      "name": "bookmarkId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "description": "The name of the workspace.",
      "in": "path",
      "maxLength": 90,
      "minLength": 1,
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "OperationalInsightsResourceProvider": {
      "description": "The namespace of workspaces resource provider- Microsoft.OperationalInsights.",
      "in": "path",
      "name": "operationalInsightsResourceProvider",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataFilter": {
      "description": "Filters the results, based on a Boolean condition. Optional.",
      "in": "query",
      "name": "$filter",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataOrderBy": {
      "description": "Sorts the results. Optional.",
      "in": "query",
      "name": "$orderby",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataSkipToken": {
      "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
      "in": "query",
      "name": "$skipToken",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataTop": {
      "description": "Returns only the first n results. Optional.",
      "format": "int32",
      "in": "query",
      "name": "$top",
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "ODataSkip": {
      "description": "Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results if there are any left.",
      "in": "query",
      "name": "$skip",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ODataExpand": {
      "description": "Expands the object with optional fiends that are not included by default. Optional.",
      "in": "query",
      "name": "$expand",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataSearch": {
      "description": "Searches for a substring in the response. Optional.",
      "in": "query",
      "name": "$search",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ODataCount": {
      "description": "Instructs the server to return only object count without actual body. Optional.",
      "in": "query",
      "name": "$count",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "RepoList": {
      "description": "List all the source controls.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of repositories.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of repositories.",
          "items": {
            "$ref": "#/definitions/Repo"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Repo": {
      "description": "Represents a repository.",
      "properties": {
        "url": {
          "description": "The url to access the repository.",
          "type": "string"
        },
        "fullName": {
          "description": "The name of the repository.",
          "type": "string"
        },
        "installationId": {
          "description": "The installation id of the repository.",
          "type": "integer",
          "format": "int64"
        },
        "branches": {
          "description": "Array of branches.",
          "items": {
            "description": "name of branch.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "x-ms-azure-resource": false,
      "type": "object"
    },
    "SourceControlList": {
      "description": "List all the source controls.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of source controls.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of source controls.",
          "items": {
            "$ref": "#/definitions/SourceControl"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "SourceControl": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a SourceControl in Azure Security Insights.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "source control properties",
          "$ref": "#/definitions/SourceControlProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "SourceControlProperties": {
      "description": "Describes source control properties",
      "properties": {
        "id": {
          "description": "The id (a Guid) of the source control",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": "The version number associated with the source control",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the source control",
          "type": "string"
        },
        "description": {
          "description": "A description of the source control",
          "type": "string"
        },
        "repoType": {
          "$ref": "#/definitions/RepoType",
          "description": "The repository type of the source control",
          "type": "string"
        },
        "contentTypes": {
          "description": "Array of source control content types.",
          "items": {
            "$ref": "#/definitions/ContentType"
          },
          "type": "array"
        },
        "repository": {
          "description": "Repository metadata.",
          "$ref": "#/definitions/Repository"
        },
        "servicePrincipal": {
          "description": "Service principal metadata.",
          "$ref": "#/definitions/ServicePrincipal"
        },
        "workloadIdentityFederation": {
          "description": "Workload Identity metadata.",
          "$ref": "#/definitions/WorkloadIdentityFederation",
          "readOnly": true
        },
        "repositoryAccess": {
          "description": "Repository access credentials. This is write-only object and it never returns back to a user.",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "$ref": "#/definitions/RepositoryAccess"
        },
        "repositoryResourceInfo": {
          "description": "Information regarding the resources created in user's repository.",
          "$ref": "#/definitions/RepositoryResourceInfo"
        },
        "lastDeploymentInfo": {
          "description": "Information regarding the latest deployment for the source control.",
          "$ref": "#/definitions/DeploymentInfo"
        },
        "pullRequest": {
          "description": "Information regarding the pull request of the source control.",
          "$ref": "#/definitions/PullRequest"
        }
      },
      "required": [
        "displayName",
        "repoType",
        "contentTypes",
        "repository"
      ],
      "type": "object"
    },
    "RepositoryAccess": {
      "type": "object",
      "description": "Credentials to access repository.",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "description": "The kind of repository access credentials",
          "$ref": "#/definitions/RepositoryAccessKind"
        },
        "code": {
          "x-ms-secret": true,
          "type": "string",
          "description": "OAuth Code. Required when `kind` is `OAuth`"
        },
        "state": {
          "x-ms-secret": true,
          "type": "string",
          "description": "OAuth State. Required when `kind` is `OAuth`"
        },
        "clientId": {
          "type": "string",
          "description": "OAuth ClientId. Required when `kind` is `OAuth`"
        },
        "token": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Personal Access Token. Required when `kind` is `PAT`"
        },
        "installationId": {
          "type": "string",
          "description": "Application installation ID. Required when `kind` is `App`. Supported by `GitHub` only."
        }
      }
    },
    "RepositoryAccessObject": {
      "description": "Credentials to access repository.",
      "type": "object",
      "required": [
        "repositoryAccess"
      ],
      "properties": {
        "repositoryAccess": {
          "description": "RepositoryAccess properties",
          "$ref": "#/definitions/RepositoryAccess",
          "x-ms-client-flatten": true
        }
      }
    },
    "RepositoryAccessProperties": {
      "description": "Credentials to access repository.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "RepositoryAccess properties",
          "$ref": "#/definitions/RepositoryAccessObject",
          "x-ms-client-flatten": true
        }
      }
    },
    "Repository": {
      "type": "object",
      "required": [
        "url",
        "branch"
      ],
      "description": "metadata of a repository.",
      "properties": {
        "url": {
          "description": "Url of repository.",
          "type": "string"
        },
        "branch": {
          "description": "Branch name of repository.",
          "type": "string"
        },
        "displayUrl": {
          "description": "Display url of repository.",
          "type": "string"
        },
        "deploymentLogsUrl": {
          "description": "Url to access repository action logs.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServicePrincipal": {
      "type": "object",
      "description": "Service principal metadata.",
      "properties": {
        "id": {
          "description": "Id of service principal.",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Tenant id of service principal.",
          "type": "string",
          "readOnly": true
        },
        "appId": {
          "description": "App id of service principal.",
          "type": "string",
          "readOnly": true
        },
        "credentialsExpireOn": {
          "format": "date-time",
          "description": "Expiration time of service principal credentials.",
          "type": "string"
        }
      }
    },
    "WorkloadIdentityFederation": {
      "type": "object",
      "description": "Workload Identity Federation metadata.",
      "properties": {
        "id": {
          "description": "Id of Workload Identity Federation.",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Tenant id of Workload Identity Federation.",
          "type": "string",
          "readOnly": true
        },
        "appId": {
          "description": "App id of Workload Identity Federation.",
          "type": "string",
          "readOnly": true
        },
        "subject": {
          "description": "Subject of Workload Identity Federation.",
          "type": "string",
          "readOnly": true
        },
        "issuer": {
          "description": "Issuer of Workload Identity Federation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RepositoryResourceInfo": {
      "type": "object",
      "description": "Resources created in user's repository for the source-control.",
      "properties": {
        "webhook": {
          "type": "object",
          "description": "The webhook object created for the source-control.",
          "$ref": "#/definitions/Webhook"
        },
        "gitHubResourceInfo": {
          "type": "object",
          "description": "Resources created in GitHub for this source-control.",
          "$ref": "#/definitions/GitHubResourceInfo"
        },
        "azureDevOpsResourceInfo": {
          "type": "object",
          "description": "Resources created in Azure DevOps for this source-control.",
          "$ref": "#/definitions/AzureDevOpsResourceInfo"
        }
      }
    },
    "Webhook": {
      "description": "Detail about the webhook object.",
      "type": "object",
      "properties": {
        "webhookId": {
          "description": "Unique identifier for the webhook.",
          "type": "string",
          "readOnly": true
        },
        "webhookUrl": {
          "description": "URL that gets invoked by the webhook.",
          "type": "string",
          "readOnly": true
        },
        "webhookSecretUpdateTime": {
          "format": "date-time",
          "description": "Time when the webhook secret was updated.",
          "type": "string",
          "readOnly": true
        },
        "rotateWebhookSecret": {
          "description": "A flag to instruct the backend service to rotate webhook secret.",
          "type": "boolean"
        }
      }
    },
    "GitHubResourceInfo": {
      "readOnly": true,
      "description": "Resources created in GitHub repository.",
      "type": "object",
      "properties": {
        "appInstallationId": {
          "description": "GitHub application installation id.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsResourceInfo": {
      "readOnly": true,
      "description": "Resources created in Azure DevOps repository.",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "Id of the pipeline created for the source-control.",
          "type": "string"
        },
        "serviceConnectionId": {
          "description": "Id of the service-connection created for the source-control.",
          "type": "string"
        }
      }
    },
    "DeploymentInfo": {
      "readOnly": true,
      "description": "Information regarding a deployment.",
      "type": "object",
      "properties": {
        "deploymentFetchStatus": {
          "$ref": "#/definitions/DeploymentFetchStatus",
          "description": "Status while fetching the last deployment.",
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/Deployment",
          "description": "Deployment information.",
          "type": "object"
        },
        "message": {
          "description": "Additional details about the deployment that can be shown to the user.",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "Description about a deployment.",
      "type": "object",
      "properties": {
        "deploymentId": {
          "description": "Deployment identifier.",
          "type": "string"
        },
        "deploymentState": {
          "$ref": "#/definitions/DeploymentState",
          "description": "Current status of the deployment.",
          "type": "string"
        },
        "deploymentResult": {
          "$ref": "#/definitions/DeploymentResult",
          "description": "The outcome of the deployment.",
          "type": "string"
        },
        "deploymentTime": {
          "format": "date-time",
          "description": "The time when the deployment finished.",
          "type": "string"
        },
        "deploymentLogsUrl": {
          "description": "Url to access repository action logs.",
          "type": "string"
        }
      }
    },
    "ContentType": {
      "description": "The content type of a source control path.",
      "enum": [
        "AnalyticsRule",
        "AutomationRule",
        "HuntingQuery",
        "Parser",
        "Playbook",
        "Workbook"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ContentType",
        "values": [
          {
            "value": "AnalyticsRule"
          },
          {
            "value": "AutomationRule"
          },
          {
            "value": "HuntingQuery"
          },
          {
            "value": "Parser"
          },
          {
            "value": "Playbook"
          },
          {
            "value": "Workbook"
          }
        ]
      }
    },
    "RepoType": {
      "description": "The type of repository.",
      "enum": [
        "Github",
        "AzureDevOps"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "RepoType",
        "values": [
          {
            "value": "Github"
          },
          {
            "value": "AzureDevOps"
          }
        ]
      }
    },
    "RepositoryAccessKind": {
      "description": "The kind of repository access credentials",
      "enum": [
        "OAuth",
        "PAT",
        "App"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "RepositoryAccessKind",
        "values": [
          {
            "value": "OAuth"
          },
          {
            "value": "PAT"
          },
          {
            "value": "App"
          }
        ]
      }
    },
    "Version": {
      "readOnly": true,
      "description": "The version of the source control.",
      "enum": [
        "V1",
        "V2"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "Version",
        "values": [
          {
            "value": "V1"
          },
          {
            "value": "V2"
          }
        ]
      }
    },
    "DeploymentFetchStatus": {
      "description": "Status while trying to fetch the deployment information.",
      "enum": [
        "Success",
        "Unauthorized",
        "NotFound"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DeploymentFetchStatus",
        "values": [
          {
            "value": "Success"
          },
          {
            "value": "Unauthorized"
          },
          {
            "value": "NotFound"
          }
        ]
      }
    },
    "DeploymentState": {
      "description": "The current state of the deployment.",
      "enum": [
        "In_Progress",
        "Completed",
        "Queued",
        "Canceling"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DeploymentState",
        "values": [
          {
            "value": "In_Progress"
          },
          {
            "value": "Completed"
          },
          {
            "value": "Queued"
          },
          {
            "value": "Canceling"
          }
        ]
      }
    },
    "DeploymentResult": {
      "description": "Status while trying to fetch the deployment information.",
      "enum": [
        "Success",
        "Canceled",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DeploymentResult",
        "values": [
          {
            "value": "Success"
          },
          {
            "value": "Canceled"
          },
          {
            "value": "Failed"
          }
        ]
      }
    },
    "PullRequest": {
      "readOnly": true,
      "description": "Information regarding pull request for protected branches.",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of pull request",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/PullRequestState",
          "description": "State of the pull request",
          "type": "object",
          "readOnly": true
        }
      }
    },
    "PullRequestState": {
      "description": "Status of the pull request.",
      "enum": [
        "Open",
        "Closed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "state",
        "values": [
          {
            "value": "Open"
          },
          {
            "value": "Closed"
          }
        ]
      }
    },
    "Warning": {
      "description": "Warning response structure.",
      "properties": {
        "warning": {
          "$ref": "#/definitions/WarningBody",
          "description": "Warning data."
        }
      },
      "type": "object"
    },
    "WarningBody": {
      "readOnly": true,
      "description": "Warning details.",
      "properties": {
        "code": {
          "description": "An identifier for the warning. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true,
          "type": "object",
          "$ref": "#/definitions/WarningCode"
        },
        "message": {
          "description": "A message describing the warning, intended to be suitable for display in a user interface.",
          "readOnly": true,
          "type": "string"
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarningBody"
          },
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "WarningCode": {
      "readOnly": true,
      "description": "The type of repository.",
      "enum": [
        "SourceControlWarning_DeleteServicePrincipal",
        "SourceControlWarning_DeletePipelineFromAzureDevOps",
        "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub",
        "SourceControlWarning_DeleteRoleAssignment",
        "SourceControl_DeletedWithWarnings"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "WarningCode",
        "values": [
          {
            "value": "SourceControlWarning_DeleteServicePrincipal"
          },
          {
            "value": "SourceControlWarning_DeletePipelineFromAzureDevOps"
          },
          {
            "value": "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub"
          },
          {
            "value": "SourceControlWarning_DeleteRoleAssignment"
          },
          {
            "value": "SourceControl_DeletedWithWarnings"
          }
        ]
      }
    },
    "MetadataList": {
      "description": "List of all the metadata.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of metadata.",
          "items": {
            "$ref": "#/definitions/MetadataModel"
          },
          "type": "array"
        },
        "nextLink": {
          "description": "URL to fetch the next page of metadata.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "MetadataModel": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Metadata resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/metadataProperties",
          "description": "Metadata properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "metadataPatch": {
      "description": "Metadata patch request body.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/metadataPropertiesPatch",
          "description": "Metadata patch request body",
          "x-ms-client-flatten": true
        }
      }
    },
    "metadataContentId": {
      "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Can be optionally set for user created content to define dependencies.  If an active content item is made from a template, both will have the same contentId.",
      "type": "string"
    },
    "metadataParentId": {
      "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)",
      "type": "string"
    },
    "metadataVersion": {
      "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks",
      "type": "string"
    },
    "metadataKind": {
      "type": "string",
      "description": "The kind of content the metadata is for."
    },
    "metadataSource": {
      "description": "The original source of the content item, where it comes from.",
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "description": "Source type of the content",
          "type": "string",
          "enum": [
            "LocalWorkspace",
            "Community",
            "Solution",
            "SourceRepository"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "sourceKind",
            "values": [
              {
                "value": "LocalWorkspace"
              },
              {
                "value": "Community"
              },
              {
                "value": "Solution"
              },
              {
                "value": "SourceRepository"
              }
            ]
          }
        },
        "name": {
          "description": "Name of the content source.  The repo name, solution name, LA workspace name etc.",
          "type": "string"
        },
        "sourceId": {
          "description": "ID of the content source.  The solution ID, workspace ID, etc",
          "type": "string"
        }
      }
    },
    "metadataAuthor": {
      "type": "object",
      "description": "Publisher or creator of the content item.",
      "properties": {
        "name": {
          "description": "Name of the author. Company or person.",
          "type": "string"
        },
        "email": {
          "description": "Email of author contact",
          "type": "string"
        },
        "link": {
          "description": "Link for author/vendor page",
          "type": "string"
        }
      }
    },
    "metadataSupport": {
      "type": "object",
      "description": "Support information for the content item.",
      "required": [
        "tier"
      ],
      "properties": {
        "tier": {
          "description": "Type of support for content item",
          "type": "string",
          "enum": [
            "Microsoft",
            "Partner",
            "Community"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "supportTier",
            "values": [
              {
                "value": "Microsoft"
              },
              {
                "value": "Partner"
              },
              {
                "value": "Community"
              }
            ]
          }
        },
        "name": {
          "description": "Name of the support contact. Company or person.",
          "type": "string"
        },
        "email": {
          "description": "Email of support contact",
          "type": "string"
        },
        "link": {
          "description": "Link for support help, like to support page to open a ticket etc.",
          "type": "string"
        }
      }
    },
    "metadataCategories": {
      "type": "object",
      "description": "ies for the solution content item",
      "properties": {
        "domains": {
          "description": "domain for the solution content item",
          "type": "array",
          "example": [
            "str1",
            "str2",
            "str3"
          ],
          "items": {
            "type": "string"
          }
        },
        "verticals": {
          "description": "Industry verticals for the solution content item",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "str1",
            "str2",
            "str3"
          ]
        }
      }
    },
    "metadataProviders": {
      "description": "Providers for the solution content item",
      "type": "array",
      "example": [
        "str1",
        "str2",
        "str3"
      ],
      "items": {
        "type": "string"
      }
    },
    "firstPublishDate": {
      "description": "first publish date of solution content item",
      "type": "string",
      "format": "date"
    },
    "lastPublishDate": {
      "description": "last publish date of solution content item",
      "type": "string",
      "format": "date"
    },
    "metadataCustomVersion": {
      "description": "The custom version of the content. A optional free text",
      "type": "string"
    },
    "metadataContentSchemaVersion": {
      "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version",
      "type": "string"
    },
    "metadataIcon": {
      "description": "the icon identifier. this id can later be fetched from the solution template",
      "type": "string"
    },
    "metadataThreatAnalysisTactics": {
      "description": "the tactics the resource covers",
      "type": "array",
      "example": [
        "reconnaissance",
        "exfiltration"
      ],
      "items": {
        "type": "string"
      }
    },
    "metadataThreatAnalysisTechniques": {
      "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
      "type": "array",
      "example": [
        "T1548",
        "T1548.001",
        "T1134.003"
      ],
      "items": {
        "type": "string"
      }
    },
    "metadataPreviewImages": {
      "description": "preview image file names. These will be taken from the solution artifacts",
      "type": "array",
      "example": [
        "example.png",
        "example2.jpeg"
      ],
      "items": {
        "type": "string"
      }
    },
    "metadataPreviewImagesDark": {
      "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support",
      "type": "array",
      "example": [
        "example.png",
        "example2.jpeg"
      ],
      "items": {
        "type": "string"
      }
    },
    "metadataProperties": {
      "description": "Metadata property bag.",
      "required": [
        "parentId",
        "kind"
      ],
      "type": "object",
      "properties": {
        "contentId": {
          "$ref": "#/definitions/metadataContentId",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "parentId": {
          "$ref": "#/definitions/metadataParentId",
          "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)"
        },
        "version": {
          "$ref": "#/definitions/metadataVersion",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "kind": {
          "$ref": "#/definitions/metadataKind",
          "description": "The kind of content the metadata is for."
        },
        "source": {
          "$ref": "#/definitions/metadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/metadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/metadataSupport",
          "description": "Support information for the metadata - type, name, contact information"
        },
        "dependencies": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/metadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/metadataCategories",
          "description": "Categories for the solution content item"
        },
        "providers": {
          "$ref": "#/definitions/metadataProviders",
          "description": "Providers for the solution content item"
        },
        "firstPublishDate": {
          "$ref": "#/definitions/firstPublishDate",
          "description": "first publish date solution content item"
        },
        "lastPublishDate": {
          "$ref": "#/definitions/lastPublishDate",
          "description": "last publish date for the solution content item"
        },
        "customVersion": {
          "$ref": "#/definitions/metadataCustomVersion",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "$ref": "#/definitions/metadataContentSchemaVersion",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "$ref": "#/definitions/metadataIcon",
          "description": "the icon identifier. this id can later be fetched from the solution template"
        },
        "threatAnalysisTactics": {
          "$ref": "#/definitions/metadataThreatAnalysisTactics",
          "description": "the tactics the resource covers"
        },
        "threatAnalysisTechniques": {
          "$ref": "#/definitions/metadataThreatAnalysisTechniques",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used"
        },
        "previewImages": {
          "$ref": "#/definitions/metadataPreviewImages",
          "description": "preview image file names. These will be taken from the solution artifacts"
        },
        "previewImagesDark": {
          "$ref": "#/definitions/metadataPreviewImagesDark",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support"
        }
      }
    },
    "metadataPropertiesPatch": {
      "description": "Metadata property bag for patch requests.  This is the same as the MetadataProperties, but with nothing required",
      "type": "object",
      "properties": {
        "contentId": {
          "$ref": "#/definitions/metadataContentId",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "parentId": {
          "$ref": "#/definitions/metadataParentId",
          "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)"
        },
        "version": {
          "$ref": "#/definitions/metadataVersion",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "kind": {
          "$ref": "#/definitions/metadataKind",
          "description": "The kind of content the metadata is for."
        },
        "source": {
          "$ref": "#/definitions/metadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/metadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/metadataSupport",
          "description": "Support information for the metadata - type, name, contact information"
        },
        "dependencies": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/metadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/metadataCategories",
          "description": "Categories for the solution content item"
        },
        "providers": {
          "$ref": "#/definitions/metadataProviders",
          "description": "Providers for the solution content item"
        },
        "firstPublishDate": {
          "$ref": "#/definitions/firstPublishDate",
          "description": "first publish date solution content item"
        },
        "lastPublishDate": {
          "$ref": "#/definitions/lastPublishDate",
          "description": "last publish date for the solution content item"
        },
        "customVersion": {
          "$ref": "#/definitions/metadataCustomVersion",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "$ref": "#/definitions/metadataContentSchemaVersion",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "$ref": "#/definitions/metadataIcon",
          "description": "the icon identifier. this id can later be fetched from the solution template"
        },
        "threatAnalysisTactics": {
          "$ref": "#/definitions/metadataThreatAnalysisTactics",
          "description": "the tactics the resource covers"
        },
        "threatAnalysisTechniques": {
          "$ref": "#/definitions/metadataThreatAnalysisTechniques",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used"
        },
        "previewImages": {
          "$ref": "#/definitions/metadataPreviewImages",
          "description": "preview image file names. These will be taken from the solution artifacts"
        },
        "previewImagesDark": {
          "$ref": "#/definitions/metadataPreviewImagesDark",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support"
        }
      }
    },
    "productTemplateList": {
      "description": "List of all the template.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of templates.",
          "items": {
            "$ref": "#/definitions/productTemplateModel"
          },
          "type": "array"
        },
        "nextLink": {
          "description": "URL to fetch the next page of template.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "productTemplateModel": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Template resource definition.",
      "properties": {
        "properties": {
          "description": "template properties",
          "$ref": "#/definitions/productTemplateProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "productTemplateProperties": {
      "allOf": [
        {
          "$ref": "./common/ContentCommonTypes.json#/definitions/templateBaseProperties"
        },
        {
          "$ref": "#/definitions/productTemplateAdditionalProperties"
        }
      ],
      "description": "Template property bag.",
      "required": [
        "contentId",
        "version",
        "displayName",
        "contentKind",
        "source"
      ]
    },
    "productTemplateAdditionalProperties": {
      "description": "additional properties of product template.",
      "type": "object",
      "properties": {
        "packagedContent": {
          "type": "object",
          "description": "The json of the ARM template to deploy"
        }
      }
    },
    "ActionsList": {
      "description": "List all the actions.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of actions.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of actions.",
          "items": {
            "$ref": "#/definitions/ActionResponse"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "ActionRequest": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Action for alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ActionRequestProperties",
          "description": "Action properties for put request",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "ActionRequestProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ActionPropertiesBase"
        }
      ],
      "description": "Action property bag.",
      "properties": {
        "triggerUri": {
          "description": "Logic App Callback URL for this specific workflow.",
          "type": "string"
        }
      },
      "required": [
        "triggerUri"
      ],
      "type": "object"
    },
    "ActionResponse": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "description": "Action for alert rule.",
      "properties": {
        "etag": {
          "description": "Etag of the action.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ActionResponseProperties",
          "description": "Action properties for get request",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "ActionResponseProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ActionPropertiesBase"
        }
      ],
      "description": "Action property bag.",
      "properties": {
        "workflowId": {
          "description": "The name of the logic app's workflow.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ActionPropertiesBase": {
      "description": "Action property bag base.",
      "properties": {
        "logicAppResourceId": {
          "description": "Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.",
          "type": "string"
        }
      },
      "required": [
        "logicAppResourceId"
      ],
      "type": "object"
    },
    "AlertRule": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Alert rule.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AlertRuleKindEnum",
          "description": "The alert rule kind"
        }
      },
      "type": "object"
    },
    "AlertRuleKindEnum": {
      "description": "The kind of the alert rule",
      "enum": [
        "Scheduled",
        "MicrosoftSecurityIncidentCreation",
        "Fusion"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AlertRuleKind",
        "values": [
          {
            "value": "Scheduled"
          },
          {
            "value": "MicrosoftSecurityIncidentCreation"
          },
          {
            "value": "Fusion"
          }
        ]
      }
    },
    "AlertRuleTemplate": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "description": "Alert rule template.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AlertRuleKindEnum",
          "description": "The alert rule kind",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AlertRuleTemplateDataSource": {
      "description": "alert rule template data sources",
      "properties": {
        "connectorId": {
          "description": "The connector id that provides the following data types",
          "type": "string"
        },
        "dataTypes": {
          "description": "The data types used by the alert rule template",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "AlertRuleTemplateStatus": {
      "description": "The alert rule template status.",
      "enum": [
        "Installed",
        "Available",
        "NotAvailable"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "TemplateStatus",
        "values": [
          {
            "description": "Alert rule template installed. and can not use more then once",
            "value": "Installed"
          },
          {
            "description": "Alert rule template is available.",
            "value": "Available"
          },
          {
            "description": "Alert rule template is not available",
            "value": "NotAvailable"
          }
        ]
      }
    },
    "AlertRuleTriggerOperator": {
      "description": "The operation against the threshold that triggers alert rule.",
      "enum": [
        "GreaterThan",
        "LessThan",
        "Equal",
        "NotEqual"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "TriggerOperator"
      }
    },
    "AlertRulesList": {
      "description": "List all the alert rules.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of alert rules.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of alert rules.",
          "items": {
            "$ref": "#/definitions/AlertRule"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "AlertRuleTemplatesList": {
      "description": "List all the alert rule templates.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of alert rule templates.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of alert rule templates.",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplate"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "FusionAlertRule": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ],
      "description": "Represents Fusion alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FusionAlertRuleProperties",
          "description": "Fusion alert rule properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Fusion"
    },
    "FusionAlertRuleProperties": {
      "description": "Fusion alert rule base property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "description": "The Name of the alert rule template used to create this rule.",
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alerts created by this alert rule.",
          "readOnly": true,
          "type": "string"
        },
        "enabled": {
          "description": "Determines whether this alert rule is enabled or disabled.",
          "type": "boolean"
        },
        "lastModifiedUtc": {
          "description": "The last time that this alert has been modified.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "severity": {
          "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum",
          "description": "The severity for alerts created by this alert rule.",
          "readOnly": true
        },
        "tactics": {
          "description": "The tactics of the alert rule",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "techniques": {
          "description": "The techniques of the alert rule",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "alertRuleTemplateName",
        "enabled"
      ],
      "type": "object"
    },
    "FusionAlertRuleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "description": "Represents Fusion alert rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FusionAlertRuleTemplateProperties",
          "description": "Fusion alert rule template properties",
          "required": [
            "displayName",
            "description",
            "status",
            "severity",
            "alertRulesCreatedByTemplateCount"
          ],
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Fusion"
    },
    "FusionAlertRuleTemplateProperties": {
      "description": "Represents Fusion alert rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "description": "the number of alert rules that were created by this template",
          "format": "int32",
          "type": "integer"
        },
        "createdDateUTC": {
          "description": "The time that this alert rule template has been added.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdatedDateUTC": {
          "description": "The time that this alert rule template was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule template.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alert rule template.",
          "type": "string"
        },
        "requiredDataConnectors": {
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/AlertRuleTemplateStatus",
          "description": "The alert rule template status.",
          "type": "string"
        },
        "severity": {
          "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum",
          "description": "The severity for alerts created by this alert rule."
        },
        "tactics": {
          "description": "The tactics of the alert rule template",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "techniques": {
          "description": "The techniques of the alert rule template",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MicrosoftSecurityIncidentCreationAlertRule": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ],
      "description": "Represents MicrosoftSecurityIncidentCreation rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleProperties",
          "description": "MicrosoftSecurityIncidentCreation rule properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MicrosoftSecurityIncidentCreation"
    },
    "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties": {
      "description": "MicrosoftSecurityIncidentCreation rule common property bag.",
      "properties": {
        "displayNamesFilter": {
          "description": "the alerts' displayNames on which the cases will be generated",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "displayNamesExcludeFilter": {
          "description": "the alerts' displayNames on which the cases will not be generated",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "productFilter": {
          "$ref": "#/definitions/MicrosoftSecurityProductName",
          "description": "The alerts' productName on which the cases will be generated"
        },
        "severitiesFilter": {
          "description": "the alerts' severities on which the cases will be generated",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "productFilter"
      ],
      "type": "object"
    },
    "MicrosoftSecurityIncidentCreationAlertRuleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
        }
      ],
      "description": "MicrosoftSecurityIncidentCreation rule property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "description": "The Name of the alert rule template used to create this rule.",
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alerts created by this alert rule.",
          "type": "string"
        },
        "enabled": {
          "description": "Determines whether this alert rule is enabled or disabled.",
          "type": "boolean"
        },
        "lastModifiedUtc": {
          "description": "The last time that this alert has been modified.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "enabled",
        "productFilter"
      ],
      "type": "object"
    },
    "MicrosoftSecurityIncidentCreationAlertRuleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "description": "Represents MicrosoftSecurityIncidentCreation rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties",
          "description": "MicrosoftSecurityIncidentCreation rule template properties",
          "required": [
            "displayName",
            "description",
            "createdDateUTC",
            "status",
            "alertRulesCreatedByTemplateCount",
            "productFilter"
          ],
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MicrosoftSecurityIncidentCreation"
    },
    "MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties": {
      "description": "MicrosoftSecurityIncidentCreation rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "description": "the number of alert rules that were created by this template",
          "format": "int32",
          "type": "integer"
        },
        "createdDateUTC": {
          "description": "The time that this alert rule template has been added.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdatedDateUTC": {
          "description": "The time that this alert rule template was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule template.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alert rule template.",
          "type": "string"
        },
        "requiredDataConnectors": {
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/AlertRuleTemplateStatus",
          "description": "The alert rule template status.",
          "type": "string"
        },
        "displayNamesFilter": {
          "description": "the alerts' displayNames on which the cases will be generated",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "displayNamesExcludeFilter": {
          "description": "the alerts' displayNames on which the cases will not be generated",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "productFilter": {
          "$ref": "#/definitions/MicrosoftSecurityProductName",
          "description": "The alerts' productName on which the cases will be generated"
        },
        "severitiesFilter": {
          "description": "the alerts' severities on which the cases will be generated",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "MicrosoftSecurityProductName": {
      "description": "The alerts' productName on which the cases will be generated",
      "enum": [
        "Microsoft Cloud App Security",
        "Azure Security Center",
        "Azure Advanced Threat Protection",
        "Azure Active Directory Identity Protection",
        "Azure Security Center for IoT"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "MicrosoftSecurityProductName"
      }
    },
    "ScheduledAlertRule": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ],
      "description": "Represents scheduled alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledAlertRuleProperties",
          "description": "Scheduled alert rule properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Scheduled"
    },
    "ScheduledAlertRuleCommonProperties": {
      "description": "Scheduled alert rule template property bag.",
      "properties": {
        "query": {
          "description": "The query that creates alerts for this rule.",
          "type": "string"
        },
        "queryFrequency": {
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run.",
          "format": "duration",
          "type": "string"
        },
        "queryPeriod": {
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at.",
          "format": "duration",
          "type": "string"
        },
        "severity": {
          "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum",
          "description": "The severity for alerts created by this alert rule."
        },
        "triggerOperator": {
          "$ref": "#/definitions/AlertRuleTriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "description": "The threshold triggers this alert rule.",
          "format": "int32",
          "type": "integer"
        },
        "eventGroupingSettings": {
          "$ref": "#/definitions/EventGroupingSettings",
          "description": "The event grouping settings."
        },
        "customDetails": {
          "description": "Dictionary of string key-value pairs of columns to be attached to the alert",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityMappings": {
          "$ref": "#/definitions/EntityMappings",
          "description": "Array of the entity mappings of the alert rule"
        },
        "alertDetailsOverride": {
          "type": "object",
          "$ref": "#/definitions/AlertDetailsOverride",
          "description": "The alert details override settings"
        }
      },
      "type": "object"
    },
    "EventGroupingSettings": {
      "description": "Event grouping settings property bag.",
      "properties": {
        "aggregationKind": {
          "$ref": "#/definitions/EventGroupingAggregationKind"
        }
      },
      "type": "object"
    },
    "EventGroupingAggregationKind": {
      "description": "The event grouping aggregation kinds",
      "enum": [
        "SingleAlert",
        "AlertPerResult"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "EventGroupingAggregationKind"
      }
    },
    "EntityMappings": {
      "description": "List of entity mappings of the alert rule",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityMapping"
      },
      "x-ms-identifiers": []
    },
    "EntityMapping": {
      "description": "Single entity mapping for the alert rule",
      "properties": {
        "entityType": {
          "$ref": "#/definitions/EntityMappingType"
        },
        "fieldMappings": {
          "description": "array of field mappings for the given entity mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldMapping"
          },
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "FieldMapping": {
      "description": "A single field mapping of the mapped entity",
      "properties": {
        "identifier": {
          "description": "the V3 identifier of the entity",
          "type": "string"
        },
        "columnName": {
          "description": "the column name to be mapped to the identifier",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AlertDetailsOverride": {
      "description": "Settings for how to dynamically override alert static details",
      "properties": {
        "alertDisplayNameFormat": {
          "description": "the format containing columns name(s) to override the alert name",
          "type": "string"
        },
        "alertDescriptionFormat": {
          "description": "the format containing columns name(s) to override the alert description",
          "type": "string"
        },
        "alertTacticsColumnName": {
          "description": "the column name to take the alert tactics from",
          "type": "string"
        },
        "alertSeverityColumnName": {
          "description": "the column name to take the alert severity from",
          "type": "string"
        },
        "alertDynamicProperties": {
          "description": "List of additional dynamic properties to override",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertPropertyMapping"
          },
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "AlertPropertyMapping": {
      "description": "A single alert property mapping to override",
      "properties": {
        "alertProperty": {
          "$ref": "#/definitions/AlertProperty"
        },
        "value": {
          "description": "the column name to use to override this property",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IncidentConfiguration": {
      "description": "Incident Configuration property bag.",
      "properties": {
        "createIncident": {
          "description": "Create incidents from alerts triggered by this analytics rule",
          "type": "boolean"
        },
        "groupingConfiguration": {
          "$ref": "#/definitions/GroupingConfiguration",
          "description": "Set how the alerts that are triggered by this analytics rule, are grouped into incidents"
        }
      },
      "type": "object",
      "required": [
        "createIncident"
      ]
    },
    "GroupingConfiguration": {
      "description": "Grouping configuration property bag.",
      "properties": {
        "enabled": {
          "description": "Grouping enabled",
          "type": "boolean"
        },
        "reopenClosedIncident": {
          "description": "Re-open closed matching incidents",
          "type": "boolean"
        },
        "lookbackDuration": {
          "description": "Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)",
          "format": "duration",
          "type": "string"
        },
        "matchingMethod": {
          "description": "Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.",
          "enum": [
            "AllEntities",
            "AnyAlert",
            "Selected"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "MatchingMethod",
            "values": [
              {
                "description": "Grouping alerts into a single incident if all the entities match",
                "value": "AllEntities"
              },
              {
                "description": "Grouping any alerts triggered by this rule into a single incident",
                "value": "AnyAlert"
              },
              {
                "description": "Grouping alerts into a single incident if the selected entities, custom details and alert details match",
                "value": "Selected"
              }
            ]
          }
        },
        "groupByEntities": {
          "description": "A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.",
          "items": {
            "$ref": "#/definitions/EntityMappingType"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "groupByAlertDetails": {
          "description": "A list of alert details to group by (when matchingMethod is Selected)",
          "items": {
            "description": "Alert detail",
            "enum": [
              "DisplayName",
              "Severity"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertDetail",
              "values": [
                {
                  "description": "Alert display name",
                  "value": "DisplayName"
                },
                {
                  "description": "Alert severity",
                  "value": "Severity"
                }
              ]
            }
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "groupByCustomDetails": {
          "description": "A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "enabled",
        "reopenClosedIncident",
        "lookbackDuration",
        "matchingMethod"
      ]
    },
    "ScheduledAlertRuleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ScheduledAlertRuleCommonProperties"
        }
      ],
      "description": "Scheduled alert rule base property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "description": "The Name of the alert rule template used to create this rule.",
          "type": "string"
        },
        "templateVersion": {
          "description": "The version of the alert rule template used to create this rule - in format <a.b.c>, where all are numbers, for example 0 <1.0.2>",
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alerts created by this alert rule.",
          "type": "string"
        },
        "enabled": {
          "description": "Determines whether this alert rule is enabled or disabled.",
          "type": "boolean"
        },
        "lastModifiedUtc": {
          "description": "The last time that this alert rule has been modified.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "suppressionDuration": {
          "description": "The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.",
          "format": "duration",
          "type": "string"
        },
        "suppressionEnabled": {
          "description": "Determines whether the suppression for this alert rule is enabled or disabled.",
          "type": "boolean"
        },
        "tactics": {
          "description": "The tactics of the alert rule",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "techniques": {
          "description": "The techniques of the alert rule",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "incidentConfiguration": {
          "$ref": "#/definitions/IncidentConfiguration",
          "description": "The settings of the incidents that created from alerts triggered by this analytics rule"
        }
      },
      "required": [
        "displayName",
        "enabled",
        "severity",
        "query",
        "queryFrequency",
        "queryPeriod",
        "triggerOperator",
        "triggerThreshold",
        "suppressionEnabled",
        "suppressionDuration"
      ],
      "type": "object"
    },
    "ScheduledAlertRuleTemplateProperties": {
      "description": "Scheduled alert rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "description": "the number of alert rules that were created by this template",
          "format": "int32",
          "type": "integer"
        },
        "createdDateUTC": {
          "description": "The time that this alert rule template has been added.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdatedDateUTC": {
          "description": "The time that this alert rule template was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the alert rule template.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for alert rule template.",
          "type": "string"
        },
        "requiredDataConnectors": {
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/AlertRuleTemplateStatus",
          "description": "The alert rule template status.",
          "type": "string"
        },
        "query": {
          "description": "The query that creates alerts for this rule.",
          "type": "string"
        },
        "queryFrequency": {
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run.",
          "format": "duration",
          "type": "string"
        },
        "queryPeriod": {
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at.",
          "format": "duration",
          "type": "string"
        },
        "severity": {
          "$ref": "./common/AlertTypes.json#/definitions/AlertSeverityEnum",
          "description": "The severity for alerts created by this alert rule."
        },
        "triggerOperator": {
          "$ref": "#/definitions/AlertRuleTriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "description": "The threshold triggers this alert rule.",
          "format": "int32",
          "type": "integer"
        },
        "tactics": {
          "description": "The tactics of the alert rule template",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "techniques": {
          "description": "The techniques of the alert rule template",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "The version of this template - in format <a.b.c>, where all are numbers. For example <1.0.2>.",
          "type": "string"
        },
        "eventGroupingSettings": {
          "$ref": "#/definitions/EventGroupingSettings",
          "description": "The event grouping settings."
        },
        "customDetails": {
          "description": "Dictionary of string key-value pairs of columns to be attached to the alert",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityMappings": {
          "$ref": "#/definitions/EntityMappings",
          "description": "Array of the entity mappings of the alert rule"
        },
        "alertDetailsOverride": {
          "type": "object",
          "$ref": "#/definitions/AlertDetailsOverride",
          "description": "The alert details override settings"
        }
      },
      "type": "object"
    },
    "ScheduledAlertRuleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "description": "Represents scheduled alert rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledAlertRuleTemplateProperties",
          "description": "Scheduled alert rule template properties",
          "required": [
            "displayName",
            "description",
            "status",
            "alertRulesCreatedByTemplateCount",
            "severity",
            "query",
            "queryFrequency",
            "queryPeriod",
            "triggerOperator",
            "triggerThreshold",
            "version"
          ],
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Scheduled"
    },
    "EntityMappingType": {
      "description": "The V3 type of the mapped entity",
      "enum": [
        "Account",
        "Host",
        "IP",
        "Malware",
        "File",
        "Process",
        "CloudApplication",
        "DNS",
        "AzureResource",
        "FileHash",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "URL",
        "Mailbox",
        "MailCluster",
        "MailMessage",
        "SubmissionMail"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "EntityMappingType",
        "values": [
          {
            "description": "User account entity type",
            "value": "Account"
          },
          {
            "description": "Host entity type",
            "value": "Host"
          },
          {
            "description": "IP address entity type",
            "value": "IP"
          },
          {
            "description": "Malware entity type",
            "value": "Malware"
          },
          {
            "description": "System file entity type",
            "value": "File"
          },
          {
            "description": "Process entity type",
            "value": "Process"
          },
          {
            "description": "Cloud app entity type",
            "value": "CloudApplication"
          },
          {
            "description": "DNS entity type",
            "value": "DNS"
          },
          {
            "description": "Azure resource entity type",
            "value": "AzureResource"
          },
          {
            "description": "File-hash entity type",
            "value": "FileHash"
          },
          {
            "description": "Registry key entity type",
            "value": "RegistryKey"
          },
          {
            "description": "Registry value entity type",
            "value": "RegistryValue"
          },
          {
            "description": "Security group entity type",
            "value": "SecurityGroup"
          },
          {
            "description": "URL entity type",
            "value": "URL"
          },
          {
            "description": "Mailbox entity type",
            "value": "Mailbox"
          },
          {
            "description": "Mail cluster entity type",
            "value": "MailCluster"
          },
          {
            "description": "Mail message entity type",
            "value": "MailMessage"
          },
          {
            "description": "Submission mail entity type",
            "value": "SubmissionMail"
          }
        ]
      }
    },
    "AlertProperty": {
      "description": "The V3 alert property",
      "enum": [
        "AlertLink",
        "ConfidenceLevel",
        "ConfidenceScore",
        "ExtendedLinks",
        "ProductName",
        "ProviderName",
        "ProductComponentName",
        "RemediationSteps",
        "Techniques"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AlertProperty",
        "values": [
          {
            "description": "Alert's link",
            "value": "AlertLink"
          },
          {
            "description": "Confidence level property",
            "value": "ConfidenceLevel"
          },
          {
            "description": "Confidence score",
            "value": "ConfidenceScore"
          },
          {
            "description": "Extended links to the alert",
            "value": "ExtendedLinks"
          },
          {
            "description": "Product name alert property",
            "value": "ProductName"
          },
          {
            "description": "Provider name alert property",
            "value": "ProviderName"
          },
          {
            "description": "Product component name alert property",
            "value": "ProductComponentName"
          },
          {
            "description": "Remediation steps alert property",
            "value": "RemediationSteps"
          },
          {
            "description": "Techniques alert property",
            "value": "Techniques"
          }
        ]
      }
    },
    "ThreatIntelligenceInformation": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Threat intelligence information object.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ThreatIntelligenceResourceInnerKind",
          "description": "The kind of the entity."
        }
      },
      "discriminator": "kind",
      "type": "object",
      "required": [
        "kind"
      ]
    },
    "ThreatIntelligenceInformationList": {
      "description": "List of all the threat intelligence information objects.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of information objects.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of threat intelligence information objects.",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceInformation"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "ThreatIntelligenceIndicatorModel": {
      "allOf": [
        {
          "$ref": "#/definitions/ThreatIntelligenceInformation"
        }
      ],
      "description": "Threat intelligence indicator entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThreatIntelligenceIndicatorProperties",
          "description": "Threat Intelligence Entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "indicator"
    },
    "ThreatIntelligenceResourceInnerKind": {
      "description": "The kind of the threat intelligence entity",
      "enum": [
        "indicator"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ThreatIntelligenceResourceInnerKind",
        "values": [
          {
            "description": "Entity represents threat intelligence indicator in the system.",
            "value": "indicator"
          }
        ]
      }
    },
    "ThreatIntelligenceIndicatorProperties": {
      "allOf": [
        {
          "$ref": "./common/EntityTypes.json#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Describes threat intelligence entity properties",
      "properties": {
        "threatIntelligenceTags": {
          "description": "List of tags",
          "items": {
            "description": "tag",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "lastUpdatedTimeUtc": {
          "description": "Last updated time in UTC",
          "type": "string"
        },
        "source": {
          "description": "Source of a threat intelligence entity",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of a threat intelligence entity",
          "type": "string"
        },
        "description": {
          "description": "Description of a threat intelligence entity",
          "type": "string"
        },
        "indicatorTypes": {
          "description": "Indicator types of threat intelligence entities",
          "items": {
            "description": "Indicator type of a threat intelligence entity",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "pattern": {
          "description": "Pattern of a threat intelligence entity",
          "type": "string"
        },
        "patternType": {
          "description": "Pattern type of a threat intelligence entity",
          "type": "string"
        },
        "patternVersion": {
          "description": "Pattern version of a threat intelligence entity",
          "type": "string"
        },
        "killChainPhases": {
          "description": "Kill chain phases",
          "items": {
            "description": "Kill chain phase",
            "$ref": "#/definitions/ThreatIntelligenceKillChainPhase"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "parsedPattern": {
          "description": "Parsed patterns",
          "items": {
            "description": "Parsed pattern",
            "$ref": "#/definitions/ThreatIntelligenceParsedPattern"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "externalId": {
          "description": "External ID of threat intelligence entity",
          "type": "string"
        },
        "createdByRef": {
          "description": "Created by reference of threat intelligence entity",
          "type": "string"
        },
        "defanged": {
          "description": "Is threat intelligence entity defanged",
          "type": "boolean"
        },
        "externalLastUpdatedTimeUtc": {
          "description": "External last updated time in UTC",
          "type": "string"
        },
        "externalReferences": {
          "description": "External References",
          "items": {
            "description": "external_reference",
            "$ref": "#/definitions/ThreatIntelligenceExternalReference"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "granularMarkings": {
          "description": "Granular Markings",
          "items": {
            "description": "Granular marking",
            "$ref": "#/definitions/ThreatIntelligenceGranularMarkingModel"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "labels": {
          "description": "Labels  of threat intelligence entity",
          "items": {
            "description": "label",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "revoked": {
          "description": "Is threat intelligence entity revoked",
          "type": "boolean"
        },
        "confidence": {
          "description": "Confidence of threat intelligence entity",
          "type": "integer",
          "format": "int32"
        },
        "objectMarkingRefs": {
          "description": "Threat intelligence entity object marking references",
          "items": {
            "description": "Threat intelligence entity object marking reference",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "language": {
          "description": "Language of threat intelligence entity",
          "type": "string"
        },
        "threatTypes": {
          "description": "Threat types",
          "items": {
            "description": "Threat type",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "validFrom": {
          "description": "Valid from",
          "type": "string"
        },
        "validUntil": {
          "description": "Valid until",
          "type": "string"
        },
        "created": {
          "description": "Created by",
          "type": "string"
        },
        "modified": {
          "description": "Modified by",
          "type": "string"
        },
        "extensions": {
          "description": "Extensions map",
          "type": "object",
          "additionalProperties": {}
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceKillChainPhase": {
      "description": "Describes threat kill chain phase entity",
      "properties": {
        "killChainName": {
          "description": "Kill chainName name",
          "type": "string"
        },
        "phaseName": {
          "description": "Phase name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceParsedPattern": {
      "description": "Describes parsed pattern entity",
      "properties": {
        "patternTypeKey": {
          "description": "Pattern type key",
          "type": "string"
        },
        "patternTypeValues": {
          "description": "Pattern type keys",
          "items": {
            "description": "Pattern type key",
            "$ref": "#/definitions/ThreatIntelligenceParsedPatternTypeValue"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceParsedPatternTypeValue": {
      "description": "Describes threat kill chain phase entity",
      "properties": {
        "valueType": {
          "description": "Type of the value",
          "type": "string"
        },
        "value": {
          "description": "Value of parsed pattern",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceGranularMarkingModel": {
      "description": "Describes threat granular marking model entity",
      "properties": {
        "language": {
          "description": "Language granular marking model",
          "type": "string"
        },
        "markingRef": {
          "description": "marking reference granular marking model",
          "type": "integer",
          "format": "int32"
        },
        "selectors": {
          "description": "granular marking model selectors",
          "items": {
            "description": "granular marking model selector",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceExternalReference": {
      "description": "Describes external reference",
      "properties": {
        "description": {
          "description": "External reference description",
          "type": "string"
        },
        "externalId": {
          "description": "External reference ID",
          "type": "string"
        },
        "sourceName": {
          "description": "External reference source name",
          "type": "string"
        },
        "url": {
          "description": "External reference URL",
          "type": "string"
        },
        "hashes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "External reference hashes"
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceFilteringCriteria": {
      "description": "Filtering criteria for querying threat intelligence indicators.",
      "properties": {
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "minConfidence": {
          "description": "Minimum confidence.",
          "type": "integer",
          "format": "int32"
        },
        "maxConfidence": {
          "description": "Maximum confidence.",
          "type": "integer",
          "format": "int32"
        },
        "minValidUntil": {
          "description": "Start time for ValidUntil filter.",
          "type": "string"
        },
        "maxValidUntil": {
          "description": "End time for ValidUntil filter.",
          "type": "string"
        },
        "includeDisabled": {
          "description": "Parameter to include/exclude disabled indicators.",
          "type": "boolean"
        },
        "sortBy": {
          "description": "Columns to sort by and sorting order",
          "items": {
            "description": "Sort By",
            "$ref": "#/definitions/ThreatIntelligenceSortingCriteria"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "sources": {
          "description": "Sources of threat intelligence indicators",
          "items": {
            "description": "Source",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "patternTypes": {
          "description": "Pattern types",
          "items": {
            "description": "Pattern type",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "threatTypes": {
          "description": "Threat types of threat intelligence indicators",
          "items": {
            "description": "Threat type of a threat intelligence indicator",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "ids": {
          "description": "Ids of threat intelligence indicators",
          "items": {
            "description": "Id of a threat intelligence indicator",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "keywords": {
          "description": "Keywords for searching threat intelligence indicators",
          "items": {
            "description": "keyword for searching threat intelligence indicators",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "skipToken": {
          "description": "Skip token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceSortingCriteria": {
      "description": "List of available columns for sorting",
      "properties": {
        "itemKey": {
          "description": "Column name",
          "type": "string"
        },
        "sortOrder": {
          "$ref": "#/definitions/ThreatIntelligenceSortingOrder",
          "description": "Sorting order (ascending/descending/unsorted)."
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceSortingOrder": {
      "description": "Sorting order (ascending/descending/unsorted).",
      "enum": [
        "unsorted",
        "ascending",
        "descending"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ThreatIntelligenceSortingOrder",
        "values": [
          {
            "value": "unsorted"
          },
          {
            "value": "ascending"
          },
          {
            "value": "descending"
          }
        ]
      }
    },
    "ThreatIntelligenceAppendTags": {
      "description": "Array of tags to be appended to the threat intelligence indicator.",
      "properties": {
        "threatIntelligenceTags": {
          "description": "List of tags to be appended.",
          "items": {
            "description": "parameter",
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceMetricsList": {
      "description": "List of all the threat intelligence metric fields (type/threat type/source).",
      "properties": {
        "value": {
          "description": "Array of threat intelligence metric fields (type/threat type/source).",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceMetrics"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "ThreatIntelligenceMetrics": {
      "description": "Threat intelligence metrics.",
      "properties": {
        "properties": {
          "description": "Threat intelligence metrics.",
          "$ref": "#/definitions/ThreatIntelligenceMetric"
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceMetric": {
      "description": "Describes threat intelligence metric",
      "properties": {
        "lastUpdatedTimeUtc": {
          "description": "Last updated indicator metric",
          "type": "string"
        },
        "threatTypeMetrics": {
          "description": "Threat type metrics",
          "items": {
            "description": "parameter",
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "patternTypeMetrics": {
          "description": "Pattern type metrics",
          "items": {
            "description": "parameter",
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "sourceMetrics": {
          "description": "Source metrics",
          "items": {
            "description": "parameter",
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "ThreatIntelligenceMetricEntity": {
      "description": "Describes threat intelligence metric entity",
      "properties": {
        "metricName": {
          "description": "Metric name",
          "type": "string"
        },
        "metricValue": {
          "description": "Metric value",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "OperationsList": {
      "description": "Lists the operations available in the SecurityInsights RP.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of operations.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Array of operations",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "ConnectorDefinitionsAvailability": {
      "description": "The exposure status of the connector to the customers.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/AvailabilityStatus"
        },
        "isPreview": {
          "description": "Gets or sets a value indicating whether the connector is preview.",
          "type": "boolean"
        }
      }
    },
    "AvailabilityStatus": {
      "description": "The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).",
      "type": "integer",
      "format": "int32"
    },
    "ConnectivityCriterion": {
      "description": "The criteria by which we determine whether the connector is connected or not.\r\nFor Example, use a KQL query to check if  the expected data type is flowing).",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Gets or sets the type of connectivity.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the queries for checking connectivity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectorDataType": {
      "description": "The data type which is created by the connector,\r\nincluding a query indicated when was the last time that data type was received in the workspace.",
      "required": [
        "lastDataReceivedQuery",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the data type to show in the graph.",
          "type": "string"
        },
        "lastDataReceivedQuery": {
          "description": "Gets or sets the query to indicate when relevant data was last received in the workspace.",
          "type": "string"
        }
      }
    },
    "DataConnectorDefinition": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "required": [
        "kind"
      ],
      "description": "An Azure resource, which encapsulate the entire info requires to display a data connector page in Azure portal,\r\nand the info required to define data connections.",
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/DataConnectorDefinitionKind",
          "description": "The data connector kind",
          "type": "string"
        }
      },
      "discriminator": "kind"
    },
    "DataConnectorDefinitionKind": {
      "description": "The kind of the data connector definitions",
      "enum": [
        "Customizable"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DataConnectorDefinitionKind",
        "values": [
          {
            "value": "Customizable"
          }
        ]
      }
    },
    "DataConnectorDefinitionArmCollectionWrapper": {
      "type": "object",
      "description": "Encapsulate the data connector definition object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnectorDefinition"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "CustomizableConnectorDefinition": {
      "description": "Connector definition for kind 'Customizable'.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDefinition"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomizableConnectorDefinitionProperties",
          "description": "Customizable properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Customizable"
    },
    "CustomizableConnectorDefinitionProperties": {
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "type": "object",
      "required": [
        "connectorUiConfig"
      ],
      "properties": {
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the connector definition created date in UTC format.",
          "type": "string"
        },
        "lastModifiedUtc": {
          "format": "date-time",
          "description": "Gets or sets the connector definition last modified date in UTC format.",
          "type": "string"
        },
        "connectorUiConfig": {
          "$ref": "#/definitions/CustomizableConnectorUiConfig"
        },
        "connectionsConfig": {
          "$ref": "#/definitions/CustomizableConnectionsConfig"
        }
      }
    },
    "CustomizableConnectionsConfig": {
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "required": [
        "templateSpecVersion",
        "templateSpecName"
      ],
      "type": "object",
      "properties": {
        "templateSpecName": {
          "description": "Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.",
          "type": "string"
        },
        "templateSpecVersion": {
          "description": "Gets or sets the template version.",
          "type": "string"
        }
      }
    },
    "CustomizableConnectorUiConfig": {
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "required": [
        "dataTypes",
        "descriptionMarkdown",
        "graphQueries",
        "instructionSteps",
        "permissions",
        "publisher",
        "title",
        "connectivityCriteria"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets custom connector id. optional field.",
          "type": "string"
        },
        "title": {
          "description": "Gets or sets the connector blade title.",
          "type": "string"
        },
        "publisher": {
          "description": "Gets or sets the connector publisher name.",
          "type": "string"
        },
        "descriptionMarkdown": {
          "description": "Gets or sets the connector description in markdown format.",
          "type": "string"
        },
        "graphQueries": {
          "description": "Gets or sets the graph queries to show the current data volume over time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphQuery"
          },
          "x-ms-identifiers": []
        },
        "dataTypes": {
          "description": "Gets or sets the data types to check for last data received.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorDataType"
          },
          "x-ms-identifiers": []
        },
        "connectivityCriteria": {
          "description": "Gets or sets the way the connector checks whether the connector is connected.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectivityCriterion"
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "$ref": "#/definitions/ConnectorDefinitionsAvailability"
        },
        "permissions": {
          "$ref": "#/definitions/ConnectorDefinitionsPermissions"
        },
        "instructionSteps": {
          "description": "Gets or sets the instruction steps to enable the connector.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstructionStep"
          },
          "x-ms-identifiers": []
        },
        "logo": {
          "description": "Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.\r\nThe logo value should be in SVG format.",
          "type": "string"
        },
        "isConnectivityCriteriasMatchSome": {
          "description": "Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.",
          "type": "boolean"
        }
      }
    },
    "CustomPermissionDetails": {
      "description": "The Custom permissions required for the connector.",
      "required": [
        "description",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the custom permissions name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the custom permissions description.",
          "type": "string"
        }
      }
    },
    "GraphQuery": {
      "description": "The graph query to show the volume of data arriving into the workspace over time.",
      "required": [
        "baseQuery",
        "legend",
        "metricName"
      ],
      "type": "object",
      "properties": {
        "metricName": {
          "description": "Gets or sets the metric name that the query is checking. For example: 'Total data receive'.",
          "type": "string"
        },
        "legend": {
          "description": "Gets or sets the legend for the graph.",
          "type": "string"
        },
        "baseQuery": {
          "description": "Gets or sets the base query for the graph.\r\nThe base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.",
          "type": "string"
        }
      }
    },
    "InstructionStep": {
      "description": "Instruction steps to enable the connector.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Gets or sets the instruction step title.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the instruction step description.",
          "type": "string"
        },
        "instructions": {
          "description": "Gets or sets the instruction step details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstructionStepDetails"
          },
          "x-ms-identifiers": []
        },
        "innerSteps": {
          "description": "Gets or sets the inner instruction steps details.\r\nFor Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstructionStep"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "InstructionStepDetails": {
      "description": "Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.",
      "required": [
        "parameters",
        "type"
      ],
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets the instruction type parameters settings.",
          "type": "object"
        },
        "type": {
          "description": "Gets or sets the instruction type name.",
          "type": "string"
        }
      }
    },
    "ConnectorDefinitionsPermissions": {
      "description": "The required Permissions for the connector.",
      "type": "object",
      "properties": {
        "tenant": {
          "description": "Gets or sets the required tenant permissions for the connector.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "licenses": {
          "description": "Gets or sets the required licenses for the user to create connections.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceProvider": {
          "description": "Gets or sets the resource provider permissions required for the user to create connections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorDefinitionsResourceProvider"
          },
          "x-ms-identifiers": []
        },
        "customs": {
          "description": "Gets or sets the customs permissions required for the user to create connections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomPermissionDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProviderPermissionsScope": {
      "description": "The scope on which the user should have permissions, in order to be able to create connections.",
      "enum": [
        "Subscription",
        "ResourceGroup",
        "Workspace"
      ],
      "type": "string",
      "example": "Subscription",
      "x-ms-enum": {
        "name": "ProviderPermissionsScope",
        "modelAsString": true,
        "values": [
          {
            "value": "Subscription"
          },
          {
            "value": "ResourceGroup"
          },
          {
            "value": "Workspace"
          }
        ]
      }
    },
    "ConnectorDefinitionsResourceProvider": {
      "description": "The resource provider details include the required permissions for the user to create connections.\r\nThe user should have the required permissions(Read\\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.",
      "required": [
        "permissionsDisplayText",
        "provider",
        "providerDisplayName",
        "requiredPermissions",
        "scope"
      ],
      "type": "object",
      "properties": {
        "provider": {
          "description": "Gets or sets the provider name.",
          "type": "string"
        },
        "permissionsDisplayText": {
          "description": "Gets or sets the permissions description text.",
          "type": "string"
        },
        "providerDisplayName": {
          "description": "Gets or sets the permissions provider display name.",
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/ProviderPermissionsScope"
        },
        "requiredPermissions": {
          "$ref": "#/definitions/ResourceProviderRequiredPermissions"
        }
      }
    },
    "ResourceProviderRequiredPermissions": {
      "description": "Required permissions for the connector resource provider that define in ResourceProviders.\r\nFor more information about the permissions see <see href=\"https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format\">here</see>.",
      "type": "object",
      "properties": {
        "read": {
          "description": "Gets or sets a value indicating whether the permission is read action (GET).",
          "type": "boolean"
        },
        "write": {
          "description": "Gets or sets a value indicating whether the permission is write action (PUT or PATCH).",
          "type": "boolean"
        },
        "delete": {
          "description": "Gets or sets a value indicating whether the permission is delete action (DELETE).",
          "type": "boolean"
        },
        "action": {
          "description": "Gets or sets a value indicating whether the permission is custom actions (POST).",
          "type": "boolean"
        }
      }
    },
    "Relation": {
      "type": "object",
      "description": "Represents a relation between two resources",
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationProperties",
          "description": "Relation properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "RelationList": {
      "description": "List of relations.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of relations.",
          "type": "string"
        },
        "value": {
          "description": "Array of relations.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/Relation"
          }
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "RelationProperties": {
      "description": "Relation property bag.",
      "properties": {
        "relatedResourceId": {
          "description": "The resource ID of the related resource",
          "type": "string"
        },
        "relatedResourceName": {
          "description": "The name of the related resource",
          "readOnly": true,
          "type": "string"
        },
        "relatedResourceType": {
          "description": "The resource type of the related resource",
          "readOnly": true,
          "type": "string"
        },
        "relatedResourceKind": {
          "description": "The resource kind of the related resource",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "relatedResourceId"
      ],
      "type": "object"
    },
    "Incident": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents an incident in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncidentProperties",
          "description": "Incident properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "IncidentAdditionalData": {
      "description": "Incident additional data property bag.",
      "properties": {
        "alertsCount": {
          "description": "The number of alerts in the incident",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "bookmarksCount": {
          "description": "The number of bookmarks in the incident",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "commentsCount": {
          "description": "The number of comments in the incident",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "alertProductNames": {
          "description": "List of product names of alerts in the incident",
          "items": {
            "description": "Alert product name",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "tactics": {
          "description": "The tactics associated with incident",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "providerIncidentUrl": {
          "description": "The provider incident url to the incident in Microsoft 365 Defender portal",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IncidentAlertList": {
      "description": "List of incident alerts.",
      "properties": {
        "value": {
          "description": "Array of incident alerts.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "./common/EntityTypes.json#/definitions/SecurityAlert"
          }
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "IncidentBookmarkList": {
      "description": "List of incident bookmarks.",
      "properties": {
        "value": {
          "description": "Array of incident bookmarks.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "./common/EntityTypes.json#/definitions/HuntingBookmark"
          }
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "IncidentComment": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents an incident comment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncidentCommentProperties",
          "description": "Incident comment properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "IncidentCommentList": {
      "description": "List of incident comments.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of comments.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of comments.",
          "items": {
            "$ref": "#/definitions/IncidentComment"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "IncidentCommentProperties": {
      "description": "Incident comment property bag.",
      "properties": {
        "createdTimeUtc": {
          "description": "The time the comment was created",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedTimeUtc": {
          "description": "The time the comment was updated",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "The comment message",
          "type": "string"
        },
        "author": {
          "$ref": "../../../common/2.0/types.json#/definitions/ClientInfo",
          "description": "Describes the client that created the comment",
          "readOnly": true,
          "type": "object"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "IncidentEntitiesResponse": {
      "description": "The incident related entities response.",
      "type": "object",
      "properties": {
        "entities": {
          "description": "Array of the incident related entities.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "./common/EntityTypes.json#/definitions/Entity"
          }
        },
        "metaData": {
          "description": "The metadata from the incident related entities results.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/IncidentEntitiesResultsMetadata"
          }
        }
      }
    },
    "IncidentEntitiesResultsMetadata": {
      "description": "Information of a specific aggregation in the incident related entities result.",
      "properties": {
        "count": {
          "description": "Total number of aggregations of the given kind in the incident related entities result.",
          "type": "integer",
          "format": "int32"
        },
        "entityKind": {
          "$ref": "./common/EntityTypes.json#/definitions/EntityInnerKind",
          "description": "The kind of the aggregated entity."
        }
      },
      "required": [
        "entityKind",
        "count"
      ],
      "type": "object"
    },
    "IncidentList": {
      "description": "List all the incidents.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of incidents.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of incidents.",
          "items": {
            "$ref": "#/definitions/Incident"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "IncidentProperties": {
      "description": "Describes incident properties",
      "properties": {
        "additionalData": {
          "$ref": "#/definitions/IncidentAdditionalData",
          "description": "Additional data on the incident",
          "readOnly": true,
          "type": "object"
        },
        "classification": {
          "description": "The reason the incident was closed",
          "enum": [
            "Undetermined",
            "TruePositive",
            "BenignPositive",
            "FalsePositive"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IncidentClassification",
            "values": [
              {
                "description": "Incident classification was undetermined",
                "value": "Undetermined"
              },
              {
                "description": "Incident was true positive",
                "value": "TruePositive"
              },
              {
                "description": "Incident was benign positive",
                "value": "BenignPositive"
              },
              {
                "description": "Incident was false positive",
                "value": "FalsePositive"
              }
            ]
          }
        },
        "classificationComment": {
          "description": "Describes the reason the incident was closed",
          "type": "string"
        },
        "classificationReason": {
          "description": "The classification reason the incident was closed with",
          "enum": [
            "SuspiciousActivity",
            "SuspiciousButExpected",
            "IncorrectAlertLogic",
            "InaccurateData"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IncidentClassificationReason",
            "values": [
              {
                "description": "Classification reason was suspicious activity",
                "value": "SuspiciousActivity"
              },
              {
                "description": "Classification reason was suspicious but expected",
                "value": "SuspiciousButExpected"
              },
              {
                "description": "Classification reason was incorrect alert logic",
                "value": "IncorrectAlertLogic"
              },
              {
                "description": "Classification reason was inaccurate data",
                "value": "InaccurateData"
              }
            ]
          }
        },
        "createdTimeUtc": {
          "description": "The time the incident was created",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the incident",
          "type": "string"
        },
        "firstActivityTimeUtc": {
          "description": "The time of the first activity in the incident",
          "format": "date-time",
          "type": "string"
        },
        "incidentUrl": {
          "description": "The deep-link url to the incident in Azure portal",
          "readOnly": true,
          "type": "string"
        },
        "providerName": {
          "description": "The name of the source provider that generated the incident",
          "type": "string",
          "readOnly": true
        },
        "providerIncidentId": {
          "description": "The incident ID assigned by the incident provider",
          "type": "string",
          "readOnly": true
        },
        "incidentNumber": {
          "description": "A sequential number",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "labels": {
          "description": "List of labels relevant to this incident",
          "items": {
            "$ref": "./common/IncidentTypes.json#/definitions/IncidentLabel"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "lastActivityTimeUtc": {
          "description": "The time of the last activity in the incident",
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedTimeUtc": {
          "description": "The last time the incident was updated",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "owner": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentOwnerInfo",
          "description": "Describes a user that the incident is assigned to",
          "type": "object"
        },
        "relatedAnalyticRuleIds": {
          "description": "List of resource ids of Analytic rules related to the incident",
          "items": {
            "description": "Related Analytic rule resource id",
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "scopes": [
                    "Extension"
                  ],
                  "type": "Microsoft.SecurityInsights/alertRules"
                }
              ]
            }
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "severity": {
          "description": "The severity of the incident",
          "type": "string",
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentSeverityEnum"
        },
        "status": {
          "description": "The status of the incident",
          "enum": [
            "New",
            "Active",
            "Closed"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IncidentStatus",
            "values": [
              {
                "description": "An active incident which isn't being handled currently",
                "value": "New"
              },
              {
                "description": "An active incident which is being handled",
                "value": "Active"
              },
              {
                "description": "A non-active incident",
                "value": "Closed"
              }
            ]
          }
        },
        "title": {
          "description": "The title of the incident",
          "type": "string"
        }
      },
      "required": [
        "title",
        "severity",
        "status"
      ],
      "type": "object"
    },
    "IncidentTask": {
      "description": "Describes incident task properties",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "$ref": "#/definitions/IncidentTaskProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "IncidentTaskList": {
      "description": "List of incident tasks",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IncidentTask"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "IncidentTaskProperties": {
      "description": "Describes the properties of an incident task",
      "required": [
        "status",
        "title"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the task",
          "type": "string"
        },
        "description": {
          "description": "The description of the task",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/IncidentTaskStatus"
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "The time the task was created",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedTimeUtc": {
          "format": "date-time",
          "description": "The last time the task was updated",
          "type": "string",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/ClientInfo"
        },
        "lastModifiedBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/ClientInfo"
        }
      }
    },
    "IncidentTaskStatus": {
      "description": "The status of the task",
      "enum": [
        "New",
        "Completed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IncidentTaskStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "New",
            "description": "A new task"
          },
          {
            "value": "Completed",
            "description": "A completed task"
          }
        ]
      }
    },
    "SecurityMLAnalyticsSetting": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Security ML Analytics Setting",
      "properties": {
        "kind": {
          "$ref": "#/definitions/SecurityMLAnalyticsSettingsKindEnum",
          "description": "The kind of security ML Analytics Settings"
        }
      },
      "discriminator": "kind",
      "type": "object",
      "required": [
        "kind"
      ]
    },
    "SecurityMLAnalyticsSettingsKindEnum": {
      "description": "The kind of security ML analytics settings",
      "enum": [
        "Anomaly"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SecurityMLAnalyticsSettingsKind",
        "values": [
          {
            "value": "Anomaly"
          }
        ]
      }
    },
    "SecurityMLAnalyticsSettingsList": {
      "description": "List all the SecurityMLAnalyticsSettings",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of SecurityMLAnalyticsSettings.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of SecurityMLAnalyticsSettings",
          "items": {
            "$ref": "#/definitions/SecurityMLAnalyticsSetting"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "AnomalySecurityMLAnalyticsSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/SecurityMLAnalyticsSetting"
        }
      ],
      "description": "Represents Anomaly Security ML Analytics Settings",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AnomalySecurityMLAnalyticsSettingsProperties",
          "description": "Anomaly Security ML Analytics Settings properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Anomaly"
    },
    "AnomalySecurityMLAnalyticsSettingsProperties": {
      "description": "AnomalySecurityMLAnalytics settings base property bag.",
      "properties": {
        "description": {
          "description": "The description of the SecurityMLAnalyticsSettings.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for settings created by this SecurityMLAnalyticsSettings.",
          "type": "string"
        },
        "enabled": {
          "description": "Determines whether this settings is enabled or disabled.",
          "type": "boolean"
        },
        "lastModifiedUtc": {
          "description": "The last time that this SecurityMLAnalyticsSettings has been modified.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "requiredDataConnectors": {
          "description": "The required data sources for this SecurityMLAnalyticsSettings",
          "items": {
            "$ref": "#/definitions/SecurityMLAnalyticsSettingsDataSource"
          },
          "x-ms-identifiers": [
            "connectorId"
          ],
          "type": "array"
        },
        "tactics": {
          "description": "The tactics of the SecurityMLAnalyticsSettings",
          "items": {
            "$ref": "./common/AlertTypes.json#/definitions/AttackTactic"
          },
          "type": "array"
        },
        "techniques": {
          "description": "The techniques of the SecurityMLAnalyticsSettings",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "anomalyVersion": {
          "description": "The anomaly version of the AnomalySecurityMLAnalyticsSettings.",
          "type": "string"
        },
        "customizableObservations": {
          "description": "The customizable observations of the AnomalySecurityMLAnalyticsSettings.",
          "type": "object"
        },
        "frequency": {
          "description": "The frequency that this SecurityMLAnalyticsSettings will be run.",
          "format": "duration",
          "type": "string"
        },
        "settingsStatus": {
          "$ref": "#/definitions/AnomalySecurityMLAnalyticsSettingsStatus",
          "description": "The anomaly SecurityMLAnalyticsSettings status"
        },
        "isDefaultSettings": {
          "description": "Determines whether this anomaly security ml analytics settings is a default settings",
          "type": "boolean"
        },
        "anomalySettingsVersion": {
          "description": "The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not.",
          "type": "integer",
          "format": "int32"
        },
        "settingsDefinitionId": {
          "description": "The anomaly settings definition Id",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "enabled",
        "anomalyVersion",
        "frequency",
        "settingsStatus",
        "isDefaultSettings"
      ],
      "type": "object"
    },
    "SecurityMLAnalyticsSettingsDataSource": {
      "description": "security ml analytics settings data sources",
      "properties": {
        "connectorId": {
          "description": "The connector id that provides the following data types",
          "type": "string"
        },
        "dataTypes": {
          "description": "The data types used by the security ml analytics settings",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AnomalySecurityMLAnalyticsSettingsStatus": {
      "description": "The anomaly SecurityMLAnalyticsSettings status",
      "enum": [
        "Production",
        "Flighting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SettingsStatus",
        "modelAsString": true,
        "values": [
          {
            "description": "Anomaly settings status in Production mode",
            "value": "Production"
          },
          {
            "description": "Anomaly settings status in Flighting mode",
            "value": "Flighting"
          }
        ]
      }
    },
    "AADDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents AAD (Azure Active Directory) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AADDataConnectorProperties",
          "description": "AAD (Azure Active Directory) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureActiveDirectory"
    },
    "AADDataConnectorProperties": {
      "description": "AAD (Azure Active Directory) data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "AATPDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents AATP (Azure Advanced Threat Protection) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AATPDataConnectorProperties",
          "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureAdvancedThreatProtection"
    },
    "AATPDataConnectorProperties": {
      "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "ASCDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents ASC (Azure Security Center) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ASCDataConnectorProperties",
          "description": "ASC (Azure Security Center) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureSecurityCenter"
    },
    "ASCDataConnectorProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ],
      "description": "ASC (Azure Security Center) data connector properties.",
      "properties": {
        "subscriptionId": {
          "description": "The subscription id to connect to, and get the data from.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AlertsDataTypeOfDataConnector": {
      "description": "Alerts data type for data connectors.",
      "properties": {
        "alerts": {
          "$ref": "#/definitions/DataConnectorDataTypeCommon",
          "description": "Alerts data type connection.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "AwsCloudTrailDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents Amazon Web Services CloudTrail data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AwsCloudTrailDataConnectorProperties",
          "description": "Amazon Web Services CloudTrail data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AmazonWebServicesCloudTrail"
    },
    "AwsCloudTrailDataConnectorDataTypes": {
      "description": "The available data types for Amazon Web Services CloudTrail data connector.",
      "properties": {
        "logs": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "Logs data type.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "AwsCloudTrailDataConnectorProperties": {
      "description": "Amazon Web Services CloudTrail data connector properties.",
      "properties": {
        "awsRoleArn": {
          "description": "The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/AwsCloudTrailDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "RestApiPollerDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents Rest Api Poller data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestApiPollerDataConnectorProperties",
          "description": "Rest Api Poller data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "RestApiPoller"
    },
    "RestApiPollerDataConnectorProperties": {
      "description": "Rest Api Poller data connector properties.",
      "properties": {
        "connectorDefinitionName": {
          "description": "The connector definition name (the dataConnectorDefinition resource id).",
          "type": "string"
        },
        "auth": {
          "description": "The a authentication model.",
          "$ref": "#/definitions/CcpAuthConfig"
        },
        "request": {
          "description": "The request configuration.",
          "$ref": "#/definitions/RestApiPollerRequestConfig"
        },
        "dcrConfig": {
          "description": "The DCR related properties.",
          "$ref": "#/definitions/DCRConfiguration"
        },
        "isActive": {
          "description": "Indicates whether the connector is active or not.",
          "type": "boolean"
        },
        "dataType": {
          "description": "The Log Analytics table destination.",
          "type": "string"
        },
        "response": {
          "description": "The response configuration.",
          "$ref": "#/definitions/CcpResponseConfig"
        },
        "paging": {
          "description": "The paging configuration.",
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        },
        "addOnAttributes": {
          "description": "The add on attributes. The key name will become attribute name (a column) and the value will become the attribute value in the payload.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "connectorDefinitionName",
        "auth",
        "request"
      ]
    },
    "RestApiPollerRequestConfig": {
      "type": "object",
      "description": "The request configuration.",
      "properties": {
        "apiEndpoint": {
          "description": "The API endpoint.",
          "type": "string"
        },
        "rateLimitQPS": {
          "description": "The Rate limit queries per second for the request..",
          "type": "integer",
          "x-nullable": true,
          "format": "int32"
        },
        "queryWindowInMin": {
          "description": "The query window in minutes for the request.",
          "type": "integer",
          "x-nullable": true,
          "format": "int32"
        },
        "httpMethod": {
          "description": "The HTTP method, default value GET.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "httpMethodVerb"
          }
        },
        "queryTimeFormat": {
          "description": "The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.",
          "example": "UnixTimestamp, UnixTimestampInMills, or more specific formats, for example: yyyy-MM-ddTHH:mm:ssZ",
          "type": "string"
        },
        "retryCount": {
          "description": "The retry count.",
          "type": "integer",
          "x-nullable": true,
          "format": "int32"
        },
        "timeoutInSeconds": {
          "description": "The timeout in seconds.",
          "type": "integer",
          "x-nullable": true,
          "format": "int32"
        },
        "isPostPayloadJson": {
          "description": "Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).",
          "type": "boolean",
          "x-nullable": true
        },
        "headers": {
          "description": "The header for the request for the remote server.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryParameters": {
          "description": "The HTTP query parameters to RESTful API.",
          "type": "object",
          "additionalProperties": {}
        },
        "queryParametersTemplate": {
          "description": "the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.",
          "type": "string"
        },
        "startTimeAttributeName": {
          "description": "The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.",
          "type": "string"
        },
        "endTimeAttributeName": {
          "description": "The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`",
          "type": "string"
        },
        "queryTimeIntervalAttributeName": {
          "description": "The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`",
          "type": "string"
        },
        "queryTimeIntervalPrepend": {
          "description": "The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.",
          "type": "string"
        },
        "queryTimeIntervalDelimiter": {
          "description": "The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.",
          "type": "string"
        }
      },
      "required": [
        "apiEndpoint"
      ]
    },
    "RestApiPollerRequestPagingKind": {
      "type": "string",
      "enum": [
        "LinkHeader",
        "NextPageToken",
        "NextPageUrl",
        "PersistentToken",
        "PersistentLinkHeader",
        "Offset",
        "CountBasedPaging"
      ],
      "description": "Type of paging",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "RestApiPollerRequestPagingKind",
        "values": [
          {
            "value": "LinkHeader"
          },
          {
            "value": "NextPageToken"
          },
          {
            "value": "NextPageUrl"
          },
          {
            "value": "PersistentToken"
          },
          {
            "value": "PersistentLinkHeader"
          },
          {
            "value": "Offset"
          },
          {
            "value": "CountBasedPaging"
          }
        ]
      }
    },
    "RestApiPollerRequestPagingConfig": {
      "description": "The request paging configuration.",
      "type": "object",
      "properties": {
        "pagingType": {
          "type": "string",
          "$ref": "#/definitions/RestApiPollerRequestPagingKind",
          "description": "Type of paging"
        },
        "pageSize": {
          "type": "integer",
          "description": "Page size",
          "format": "int32"
        },
        "pageSizeParameterName": {
          "type": "string",
          "description": "Page size parameter name"
        }
      },
      "x-ms-discriminator": {
        "propertyName": "pagingType",
        "mapping": {
          "LinkHeader": "#/components/schemas/RestApiPollerRequestPagingLinkHeaderConfig",
          "NextPageToken": "#/components/schemas/RestApiPollerRequestPagingTokenConfig",
          "NextPageUrl": "#/components/schemas/RestApiPollerRequestPagingNextPageUrlConfig",
          "PersistentToken": "#/components/schemas/RestApiPollerRequestPagingTokenConfig",
          "PersistentLinkHeader": "#/components/schemas/RestApiPollerRequestPagingLinkHeaderConfig",
          "Offset": "#/components/schemas/RestApiPollerRequestPagingOffsetConfig",
          "CountBasedPaging": "#/components/schemas/RestApiPollerRequestPagingCountBaseConfig"
        }
      },
      "required": [
        "pagingType"
      ]
    },
    "RestApiPollerRequestPagingLinkHeaderConfig": {
      "description": "The request paging configuration for LinkHeader and PersistentLinkHeader paging type parameters.",
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ],
      "type": "object",
      "properties": {
        "linkHeaderTokenJsonPath": {
          "type": "string",
          "description": "JSON path of link header token in HTTP response payload"
        },
        "linkHeaderRelLinkName": {
          "type": "string",
          "description": "Rel link name from the link header"
        }
      }
    },
    "RestApiPollerRequestPagingTokenConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ],
      "description": "The request paging configuration for NextPageToken and PersistentToken paging type parameters.",
      "type": "object",
      "properties": {
        "nextPageTokenJsonPath": {
          "type": "string",
          "description": "JSON path of next page token in HTTP response payload"
        },
        "hasNextFlagJsonPath": {
          "type": "string",
          "description": "JSON path of flag in HTTP response payload to indicate more pages"
        },
        "nextPageTokenResponseHeader": {
          "type": "string",
          "description": "HTTP response header name of next page token"
        },
        "nextPageParaName": {
          "type": "string",
          "description": "Next page parameter name in HTTP request"
        },
        "nextPageRequestHeader": {
          "type": "string",
          "description": "Next page header name in the request"
        }
      }
    },
    "RestApiPollerRequestPagingNextPageUrlConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ],
      "description": "The request paging configuration for NextPageUrl paging type parameters.",
      "type": "object",
      "properties": {
        "nextPageUrl": {
          "type": "string",
          "description": "Next page URL"
        },
        "nextPageUrlQueryParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Query parameters of next page URL"
        },
        "nextPageUrlQueryParametersTemplate": {
          "type": "string",
          "description": "Paging query parameters in string template format"
        },
        "nextPageParaName": {
          "type": "string",
          "description": "Next page parameter name in HTTP request"
        },
        "nextPageRequestHeader": {
          "type": "string",
          "description": "Next page header name in the request"
        },
        "hasNextFlagJsonPath": {
          "type": "string",
          "description": "JSON path of flag in HTTP response payload to indicate more pages"
        }
      }
    },
    "RestApiPollerRequestPagingOffsetConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ],
      "description": "The request paging configuration for Offset paging type parameters.",
      "type": "object",
      "properties": {
        "offsetParaName": {
          "type": "string",
          "description": "Offset parameter name in HTTP request"
        }
      }
    },
    "RestApiPollerRequestPagingCountBaseConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ],
      "description": "The request paging configuration for Count base paging type parameters.",
      "type": "object",
      "properties": {
        "zeroBasedIndexing": {
          "type": "boolean",
          "description": "Indicates whether the count is zero based"
        },
        "pageCountJsonPath": {
          "type": "string",
          "description": "JSON path of page count in HTTP response payload"
        },
        "pageNumberParaName": {
          "type": "string",
          "description": "Parameter name of page number in HTTP request"
        },
        "pageNumberJsonPath": {
          "type": "string",
          "description": "JSON path of page number in HTTP response payload"
        },
        "totalResultsJsonPath": {
          "type": "string",
          "description": "JSON path of total number of results in HTTP response payload"
        }
      }
    },
    "DCRConfiguration": {
      "description": "The configuration of the destination of the data.",
      "properties": {
        "dataCollectionEndpoint": {
          "description": "Represents the data collection ingestion endpoint in log analytics.",
          "type": "string"
        },
        "dataCollectionRuleImmutableId": {
          "description": "The data collection rule immutable id, the rule defines the transformation and data destination.",
          "type": "string"
        },
        "streamName": {
          "description": "The stream we are sending the data to.",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "dataCollectionEndpoint",
        "dataCollectionRuleImmutableId",
        "streamName"
      ]
    },
    "CcpAuthType": {
      "type": "string",
      "enum": [
        "Basic",
        "APIKey",
        "OAuth2",
        "AWS",
        "GCP",
        "Session",
        "JwtToken",
        "GitHub",
        "ServiceBus",
        "Oracle",
        "None"
      ],
      "description": "Type of paging",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "CcpAuthType",
        "values": [
          {
            "value": "Basic"
          },
          {
            "value": "APIKey"
          },
          {
            "value": "OAuth2"
          },
          {
            "value": "AWS"
          },
          {
            "value": "GCP"
          },
          {
            "value": "Session"
          },
          {
            "value": "JwtToken"
          },
          {
            "value": "GitHub"
          },
          {
            "value": "ServiceBus"
          },
          {
            "value": "Oracle"
          },
          {
            "value": "None"
          }
        ]
      }
    },
    "CcpAuthConfig": {
      "description": "Base Model for API authentication.",
      "properties": {
        "type": {
          "description": "The auth type",
          "$ref": "#/definitions/CcpAuthType",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "discriminator": "type"
    },
    "ApiKeyAuthModel": {
      "description": "Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.",
      "example": "ApiKey = placeholderApiKey, ApiKeyName = 'Authorization', ApiKeyIdentifier = 'token', IsApiKeyInPostPayload = false. will result in a new header on the request: 'Authorization: token placeholderApiKey'",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string",
          "description": "API Key for the user secret key credential",
          "x-secret": true
        },
        "apiKeyName": {
          "type": "string",
          "description": "API Key name"
        },
        "apiKeyIdentifier": {
          "type": "string",
          "description": "API Key Identifier"
        },
        "isApiKeyInPostPayload": {
          "type": "boolean",
          "description": "Flag to indicate if API key is set in HTTP POST payload"
        }
      },
      "required": [
        "apiKey",
        "apiKeyName"
      ],
      "x-ms-discriminator-value": "APIKey"
    },
    "AWSAuthModel": {
      "description": "Model for API authentication with AWS.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "roleArn": {
          "type": "string",
          "description": "AWS STS assume role ARN",
          "example": "arn:aws:iam::123456789012:role/your-role-name"
        },
        "externalId": {
          "type": "string",
          "description": "AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'"
        }
      },
      "required": [
        "roleArn"
      ],
      "x-ms-discriminator-value": "AWS"
    },
    "BasicAuthModel": {
      "description": "Model for API authentication with basic flow - user name + password.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user name."
        },
        "password": {
          "type": "string",
          "description": "The password",
          "x-secret": true
        }
      },
      "required": [
        "userName",
        "password"
      ],
      "x-ms-discriminator-value": "Basic"
    },
    "GCPAuthModel": {
      "description": "Model for API authentication for all GCP kind connectors.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "serviceAccountEmail": {
          "type": "string",
          "description": "GCP Service Account Email"
        },
        "projectNumber": {
          "type": "string",
          "description": "GCP Project Number"
        },
        "workloadIdentityProviderId": {
          "type": "string",
          "description": "GCP Workload Identity Provider ID"
        }
      },
      "required": [
        "serviceAccountEmail",
        "projectNumber",
        "workloadIdentityProviderId"
      ],
      "x-ms-discriminator-value": "GCP"
    },
    "GenericBlobSbsAuthModel": {
      "description": "Model for API authentication for working with service bus or storage account.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "credentialsConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Credentials for service bus namespace, keyvault uri for access key"
        },
        "storageAccountCredentialsConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Credentials for storage account, keyvault uri for access key"
        }
      },
      "x-ms-discriminator-value": "ServiceBus"
    },
    "GitHubAuthModel": {
      "description": "Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "properties": {
        "installationId": {
          "type": "string",
          "description": "The GitHubApp auth installation id."
        }
      },
      "x-ms-discriminator-value": "GitHub"
    },
    "NoneAuthModel": {
      "description": "Model for API authentication with no authentication method - public API.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "None"
    },
    "JwtAuthModel": {
      "description": "Model for API authentication with JWT. Simple exchange between user name + password to access token.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "properties": {
        "tokenEndpoint": {
          "type": "string",
          "description": "Token endpoint to request JWT"
        },
        "userName": {
          "description": "The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "password": {
          "description": "The password",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-secret": true
        },
        "queryParameters": {
          "description": "The custom query parameter we want to add once we send request to token endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "headers": {
          "description": "The custom headers we want to add once we send request to token endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isCredentialsInHeaders": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Flag indicating whether we want to send the user name and password to token endpoint in the headers."
        },
        "isJsonRequest": {
          "type": "boolean",
          "x-nullable": true,
          "default": false,
          "description": "Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded)."
        },
        "requestTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "default": 100,
          "maximum": 180,
          "description": "Request timeout in seconds."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "JwtToken",
      "required": [
        "tokenEndpoint",
        "userName",
        "password"
      ]
    },
    "OAuthModel": {
      "description": "Model for API authentication with OAuth2.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "properties": {
        "authorizationCode": {
          "type": "string",
          "description": "The user's authorization code.",
          "x-secret": true
        },
        "clientSecret": {
          "type": "string",
          "description": "The Application (client) secret that the OAuth provider assigned to your app.",
          "x-secret": true
        },
        "clientId": {
          "type": "string",
          "description": "The Application (client) ID that the OAuth provider assigned to your app."
        },
        "isCredentialsInHeaders": {
          "type": "boolean",
          "x-nullable": true,
          "default": false,
          "description": "Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers."
        },
        "scope": {
          "type": "string",
          "description": "The Application (client) Scope that the OAuth provider assigned to your app."
        },
        "redirectUri": {
          "type": "string",
          "format": "uri",
          "description": "The Application redirect url that the user config in the OAuth provider."
        },
        "grantType": {
          "type": "string",
          "description": "The grant type, usually will be 'authorization code'."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "The token endpoint. Defines the OAuth2 refresh token."
        },
        "tokenEndpointHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The token endpoint headers."
        },
        "tokenEndpointQueryParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The token endpoint query parameters."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "The authorization endpoint."
        },
        "authorizationEndpointHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The authorization endpoint headers."
        },
        "authorizationEndpointQueryParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The authorization endpoint query parameters."
        },
        "isJwtBearerFlow": {
          "type": "boolean",
          "description": "A value indicating whether it's a JWT flow."
        },
        "accessTokenPrepend": {
          "type": "string",
          "description": "Access token prepend. Default is 'Bearer'."
        }
      },
      "required": [
        "clientSecret",
        "clientId",
        "grantType",
        "tokenEndpoint"
      ],
      "type": "object",
      "x-ms-discriminator-value": "OAuth2"
    },
    "OracleAuthModel": {
      "description": "Model for API authentication for Oracle.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Oracle tenant ID"
        },
        "userId": {
          "type": "string",
          "description": "Oracle user ID"
        },
        "publicFingerprint": {
          "type": "string",
          "description": "Public Fingerprint"
        },
        "pemFile": {
          "type": "string",
          "description": "Content of the PRM file"
        }
      },
      "type": "object",
      "required": [
        "tenantId",
        "userId",
        "publicFingerprint",
        "pemFile"
      ],
      "x-ms-discriminator-value": "Oracle"
    },
    "SessionAuthModel": {
      "description": "Model for API authentication with session cookie.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "properties": {
        "userName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The user name attribute key value."
        },
        "password": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The password attribute name.",
          "x-secret": true
        },
        "queryParameters": {
          "type": "object",
          "additionalProperties": {},
          "description": "Query parameters to session service endpoint."
        },
        "isPostPayloadJson": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Indicating whether API key is set in HTTP POST payload."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "HTTP request headers to session service endpoint."
        },
        "sessionTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "description": "Session timeout in minutes."
        },
        "sessionIdName": {
          "type": "string",
          "description": "Session id attribute name from HTTP response header."
        },
        "sessionLoginRequestUri": {
          "type": "string",
          "description": "HTTP request URL to session service endpoint."
        }
      },
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "x-ms-discriminator-value": "Session"
    },
    "CcpResponseConfig": {
      "description": "A custom response configuration for a rule.",
      "properties": {
        "eventsJsonPaths": {
          "description": "The json paths, '$' char is the json root.",
          "example": "'$', '$.someProperty'",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "successStatusJsonPath": {
          "description": "The value where the status message/code should appear in the response.",
          "type": "string"
        },
        "successStatusValue": {
          "description": "The status value.",
          "type": "string",
          "x-nullable": true
        },
        "isGzipCompressed": {
          "description": "The value indicating whether the remote server support Gzip and we should expect Gzip response.",
          "type": "boolean"
        },
        "compressionAlgo": {
          "description": "The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.",
          "type": "string",
          "default": "gzip"
        },
        "format": {
          "description": "The response format. possible values are json,csv,xml",
          "type": "string",
          "default": "json"
        },
        "csvDelimiter": {
          "description": "The csv delimiter, in case the response format is CSV.",
          "type": "string"
        },
        "hasCsvBoundary": {
          "description": "The value indicating whether the response has CSV boundary in case the response in CSV format.",
          "type": "boolean",
          "x-nullable": true
        },
        "hasCsvHeader": {
          "description": "The value indicating whether the response has headers in case the response in CSV format.",
          "type": "boolean",
          "x-nullable": true
        },
        "convertChildPropertiesToArray": {
          "description": "The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.",
          "type": "boolean",
          "x-nullable": true
        },
        "csvEscape": {
          "description": "The character used to escape characters in CSV.",
          "type": "string",
          "x-nullable": true,
          "default": "\"",
          "minLength": 1,
          "maxLength": 1
        }
      },
      "type": "object",
      "required": [
        "eventsJsonPaths"
      ]
    },
    "DataConnector": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Data connector.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/DataConnectorKind",
          "description": "The data connector kind"
        }
      },
      "type": "object"
    },
    "DataConnectorKind": {
      "description": "The kind of the data connector",
      "enum": [
        "AzureActiveDirectory",
        "AzureSecurityCenter",
        "MicrosoftCloudAppSecurity",
        "ThreatIntelligence",
        "MicrosoftThreatIntelligence",
        "PremiumMicrosoftDefenderForThreatIntelligence",
        "Office365",
        "AmazonWebServicesCloudTrail",
        "AzureAdvancedThreatProtection",
        "MicrosoftDefenderAdvancedThreatProtection",
        "RestApiPoller"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DataConnectorKind",
        "values": [
          {
            "value": "AzureActiveDirectory"
          },
          {
            "value": "AzureSecurityCenter"
          },
          {
            "value": "MicrosoftCloudAppSecurity"
          },
          {
            "value": "ThreatIntelligence"
          },
          {
            "value": "MicrosoftThreatIntelligence"
          },
          {
            "value": "PremiumMicrosoftDefenderForThreatIntelligence"
          },
          {
            "value": "Office365"
          },
          {
            "value": "AmazonWebServicesCloudTrail"
          },
          {
            "value": "AzureAdvancedThreatProtection"
          },
          {
            "value": "MicrosoftDefenderAdvancedThreatProtection"
          },
          {
            "value": "RestApiPoller"
          }
        ]
      }
    },
    "DataConnectorList": {
      "description": "List all the data connectors.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of data connectors.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of data connectors.",
          "items": {
            "$ref": "#/definitions/DataConnector"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "DataConnectorDataTypeCommon": {
      "description": "Common field for data type in data connectors.",
      "properties": {
        "state": {
          "description": "Describe whether this data type connection is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DataTypeState"
          }
        }
      },
      "type": "object"
    },
    "DataConnectorTenantId": {
      "description": "Properties data connector on tenant level.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataConnectorWithAlertsProperties": {
      "description": "Data connector properties.",
      "properties": {
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "MCASDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents MCAS (Microsoft Cloud App Security) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MCASDataConnectorProperties",
          "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MicrosoftCloudAppSecurity"
    },
    "MCASDataConnectorDataTypes": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector"
        }
      ],
      "description": "The available data types for MCAS (Microsoft Cloud App Security) data connector.",
      "properties": {
        "alerts": {
          "$ref": "#/definitions/DataConnectorDataTypeCommon",
          "description": "Alerts data type connection."
        },
        "discoveryLogs": {
          "$ref": "#/definitions/DataConnectorDataTypeCommon",
          "description": "Discovery log data type connection."
        }
      },
      "type": "object"
    },
    "MCASDataConnectorProperties": {
      "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/MCASDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "MDATPDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MDATPDataConnectorProperties",
          "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MicrosoftDefenderAdvancedThreatProtection"
    },
    "MDATPDataConnectorProperties": {
      "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "TIDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents threat intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TIDataConnectorProperties",
          "description": "TI (Threat Intelligence) data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ThreatIntelligence"
    },
    "TIDataConnectorDataTypes": {
      "description": "The available data types for TI (Threat Intelligence) data connector.",
      "properties": {
        "indicators": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "Data type for indicators connection.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "TIDataConnectorProperties": {
      "description": "TI (Threat Intelligence) data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "tipLookbackPeriod": {
          "description": "The lookback period for the feed to be imported.",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "dataTypes": {
          "$ref": "#/definitions/TIDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "MSTIDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents Microsoft Threat Intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSTIDataConnectorProperties",
          "description": "Microsoft Threat Intelligence data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MicrosoftThreatIntelligence"
    },
    "MSTIDataConnectorDataTypes": {
      "description": "The available data types for Microsoft Threat Intelligence data connector.",
      "properties": {
        "microsoftEmergingThreatFeed": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "properties": {
            "lookbackPeriod": {
              "description": "The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.",
              "format": "date-time",
              "type": "string"
            }
          },
          "description": "Data type for Microsoft Threat Intelligence data connector.",
          "type": "object",
          "required": [
            "lookbackPeriod"
          ]
        }
      },
      "type": "object",
      "required": [
        "microsoftEmergingThreatFeed"
      ]
    },
    "MSTIDataConnectorProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ],
      "description": "Microsoft Threat Intelligence data connector properties.",
      "properties": {
        "dataTypes": {
          "$ref": "#/definitions/MSTIDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "required": [
        "dataTypes"
      ],
      "type": "object"
    },
    "PremiumMicrosoftDefenderForThreatIntelligence": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents Premium Microsoft Defender for Threat Intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PremiumMdtiDataConnectorProperties",
          "description": "Premium Microsoft Defender for Threat Intelligence data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "PremiumMicrosoftDefenderForThreatIntelligence"
    },
    "PremiumMdtiDataConnectorDataTypes": {
      "description": "The available data types for Premium Microsoft Defender for Threat Intelligence data connector.",
      "properties": {
        "connector": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "Data type for Premium Microsoft Defender for Threat Intelligence data connector.",
          "type": "object"
        }
      },
      "type": "object",
      "required": [
        "connector"
      ]
    },
    "PremiumMdtiDataConnectorProperties": {
      "description": "Premium Microsoft Defender for Threat Intelligence data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ],
      "properties": {
        "lookbackPeriod": {
          "description": "The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.",
          "format": "date-time",
          "type": "string"
        },
        "requiredSKUsPresent": {
          "description": "The flag to indicate whether the tenant has the premium SKU required to access this connector.",
          "type": "boolean"
        },
        "dataTypes": {
          "$ref": "#/definitions/PremiumMdtiDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "required": [
        "dataTypes",
        "lookbackPeriod"
      ],
      "type": "object"
    },
    "OfficeDataConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "description": "Represents office data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OfficeDataConnectorProperties",
          "description": "Office data connector properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Office365"
    },
    "OfficeDataConnectorDataTypes": {
      "description": "The available data types for office data connector.",
      "properties": {
        "exchange": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "Exchange data type connection.",
          "type": "object"
        },
        "sharePoint": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "SharePoint data type connection.",
          "type": "object"
        },
        "teams": {
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ],
          "description": "Teams data type connection.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "OfficeDataConnectorProperties": {
      "description": "Office data connector properties.",
      "properties": {
        "tenantId": {
          "description": "The tenant id to connect to, and get the data from.",
          "type": "string"
        },
        "dataTypes": {
          "$ref": "#/definitions/OfficeDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "type": "object"
    },
    "templateList": {
      "description": "List of all the template.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of templates.",
          "items": {
            "$ref": "#/definitions/templateModel"
          },
          "type": "array"
        },
        "nextLink": {
          "description": "URL to fetch the next page of template.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "templateModel": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Template resource definition.",
      "properties": {
        "properties": {
          "description": "template properties",
          "$ref": "#/definitions/templateProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "templateProperties": {
      "allOf": [
        {
          "$ref": "./common/ContentCommonTypes.json#/definitions/templateBaseProperties"
        },
        {
          "$ref": "#/definitions/templateAdditionalProperties"
        }
      ],
      "description": "Template property bag.",
      "required": [
        "contentId",
        "version",
        "displayName",
        "contentKind",
        "source",
        "packageId",
        "packageVersion",
        "contentProductId"
      ],
      "type": "object"
    },
    "templateAdditionalProperties": {
      "description": "additional properties of product template.",
      "type": "object",
      "properties": {
        "mainTemplate": {
          "$ref": "#/definitions/mainTemplate",
          "description": "The JSON of the ARM template to deploy active content. Expandable."
        },
        "dependantTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateProperties"
          },
          "description": "Dependant templates. Expandable.",
          "readOnly": true,
          "x-ms-identifiers": [
            "contentId"
          ]
        }
      }
    },
    "mainTemplate": {
      "description": "The JSON of the ARM template to deploy active content",
      "type": "object"
    },
    "SentinelOnboardingStateProperties": {
      "description": "The Sentinel onboarding state properties",
      "type": "object",
      "properties": {
        "customerManagedKey": {
          "description": "Flag that indicates the status of the CMK setting",
          "type": "boolean"
        }
      }
    },
    "SentinelOnboardingState": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Sentinel onboarding state",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SentinelOnboardingStateProperties",
          "description": "The Sentinel onboarding state object",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "SentinelOnboardingStatesList": {
      "description": "List of the Sentinel onboarding states",
      "properties": {
        "value": {
          "description": "Array of Sentinel onboarding states",
          "items": {
            "$ref": "#/definitions/SentinelOnboardingState"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "packageList": {
      "description": "List available packages.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of packages.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of packages.",
          "items": {
            "$ref": "#/definitions/packageModel"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "packageModel": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a Package in Azure Security Insights.",
      "properties": {
        "properties": {
          "description": "package properties",
          "$ref": "#/definitions/packageProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "packageProperties": {
      "description": "Describes package properties",
      "allOf": [
        {
          "$ref": "./common/ContentCommonTypes.json#/definitions/packageBaseProperties"
        }
      ],
      "required": [
        "contentId",
        "contentProductId",
        "contentKind",
        "version",
        "displayName"
      ],
      "type": "object"
    },
    "ActionType": {
      "description": "The type of the automation rule action.",
      "enum": [
        "ModifyProperties",
        "RunPlaybook",
        "AddIncidentTask"
      ],
      "type": "string",
      "example": "ModifyProperties",
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "value": "ModifyProperties",
            "description": "Modify an object's properties"
          },
          {
            "value": "RunPlaybook",
            "description": "Run a playbook on an object"
          },
          {
            "value": "AddIncidentTask",
            "description": "Add a task to an incident object"
          }
        ]
      }
    },
    "AddIncidentTaskActionProperties": {
      "description": "Describes an automation rule action to add a task to an incident.",
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the task.",
          "type": "string"
        },
        "description": {
          "description": "The description of the task.",
          "type": "string"
        }
      }
    },
    "AutomationRule": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRuleProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "AutomationRuleAction": {
      "description": "Describes an automation rule action.",
      "required": [
        "actionType",
        "order"
      ],
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType"
        }
      },
      "discriminator": "actionType"
    },
    "AutomationRuleAddIncidentTaskAction": {
      "description": "Describes an automation rule action to add a task to an incident",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "properties": {
        "actionConfiguration": {
          "type": "object",
          "$ref": "#/definitions/AddIncidentTaskActionProperties"
        }
      },
      "x-ms-discriminator-value": "AddIncidentTask",
      "x-ms-client-flatten": true
    },
    "AutomationRuleBooleanCondition": {
      "description": "Describes an automation rule condition with boolean operators.",
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/AutomationRuleBooleanConditionSupportedOperator"
        },
        "innerConditions": {
          "maxItems": 10,
          "minItems": 2,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AutomationRuleBooleanConditionSupportedOperator": {
      "description": "Describes a boolean condition operator.",
      "enum": [
        "And",
        "Or"
      ],
      "type": "string",
      "example": "And",
      "x-ms-enum": {
        "name": "AutomationRuleBooleanConditionSupportedOperator",
        "modelAsString": true,
        "values": [
          {
            "value": "And",
            "description": "Evaluates as true if all the item conditions are evaluated as true"
          },
          {
            "value": "Or",
            "description": "Evaluates as true if at least one of the item conditions are evaluated as true"
          }
        ]
      }
    },
    "AutomationRuleCondition": {
      "description": "Describes an automation rule condition.",
      "required": [
        "conditionType"
      ],
      "type": "object",
      "properties": {
        "conditionType": {
          "$ref": "#/definitions/ConditionType"
        }
      },
      "discriminator": "conditionType"
    },
    "AutomationRuleModifyPropertiesAction": {
      "description": "Describes an automation rule action to modify an object's properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "properties": {
        "actionConfiguration": {
          "type": "object",
          "$ref": "#/definitions/IncidentPropertiesAction"
        }
      },
      "x-ms-discriminator-value": "ModifyProperties",
      "x-ms-client-flatten": true
    },
    "AutomationRuleProperties": {
      "description": "Automation rule properties",
      "required": [
        "actions",
        "displayName",
        "order",
        "triggeringLogic"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name of the automation rule.",
          "maxLength": 500,
          "type": "string"
        },
        "order": {
          "format": "int32",
          "description": "The order of execution of the automation rule.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        },
        "triggeringLogic": {
          "$ref": "#/definitions/AutomationRuleTriggeringLogic"
        },
        "actions": {
          "description": "The actions to execute when the automation rule is triggered.",
          "maxItems": 20,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleAction"
          },
          "x-ms-identifiers": []
        },
        "lastModifiedTimeUtc": {
          "format": "date-time",
          "description": "The last time the automation rule was updated.",
          "type": "string",
          "readOnly": true
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "The time the automation rule was created.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "readOnly": true,
          "$ref": "../../../common/2.0/types.json#/definitions/ClientInfo"
        },
        "createdBy": {
          "readOnly": true,
          "$ref": "../../../common/2.0/types.json#/definitions/ClientInfo"
        }
      }
    },
    "AutomationRulePropertyArrayChangedConditionSupportedArrayType": {
      "enum": [
        "Alerts",
        "Labels",
        "Tactics",
        "Comments"
      ],
      "type": "string",
      "example": "Alerts",
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayChangedConditionSupportedArrayType",
        "modelAsString": true,
        "values": [
          {
            "value": "Alerts",
            "description": "Evaluate the condition on the alerts"
          },
          {
            "value": "Labels",
            "description": "Evaluate the condition on the labels"
          },
          {
            "value": "Tactics",
            "description": "Evaluate the condition on the tactics"
          },
          {
            "value": "Comments",
            "description": "Evaluate the condition on the comments"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayChangedConditionSupportedChangeType": {
      "enum": [
        "Added"
      ],
      "type": "string",
      "example": "Added",
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayChangedConditionSupportedChangeType",
        "modelAsString": true,
        "values": [
          {
            "value": "Added",
            "description": "Evaluate the condition on items added to the array"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayChangedValuesCondition": {
      "type": "object",
      "properties": {
        "arrayType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedConditionSupportedArrayType"
        },
        "changeType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedConditionSupportedChangeType"
        }
      }
    },
    "AutomationRulePropertyArrayConditionSupportedArrayConditionType": {
      "description": "Describes an array condition evaluation type.",
      "enum": [
        "AnyItem"
      ],
      "type": "string",
      "example": "AnyItem",
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayConditionSupportedArrayConditionType",
        "modelAsString": true,
        "values": [
          {
            "value": "AnyItem",
            "description": "Evaluate the condition as true if any item fulfills it"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayConditionSupportedArrayType": {
      "description": "Describes an array condition evaluated array type.",
      "enum": [
        "CustomDetails",
        "CustomDetailValues"
      ],
      "type": "string",
      "example": "CustomDetails",
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayConditionSupportedArrayType",
        "modelAsString": true,
        "values": [
          {
            "value": "CustomDetails",
            "description": "Evaluate the condition on the custom detail keys"
          },
          {
            "value": "CustomDetailValues",
            "description": "Evaluate the condition on a custom detail's values"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayValuesCondition": {
      "description": "Describes an automation rule condition on array properties.",
      "type": "object",
      "properties": {
        "arrayType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayConditionSupportedArrayType"
        },
        "arrayConditionType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayConditionSupportedArrayConditionType"
        },
        "itemConditions": {
          "maxItems": 10,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AutomationRulePropertyChangedConditionSupportedChangedType": {
      "enum": [
        "ChangedFrom",
        "ChangedTo"
      ],
      "type": "string",
      "example": "ChangedFrom",
      "x-ms-enum": {
        "name": "AutomationRulePropertyChangedConditionSupportedChangedType",
        "modelAsString": true,
        "values": [
          {
            "value": "ChangedFrom",
            "description": "Evaluate the condition on the previous value of the property"
          },
          {
            "value": "ChangedTo",
            "description": "Evaluate the condition on the updated value of the property"
          }
        ]
      }
    },
    "AutomationRulePropertyChangedConditionSupportedPropertyType": {
      "enum": [
        "IncidentSeverity",
        "IncidentStatus",
        "IncidentOwner"
      ],
      "type": "string",
      "example": "IncidentSeverity",
      "x-ms-enum": {
        "name": "AutomationRulePropertyChangedConditionSupportedPropertyType",
        "modelAsString": true,
        "values": [
          {
            "value": "IncidentSeverity",
            "description": "Evaluate the condition on the incident severity"
          },
          {
            "value": "IncidentStatus",
            "description": "Evaluate the condition on the incident status"
          },
          {
            "value": "IncidentOwner",
            "description": "Evaluate the condition on the incident owner"
          }
        ]
      }
    },
    "AutomationRulePropertyConditionSupportedOperator": {
      "enum": [
        "Equals",
        "NotEquals",
        "Contains",
        "NotContains",
        "StartsWith",
        "NotStartsWith",
        "EndsWith",
        "NotEndsWith"
      ],
      "type": "string",
      "example": "Equals",
      "x-ms-enum": {
        "name": "AutomationRulePropertyConditionSupportedOperator",
        "modelAsString": true,
        "values": [
          {
            "value": "Equals",
            "description": "Evaluates if the property equals at least one of the condition values"
          },
          {
            "value": "NotEquals",
            "description": "Evaluates if the property does not equal any of the condition values"
          },
          {
            "value": "Contains",
            "description": "Evaluates if the property contains at least one of the condition values"
          },
          {
            "value": "NotContains",
            "description": "Evaluates if the property does not contain any of the condition values"
          },
          {
            "value": "StartsWith",
            "description": "Evaluates if the property starts with any of the condition values"
          },
          {
            "value": "NotStartsWith",
            "description": "Evaluates if the property does not start with any of the condition values"
          },
          {
            "value": "EndsWith",
            "description": "Evaluates if the property ends with any of the condition values"
          },
          {
            "value": "NotEndsWith",
            "description": "Evaluates if the property does not end with any of the condition values"
          }
        ]
      }
    },
    "AutomationRulePropertyConditionSupportedProperty": {
      "description": "The property to evaluate in an automation rule property condition.",
      "enum": [
        "IncidentTitle",
        "IncidentDescription",
        "IncidentSeverity",
        "IncidentStatus",
        "IncidentRelatedAnalyticRuleIds",
        "IncidentTactics",
        "IncidentLabel",
        "IncidentProviderName",
        "IncidentUpdatedBySource",
        "IncidentCustomDetailsKey",
        "IncidentCustomDetailsValue",
        "AccountAadTenantId",
        "AccountAadUserId",
        "AccountName",
        "AccountNTDomain",
        "AccountPUID",
        "AccountSid",
        "AccountObjectGuid",
        "AccountUPNSuffix",
        "AlertProductNames",
        "AlertAnalyticRuleIds",
        "AzureResourceResourceId",
        "AzureResourceSubscriptionId",
        "CloudApplicationAppId",
        "CloudApplicationAppName",
        "DNSDomainName",
        "FileDirectory",
        "FileName",
        "FileHashValue",
        "HostAzureID",
        "HostName",
        "HostNetBiosName",
        "HostNTDomain",
        "HostOSVersion",
        "IoTDeviceId",
        "IoTDeviceName",
        "IoTDeviceType",
        "IoTDeviceVendor",
        "IoTDeviceModel",
        "IoTDeviceOperatingSystem",
        "IPAddress",
        "MailboxDisplayName",
        "MailboxPrimaryAddress",
        "MailboxUPN",
        "MailMessageDeliveryAction",
        "MailMessageDeliveryLocation",
        "MailMessageRecipient",
        "MailMessageSenderIP",
        "MailMessageSubject",
        "MailMessageP1Sender",
        "MailMessageP2Sender",
        "MalwareCategory",
        "MalwareName",
        "ProcessCommandLine",
        "ProcessId",
        "RegistryKey",
        "RegistryValueData",
        "Url"
      ],
      "type": "string",
      "example": "IncidentTitle",
      "x-ms-enum": {
        "name": "AutomationRulePropertyConditionSupportedProperty",
        "modelAsString": true,
        "values": [
          {
            "value": "IncidentTitle",
            "description": "The title of the incident"
          },
          {
            "value": "IncidentDescription",
            "description": "The description of the incident"
          },
          {
            "value": "IncidentSeverity",
            "description": "The severity of the incident"
          },
          {
            "value": "IncidentStatus",
            "description": "The status of the incident"
          },
          {
            "value": "IncidentRelatedAnalyticRuleIds",
            "description": "The related Analytic rule ids of the incident"
          },
          {
            "value": "IncidentTactics",
            "description": "The tactics of the incident"
          },
          {
            "value": "IncidentLabel",
            "description": "The labels of the incident"
          },
          {
            "value": "IncidentProviderName",
            "description": "The provider name of the incident"
          },
          {
            "value": "IncidentUpdatedBySource",
            "description": "The update source of the incident"
          },
          {
            "value": "IncidentCustomDetailsKey",
            "description": "The incident custom detail key"
          },
          {
            "value": "IncidentCustomDetailsValue",
            "description": "The incident custom detail value"
          },
          {
            "value": "AccountAadTenantId",
            "description": "The account Azure Active Directory tenant id"
          },
          {
            "value": "AccountAadUserId",
            "description": "The account Azure Active Directory user id"
          },
          {
            "value": "AccountName",
            "description": "The account name"
          },
          {
            "value": "AccountNTDomain",
            "description": "The account NetBIOS domain name"
          },
          {
            "value": "AccountPUID",
            "description": "The account Azure Active Directory Passport User ID"
          },
          {
            "value": "AccountSid",
            "description": "The account security identifier"
          },
          {
            "value": "AccountObjectGuid",
            "description": "The account unique identifier"
          },
          {
            "value": "AccountUPNSuffix",
            "description": "The account user principal name suffix"
          },
          {
            "value": "AlertProductNames",
            "description": "The name of the product of the alert"
          },
          {
            "value": "AlertAnalyticRuleIds",
            "description": "The analytic rule ids of the alert"
          },
          {
            "value": "AzureResourceResourceId",
            "description": "The Azure resource id"
          },
          {
            "value": "AzureResourceSubscriptionId",
            "description": "The Azure resource subscription id"
          },
          {
            "value": "CloudApplicationAppId",
            "description": "The cloud application identifier"
          },
          {
            "value": "CloudApplicationAppName",
            "description": "The cloud application name"
          },
          {
            "value": "DNSDomainName",
            "description": "The dns record domain name"
          },
          {
            "value": "FileDirectory",
            "description": "The file directory full path"
          },
          {
            "value": "FileName",
            "description": "The file name without path"
          },
          {
            "value": "FileHashValue",
            "description": "The file hash value"
          },
          {
            "value": "HostAzureID",
            "description": "The host Azure resource id"
          },
          {
            "value": "HostName",
            "description": "The host name without domain"
          },
          {
            "value": "HostNetBiosName",
            "description": "The host NetBIOS name"
          },
          {
            "value": "HostNTDomain",
            "description": "The host NT domain"
          },
          {
            "value": "HostOSVersion",
            "description": "The host operating system"
          },
          {
            "value": "IoTDeviceId",
            "description": "\"The IoT device id"
          },
          {
            "value": "IoTDeviceName",
            "description": "The IoT device name"
          },
          {
            "value": "IoTDeviceType",
            "description": "The IoT device type"
          },
          {
            "value": "IoTDeviceVendor",
            "description": "The IoT device vendor"
          },
          {
            "value": "IoTDeviceModel",
            "description": "The IoT device model"
          },
          {
            "value": "IoTDeviceOperatingSystem",
            "description": "The IoT device operating system"
          },
          {
            "value": "IPAddress",
            "description": "The IP address"
          },
          {
            "value": "MailboxDisplayName",
            "description": "The mailbox display name"
          },
          {
            "value": "MailboxPrimaryAddress",
            "description": "The mailbox primary address"
          },
          {
            "value": "MailboxUPN",
            "description": "The mailbox user principal name"
          },
          {
            "value": "MailMessageDeliveryAction",
            "description": "The mail message delivery action"
          },
          {
            "value": "MailMessageDeliveryLocation",
            "description": "The mail message delivery location"
          },
          {
            "value": "MailMessageRecipient",
            "description": "The mail message recipient"
          },
          {
            "value": "MailMessageSenderIP",
            "description": "The mail message sender IP address"
          },
          {
            "value": "MailMessageSubject",
            "description": "The mail message subject"
          },
          {
            "value": "MailMessageP1Sender",
            "description": "The mail message P1 sender"
          },
          {
            "value": "MailMessageP2Sender",
            "description": "The mail message P2 sender"
          },
          {
            "value": "MalwareCategory",
            "description": "The malware category"
          },
          {
            "value": "MalwareName",
            "description": "The malware name"
          },
          {
            "value": "ProcessCommandLine",
            "description": "The process execution command line"
          },
          {
            "value": "ProcessId",
            "description": "The process id"
          },
          {
            "value": "RegistryKey",
            "description": "The registry key path"
          },
          {
            "value": "RegistryValueData",
            "description": "The registry key value in string formatted representation"
          },
          {
            "value": "Url",
            "description": "The url"
          }
        ]
      }
    },
    "AutomationRulePropertyValuesChangedCondition": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/AutomationRulePropertyChangedConditionSupportedPropertyType"
        },
        "changeType": {
          "$ref": "#/definitions/AutomationRulePropertyChangedConditionSupportedChangedType"
        },
        "operator": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedOperator"
        },
        "propertyValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRulePropertyValuesCondition": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedProperty"
        },
        "operator": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedOperator"
        },
        "propertyValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRuleRunPlaybookAction": {
      "description": "Describes an automation rule action to run a playbook",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "properties": {
        "actionConfiguration": {
          "type": "object",
          "$ref": "#/definitions/PlaybookActionProperties"
        }
      },
      "x-ms-discriminator-value": "RunPlaybook",
      "x-ms-client-flatten": true
    },
    "AutomationRuleTriggeringLogic": {
      "description": "Describes automation rule triggering logic.",
      "required": [
        "isEnabled",
        "triggersOn",
        "triggersWhen"
      ],
      "type": "object",
      "properties": {
        "isEnabled": {
          "description": "Determines whether the automation rule is enabled or disabled.",
          "type": "boolean"
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Determines when the automation rule should automatically expire and be disabled.",
          "type": "string"
        },
        "triggersOn": {
          "$ref": "#/definitions/triggersOn"
        },
        "triggersWhen": {
          "$ref": "#/definitions/triggersWhen"
        },
        "conditions": {
          "description": "The conditions to evaluate to determine if the automation rule should be triggered on a given object.",
          "maxItems": 50,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": [
            "conditionType"
          ]
        }
      }
    },
    "AutomationRulesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRule"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "BooleanConditionProperties": {
      "description": "Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "properties": {
        "conditionProperties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRuleBooleanCondition"
        }
      },
      "x-ms-discriminator-value": "Boolean",
      "x-ms-client-flatten": true
    },
    "ConditionType": {
      "enum": [
        "Property",
        "PropertyArray",
        "PropertyChanged",
        "PropertyArrayChanged",
        "Boolean"
      ],
      "type": "string",
      "example": "Property",
      "x-ms-enum": {
        "name": "ConditionType",
        "modelAsString": true,
        "values": [
          {
            "value": "Property",
            "description": "Evaluate an object property value"
          },
          {
            "value": "PropertyArray",
            "description": "Evaluate an object array property value"
          },
          {
            "value": "PropertyChanged",
            "description": "Evaluate an object property changed value"
          },
          {
            "value": "PropertyArrayChanged",
            "description": "Evaluate an object array property changed value"
          },
          {
            "value": "Boolean",
            "description": "Apply a boolean operator (e.g AND, OR) to conditions"
          }
        ]
      }
    },
    "EntityManualTriggerRequestBody": {
      "description": "Describes the request body for triggering a playbook on an entity.",
      "required": [
        "logicAppsResourceId"
      ],
      "type": "object",
      "properties": {
        "incidentArmId": {
          "description": "The incident id to associate the entity with.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "scopes": [
                  "Extension"
                ],
                "type": "Microsoft.SecurityInsights/incidents"
              }
            ]
          }
        },
        "tenantId": {
          "format": "uuid",
          "description": "The tenant id of the playbook resource.",
          "type": "string"
        },
        "logicAppsResourceId": {
          "description": "The resource id of the playbook resource.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        }
      }
    },
    "IncidentPropertiesAction": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentSeverityEnum"
        },
        "status": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentStatusEnum"
        },
        "classification": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentClassificationEnum"
        },
        "classificationReason": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentClassificationReasonEnum"
        },
        "classificationComment": {
          "description": "Describes the reason the incident was closed.",
          "type": "string"
        },
        "owner": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentOwnerInfo"
        },
        "labels": {
          "description": "List of labels to add to the incident.",
          "type": "array",
          "x-ms-identifiers": [
            "labelName"
          ],
          "items": {
            "$ref": "./common/IncidentTypes.json#/definitions/IncidentLabel"
          }
        }
      }
    },
    "ManualTriggerRequestBody": {
      "description": "Describes the request body for triggering a playbook on an incident.",
      "required": [
        "logicAppsResourceId"
      ],
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "description": "The tenant id of the playbook resource.",
          "type": "string"
        },
        "logicAppsResourceId": {
          "description": "The resource id of the playbook resource.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        }
      }
    },
    "PlaybookActionProperties": {
      "required": [
        "logicAppResourceId"
      ],
      "type": "object",
      "properties": {
        "logicAppResourceId": {
          "description": "The resource id of the playbook resource.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        },
        "tenantId": {
          "format": "uuid",
          "description": "The tenant id of the playbook resource.",
          "type": "string"
        }
      }
    },
    "PropertyArrayChangedConditionProperties": {
      "description": "Describes an automation rule condition that evaluates an array property's value change",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "properties": {
        "conditionProperties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedValuesCondition"
        }
      },
      "x-ms-discriminator-value": "PropertyArrayChanged",
      "x-ms-client-flatten": true
    },
    "PropertyArrayConditionProperties": {
      "description": "Describes an automation rule condition that evaluates an array property's value",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "properties": {
        "conditionProperties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRulePropertyArrayValuesCondition"
        }
      },
      "x-ms-discriminator-value": "PropertyArray",
      "x-ms-client-flatten": true
    },
    "PropertyChangedConditionProperties": {
      "description": "Describes an automation rule condition that evaluates a property's value change",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "properties": {
        "conditionProperties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRulePropertyValuesChangedCondition"
        }
      },
      "x-ms-discriminator-value": "PropertyChanged",
      "x-ms-client-flatten": true
    },
    "PropertyConditionProperties": {
      "description": "Describes an automation rule condition that evaluates a property's value",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "properties": {
        "conditionProperties": {
          "type": "object",
          "$ref": "#/definitions/AutomationRulePropertyValuesCondition"
        }
      },
      "x-ms-discriminator-value": "Property",
      "x-ms-client-flatten": true
    },
    "triggersOn": {
      "enum": [
        "Incidents",
        "Alerts"
      ],
      "type": "string",
      "example": "Incidents",
      "x-ms-enum": {
        "name": "triggersOn",
        "modelAsString": true,
        "values": [
          {
            "value": "Incidents",
            "description": "Trigger on Incidents"
          },
          {
            "value": "Alerts",
            "description": "Trigger on Alerts"
          }
        ]
      }
    },
    "triggersWhen": {
      "enum": [
        "Created",
        "Updated"
      ],
      "type": "string",
      "example": "Created",
      "x-ms-enum": {
        "name": "triggersWhen",
        "modelAsString": true,
        "values": [
          {
            "value": "Created",
            "description": "Trigger on created objects"
          },
          {
            "value": "Updated",
            "description": "Trigger on updated objects"
          }
        ]
      }
    },
    "WatchlistList": {
      "description": "List all the watchlists.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of watchlists.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of watchlist.",
          "items": {
            "$ref": "#/definitions/Watchlist"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "Watchlist": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a Watchlist in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatchlistProperties",
          "description": "Watchlist properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "WatchlistProperties": {
      "description": "Describes watchlist properties",
      "properties": {
        "watchlistId": {
          "description": "The id (a Guid) of the watchlist",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the watchlist",
          "type": "string"
        },
        "provider": {
          "description": "The provider of the watchlist",
          "type": "string"
        },
        "source": {
          "description": "The filename of the watchlist, called 'source'",
          "type": "string"
        },
        "sourceType": {
          "description": "The sourceType of the watchlist",
          "enum": [
            "Local",
            "AzureStorage"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "sourceType",
            "values": [
              {
                "description": "The source from local file.",
                "value": "Local"
              },
              {
                "description": "The source from Azure storage.",
                "value": "AzureStorage"
              }
            ]
          }
        },
        "created": {
          "description": "The time the watchlist was created",
          "format": "date-time",
          "type": "string"
        },
        "updated": {
          "description": "The last time the watchlist was updated",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that created the watchlist",
          "type": "object"
        },
        "updatedBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that updated the watchlist",
          "type": "object"
        },
        "description": {
          "description": "A description of the watchlist",
          "type": "string"
        },
        "watchlistType": {
          "description": "The type of the watchlist",
          "type": "string"
        },
        "watchlistAlias": {
          "description": "The alias of the watchlist",
          "type": "string"
        },
        "isDeleted": {
          "description": "A flag that indicates if the watchlist is deleted or not",
          "type": "boolean"
        },
        "labels": {
          "description": "List of labels relevant to this watchlist",
          "items": {
            "$ref": "../../../common/2.0/types.json#/definitions/Label"
          },
          "type": "array"
        },
        "defaultDuration": {
          "description": "The default duration of a watchlist (in ISO 8601 duration format)",
          "format": "duration",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenantId where the watchlist belongs to",
          "type": "string"
        },
        "numberOfLinesToSkip": {
          "description": "The number of lines in a csv/tsv content to skip before the header",
          "type": "integer",
          "format": "int32"
        },
        "rawContent": {
          "description": "The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint",
          "type": "string"
        },
        "itemsSearchKey": {
          "description": "The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.",
          "type": "string"
        },
        "contentType": {
          "description": "The content type of the raw content. Example : text/csv or text/tsv",
          "type": "string"
        },
        "uploadStatus": {
          "description": "The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted",
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      },
      "required": [
        "displayName",
        "provider",
        "itemsSearchKey"
      ],
      "type": "object"
    },
    "WatchlistItemList": {
      "description": "List all the watchlist items.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of watchlist items.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of watchlist items.",
          "items": {
            "$ref": "#/definitions/WatchlistItem"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "WatchlistItem": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a Watchlist Item in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatchlistItemProperties",
          "description": "Watchlist Item properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "WatchlistItemProperties": {
      "description": "Describes watchlist item properties",
      "properties": {
        "watchlistItemType": {
          "description": "The type of the watchlist item",
          "type": "string"
        },
        "watchlistItemId": {
          "description": "The id (a Guid) of the watchlist item",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenantId to which the watchlist item belongs to",
          "type": "string"
        },
        "isDeleted": {
          "description": "A flag that indicates if the watchlist item is deleted or not",
          "type": "boolean"
        },
        "created": {
          "description": "The time the watchlist item was created",
          "format": "date-time",
          "type": "string"
        },
        "updated": {
          "description": "The last time the watchlist item was updated",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that created the watchlist item",
          "type": "object"
        },
        "updatedBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that updated the watchlist item",
          "type": "object"
        },
        "itemsKeyValue": {
          "description": "key-value pairs for a watchlist item",
          "type": "object"
        },
        "entityMapping": {
          "description": "key-value pairs for a watchlist item entity mapping",
          "type": "object"
        }
      },
      "required": [
        "itemsKeyValue"
      ],
      "type": "object"
    },
    "ProvisioningState": {
      "description": "Describes provisioning state",
      "enum": [
        "New",
        "InProgress",
        "Uploading",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "description": "The New provisioning state.",
            "value": "New"
          },
          {
            "description": "The InProgress provisioning state.",
            "value": "InProgress"
          },
          {
            "description": "The Uploading provisioning state.",
            "value": "Uploading"
          },
          {
            "description": "The Deleting provisioning state.",
            "value": "Deleting"
          },
          {
            "description": "The Succeeded provisioning state.",
            "value": "Succeeded"
          },
          {
            "description": "The Failed provisioning state.",
            "value": "Failed"
          },
          {
            "description": "The Canceled provisioning state.",
            "value": "Canceled"
          }
        ]
      },
      "readOnly": true
    },
    "Bookmark": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a bookmark in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BookmarkProperties",
          "description": "Bookmark properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "BookmarkList": {
      "description": "List all the bookmarks.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of cases.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of bookmarks.",
          "items": {
            "$ref": "#/definitions/Bookmark"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "BookmarkProperties": {
      "description": "Describes bookmark properties",
      "properties": {
        "created": {
          "description": "The time the bookmark was created",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that created the bookmark",
          "type": "object"
        },
        "displayName": {
          "description": "The display name of the bookmark",
          "type": "string"
        },
        "labels": {
          "description": "List of labels relevant to this bookmark",
          "items": {
            "$ref": "../../../common/2.0/types.json#/definitions/Label"
          },
          "type": "array"
        },
        "notes": {
          "description": "The notes of the bookmark",
          "type": "string"
        },
        "query": {
          "description": "The query of the bookmark.",
          "type": "string"
        },
        "queryResult": {
          "description": "The query result of the bookmark.",
          "type": "string"
        },
        "updated": {
          "description": "The last time the bookmark was updated",
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that updated the bookmark",
          "type": "object"
        },
        "eventTime": {
          "description": "The bookmark event time",
          "format": "date-time",
          "type": "string"
        },
        "queryStartTime": {
          "description": "The start time for the query",
          "format": "date-time",
          "type": "string"
        },
        "queryEndTime": {
          "description": "The end time for the query",
          "format": "date-time",
          "type": "string"
        },
        "incidentInfo": {
          "$ref": "./common/IncidentTypes.json#/definitions/IncidentInfo",
          "description": "Describes an incident that relates to bookmark",
          "type": "object"
        }
      },
      "required": [
        "displayName",
        "query"
      ],
      "type": "object"
    },
    "productPackageList": {
      "description": "List available packages.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of packages.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Array of packages.",
          "items": {
            "$ref": "#/definitions/productPackageModel"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "productPackageModel": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Represents a Package in Azure Security Insights.",
      "properties": {
        "properties": {
          "description": "package properties",
          "$ref": "#/definitions/productPackageProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "productPackageProperties": {
      "description": "Describes package properties",
      "allOf": [
        {
          "$ref": "./common/ContentCommonTypes.json#/definitions/packageBaseProperties",
          "description": "The content id of the package"
        },
        {
          "$ref": "#/definitions/productPackageAdditionalProperties",
          "description": "The package kind"
        }
      ],
      "required": [
        "contentId",
        "contentKind",
        "version",
        "displayName"
      ],
      "type": "object"
    },
    "productPackageAdditionalProperties": {
      "description": "product package additional properties",
      "properties": {
        "installedVersion": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/metadataVersion",
          "description": "The version of the installed package, null or absent means not installed."
        },
        "metadataResourceId": {
          "description": "The metadata resource id.",
          "type": "string",
          "format": "arm-id"
        },
        "packagedContent": {
          "$ref": "#/definitions/packagedContent",
          "description": "The json of the ARM template to deploy. Expandable."
        }
      },
      "type": "object"
    },
    "packagedContent": {
      "type": "object",
      "description": "The json of the ARM template to deploy"
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "ResourceWithEtag": {
      "allOf": [
        {
          "$ref": "../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "description": "An azure resource object with an Etag property",
      "properties": {
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientInfo": {
      "description": "Information on the client (user or application) that made some action",
      "properties": {
        "email": {
          "description": "The email of the client.",
          "type": "string"
        },
        "name": {
          "description": "The name of the client.",
          "type": "string"
        },
        "objectId": {
          "description": "The object id of the client.",
          "format": "uuid",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "The user principal name of the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserInfo": {
      "description": "User information that made some action",
      "properties": {
        "email": {
          "description": "The email of the user.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the user.",
          "readOnly": true,
          "type": "string"
        },
        "objectId": {
          "description": "The object id of the user.",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Label": {
      "description": "Label that will be used to tag and filter on.",
      "type": "string"
    },
    "CloudError": {
      "description": "Error response structure.",
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Error data"
        }
      },
      "type": "object"
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "Error details.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}