{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Web",
    "version": "2024-11-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all App Service Environments for a subscription.",
        "description": "Description for Get all App Service Environments for a subscription.",
        "operationId": "AppServiceEnvironments_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all App Service Environments for a subscription.": {
            "$ref": "./examples/AppServiceEnvironments_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all App Service Environments in a resource group.",
        "description": "Description for Get all App Service Environments in a resource group.",
        "operationId": "AppServiceEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all App Service Environments in a resource group.": {
            "$ref": "./examples/AppServiceEnvironments_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get the properties of an App Service Environment.",
        "description": "Description for Get the properties of an App Service Environment.",
        "operationId": "AppServiceEnvironments_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the properties of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update an App Service Environment.",
        "description": "Description for Create or update an App Service Environment.",
        "operationId": "AppServiceEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostingEnvironmentEnvelope",
            "in": "body",
            "description": "Configuration details of the App Service Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            },
            "headers": {
              "location": {
                "description": "Location header for asynchronous response.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Delete an App Service Environment.",
        "description": "Description for Delete an App Service Environment.",
        "operationId": "AppServiceEnvironments_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "Specify <code>true</code> to force the deletion even if the App Service Environment contains resources. The default is <code>false</code>.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Operation is in progress."
          },
          "204": {
            "description": "App Service Environment does not exist"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update an App Service Environment.",
        "description": "Description for Create or update an App Service Environment.",
        "operationId": "AppServiceEnvironments_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostingEnvironmentEnvelope",
            "in": "body",
            "description": "Configuration details of the App Service Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentPatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/AppServiceEnvironmentResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get the used, available, and total worker capacity an App Service Environment.",
        "description": "Description for Get the used, available, and total worker capacity an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListCapacities",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StampCapacityCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the used, available, and total worker capacity an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListCapacities.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get IP addresses assigned to an App Service Environment.",
        "description": "Description for Get IP addresses assigned to an App Service Environment.",
        "operationId": "AppServiceEnvironments_GetVipInfo",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get IP addresses assigned to an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_GetVipInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/changeVirtualNetwork": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Move an App Service Environment to a different VNET.",
        "description": "Description for Move an App Service Environment to a different VNET.",
        "operationId": "AppServiceEnvironments_ChangeVnet",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetInfo",
            "in": "body",
            "description": "Details for the new virtual network.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VirtualNetworkProfile"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Move an App Service Environment to a different VNET.": {
            "$ref": "./examples/AppServiceEnvironments_ChangeVnet.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/customdnssuffix": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get Custom Dns Suffix configuration of an App Service Environment",
        "operationId": "AppServiceEnvironments_GetAseCustomDnsSuffixConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CustomDnsSuffixConfiguration"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ASE custom DNS suffix configuration": {
            "$ref": "./examples/GetAseCustomDnsSuffixConfiguration.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Update Custom Dns Suffix configuration of an App Service Environment",
        "operationId": "AppServiceEnvironments_UpdateAseCustomDnsSuffixConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDnsSuffixConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CustomDnsSuffixConfiguration"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CustomDnsSuffixConfiguration"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update ASE custom DNS suffix configuration": {
            "$ref": "./examples/UpdateAseCustomDnsSuffixConfiguration.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Delete Custom Dns Suffix configuration of an App Service Environment",
        "operationId": "AppServiceEnvironments_DeleteAseCustomDnsSuffixConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ASE custom DNS suffix configuration": {
            "$ref": "./examples/DeleteAseCustomDnsSuffixConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get networking configuration of an App Service Environment",
        "description": "Description for Get networking configuration of an App Service Environment",
        "operationId": "AppServiceEnvironments_GetAseV3NetworkingConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AseV3NetworkingConfiguration"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get networking configuration of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_GetAseV3NetworkingConfiguration.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Update networking configuration of an App Service Environment",
        "description": "Description for Update networking configuration of an App Service Environment",
        "operationId": "AppServiceEnvironments_UpdateAseNetworkingConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "aseNetworkingConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AseV3NetworkingConfiguration"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AseV3NetworkingConfiguration"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update networking configuration of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_UpdateAseNetworkingConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get diagnostic information for an App Service Environment.",
        "description": "Description for Get diagnostic information for an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListDiagnostics",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostingEnvironmentDiagnostics"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get diagnostic information for an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListDiagnostics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get a diagnostics item for an App Service Environment.",
        "description": "Description for Get a diagnostics item for an App Service Environment.",
        "operationId": "AppServiceEnvironments_GetDiagnosticsItem",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticsName",
            "in": "path",
            "description": "Name of the diagnostics item.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostingEnvironmentDiagnostics"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a diagnostics item for an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_GetDiagnosticsItem.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/inboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get the network endpoints of all inbound dependencies of an App Service Environment.",
        "description": "Description for Get the network endpoints of all inbound dependencies of an App Service Environment.",
        "operationId": "AppServiceEnvironments_GetInboundNetworkDependenciesEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InboundEnvironmentEndpointCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the network endpoints of all inbound dependencies of an App Service Environment.": {
            "$ref": "./examples/GetInboundNetworkDependenciesEndpoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all multi-role pools.",
        "description": "Description for Get all multi-role pools.",
        "operationId": "AppServiceEnvironments_ListMultiRolePools",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkerPoolCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all multi-role pools.": {
            "$ref": "./examples/AppServiceEnvironments_ListMultiRolePools.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get properties of a multi-role pool.",
        "description": "Description for Get properties of a multi-role pool.",
        "operationId": "AppServiceEnvironments_GetMultiRolePool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get properties of a multi-role pool.": {
            "$ref": "./examples/AppServiceEnvironments_GetMultiRolePool.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update a multi-role pool.",
        "description": "Description for Create or update a multi-role pool.",
        "operationId": "AppServiceEnvironments_CreateOrUpdateMultiRolePool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "multiRolePoolEnvelope",
            "in": "body",
            "description": "Properties of the multi-role pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a multi-role pool.": {
            "$ref": "./examples/AppServiceEnvironments_CreateOrUpdateMultiRolePool.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update a multi-role pool.",
        "description": "Description for Create or update a multi-role pool.",
        "operationId": "AppServiceEnvironments_UpdateMultiRolePool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "multiRolePoolEnvelope",
            "in": "body",
            "description": "Properties of the multi-role pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a multi-role pool.": {
            "$ref": "./examples/AppServiceEnvironments_CreateOrUpdateMultiRolePool.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get metric definitions for a specific instance of a multi-role pool of an App Service Environment.",
        "description": "Description for Get metric definitions for a specific instance of a multi-role pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListMultiRolePoolInstanceMetricDefinitions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance in the multi-role pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricDefinitionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get metric definitions for a specific instance of a multi-role pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListMultiRolePoolInstanceMetricDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get metric definitions for a multi-role pool of an App Service Environment.",
        "description": "Description for Get metric definitions for a multi-role pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListMultiRoleMetricDefinitions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricDefinitionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get metric definitions for a multi-role pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListMultiRoleMetricDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get available SKUs for scaling a multi-role pool.",
        "description": "Description for Get available SKUs for scaling a multi-role pool.",
        "operationId": "AppServiceEnvironments_ListMultiRolePoolSkus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuInfoCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get available SKUs for scaling a multi-role pool.": {
            "$ref": "./examples/AppServiceEnvironments_ListMultiRolePoolSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/testUpgradeAvailableNotification": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Send a test notification that an upgrade is available for this App Service Environment.",
        "operationId": "AppServiceEnvironments_TestUpgradeAvailableNotification",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Send a test notification that an upgrade is available for this App Service Environment": {
            "$ref": "./examples/AppServiceEnvironments_TestUpgradeAvailableNotification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/upgrade": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Initiate an upgrade of an App Service Environment if one is available.",
        "description": "Description for Initiate an upgrade of an App Service Environment if one is available.",
        "operationId": "AppServiceEnvironments_Upgrade",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Operation is in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Initiate an upgrade on an App Service Environment": {
            "$ref": "./examples/AppServiceEnvironments_Upgrade.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get usage metrics for a multi-role pool of an App Service Environment.",
        "description": "Description for Get usage metrics for a multi-role pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListMultiRoleUsages",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsageCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get usage metrics for a multi-role pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListMultiRoleUsages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "List all currently running operations on the App Service Environment.",
        "description": "Description for List all currently running operations on the App Service Environment.",
        "operationId": "AppServiceEnvironments_ListOperations",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/Operation"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all currently running operations on the App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get the network endpoints of all outbound dependencies of an App Service Environment.",
        "description": "Description for Get the network endpoints of all outbound dependencies of an App Service Environment.",
        "operationId": "AppServiceEnvironments_GetOutboundNetworkDependenciesEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the network endpoints of all outbound dependencies of an App Service Environment.": {
            "$ref": "./examples/GetOutboundNetworkDependenciesEndpoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Gets the list of private endpoints associated with a hosting environment",
        "description": "Description for Gets the list of private endpoints associated with a hosting environment",
        "operationId": "AppServiceEnvironments_GetPrivateEndpointConnectionList",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateEndpointConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the list of private endpoints associated with a hosting environment.": {
            "$ref": "./examples/AppServiceEnvironments_GetPrivateEndpointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Gets a private endpoint connection",
        "description": "Description for Gets a private endpoint connection",
        "operationId": "AppServiceEnvironments_GetPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a private endpoint connection.": {
            "$ref": "./examples/AppServiceEnvironments_GetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Approves or rejects a private endpoint connection",
        "description": "Description for Approves or rejects a private endpoint connection",
        "operationId": "AppServiceEnvironments_ApproveOrRejectPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointWrapper",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approves or rejects a private endpoint connection.": {
            "$ref": "./examples/AppServiceEnvironments_ApproveOrRejectPrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Deletes a private endpoint connection",
        "description": "Description for Deletes a private endpoint connection",
        "operationId": "AppServiceEnvironments_DeletePrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a private endpoint connection.": {
            "$ref": "./examples/AppServiceEnvironments_DeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateLinkResources": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Gets the private link resources",
        "description": "Description for Gets the private link resources",
        "operationId": "AppServiceEnvironments_GetPrivateLinkResources",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateLinkResourcesWrapper"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the private link resources.": {
            "$ref": "./examples/AppServiceEnvironments_GetPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Reboot all machines in an App Service Environment.",
        "description": "Description for Reboot all machines in an App Service Environment.",
        "operationId": "AppServiceEnvironments_Reboot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reboot all machines in an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Reboot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Resume an App Service Environment.",
        "description": "Description for Resume an App Service Environment.",
        "operationId": "AppServiceEnvironments_Resume",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resume an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Resume.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all App Service plans in an App Service Environment.",
        "description": "Description for Get all App Service plans in an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListAppServicePlans",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlanCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all App Service plans in an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListAppServicePlans.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all apps in an App Service Environment.",
        "description": "Description for Get all apps in an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListWebApps",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Comma separated list of app properties to include.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all apps in an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListWebApps.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend": {
      "post": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Suspend an App Service Environment.",
        "description": "Description for Suspend an App Service Environment.",
        "operationId": "AppServiceEnvironments_Suspend",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Suspend an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_Suspend.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get global usage metrics of an App Service Environment.",
        "description": "Description for Get global usage metrics of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListUsages",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get global usage metrics of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListUsages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get all worker pools of an App Service Environment.",
        "description": "Description for Get all worker pools of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListWorkerPools",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkerPoolCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all worker pools of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListWorkerPools.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get properties of a worker pool.",
        "description": "Description for Get properties of a worker pool.",
        "operationId": "AppServiceEnvironments_GetWorkerPool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get properties of a worker pool.": {
            "$ref": "./examples/AppServiceEnvironments_GetWorkerPool.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update a worker pool.",
        "description": "Description for Create or update a worker pool.",
        "operationId": "AppServiceEnvironments_CreateOrUpdateWorkerPool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolEnvelope",
            "in": "body",
            "description": "Properties of the worker pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get properties of a worker pool.": {
            "$ref": "./examples/AppServiceEnvironments_CreateOrUpdateWorkerPool.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Create or update a worker pool.",
        "description": "Description for Create or update a worker pool.",
        "operationId": "AppServiceEnvironments_UpdateWorkerPool",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolEnvelope",
            "in": "body",
            "description": "Properties of the worker pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/WorkerPoolResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get properties of a worker pool.": {
            "$ref": "./examples/AppServiceEnvironments_CreateOrUpdateWorkerPool.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get metric definitions for a specific instance of a worker pool of an App Service Environment.",
        "description": "Description for Get metric definitions for a specific instance of a worker pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListWorkerPoolInstanceMetricDefinitions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "path",
            "description": "Name of the instance in the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricDefinitionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get metric definitions for a specific instance of a worker pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListWorkerPoolInstanceMetricDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get metric definitions for a worker pool of an App Service Environment.",
        "description": "Description for Get metric definitions for a worker pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListWebWorkerMetricDefinitions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricDefinitionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get metric definitions for a worker pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListWebWorkerMetricDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get available SKUs for scaling a worker pool.",
        "description": "Description for Get available SKUs for scaling a worker pool.",
        "operationId": "AppServiceEnvironments_ListWorkerPoolSkus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuInfoCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get available SKUs for scaling a worker pool.": {
            "$ref": "./examples/AppServiceEnvironments_ListWorkerPoolSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages": {
      "get": {
        "tags": [
          "AppServiceEnvironments"
        ],
        "summary": "Get usage metrics for a worker pool of an App Service Environment.",
        "description": "Description for Get usage metrics for a worker pool of an App Service Environment.",
        "operationId": "AppServiceEnvironments_ListWebWorkerUsages",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerPoolName",
            "in": "path",
            "description": "Name of the worker pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsageCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get usage metrics for a worker pool of an App Service Environment.": {
            "$ref": "./examples/AppServiceEnvironments_ListWebWorkerUsages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/resourceHealthMetadata": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "List all ResourceHealthMetadata for all sites in the subscription.",
        "description": "Description for List all ResourceHealthMetadata for all sites in the subscription.",
        "operationId": "ResourceHealthMetadata_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadataCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ResourceHealthMetadata for a subscription": {
            "$ref": "./examples/ListResourceHealthMetadataBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/resourceHealthMetadata": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "List all ResourceHealthMetadata for all sites in the resource group in the subscription.",
        "description": "Description for List all ResourceHealthMetadata for all sites in the resource group in the subscription.",
        "operationId": "ResourceHealthMetadata_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadataCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ResourceHealthMetadata for a resource group": {
            "$ref": "./examples/ListResourceHealthMetadataByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resourceHealthMetadata": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "Gets the category of ResourceHealthMetadata to use for the given site as a collection",
        "description": "Description for Gets the category of ResourceHealthMetadata to use for the given site as a collection",
        "operationId": "ResourceHealthMetadata_ListBySite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadataCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ResourceHealthMetadata for a site": {
            "$ref": "./examples/ListResourceHealthMetadataBySite.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resourceHealthMetadata/default": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "Gets the category of ResourceHealthMetadata to use for the given site",
        "description": "Description for Gets the category of ResourceHealthMetadata to use for the given site",
        "operationId": "ResourceHealthMetadata_GetBySite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadata"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceHealthMetadata": {
            "$ref": "./examples/GetResourceHealthMetadataBySite.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resourceHealthMetadata": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "Gets the category of ResourceHealthMetadata to use for the given site as a collection",
        "description": "Description for Gets the category of ResourceHealthMetadata to use for the given site as a collection",
        "operationId": "ResourceHealthMetadata_ListBySiteSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadataCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ResourceHealthMetadata for a site": {
            "$ref": "./examples/ListResourceHealthMetadataBySite.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resourceHealthMetadata/default": {
      "get": {
        "tags": [
          "ResourceHealthMetadata"
        ],
        "summary": "Gets the category of ResourceHealthMetadata to use for the given site",
        "description": "Description for Gets the category of ResourceHealthMetadata to use for the given site",
        "operationId": "ResourceHealthMetadata_GetBySiteSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHealthMetadata"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceHealthMetadata": {
            "$ref": "./examples/GetResourceHealthMetadataBySite.json"
          }
        }
      }
    },
    "/providers/Microsoft.Web/availableStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available application frameworks and their versions",
        "description": "Description for Get available application frameworks and their versions",
        "operationId": "Provider_GetAvailableStacks",
        "parameters": [
          {
            "$ref": "#/parameters/osTypeSelectedParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/functionAppStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available Function app frameworks and their versions",
        "description": "Description for Get available Function app frameworks and their versions",
        "operationId": "Provider_GetFunctionAppStacks",
        "parameters": [
          {
            "$ref": "#/parameters/stackOsTypeParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunctionAppStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Function App Stacks": {
            "$ref": "./examples/GetFunctionAppStacks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/locations/{location}/functionAppStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available Function app frameworks and their versions for location",
        "description": "Description for Get available Function app frameworks and their versions for location",
        "operationId": "Provider_GetFunctionAppStacksForLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Function App stack location.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/stackOsTypeParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunctionAppStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Locations Function App Stacks": {
            "$ref": "./examples/GetFunctionAppStacksForLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/locations/{location}/webAppStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available Web app frameworks and their versions for location",
        "description": "Description for Get available Web app frameworks and their versions for location",
        "operationId": "Provider_GetWebAppStacksForLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Web App stack location.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/stackOsTypeParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Locations Web App Stacks": {
            "$ref": "./examples/GetWebAppStacksForLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/operations": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Gets all available operations for the Microsoft.Web resource provider. Also exposes resource metric definitions",
        "description": "Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes resource metric definitions",
        "operationId": "Provider_ListOperations",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmOperationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List operations": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/webAppStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available Web app frameworks and their versions",
        "description": "Description for Get available Web app frameworks and their versions",
        "operationId": "Provider_GetWebAppStacks",
        "parameters": [
          {
            "$ref": "#/parameters/stackOsTypeParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Web App Stacks": {
            "$ref": "./examples/GetWebAppStacks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/availableStacks": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get available application frameworks and their versions",
        "description": "Description for Get available application frameworks and their versions",
        "operationId": "Provider_GetAvailableStacksOnPrem",
        "parameters": [
          {
            "$ref": "#/parameters/osTypeSelectedParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationStackCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get all apps for a subscription.",
        "description": "Description for Get all apps for a subscription.",
        "operationId": "WebApps_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Web apps for subscription": {
            "$ref": "./examples/ListWebApps.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all web, mobile, and API apps in the specified resource group.",
        "description": "Description for Gets all web, mobile, and API apps in the specified resource group.",
        "operationId": "WebApps_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "includeSlots",
            "in": "query",
            "description": "Specify <strong>true</strong> to include deployment slots in results. The default is false, which only gives you the production slot of all apps.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Web Apps by Resource group": {
            "$ref": "./examples/ListWebAppsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the details of a web, mobile, or API app.",
        "description": "Description for Gets the details of a web, mobile, or API app.",
        "operationId": "WebApps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Web App": {
            "$ref": "./examples/GetWebApp.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "description": "Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "A JSON representation of the app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update web app": {
            "$ref": "./examples/CreateOrUpdateWebApp.json"
          },
          "Create or Update Flex Consumption function app": {
            "$ref": "./examples/CreateOrUpdateFunctionAppFlexConsumption.json"
          },
          "Create or Update Flex Consumption function app with details": {
            "$ref": "./examples/CreateOrUpdateFunctionAppFlexConsumptionWithDetails.json"
          },
          "Clone web app": {
            "$ref": "./examples/CloneWebApp.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a web, mobile, or API app, or one of the deployment slots.",
        "description": "Description for Deletes a web, mobile, or API app, or one of the deployment slots.",
        "operationId": "WebApps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteMetrics",
            "in": "query",
            "description": "If true, web app metrics are also deleted.",
            "type": "boolean"
          },
          {
            "name": "deleteEmptyServerFarm",
            "in": "query",
            "description": "Specify false if you want to keep empty App Service plan. By default, empty App Service plan is deleted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app."
          },
          "204": {
            "description": "Successfully deleted web app."
          },
          "404": {
            "description": "Web app not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Web app": {
            "$ref": "./examples/DeleteWebApp.json"
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "description": "Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "A JSON representation of the app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SitePatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update web app": {
            "$ref": "./examples/UpdateWebApp.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/analyzeCustomHostname": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Analyze a custom hostname.",
        "description": "Description for Analyze a custom hostname.",
        "operationId": "WebApps_AnalyzeCustomHostname",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "description": "Custom hostname.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Analyze custom hostname for webapp.": {
            "$ref": "./examples/AnalyzeCustomHostName.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Applies the configuration settings from the target slot onto the current slot.",
        "description": "Description for Applies the configuration settings from the target slot onto the current slot.",
        "operationId": "WebApps_ApplySlotConfigToProduction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apply web app slot config": {
            "$ref": "./examples/ApplySlotConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a backup of an app.",
        "description": "Description for Creates a backup of an app.",
        "operationId": "WebApps_Backup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backup web app": {
            "$ref": "./examples/BackupWebApp.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Description for Gets existing backups of an app.",
        "operationId": "WebApps_ListBackups",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List web app backups": {
            "$ref": "./examples/ListWebAppBackups.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a backup of an app by its ID.",
        "description": "Description for Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get web app backup": {
            "$ref": "./examples/GetWebAppBackup.json"
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup of an app by its ID.",
        "description": "Description for Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete web app backup": {
            "$ref": "./examples/DeleteWebAppBackup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Description for Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get web app backup with secrets": {
            "$ref": "./examples/GetWebAppBackupWithSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "description": "Description for Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_Restore",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restore web app from backup": {
            "$ref": "./examples/RestoreWebAppBackup.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.",
        "description": "Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.",
        "operationId": "WebApps_ListBasicPublishingCredentialsPolicies",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublishingCredentialsPoliciesCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Publishing Credentials Policies": {
            "$ref": "./examples/ListPublishingCredentialsPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether FTP is allowed on the site or not.",
        "description": "Description for Returns whether FTP is allowed on the site or not.",
        "operationId": "WebApps_GetFtpAllowed",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get FTP Allowed": {
            "$ref": "./examples/GetPublishingCredentialsPolicy.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates whether FTP is allowed on the site or not.",
        "description": "Description for Updates whether FTP is allowed on the site or not.",
        "operationId": "WebApps_UpdateFtpAllowed",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "csmPublishingAccessPoliciesEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update FTP Allowed": {
            "$ref": "./examples/UpdatePublishingCredentialsPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether Scm basic auth is allowed on the site or not.",
        "description": "Description for Returns whether Scm basic auth is allowed on the site or not.",
        "operationId": "WebApps_GetScmAllowed",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SCM Allowed": {
            "$ref": "./examples/GetPublishingCredentialsPolicy.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates whether user publishing credentials are allowed on the site or not.",
        "description": "Description for Updates whether user publishing credentials are allowed on the site or not.",
        "operationId": "WebApps_UpdateScmAllowed",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "csmPublishingAccessPoliciesEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update SCM Allowed": {
            "$ref": "./examples/UpdatePublishingCredentialsPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the configurations of an app",
        "description": "Description for List the configurations of an app",
        "operationId": "WebApps_ListConfigurations",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResourceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List web app configurations": {
            "$ref": "./examples/ListWebAppConfigurations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the application settings of an app.",
        "description": "Description for Replaces the application settings of an app.",
        "operationId": "WebApps_UpdateApplicationSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "Application settings of the app.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update App Settings": {
            "$ref": "./examples/UpdateAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the application settings of an app.",
        "description": "Description for Gets the application settings of an app.",
        "operationId": "WebApps_ListApplicationSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Settings": {
            "$ref": "./examples/ListAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Authentication / Authorization settings associated with web app.",
        "description": "Description for Updates the Authentication / Authorization settings associated with web app.",
        "operationId": "WebApps_UpdateAuthSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettings",
            "in": "body",
            "description": "Auth settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Auth Settings": {
            "$ref": "./examples/UpdateAuthSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Authentication/Authorization settings of an app.",
        "description": "Description for Gets the Authentication/Authorization settings of an app.",
        "operationId": "WebApps_GetAuthSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Auth Settings": {
            "$ref": "./examples/ListAuthSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets site's Authentication / Authorization settings for apps via the V2 format",
        "description": "Description for Gets site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_GetAuthSettingsV2WithoutSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Auth Settings without Secrets": {
            "$ref": "./examples/GetAuthSettingsV2WithoutSecrets.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates site's Authentication / Authorization settings for apps via the V2 format",
        "description": "Description for Updates site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_UpdateAuthSettingsV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettingsV2",
            "in": "body",
            "description": "Auth settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Auth Settings V2": {
            "$ref": "./examples/UpdateAuthSettingsV2.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2/list": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets site's Authentication / Authorization settings for apps via the V2 format",
        "description": "Description for Gets site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_GetAuthSettingsV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Auth Settings V2": {
            "$ref": "./examples/ListAuthSettingsV2.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/azurestorageaccounts": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Azure storage account configurations of an app.",
        "description": "Description for Updates the Azure storage account configurations of an app.",
        "operationId": "WebApps_UpdateAzureStorageAccounts",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "azureStorageAccounts",
            "in": "body",
            "description": "Azure storage accounts of the app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Azure Storage Accounts": {
            "$ref": "./examples/UpdateAzureStorageAccounts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/azurestorageaccounts/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Azure storage account configurations of an app.",
        "description": "Description for Gets the Azure storage account configurations of an app.",
        "operationId": "WebApps_ListAzureStorageAccounts",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the backup configuration of an app.",
        "description": "Description for Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Edited backup configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the backup configuration of an app.",
        "description": "Description for Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted backup configuration."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration of an app.",
        "description": "Description for Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/appsettings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference app settings and status of an app",
        "description": "Description for Gets the config reference app settings and status of an app",
        "operationId": "WebApps_GetAppSettingsKeyVaultReferences",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Key Vault references for app settings": {
            "$ref": "./examples/GetKeyVaultReferencesForAppSettings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/appsettings/{appSettingKey}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference and status of an app",
        "description": "Description for Gets the config reference and status of an app",
        "operationId": "WebApps_GetAppSettingKeyVaultReference",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettingKey",
            "in": "path",
            "description": "App Setting key name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReference"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Key Vault app setting reference": {
            "$ref": "./examples/GetKeyVaultReferencesForAppSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/connectionstrings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference app settings and status of an app",
        "description": "Description for Gets the config reference app settings and status of an app",
        "operationId": "WebApps_GetSiteConnectionStringKeyVaultReferences",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/connectionstrings/{connectionStringKey}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference and status of an app",
        "description": "Description for Gets the config reference and status of an app",
        "operationId": "WebApps_GetSiteConnectionStringKeyVaultReference",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStringKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReference"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the connection strings of an app.",
        "description": "Description for Replaces the connection strings of an app.",
        "operationId": "WebApps_UpdateConnectionStrings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStrings",
            "in": "body",
            "description": "Connection strings of the app or deployment slot. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the connection strings of an app.",
        "description": "Description for Gets the connection strings of an app.",
        "operationId": "WebApps_ListConnectionStrings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the logging configuration of an app.",
        "description": "Description for Gets the logging configuration of an app.",
        "operationId": "WebApps_GetDiagnosticLogsConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the logging configuration of an app.",
        "description": "Description for Updates the logging configuration of an app.",
        "operationId": "WebApps_UpdateDiagnosticLogsConfig",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteLogsConfig",
            "in": "body",
            "description": "A SiteLogsConfig JSON object that contains the logging configuration to change in the \"properties\" property.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the metadata of an app.",
        "description": "Description for Replaces the metadata of an app.",
        "operationId": "WebApps_UpdateMetadata",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Edited metadata of the app or deployment slot. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the metadata of an app.",
        "description": "Description for Gets the metadata of an app.",
        "operationId": "WebApps_ListMetadata",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Git/FTP publishing credentials of an app.",
        "description": "Description for Gets the Git/FTP publishing credentials of an app.",
        "operationId": "WebApps_ListPublishingCredentials",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/User"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Push settings associated with web app.",
        "description": "Description for Updates the Push settings associated with web app.",
        "operationId": "WebApps_UpdateSitePushSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushSettings",
            "in": "body",
            "description": "Push settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Push settings associated with web app.",
        "description": "Description for Gets the Push settings associated with web app.",
        "operationId": "WebApps_ListSitePushSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the names of app settings and connection strings that stick to the slot (not swapped).",
        "description": "Description for Gets the names of app settings and connection strings that stick to the slot (not swapped).",
        "operationId": "WebApps_ListSlotConfigurationNames",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the names of application settings and connection string that remain with the slot during swap operation.",
        "description": "Description for Updates the names of application settings and connection string that remain with the slot during swap operation.",
        "operationId": "WebApps_UpdateSlotConfigurationNames",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotConfigNames",
            "in": "body",
            "description": "Names of application settings and connection strings. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "description": "Description for Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "operationId": "WebApps_GetConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Site Config": {
            "$ref": "./examples/GetSiteConfig.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the configuration of an app.",
        "description": "Description for Updates the configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "JSON representation of a SiteConfig object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Site Config": {
            "$ref": "./examples/UpdateSiteConfig.json"
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the configuration of an app.",
        "description": "Description for Updates the configuration of an app.",
        "operationId": "WebApps_UpdateConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "JSON representation of a SiteConfig object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "description": "Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "operationId": "WebApps_ListConfigurationSnapshotInfo",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigurationSnapshotInfoCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "description": "Description for Gets a snapshot of the configuration of an app at a previous point in time.",
        "operationId": "WebApps_GetConfigurationSnapshot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Reverts the configuration of an app to a previous snapshot.",
        "description": "Description for Reverts the configuration of an app to a previous snapshot.",
        "operationId": "WebApps_RecoverSiteConfigurationSnapshot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the last lines of docker logs for the given site",
        "description": "Description for Gets the last lines of docker logs for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogs",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs/zip/download": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the ZIP archived docker log files for the given site",
        "description": "Description for Gets the ZIP archived docker log files for the given site",
        "operationId": "WebApps_GetContainerLogsZip",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List continuous web jobs for an app, or a deployment slot.",
        "description": "Description for List continuous web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListContinuousWebJobs",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContinuousWebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a continuous web job by its ID for an app, or a deployment slot.",
        "description": "Description for Gets a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetContinuousWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/ContinuousWebJob"
            }
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a continuous web job by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteContinuousWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Continuous web job does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start a continuous web job for an app, or a deployment slot.",
        "description": "Description for Start a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StartContinuousWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop a continuous web job for an app, or a deployment slot.",
        "description": "Description for Stop a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StopContinuousWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deploymentStatus": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployment statuses for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListProductionSiteDeploymentStatuses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatusCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Deployment Status": {
            "$ref": "./examples/ListSiteDeploymentStatus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deploymentStatus/{deploymentStatusId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the deployment status for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetProductionSiteDeploymentStatus",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentStatusId",
            "in": "path",
            "description": "GUID of the deployment operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatus"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deployment Status": {
            "$ref": "./examples/GetSiteDeploymentStatus.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments for an app, or a deployment slot.",
        "description": "Description for List deployments for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeployments",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a deployment by its ID for an app, or a deployment slot.",
        "description": "Description for Get a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetDeployment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment for an app, or a deployment slot.",
        "description": "Description for Create a deployment for an app, or a deployment slot.",
        "operationId": "WebApps_CreateDeployment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing deployment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Deployment details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a deployment by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteDeployment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted deployment."
          },
          "204": {
            "description": "Deployment does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployment log for specific deployment for an app, or a deployment slot.",
        "description": "Description for List deployment log for specific deployment for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentLog",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a specific deployment. This is the value of the name property in the JSON response from \"GET /api/sites/{siteName}/deployments\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/discoverbackup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information about the databases stored in a backup.",
        "description": "Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information about the databases stored in a backup.",
        "operationId": "WebApps_DiscoverBackup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists ownership identifiers for domain associated with web app.",
        "description": "Description for Lists ownership identifiers for domain associated with web app.",
        "operationId": "WebApps_ListDomainOwnershipIdentifiers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/IdentifierCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get domain ownership identifier for web app.",
        "description": "Description for Get domain ownership identifier for web app.",
        "operationId": "WebApps_GetDomainOwnershipIdentifier",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "description": "Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifier",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a domain ownership identifier for a web app.",
        "description": "Description for Deletes a domain ownership identifier for a web app.",
        "operationId": "WebApps_DeleteDomainOwnershipIdentifier",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted domain ownership identifier."
          },
          "204": {
            "description": "Domain ownership identifier does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "description": "Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_UpdateDomainOwnershipIdentifier",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the status of the last MSDeploy operation.",
        "description": "Description for Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke the MSDeploy web app extension.",
        "description": "Description for Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateMSDeployOperation",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MSDeploy",
            "in": "body",
            "description": "Details of MSDeploy operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSDeploy"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Deployment is scheduled.",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "409": {
            "description": "Another deployment is in progress.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the MSDeploy Log for the last MSDeploy operation.",
        "description": "Description for Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployLog",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MSDeploy log returned.",
            "schema": {
              "$ref": "#/definitions/MSDeployLog"
            }
          },
          "404": {
            "description": "MSDeploy log not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/onedeploy": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke onedeploy status API /api/deployments and gets the deployment status for the site",
        "description": "Description for Invoke onedeploy status API /api/deployments and gets the deployment status for the site",
        "operationId": "WebApps_GetOneDeployStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke the OneDeploy publish web app extension.",
        "description": "Description for Invoke the OneDeploy publish web app extension.",
        "operationId": "WebApps_CreateOneDeployOperation",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the functions for a web site, or a deployment slot.",
        "description": "Description for List the functions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function information returned.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelopeCollection"
            }
          },
          "404": {
            "description": "Function with an ID of {functionName} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/admin/token": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Fetch a short lived token that can be exchanged for a master key.",
        "description": "Description for Fetch a short lived token that can be exchanged for a master key.",
        "operationId": "WebApps_GetFunctionsAdminToken",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function information by its ID for web site, or a deployment slot.",
        "description": "Description for Get function information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetFunction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function information returned.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          "404": {
            "description": "Function with a name of {functionName} does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create function for web site, or a deployment slot.",
        "description": "Description for Create function for web site, or a deployment slot.",
        "operationId": "WebApps_CreateFunction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "function_envelope",
            "in": "body",
            "description": "Function details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Function created.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a function for web site, or a deployment slot.",
        "description": "Description for Delete a function for web site, or a deployment slot.",
        "operationId": "WebApps_DeleteFunction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Function deleted."
          },
          "404": {
            "description": "Function does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/keys/{keyName}": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add or update a function secret.",
        "description": "Description for Add or update a function secret.",
        "operationId": "WebApps_CreateOrUpdateFunctionSecret",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The name of the function.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "body",
            "description": "The key to create or update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Key was created.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "200": {
            "description": "Key was updated.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a function secret.",
        "description": "Description for Delete a function secret.",
        "operationId": "WebApps_DeleteFunctionSecret",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The name of the function.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "404": {
            "description": "Key was not found.",
            "x-ms-error-response": true
          },
          "204": {
            "description": "Key was deleted."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/listkeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function keys for a function in a web site, or a deployment slot.",
        "description": "Description for Get function keys for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionKeys",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function keys returned.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/listsecrets": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function secrets for a function in a web site, or a deployment slot.",
        "description": "Description for Get function secrets for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function secrets returned.",
            "schema": {
              "$ref": "#/definitions/FunctionSecrets"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/listkeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get host secrets for a function app.",
        "description": "Description for Get host secrets for a function app.",
        "operationId": "WebApps_ListHostKeys",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Host secrets returned.",
            "schema": {
              "$ref": "#/definitions/HostKeys"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/listsyncstatus": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "This is to allow calling via powershell and ARM template.",
        "description": "Description for This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Syncs function trigger metadata to the management database",
        "description": "Description for Syncs function trigger metadata to the management database",
        "operationId": "WebApps_SyncFunctions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/{keyType}/{keyName}": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add or update a host level secret.",
        "description": "Description for Add or update a host level secret.",
        "operationId": "WebApps_CreateOrUpdateHostSecret",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyType",
            "in": "path",
            "description": "The type of host key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "body",
            "description": "The key to create or update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Key was created.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "200": {
            "description": "Key was updated.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a host level secret.",
        "description": "Description for Delete a host level secret.",
        "operationId": "WebApps_DeleteHostSecret",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyType",
            "in": "path",
            "description": "The type of host key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "404": {
            "description": "Key was not found.",
            "x-ms-error-response": true
          },
          "204": {
            "description": "Key was deleted."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get hostname bindings for an app or a deployment slot.",
        "description": "Description for Get hostname bindings for an app or a deployment slot.",
        "operationId": "WebApps_ListHostNameBindings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the named hostname binding for an app (or deployment slot, if specified).",
        "description": "Description for Get the named hostname binding for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetHostNameBinding",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a hostname binding for an app.",
        "description": "Description for Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdateHostNameBinding",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostNameBinding",
            "in": "body",
            "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a hostname binding for an app.",
        "description": "Description for Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeleteHostNameBinding",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "description": "Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay.",
        "description": "Description for Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_CreateOrUpdateHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes a Hybrid Connection from this site.",
        "description": "Description for Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hybrid connection."
          },
          "404": {
            "description": "Hybrid connection does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay.",
        "description": "Description for Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_UpdateHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionRelays": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "description": "Description for Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "description": "Description for Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListRelayServiceConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a hybrid connection configuration by its name.",
        "description": "Description for Gets a hybrid connection configuration by its name.",
        "operationId": "WebApps_GetRelayServiceConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "description": "Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Details of the hybrid connection configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a relay service connection by its name.",
        "description": "Description for Deletes a relay service connection by its name.",
        "operationId": "WebApps_DeleteRelayServiceConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted relay service connection."
          },
          "404": {
            "description": "Relay service connection does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "description": "Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_UpdateRelayServiceConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Details of the hybrid connection configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all scale-out instances of an app.",
        "description": "Description for Gets all scale-out instances of an app.",
        "operationId": "WebApps_ListInstanceIdentifiers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppInstanceStatusCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all scale-out instances of an app.",
        "description": "Description for Gets all scale-out instances of an app.",
        "operationId": "WebApps_GetInstanceInfo",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebSiteInstanceStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get site instance info": {
            "$ref": "./examples/GetSiteInstanceInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the status of the last MSDeploy operation.",
        "description": "Description for Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMsDeployStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke the MSDeploy web app extension.",
        "description": "Description for Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateInstanceMSDeployOperation",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MSDeploy",
            "in": "body",
            "description": "Details of MSDeploy operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSDeploy"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Deployment is scheduled.",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "409": {
            "description": "Another deployment is in progress.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the MSDeploy Log for the last MSDeploy operation.",
        "description": "Description for Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMSDeployLog",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MSDeploy log returned.",
            "schema": {
              "$ref": "#/definitions/MSDeployLog"
            }
          },
          "404": {
            "description": "MSDeploy log not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "description": "Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcesses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process terminated.",
            "schema": {
              "$ref": "#/definitions/ProcessInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcess",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "description": "Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteInstanceProcess",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/dump": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessDump",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessModules",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessModule",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseAddress",
            "in": "path",
            "description": "Module base address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/threads": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessThreads",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Thread information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessThreadInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Shows whether an app can be cloned to another resource group or subscription.",
        "description": "Description for Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneable",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listbackups": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Description for Gets existing backups of an app.",
        "operationId": "WebApps_ListSiteBackups",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List backups": {
            "$ref": "./examples/ListSlotBackups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listsyncfunctiontriggerstatus": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "This is to allow calling via powershell and ARM template.",
        "description": "Description for This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncFunctionTriggers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunctionSecrets"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/updatemachinekey": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the machine key of an app.",
        "operationId": "WebApps_UpdateMachineKey",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates the machine key for a site": {
            "$ref": "./examples/UpdateMachineKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migrate": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app.",
        "description": "Description for Restores a web app.",
        "operationId": "WebApps_MigrateStorage",
        "parameters": [
          {
            "name": "subscriptionName",
            "in": "query",
            "description": "Azure subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "migrationOptions",
            "in": "body",
            "description": "Migration migrationOptions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMigrationOptions"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageMigrationResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Migrates a local (in-app) MySql database to a remote MySql database.",
        "description": "Description for Migrates a local (in-app) MySql database to a remote MySql database.",
        "operationId": "WebApps_MigrateMySql",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "migrationRequestEnvelope",
            "in": "body",
            "description": "MySql migration options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrateMySqlRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Operation"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql/status": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "description": "Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "operationId": "WebApps_GetMigrateMySqlStatus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MigrateMySqlStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a Swift Virtual Network connection.",
        "description": "Description for Gets a Swift Virtual Network connection.",
        "operationId": "WebApps_GetSwiftVirtualNetworkConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\r\nin use by another App Service Plan other than the one this App is in.",
        "description": "Description for Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\nin use by another App Service Plan other than the one this App is in.",
        "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheck",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a Swift Virtual Network connection from an app (or deployment slot).",
        "description": "Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).",
        "operationId": "WebApps_DeleteSwiftVirtualNetwork",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\r\nin use by another App Service Plan other than the one this App is in.",
        "description": "Description for Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\nin use by another App Service Plan other than the one this App is in.",
        "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheck",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all network features used by the app (or deployment slot, if specified).",
        "description": "Description for Gets all network features used by the app (or deployment slot, if specified).",
        "operationId": "WebApps_ListNetworkFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "in": "path",
            "description": "The type of view. Only \"summary\" is supported at this time.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NetworkFeatures"
            }
          },
          "404": {
            "description": "The requested view does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTraceOperation",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the current status of a network trace operation for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraceOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site (To be deprecated).",
        "description": "Description for Start capturing network packets for the site (To be deprecated).",
        "operationId": "WebApps_StartWebSiteNetworkTrace",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/startOperation": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site.",
        "description": "Description for Start capturing network packets for the site.",
        "operationId": "WebApps_StartWebSiteNetworkTraceOperation",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a new network trace operation for a site": {
            "$ref": "./examples/StartWebSiteNetworkTraceOperation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site.",
        "description": "Description for Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopWebSiteNetworkTrace",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Stopped."
          },
          "204": {
            "description": "Stopped."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop a currently running network trace operation for a site": {
            "$ref": "./examples/StopWebSiteNetworkTrace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTraces",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get NetworkTraces for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTraces/current/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTraceOperationV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the current status of a network trace operation for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraceOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTraces/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTracesV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get NetworkTraces for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Generates a new publishing password for an app (or deployment slot, if specified).",
        "description": "Description for Generates a new publishing password for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GenerateNewSitePublishingPassword",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generate new password."
          },
          "204": {
            "description": "Successfully generate new password."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/perfcounters": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets perfmon counters for web app.",
        "description": "Description for Gets perfmon counters for web app.",
        "operationId": "WebApps_ListPerfMonCounters",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerfMonCounterCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/phplogging": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets web app's event logs.",
        "description": "Description for Gets web app's event logs.",
        "operationId": "WebApps_GetSitePhpErrorLogFlag",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SitePhpErrorLogFlag"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the premier add-ons of an app.",
        "description": "Description for Gets the premier add-ons of an app.",
        "operationId": "WebApps_ListPremierAddOns",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named add-on of an app.",
        "description": "Description for Gets a named add-on of an app.",
        "operationId": "WebApps_GetPremierAddOn",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates a named add-on of an app.",
        "description": "Description for Updates a named add-on of an app.",
        "operationId": "WebApps_AddPremierAddOn",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "A JSON representation of the edited premier add-on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a premier add-on from an app.",
        "description": "Description for Delete a premier add-on from an app.",
        "operationId": "WebApps_DeletePremierAddOn",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted premier add-on."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates a named add-on of an app.",
        "description": "Description for Updates a named add-on of an app.",
        "operationId": "WebApps_UpdatePremierAddOn",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "A JSON representation of the edited premier add-on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOnPatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "description": "Description for Gets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "operationId": "WebApps_GetPrivateAccess",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "description": "Description for Sets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "operationId": "WebApps_PutPrivateAccessVnet",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "access",
            "in": "body",
            "description": "The information for the private access",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the list of private endpoint connections associated with a site",
        "description": "Description for Gets the list of private endpoint connections associated with a site",
        "operationId": "WebApps_GetPrivateEndpointConnectionList",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateEndpointConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a private endpoint connection",
        "description": "Description for Gets a private endpoint connection",
        "operationId": "WebApps_GetPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection for a site.": {
            "$ref": "./examples/GetSitePrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Approves or rejects a private endpoint connection",
        "description": "Description for Approves or rejects a private endpoint connection",
        "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointWrapper",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approves or rejects a private endpoint connection for a site.": {
            "$ref": "./examples/ApproveRejectSitePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a private endpoint connection",
        "description": "Description for Deletes a private endpoint connection",
        "operationId": "WebApps_DeletePrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a private endpoint connection for a site.": {
            "$ref": "./examples/DeleteSitePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateLinkResources": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the private link resources",
        "description": "Description for Gets the private link resources",
        "operationId": "WebApps_GetPrivateLinkResources",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateLinkResourcesWrapper"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get private link resources of a site": {
            "$ref": "./examples/GetSitePrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "description": "Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcesses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process terminated.",
            "schema": {
              "$ref": "#/definitions/ProcessInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcess",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "description": "Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteProcess",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/dump": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessDump",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessModules",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessModule",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseAddress",
            "in": "path",
            "description": "Module base address.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/threads": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessThreads",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Thread information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessThreadInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get public certificates for an app or a deployment slot.",
        "description": "Description for Get public certificates for an app or a deployment slot.",
        "operationId": "WebApps_ListPublicCertificates",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the named public certificate for an app (or deployment slot, if specified).",
        "description": "Description for Get the named public certificate for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetPublicCertificate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a hostname binding for an app.",
        "description": "Description for Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdatePublicCertificate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificate",
            "in": "body",
            "description": "Public certificate details. This is the JSON representation of a PublicCertificate object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a hostname binding for an app.",
        "description": "Description for Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeletePublicCertificate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the publishing profile for an app (or deployment slot, if specified).",
        "description": "Description for Gets the publishing profile for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecrets",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publishingProfileOptions",
            "in": "body",
            "description": "Specifies publishingProfileOptions for publishing profile. For example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingProfileOptions"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "description": "Description for Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "operationId": "WebApps_ResetProductionSlotConfig",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restarts an app (or deployment slot, if specified).",
        "description": "Description for Restarts an app (or deployment slot, if specified).",
        "operationId": "WebApps_Restart",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "softRestart",
            "in": "query",
            "description": "Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts and reprovisions the app.",
            "type": "boolean"
          },
          {
            "name": "synchronous",
            "in": "query",
            "description": "Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restarted app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreFromBackupBlob": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores an app from a backup blob in Azure Storage.",
        "description": "Description for Restores an app from a backup blob in Azure Storage.",
        "operationId": "WebApps_RestoreFromBackupBlob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreFromDeletedApp": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a deleted web app to this web app.",
        "description": "Description for Restores a deleted web app to this web app.",
        "operationId": "WebApps_RestoreFromDeletedApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreRequest",
            "in": "body",
            "description": "Deleted web app restore information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletedAppRestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreSnapshot": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app from a snapshot.",
        "description": "Description for Restores a web app from a snapshot.",
        "operationId": "WebApps_RestoreSnapshot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreRequest",
            "in": "body",
            "description": "Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists all the site containers of a site, or a deployment slot.",
        "operationId": "WebApps_ListSiteContainers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteContainerCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers/{containerName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a site container of a site, or a deployment slot.",
        "operationId": "WebApps_GetSiteContainer",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates or Updates a site container for a site, or a deployment slot.",
        "operationId": "WebApps_CreateOrUpdateSiteContainer",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Container Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Site container was created.",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "200": {
            "description": "Site container was updated.",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a site container for a site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteContainer",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted site container."
          },
          "204": {
            "description": "Site container does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of siteextensions for a web site, or a deployment slot.",
        "description": "Description for Get list of siteextensions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListSiteExtensions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SiteExtension information returned.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfoCollection"
            }
          },
          "404": {
            "description": "SiteExtension not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get site extension information by its ID for a web site, or a deployment slot.",
        "description": "Description for Get site extension information by its ID for a web site, or a deployment slot.",
        "operationId": "WebApps_GetSiteExtension",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SiteExtension information returned.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Install site extension on a web site, or a deployment slot.",
        "description": "Description for Install site extension on a web site, or a deployment slot.",
        "operationId": "WebApps_InstallSiteExtension",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Site Extension created.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "200": {
            "description": "Site Extension created.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "429": {
            "description": "Site Extension is being installed on another request: Rejecting current request.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Remove a site extension from a web site, or a deployment slot.",
        "description": "Description for Remove a site extension from a web site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteExtension",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "SiteExtension terminated."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets an app's deployment slots.",
        "description": "Description for Gets an app's deployment slots.",
        "operationId": "WebApps_ListSlots",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Web App Slots": {
            "$ref": "./examples/ListWebAppSlots.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the details of a web, mobile, or API app.",
        "description": "Description for Gets the details of a web, mobile, or API app.",
        "operationId": "WebApps_GetSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. By default, this API returns the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Web App Slot": {
            "$ref": "./examples/GetWebAppSlot.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "description": "Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_CreateOrUpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "A JSON representation of the app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot to create or update. By default, this API attempts to create or modify the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Web App Slot": {
            "$ref": "./examples/CreateOrUpdateWebAppSlot.json"
          },
          "Clone web app slot": {
            "$ref": "./examples/CloneWebAppSlot.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a web, mobile, or API app, or one of the deployment slots.",
        "description": "Description for Deletes a web, mobile, or API app, or one of the deployment slots.",
        "operationId": "WebApps_DeleteSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot to delete. By default, the API deletes the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteMetrics",
            "in": "query",
            "description": "If true, web app metrics are also deleted.",
            "type": "boolean"
          },
          {
            "name": "deleteEmptyServerFarm",
            "in": "query",
            "description": "Specify false if you want to keep empty App Service plan. By default, empty App Service plan is deleted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app."
          },
          "204": {
            "description": "Successfully deleted web app."
          },
          "404": {
            "description": "Web app not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Web App Slot": {
            "$ref": "./examples/DeleteWebAppSlot.json"
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "description": "Description for Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_UpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "A JSON representation of the app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SitePatchResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot to create or update. By default, this API attempts to create or modify the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Site"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Web App Slot": {
            "$ref": "./examples/UpdateWebAppSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/analyzeCustomHostname": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Analyze a custom hostname.",
        "description": "Description for Analyze a custom hostname.",
        "operationId": "WebApps_AnalyzeCustomHostnameSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "description": "Custom hostname.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Analyze custom hostname for slot": {
            "$ref": "./examples/AnalyzeCustomHostNameSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Applies the configuration settings from the target slot onto the current slot.",
        "description": "Description for Applies the configuration settings from the target slot onto the current slot.",
        "operationId": "WebApps_ApplySlotConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a backup of an app.",
        "description": "Description for Creates a backup of an app.",
        "operationId": "WebApps_BackupSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a backup for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Description for Gets existing backups of an app.",
        "operationId": "WebApps_ListBackupsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get backups of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a backup of an app by its ID.",
        "description": "Description for Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup of an app by its ID.",
        "description": "Description for Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackupSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Description for Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecretsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "description": "Description for Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_RestoreSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.",
        "description": "Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given site.",
        "operationId": "WebApps_ListBasicPublishingCredentialsPoliciesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublishingCredentialsPoliciesCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Publishing Credentials Policies": {
            "$ref": "./examples/ListPublishingCredentialsPoliciesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether FTP is allowed on the site or not.",
        "description": "Description for Returns whether FTP is allowed on the site or not.",
        "operationId": "WebApps_GetFtpAllowedSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get FTP Allowed": {
            "$ref": "./examples/GetPublishingCredentialsPolicySlot.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates whether FTP is allowed on the site or not.",
        "description": "Description for Updates whether FTP is allowed on the site or not.",
        "operationId": "WebApps_UpdateFtpAllowedSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "csmPublishingAccessPoliciesEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update FTP Allowed": {
            "$ref": "./examples/UpdatePublishingCredentialsPolicySlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns whether Scm basic auth is allowed on the site or not.",
        "description": "Description for Returns whether Scm basic auth is allowed on the site or not.",
        "operationId": "WebApps_GetScmAllowedSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SCM Allowed": {
            "$ref": "./examples/GetPublishingCredentialsPolicySlot.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates whether user publishing credentials are allowed on the site or not.",
        "description": "Description for Updates whether user publishing credentials are allowed on the site or not.",
        "operationId": "WebApps_UpdateScmAllowedSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "csmPublishingAccessPoliciesEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update SCM Allowed": {
            "$ref": "./examples/UpdatePublishingCredentialsPolicySlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the configurations of an app",
        "description": "Description for List the configurations of an app",
        "operationId": "WebApps_ListConfigurationsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResourceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the application settings of an app.",
        "description": "Description for Replaces the application settings of an app.",
        "operationId": "WebApps_UpdateApplicationSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "Application settings of the app.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the application settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the application settings of an app.",
        "description": "Description for Gets the application settings of an app.",
        "operationId": "WebApps_ListApplicationSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the application settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Authentication / Authorization settings associated with web app.",
        "description": "Description for Updates the Authentication / Authorization settings associated with web app.",
        "operationId": "WebApps_UpdateAuthSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettings",
            "in": "body",
            "description": "Auth settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Authentication/Authorization settings of an app.",
        "description": "Description for Gets the Authentication/Authorization settings of an app.",
        "operationId": "WebApps_GetAuthSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_GetAuthSettingsV2WithoutSecretsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates site's Authentication / Authorization settings for apps via the V2 format",
        "description": "Description for Updates site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_UpdateAuthSettingsV2Slot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettingsV2",
            "in": "body",
            "description": "Auth settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2/list": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets site's Authentication / Authorization settings for apps via the V2 format",
        "description": "Description for Gets site's Authentication / Authorization settings for apps via the V2 format",
        "operationId": "WebApps_GetAuthSettingsV2Slot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettingsV2"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/azurestorageaccounts": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Azure storage account configurations of an app.",
        "description": "Description for Updates the Azure storage account configurations of an app.",
        "operationId": "WebApps_UpdateAzureStorageAccountsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "azureStorageAccounts",
            "in": "body",
            "description": "Azure storage accounts of the app.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the Azure storage account configurations for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/azurestorageaccounts/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Azure storage account configurations of an app.",
        "description": "Description for Gets the Azure storage account configurations of an app.",
        "operationId": "WebApps_ListAzureStorageAccountsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the Azure storage account configurations for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureStoragePropertyDictionaryResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the backup configuration of an app.",
        "description": "Description for Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Edited backup configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the backup configuration of an app.",
        "description": "Description for Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted backup configuration."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration of an app.",
        "description": "Description for Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/appsettings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference app settings and status of an app",
        "description": "Description for Gets the config reference app settings and status of an app",
        "operationId": "WebApps_GetAppSettingsKeyVaultReferencesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Key Vault references for app settings for slot": {
            "$ref": "./examples/GetKeyVaultReferencesForAppSettingsSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/appsettings/{appSettingKey}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference and status of an app",
        "description": "Description for Gets the config reference and status of an app",
        "operationId": "WebApps_GetAppSettingKeyVaultReferenceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettingKey",
            "in": "path",
            "description": "App Setting key name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReference"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Key Vault slot app setting reference": {
            "$ref": "./examples/GetKeyVaultReferencesForAppSettingSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/connectionstrings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference app settings and status of an app",
        "description": "Description for Gets the config reference app settings and status of an app",
        "operationId": "WebApps_GetSiteConnectionStringKeyVaultReferencesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/connectionstrings/{connectionStringKey}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the config reference and status of an app",
        "description": "Description for Gets the config reference and status of an app",
        "operationId": "WebApps_GetSiteConnectionStringKeyVaultReferenceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStringKey",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiKVReference"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the connection strings of an app.",
        "description": "Description for Replaces the connection strings of an app.",
        "operationId": "WebApps_UpdateConnectionStringsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStrings",
            "in": "body",
            "description": "Connection strings of the app or deployment slot. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the connection settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the connection strings of an app.",
        "description": "Description for Gets the connection strings of an app.",
        "operationId": "WebApps_ListConnectionStringsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the connection settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the logging configuration of an app.",
        "description": "Description for Gets the logging configuration of an app.",
        "operationId": "WebApps_GetDiagnosticLogsConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the logging configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the logging configuration of an app.",
        "description": "Description for Updates the logging configuration of an app.",
        "operationId": "WebApps_UpdateDiagnosticLogsConfigSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteLogsConfig",
            "in": "body",
            "description": "A SiteLogsConfig JSON object that contains the logging configuration to change in the \"properties\" property.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the logging configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Replaces the metadata of an app.",
        "description": "Description for Replaces the metadata of an app.",
        "operationId": "WebApps_UpdateMetadataSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Edited metadata of the app or deployment slot. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the metadata for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the metadata of an app.",
        "description": "Description for Gets the metadata of an app.",
        "operationId": "WebApps_ListMetadataSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the metadata for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Git/FTP publishing credentials of an app.",
        "description": "Description for Gets the Git/FTP publishing credentials of an app.",
        "operationId": "WebApps_ListPublishingCredentialsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/User"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Push settings associated with web app.",
        "description": "Description for Updates the Push settings associated with web app.",
        "operationId": "WebApps_UpdateSitePushSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushSettings",
            "in": "body",
            "description": "Push settings associated with web app.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Push settings associated with web app.",
        "description": "Description for Gets the Push settings associated with web app.",
        "operationId": "WebApps_ListSitePushSettingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PushSettings"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "description": "Description for Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "operationId": "WebApps_GetConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the configuration of an app.",
        "description": "Description for Updates the configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "JSON representation of a SiteConfig object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the configuration of an app.",
        "description": "Description for Updates the configuration of an app.",
        "operationId": "WebApps_UpdateConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "JSON representation of a SiteConfig object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "description": "Description for Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "operationId": "WebApps_ListConfigurationSnapshotInfoSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigurationSnapshotInfoCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "description": "Description for Gets a snapshot of the configuration of an app at a previous point in time.",
        "operationId": "WebApps_GetConfigurationSnapshotSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Reverts the configuration of an app to a previous snapshot.",
        "description": "Description for Reverts the configuration of an app to a previous snapshot.",
        "operationId": "WebApps_RecoverSiteConfigurationSnapshotSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the last lines of docker logs for the given site",
        "description": "Description for Gets the last lines of docker logs for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogsSlot",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs/zip/download": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the ZIP archived docker log files for the given site",
        "description": "Description for Gets the ZIP archived docker log files for the given site",
        "operationId": "WebApps_GetContainerLogsZipSlot",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List continuous web jobs for an app, or a deployment slot.",
        "description": "Description for List continuous web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListContinuousWebJobsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContinuousWebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a continuous web job by its ID for an app, or a deployment slot.",
        "description": "Description for Gets a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetContinuousWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/ContinuousWebJob"
            }
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a continuous web job by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteContinuousWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Continuous web job does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start a continuous web job for an app, or a deployment slot.",
        "description": "Description for Start a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StartContinuousWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop a continuous web job for an app, or a deployment slot.",
        "description": "Description for Stop a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StopContinuousWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deploymentStatus": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployment statuses for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListSlotSiteDeploymentStatusesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the deployment status for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatusCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Deployment Status Slot": {
            "$ref": "./examples/ListSiteDeploymentStatusSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deploymentStatus/{deploymentStatusId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the deployment status for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetSlotSiteDeploymentStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the deployment status for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentStatusId",
            "in": "path",
            "description": "GUID of the deployment operation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatus"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "#/definitions/CsmDeploymentStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deployment Status Slot": {
            "$ref": "./examples/GetSiteDeploymentStatusSlot.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments for an app, or a deployment slot.",
        "description": "Description for List deployments for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a deployment by its ID for an app, or a deployment slot.",
        "description": "Description for Get a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetDeploymentSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment for an app, or a deployment slot.",
        "description": "Description for Create a deployment for an app, or a deployment slot.",
        "operationId": "WebApps_CreateDeploymentSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing deployment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Deployment details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a deployment by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteDeploymentSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted deployment."
          },
          "204": {
            "description": "Deployment does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployment log for specific deployment for an app, or a deployment slot.",
        "description": "Description for List deployment log for specific deployment for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentLogSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a specific deployment. This is the value of the name property in the JSON response from \"GET /api/sites/{siteName}/deployments\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/discoverbackup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information about the databases stored in a backup.",
        "description": "Description for Discovers an existing app backup that can be restored from a blob in Azure storage. Use this to get information about the databases stored in a backup.",
        "operationId": "WebApps_DiscoverBackupSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will perform discovery for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists ownership identifiers for domain associated with web app.",
        "description": "Description for Lists ownership identifiers for domain associated with web app.",
        "operationId": "WebApps_ListDomainOwnershipIdentifiersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/IdentifierCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get domain ownership identifier for web app.",
        "description": "Description for Get domain ownership identifier for web app.",
        "operationId": "WebApps_GetDomainOwnershipIdentifierSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "description": "Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifierSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a domain ownership identifier for a web app.",
        "description": "Description for Deletes a domain ownership identifier for a web app.",
        "operationId": "WebApps_DeleteDomainOwnershipIdentifierSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted domain ownership identifier."
          },
          "204": {
            "description": "Domain ownership identifier does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "description": "Description for Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_UpdateDomainOwnershipIdentifierSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifierName",
            "in": "path",
            "description": "Name of domain ownership identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Identifier"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the status of the last MSDeploy operation.",
        "description": "Description for Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke the MSDeploy web app extension.",
        "description": "Description for Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateMSDeployOperationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MSDeploy",
            "in": "body",
            "description": "Details of MSDeploy operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSDeploy"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Deployment is scheduled.",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "409": {
            "description": "Another deployment is in progress.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the MSDeploy Log for the last MSDeploy operation.",
        "description": "Description for Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployLogSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MSDeploy log returned.",
            "schema": {
              "$ref": "#/definitions/MSDeployLog"
            }
          },
          "404": {
            "description": "MSDeploy log not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the functions for a web site, or a deployment slot.",
        "description": "Description for List the functions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListInstanceFunctionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function information returned.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelopeCollection"
            }
          },
          "404": {
            "description": "Function with an ID of {functionName} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/admin/token": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Fetch a short lived token that can be exchanged for a master key.",
        "description": "Description for Fetch a short lived token that can be exchanged for a master key.",
        "operationId": "WebApps_GetFunctionsAdminTokenSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function information by its ID for web site, or a deployment slot.",
        "description": "Description for Get function information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetInstanceFunctionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function information returned.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          "404": {
            "description": "Function with a name of {functionName} does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create function for web site, or a deployment slot.",
        "description": "Description for Create function for web site, or a deployment slot.",
        "operationId": "WebApps_CreateInstanceFunctionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "name": "function_envelope",
            "in": "body",
            "description": "Function details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Function created.",
            "schema": {
              "$ref": "#/definitions/FunctionEnvelope"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a function for web site, or a deployment slot.",
        "description": "Description for Delete a function for web site, or a deployment slot.",
        "operationId": "WebApps_DeleteInstanceFunctionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Function deleted."
          },
          "404": {
            "description": "Function does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/keys/{keyName}": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add or update a function secret.",
        "description": "Description for Add or update a function secret.",
        "operationId": "WebApps_CreateOrUpdateFunctionSecretSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The name of the function.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "name": "key",
            "in": "body",
            "description": "The key to create or update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Key was created.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "200": {
            "description": "Key was updated.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a function secret.",
        "description": "Description for Delete a function secret.",
        "operationId": "WebApps_DeleteFunctionSecretSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The name of the function.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "404": {
            "description": "Key was not found.",
            "x-ms-error-response": true
          },
          "204": {
            "description": "Key was deleted."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/listkeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function keys for a function in a web site, or a deployment slot.",
        "description": "Description for Get function keys for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionKeysSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function keys returned.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/listsecrets": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get function secrets for a function in a web site, or a deployment slot.",
        "description": "Description for Get function secrets for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionSecretsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "Function name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Function secrets returned.",
            "schema": {
              "$ref": "#/definitions/FunctionSecrets"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/listkeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get host secrets for a function app.",
        "description": "Description for Get host secrets for a function app.",
        "operationId": "WebApps_ListHostKeysSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Host secrets returned.",
            "schema": {
              "$ref": "#/definitions/HostKeys"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/listsyncstatus": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "This is to allow calling via powershell and ARM template.",
        "description": "Description for This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Syncs function trigger metadata to the management database",
        "description": "Description for Syncs function trigger metadata to the management database",
        "operationId": "WebApps_SyncFunctionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/{keyType}/{keyName}": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add or update a host level secret.",
        "description": "Description for Add or update a host level secret.",
        "operationId": "WebApps_CreateOrUpdateHostSecretSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyType",
            "in": "path",
            "description": "The type of host key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "name": "key",
            "in": "body",
            "description": "The key to create or update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Key was created.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "200": {
            "description": "Key was updated.",
            "schema": {
              "$ref": "#/definitions/KeyInfo"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a host level secret.",
        "description": "Description for Delete a host level secret.",
        "operationId": "WebApps_DeleteHostSecretSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyType",
            "in": "path",
            "description": "The type of host key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "404": {
            "description": "Key was not found.",
            "x-ms-error-response": true
          },
          "204": {
            "description": "Key was deleted."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get hostname bindings for an app or a deployment slot.",
        "description": "Description for Get hostname bindings for an app or a deployment slot.",
        "operationId": "WebApps_ListHostNameBindingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the named hostname binding for an app (or deployment slot, if specified).",
        "description": "Description for Get the named hostname binding for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetHostNameBindingSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a hostname binding for an app.",
        "description": "Description for Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdateHostNameBindingSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostNameBinding",
            "in": "body",
            "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a hostname binding for an app.",
        "description": "Description for Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeleteHostNameBindingSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "description": "Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay.",
        "description": "Description for Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_CreateOrUpdateHybridConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes a Hybrid Connection from this site.",
        "description": "Description for Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hybrid connection."
          },
          "404": {
            "description": "Hybrid connection does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay.",
        "description": "Description for Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_UpdateHybridConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionRelays": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "description": "Description for Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnectionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "description": "Description for Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListRelayServiceConnectionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get hybrid connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a hybrid connection configuration by its name.",
        "description": "Description for Gets a hybrid connection configuration by its name.",
        "operationId": "WebApps_GetRelayServiceConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "description": "Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Details of the hybrid connection configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a relay service connection by its name.",
        "description": "Description for Deletes a relay service connection by its name.",
        "operationId": "WebApps_DeleteRelayServiceConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete a hybrid connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted relay service connection."
          },
          "404": {
            "description": "Relay service connection does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "description": "Description for Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_UpdateRelayServiceConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the hybrid connection configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Details of the hybrid connection configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all scale-out instances of an app.",
        "description": "Description for Gets all scale-out instances of an app.",
        "operationId": "WebApps_ListInstanceIdentifiersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppInstanceStatusCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all scale-out instances of an app.",
        "description": "Description for Gets all scale-out instances of an app.",
        "operationId": "WebApps_GetInstanceInfoSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebSiteInstanceStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get site instance info": {
            "$ref": "./examples/GetSiteInstanceInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the status of the last MSDeploy operation.",
        "description": "Description for Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMsDeployStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Invoke the MSDeploy web app extension.",
        "description": "Description for Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateInstanceMSDeployOperationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MSDeploy",
            "in": "body",
            "description": "Details of MSDeploy operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSDeploy"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Deployment is scheduled.",
            "schema": {
              "$ref": "#/definitions/MSDeployStatus"
            }
          },
          "409": {
            "description": "Another deployment is in progress.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy/log": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the MSDeploy Log for the last MSDeploy operation.",
        "description": "Description for Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMSDeployLogSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of web app instance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MSDeploy log returned.",
            "schema": {
              "$ref": "#/definitions/MSDeployLog"
            }
          },
          "404": {
            "description": "MSDeploy log not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "description": "Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process terminated.",
            "schema": {
              "$ref": "#/definitions/ProcessInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "description": "Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteInstanceProcessSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/dump": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessDumpSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessModulesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessModuleSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseAddress",
            "in": "path",
            "description": "Module base address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/threads": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessThreadsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Thread information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessThreadInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Shows whether an app can be cloned to another resource group or subscription.",
        "description": "Description for Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneableSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. By default, this API returns information on the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listbackups": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Description for Gets existing backups of an app.",
        "operationId": "WebApps_ListSiteBackupsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get backups of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List backups": {
            "$ref": "./examples/ListSlotBackups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listsyncfunctiontriggerstatus": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "This is to allow calling via powershell and ARM template.",
        "description": "Description for This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncFunctionTriggersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunctionSecrets"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/migratemysql/status": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "description": "Description for Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "operationId": "WebApps_GetMigrateMySqlStatusSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MigrateMySqlStatus"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a Swift Virtual Network connection.",
        "description": "Description for Gets a Swift Virtual Network connection.",
        "operationId": "WebApps_GetSwiftVirtualNetworkConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a gateway for the production slot's Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\r\nin use by another App Service Plan other than the one this App is in.",
        "description": "Description for Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\nin use by another App Service Plan other than the one this App is in.",
        "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a Swift Virtual Network connection from an app (or deployment slot).",
        "description": "Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).",
        "operationId": "WebApps_DeleteSwiftVirtualNetworkSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\r\nin use by another App Service Plan other than the one this App is in.",
        "description": "Description for Integrates this Web App with a Virtual Network. This requires that 1) \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has already been delegated, and is not\nin use by another App Service Plan other than the one this App is in.",
        "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheckSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SwiftVirtualNetwork"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all network features used by the app (or deployment slot, if specified).",
        "description": "Description for Gets all network features used by the app (or deployment slot, if specified).",
        "operationId": "WebApps_ListNetworkFeaturesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "in": "path",
            "description": "The type of view. Only \"summary\" is supported at this time.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get network features for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NetworkFeatures"
            }
          },
          "404": {
            "description": "The requested view does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTraceOperationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get an operation for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the current status of a network trace operation for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraceOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site (To be deprecated).",
        "description": "Description for Start capturing network packets for the site (To be deprecated).",
        "operationId": "WebApps_StartWebSiteNetworkTraceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/startOperation": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site.",
        "description": "Description for Start capturing network packets for the site.",
        "operationId": "WebApps_StartWebSiteNetworkTraceOperationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a new network trace operation for a site": {
            "$ref": "./examples/StartWebSiteNetworkTraceOperation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site.",
        "description": "Description for Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopWebSiteNetworkTraceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Stopped."
          },
          "204": {
            "description": "Stopped."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop a currently running network trace operation for a site": {
            "$ref": "./examples/StopWebSiteNetworkTrace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTracesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get an operation for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get NetworkTraces for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTraces/current/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTraceOperationSlotV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get an operation for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the current status of a network trace operation for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraceOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTraces/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "description": "Description for Gets a named operation for a network trace capturing (or deployment slot, if specified).",
        "operationId": "WebApps_GetNetworkTracesSlotV2",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "GUID of the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get an operation for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get NetworkTraces for a site": {
            "$ref": "./examples/GetWebSiteNetworkTraces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Generates a new publishing password for an app (or deployment slot, if specified).",
        "description": "Description for Generates a new publishing password for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GenerateNewSitePublishingPasswordSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API generate a new publishing password for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generate new password."
          },
          "204": {
            "description": "Successfully generate new password."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/perfcounters": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets perfmon counters for web app.",
        "description": "Description for Gets perfmon counters for web app.",
        "operationId": "WebApps_ListPerfMonCountersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerfMonCounterCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/phplogging": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets web app's event logs.",
        "description": "Description for Gets web app's event logs.",
        "operationId": "WebApps_GetSitePhpErrorLogFlagSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SitePhpErrorLogFlag"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the premier add-ons of an app.",
        "description": "Description for Gets the premier add-ons of an app.",
        "operationId": "WebApps_ListPremierAddOnsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the premier add-ons for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a named add-on of an app.",
        "description": "Description for Gets a named add-on of an app.",
        "operationId": "WebApps_GetPremierAddOnSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the named add-on for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates a named add-on of an app.",
        "description": "Description for Updates a named add-on of an app.",
        "operationId": "WebApps_AddPremierAddOnSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "A JSON representation of the edited premier add-on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a premier add-on from an app.",
        "description": "Description for Delete a premier add-on from an app.",
        "operationId": "WebApps_DeletePremierAddOnSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the named add-on for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted premier add-on."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates a named add-on of an app.",
        "description": "Description for Updates a named add-on of an app.",
        "operationId": "WebApps_UpdatePremierAddOnSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Add-on name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "A JSON representation of the edited premier add-on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOnPatchResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOn"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "description": "Description for Gets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "operationId": "WebApps_GetPrivateAccessSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "description": "Description for Sets data around private site access enablement and authorized Virtual Networks that can access the site.",
        "operationId": "WebApps_PutPrivateAccessVnetSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "access",
            "in": "body",
            "description": "The information for the private access",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateAccess"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the list of private endpoint connections associated with a site",
        "description": "Description for Gets the list of private endpoint connections associated with a site",
        "operationId": "WebApps_GetPrivateEndpointConnectionListSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the site deployment slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateEndpointConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a private endpoint connection",
        "description": "Description for Gets a private endpoint connection",
        "operationId": "WebApps_GetPrivateEndpointConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the site deployment slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection for a site.": {
            "$ref": "./examples/GetSitePrivateEndpointConnectionSlot.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Approves or rejects a private endpoint connection",
        "description": "Description for Approves or rejects a private endpoint connection",
        "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointWrapper",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approves or rejects a private endpoint connection for a site.": {
            "$ref": "./examples/ApproveRejectSitePrivateEndpointConnectionSlot.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a private endpoint connection",
        "description": "Description for Deletes a private endpoint connection",
        "operationId": "WebApps_DeletePrivateEndpointConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a private endpoint connection for a site.": {
            "$ref": "./examples/DeleteSitePrivateEndpointConnectionSlot.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateLinkResources": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the private link resources",
        "description": "Description for Gets the private link resources",
        "operationId": "WebApps_GetPrivateLinkResourcesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateLinkResourcesWrapper"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get private link resources of a site": {
            "$ref": "./examples/GetSitePrivateLinkResourcesSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "description": "Description for Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process terminated.",
            "schema": {
              "$ref": "#/definitions/ProcessInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Process information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "description": "Description for Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteProcessSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/dump": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessDumpSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessModulesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessModuleSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseAddress",
            "in": "path",
            "description": "Module base address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Module information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessModuleInfo"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/threads": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "description": "Description for List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessThreadsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "PID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Thread information returned.",
            "schema": {
              "$ref": "#/definitions/ProcessThreadInfoCollection"
            }
          },
          "404": {
            "description": "Process with the specified ID is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get public certificates for an app or a deployment slot.",
        "description": "Description for Get public certificates for an app or a deployment slot.",
        "operationId": "WebApps_ListPublicCertificatesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the named public certificate for an app (or deployment slot, if specified).",
        "description": "Description for Get the named public certificate for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetPublicCertificateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a hostname binding for an app.",
        "description": "Description for Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdatePublicCertificateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificate",
            "in": "body",
            "description": "Public certificate details. This is the JSON representation of a PublicCertificate object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicCertificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a hostname binding for an app.",
        "description": "Description for Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeletePublicCertificateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicCertificateName",
            "in": "path",
            "description": "Public certificate name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the publishing profile for an app (or deployment slot, if specified).",
        "description": "Description for Gets the publishing profile for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecretsSlot",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publishingProfileOptions",
            "in": "body",
            "description": "Specifies publishingProfileOptions for publishing profile. For example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingProfileOptions"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the publishing profile for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "description": "Description for Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "operationId": "WebApps_ResetSlotConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API resets configuration settings for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restarts an app (or deployment slot, if specified).",
        "description": "Description for Restarts an app (or deployment slot, if specified).",
        "operationId": "WebApps_RestartSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will restart the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "softRestart",
            "in": "query",
            "description": "Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts and reprovisions the app.",
            "type": "boolean"
          },
          {
            "name": "synchronous",
            "in": "query",
            "description": "Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restarted app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreFromBackupBlob": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores an app from a backup blob in Azure Storage.",
        "description": "Description for Restores an app from a backup blob in Azure Storage.",
        "operationId": "WebApps_RestoreFromBackupBlobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreFromDeletedApp": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a deleted web app to this web app.",
        "description": "Description for Restores a deleted web app to this web app.",
        "operationId": "WebApps_RestoreFromDeletedAppSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreRequest",
            "in": "body",
            "description": "Deleted web app restore information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletedAppRestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreSnapshot": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app from a snapshot.",
        "description": "Description for Restores a web app from a snapshot.",
        "operationId": "WebApps_RestoreSnapshotSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreRequest",
            "in": "body",
            "description": "Snapshot restore settings. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Restore operation started."
          },
          "200": {
            "description": "Restore operation started."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists all the site containers of a site, or a deployment slot.",
        "operationId": "WebApps_ListSiteContainersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a list of site containers for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteContainerCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers/{containerName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a site container of a site, or a deployment slot.",
        "operationId": "WebApps_GetSiteContainerSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the Site Container for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates or Updates a site container for a site, or a deployment slot.",
        "operationId": "WebApps_CreateOrUpdateSiteContainerSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create the container for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Container Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Site container was created.",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "200": {
            "description": "Site container was updated.",
            "schema": {
              "$ref": "#/definitions/SiteContainer"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a site container for a site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteContainerSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the container for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Site Container Name",
            "required": true,
            "type": "string",
            "pattern": "(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$)"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted site container."
          },
          "204": {
            "description": "Site container does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get list of siteextensions for a web site, or a deployment slot.",
        "description": "Description for Get list of siteextensions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListSiteExtensionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SiteExtension information returned.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfoCollection"
            }
          },
          "404": {
            "description": "SiteExtension not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get site extension information by its ID for a web site, or a deployment slot.",
        "description": "Description for Get site extension information by its ID for a web site, or a deployment slot.",
        "operationId": "WebApps_GetSiteExtensionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SiteExtension information returned.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Install site extension on a web site, or a deployment slot.",
        "description": "Description for Install site extension on a web site, or a deployment slot.",
        "operationId": "WebApps_InstallSiteExtensionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Site Extension created.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "200": {
            "description": "Site Extension created.",
            "schema": {
              "$ref": "#/definitions/SiteExtensionInfo"
            }
          },
          "429": {
            "description": "Site Extension is being installed on another request: Rejecting current request.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Remove a site extension from a web site, or a deployment slot.",
        "description": "Description for Remove a site extension from a web site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteExtensionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteExtensionId",
            "in": "path",
            "description": "Site extension name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "SiteExtension terminated."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the difference in configuration settings between two web app slots.",
        "description": "Description for Get the difference in configuration settings between two web app slots.",
        "operationId": "WebApps_ListSlotDifferencesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotDifferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Swaps two deployment slots of an app.",
        "description": "Description for Swaps two deployment slots of an app.",
        "operationId": "WebApps_SwapSlotSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Operation is in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Description for Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshotsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Website Slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshotsdr": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user from DRSecondary endpoint.",
        "description": "Description for Returns all Snapshots to the user from DRSecondary endpoint.",
        "operationId": "WebApps_ListSnapshotsFromDRSecondarySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Website Slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the source control configuration of an app.",
        "description": "Description for Gets the source control configuration of an app.",
        "operationId": "WebApps_GetSourceControlSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the source control configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app still in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app still in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the source control configuration of an app.",
        "description": "Description for Updates the source control configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateSourceControlSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "JSON representation of a SiteSourceControl object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the source control configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the source control configuration of an app.",
        "description": "Description for Deletes the source control configuration of an app.",
        "operationId": "WebApps_DeleteSourceControlSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the source control configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "additionalFlags",
            "in": "query",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted source control for web app."
          },
          "202": {
            "description": "Source control delete operation in progress."
          },
          "404": {
            "description": "Source control does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the source control configuration of an app.",
        "description": "Description for Updates the source control configuration of an app.",
        "operationId": "WebApps_UpdateSourceControlSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "JSON representation of a SiteSourceControl object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the source control configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Starts an app (or deployment slot, if specified).",
        "description": "Description for Starts an app (or deployment slot, if specified).",
        "operationId": "WebApps_StartSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will start the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/startNetworkTrace": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site.",
        "description": "Description for Start capturing network packets for the site.",
        "operationId": "WebApps_StartNetworkTraceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a new network trace operation for a site": {
            "$ref": "./examples/StartWebSiteNetworkTraceOperation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stops an app (or deployment slot, if specified).",
        "description": "Description for Stops an app (or deployment slot, if specified).",
        "operationId": "WebApps_StopSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will stop the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stopped app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stopNetworkTrace": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site.",
        "description": "Description for Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopNetworkTraceSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Stopped."
          },
          "204": {
            "description": "Stopped."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop a currently running network trace operation for a site": {
            "$ref": "./examples/StopWebSiteNetworkTrace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sync web app repository.",
        "description": "Description for Sync web app repository.",
        "operationId": "WebApps_SyncRepositorySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sync source control."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/syncfunctiontriggers": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Syncs function trigger metadata to the management database",
        "description": "Description for Syncs function trigger metadata to the management database",
        "operationId": "WebApps_SyncFunctionTriggersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List triggered web jobs for an app, or a deployment slot.",
        "description": "Description for List triggered web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggeredWebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a triggered web job by its ID for an app, or a deployment slot.",
        "description": "Description for Gets a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredWebJob"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a triggered web job by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteTriggeredWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes web job for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Triggered web job does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List a triggered web job's history for an app, or a deployment slot.",
        "description": "Description for List a triggered web job's history for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobHistorySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredJobHistoryCollection"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "description": "Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobHistorySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "History ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredJobHistory"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/run": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Run a triggered web job for an app, or a deployment slot.",
        "description": "Description for Run a triggered web job for an app, or a deployment slot.",
        "operationId": "WebApps_RunTriggeredWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API uses the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Run a triggered web job."
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "description": "Description for Gets the quota usage information of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListUsagesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get quota information of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the virtual networks the app (or deployment slot) is connected to.",
        "description": "Description for Gets the virtual networks the app (or deployment slot) is connected to.",
        "operationId": "WebApps_ListVnetConnectionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get virtual network connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a virtual network the app (or deployment slot) is connected to by name.",
        "description": "Description for Gets a virtual network the app (or deployment slot) is connected to by name.",
        "operationId": "WebApps_GetVnetConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the named virtual network for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "description": "Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of an existing Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a connection from an app (or deployment slot to a named virtual network.",
        "description": "Description for Deletes a connection from an app (or deployment slot to a named virtual network.",
        "operationId": "WebApps_DeleteVnetConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the connection for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "description": "Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of an existing Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets an app's Virtual Network gateway.",
        "description": "Description for Gets an app's Virtual Network gateway.",
        "operationId": "WebApps_GetVnetConnectionGatewaySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a gateway for the production slot's Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "404": {
            "description": "Named gateway does not exist. Only the \"primary\" gateway is supported currently.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "description": "Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGatewaySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update a gateway for the production slot's Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "description": "Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionGatewaySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update a gateway for the production slot's Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List webjobs for an app, or a deployment slot.",
        "description": "Description for List webjobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListWebJobsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get webjob information for an app, or a deployment slot.",
        "description": "Description for Get webjob information for an app, or a deployment slot.",
        "operationId": "WebApps_GetWebJobSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of the web job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebJob"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the difference in configuration settings between two web app slots.",
        "description": "Description for Get the difference in configuration settings between two web app slots.",
        "operationId": "WebApps_ListSlotDifferencesFromProduction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotDifferenceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Swaps two deployment slots of an app.",
        "description": "Description for Swaps two deployment slots of an app.",
        "operationId": "WebApps_SwapSlotWithProduction",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "JSON object that contains the target slot name. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Operation is in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Description for Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshots",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshotsdr": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user from DRSecondary endpoint.",
        "description": "Description for Returns all Snapshots to the user from DRSecondary endpoint.",
        "operationId": "WebApps_ListSnapshotsFromDRSecondary",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the source control configuration of an app.",
        "description": "Description for Gets the source control configuration of an app.",
        "operationId": "WebApps_GetSourceControl",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app still in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app still in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the source control configuration of an app.",
        "description": "Description for Updates the source control configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateSourceControl",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "JSON representation of a SiteSourceControl object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the source control configuration of an app.",
        "description": "Description for Deletes the source control configuration of an app.",
        "operationId": "WebApps_DeleteSourceControl",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "additionalFlags",
            "in": "query",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted source control for web app."
          },
          "202": {
            "description": "Source control delete operation in progress."
          },
          "404": {
            "description": "Source control does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the source control configuration of an app.",
        "description": "Description for Updates the source control configuration of an app.",
        "operationId": "WebApps_UpdateSourceControl",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "JSON representation of a SiteSourceControl object. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated source control for web app.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "201": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "202": {
            "description": "Create or update source control for web app in progress.",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Starts an app (or deployment slot, if specified).",
        "description": "Description for Starts an app (or deployment slot, if specified).",
        "operationId": "WebApps_Start",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/startNetworkTrace": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site.",
        "description": "Description for Start capturing network packets for the site.",
        "operationId": "WebApps_StartNetworkTrace",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxFrameLength",
            "in": "query",
            "description": "The maximum frame length in bytes (Optional).",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sasUrl",
            "in": "query",
            "description": "The Blob URL to store capture file.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkTrace"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a new network trace operation for a site": {
            "$ref": "./examples/StartWebSiteNetworkTraceOperation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stops an app (or deployment slot, if specified).",
        "description": "Description for Stops an app (or deployment slot, if specified).",
        "operationId": "WebApps_Stop",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stopped app."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stopNetworkTrace": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site.",
        "description": "Description for Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopNetworkTrace",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Stopped."
          },
          "204": {
            "description": "Stopped."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop a currently running network trace operation for a site": {
            "$ref": "./examples/StopWebSiteNetworkTrace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sync web app repository.",
        "description": "Description for Sync web app repository.",
        "operationId": "WebApps_SyncRepository",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sync source control."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/syncfunctiontriggers": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Syncs function trigger metadata to the management database",
        "description": "Description for Syncs function trigger metadata to the management database",
        "operationId": "WebApps_SyncFunctionTriggers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List triggered web jobs for an app, or a deployment slot.",
        "description": "Description for List triggered web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobs",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggeredWebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a triggered web job by its ID for an app, or a deployment slot.",
        "description": "Description for Gets a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredWebJob"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a triggered web job by its ID for an app, or a deployment slot.",
        "description": "Description for Delete a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteTriggeredWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Triggered web job does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List a triggered web job's history for an app, or a deployment slot.",
        "description": "Description for List a triggered web job's history for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobHistory",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredJobHistoryCollection"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "description": "Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobHistory",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "History ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job.",
            "schema": {
              "$ref": "#/definitions/TriggeredJobHistory"
            }
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/run": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Run a triggered web job for an app, or a deployment slot.",
        "description": "Description for Run a triggered web job for an app, or a deployment slot.",
        "operationId": "WebApps_RunTriggeredWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of Web Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Run a triggered web job."
          },
          "404": {
            "description": "Triggered web job does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "description": "Description for Gets the quota usage information of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListUsages",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the virtual networks the app (or deployment slot) is connected to.",
        "description": "Description for Gets the virtual networks the app (or deployment slot) is connected to.",
        "operationId": "WebApps_ListVnetConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a virtual network the app (or deployment slot) is connected to by name.",
        "description": "Description for Gets a virtual network the app (or deployment slot) is connected to by name.",
        "operationId": "WebApps_GetVnetConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "description": "Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of an existing Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a connection from an app (or deployment slot to a named virtual network.",
        "description": "Description for Deletes a connection from an app (or deployment slot to a named virtual network.",
        "operationId": "WebApps_DeleteVnetConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "description": "Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_UpdateVnetConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of an existing Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Properties of the Virtual Network connection. See example.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets an app's Virtual Network gateway.",
        "description": "Description for Gets an app's Virtual Network gateway.",
        "operationId": "WebApps_GetVnetConnectionGateway",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "404": {
            "description": "Named gateway does not exist. Only the \"primary\" gateway is supported currently.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "description": "Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGateway",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "description": "Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionGateway",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List webjobs for an app, or a deployment slot.",
        "description": "Description for List webjobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListWebJobs",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebJobCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs/{webJobName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get webjob information for an app, or a deployment slot.",
        "description": "Description for Get webjob information for an app, or a deployment slot.",
        "operationId": "WebApps_GetWebJob",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webJobName",
            "in": "path",
            "description": "Name of the web job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebJob"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployWorkflowArtifacts": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates the artifacts for web site, or a deployment slot.",
        "description": "Description for Creates the artifacts for web site, or a deployment slot.",
        "operationId": "WebApps_DeployWorkflowArtifacts",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "workflowArtifacts",
            "in": "body",
            "description": "Application settings and files of the workflow.",
            "required": false,
            "x-ms-secret": true,
            "schema": {
              "$ref": "#/definitions/WorkflowArtifacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artifacts deployed."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploys workflow artifacts": {
            "$ref": "./examples/PostDeployWorkflowArtifacts.json"
          },
          "Delete workflow artifacts": {
            "$ref": "./examples/DeleteDeployWorkflowArtifacts.json"
          }
        },
        "x-ms-long-running-operation": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployWorkflowArtifacts": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates the artifacts for web site, or a deployment slot.",
        "description": "Description for Creates the artifacts for web site, or a deployment slot.",
        "operationId": "WebApps_DeployWorkflowArtifactsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "workflowArtifacts",
            "in": "body",
            "description": "Application settings and files of the workflow.",
            "required": false,
            "x-ms-secret": true,
            "schema": {
              "$ref": "#/definitions/WorkflowArtifacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artifacts deployed."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploys workflow artifacts slot": {
            "$ref": "./examples/PostDeployWorkflowArtifactsSlot.json"
          }
        },
        "x-ms-long-running-operation": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/workflows": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the workflows for a web site, or a deployment slot.",
        "operationId": "WebApps_ListInstanceWorkflowsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelopeCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the workflows Slot": {
            "$ref": "./examples/ListWorkflows.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/workflows/{workflowName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get workflow information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetInstanceWorkflowSlot",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Workflow name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          },
          "404": {
            "description": "Workflow with a name of {workflowName} does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET a workflow Slot": {
            "$ref": "./examples/GetWorkflow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listWorkflowsConnections": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists logic app's connections for web site, or a deployment slot.",
        "operationId": "WebApps_ListWorkflowsConnectionsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/slotNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connections information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the Instance Workflows Configuration Connections Slot": {
            "$ref": "./examples/ListWorkflowsConfigurationConnections.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/workflows": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List the workflows for a web site, or a deployment slot.",
        "operationId": "WebApps_ListWorkflows",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelopeCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the workflows": {
            "$ref": "./examples/ListWorkflows.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/workflows/{workflowName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get workflow information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetWorkflow",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Workflow name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          },
          "404": {
            "description": "Workflow with a name of {workflowName} does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET a workflow": {
            "$ref": "./examples/GetWorkflow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listWorkflowsConnections": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists logic app's connections for web site, or a deployment slot.",
        "operationId": "WebApps_ListWorkflowsConnections",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connections information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the Instance Workflows Configuration Connections": {
            "$ref": "./examples/ListWorkflowsConfigurationConnections.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/regenerateAccessKey": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "operationId": "Workflows_RegenerateAccessKey",
        "description": "Regenerates the callback URL access key for request triggers.",
        "x-ms-examples": {
          "Regenerate the callback URL access key for request triggers": {
            "$ref": "./examples/Workflows_RegenerateAccessKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyType",
            "description": "The access key type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateActionParameter"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs": {
      "get": {
        "tags": [
          "WorkflowRuns"
        ],
        "operationId": "WorkflowRuns_List",
        "description": "Gets a list of workflow runs.",
        "x-ms-examples": {
          "List workflow runs": {
            "$ref": "./examples/WorkflowRuns_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/WorkflowRunFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}": {
      "get": {
        "tags": [
          "WorkflowRuns"
        ],
        "operationId": "WorkflowRuns_Get",
        "description": "Gets a workflow run.",
        "x-ms-examples": {
          "Get a run for a workflow": {
            "$ref": "./examples/WorkflowRuns_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActions_List",
        "description": "Gets a list of workflow run actions.",
        "x-ms-examples": {
          "List a workflow run actions": {
            "$ref": "./examples/WorkflowRunActions_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the operation. Options for filters include: Status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/WorkflowRunActionFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActions_Get",
        "description": "Gets a workflow run action.",
        "x-ms-examples": {
          "Get a workflow run action": {
            "$ref": "./examples/WorkflowRunActions_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunAction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/listExpressionTraces": {
      "post": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActions_ListExpressionTraces",
        "description": "Lists a workflow run expression trace.",
        "x-ms-examples": {
          "List expression traces": {
            "$ref": "./examples/WorkflowRunActions_ListExpressionTraces.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpressionTraces"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "inputs"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionRepetitions_List",
        "description": "Get all of a workflow run action repetitions.",
        "x-ms-examples": {
          "List repetitions": {
            "$ref": "./examples/WorkflowRunActionRepetitions_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinitionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionRepetitions_Get",
        "description": "Get a workflow run action repetition.",
        "x-ms-examples": {
          "Get a repetition": {
            "$ref": "./examples/WorkflowRunActionRepetitions_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "description": "The workflow repetition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/listExpressionTraces": {
      "post": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionRepetitions_ListExpressionTraces",
        "description": "Lists a workflow run expression trace.",
        "x-ms-examples": {
          "List expression traces for a repetition": {
            "$ref": "./examples/WorkflowRunActionRepetitions_ListExpressionTraces.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "description": "The workflow repetition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpressionTraces"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "inputs"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionRepetitionsRequestHistories_List",
        "description": "List a workflow run repetition request history.",
        "x-ms-examples": {
          "List repetition request history": {
            "$ref": "./examples/WorkflowRunActionRepetitionsRequestHistories_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "description": "The workflow repetition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestHistoryListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories/{requestHistoryName}": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionRepetitionsRequestHistories_Get",
        "description": "Gets a workflow run repetition request history.",
        "x-ms-examples": {
          "Get a repetition request history": {
            "$ref": "./examples/WorkflowRunActionRepetitionsRequestHistories_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "description": "The workflow repetition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestHistoryName",
            "description": "The request history name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestHistory"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionScopeRepetitions_List",
        "description": "List the workflow run action scoped repetitions.",
        "x-ms-examples": {
          "List the scoped repetitions": {
            "$ref": "./examples/WorkflowRunActionScopeRepetitions_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinitionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}": {
      "get": {
        "tags": [
          "WorkflowRunActions"
        ],
        "operationId": "WorkflowRunActionScopeRepetitions_Get",
        "description": "Get a workflow run action scoped repetition.",
        "x-ms-examples": {
          "Get a scoped repetition": {
            "$ref": "./examples/WorkflowRunActionScopeRepetitions_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "description": "The workflow action name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "description": "The workflow repetition.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/cancel": {
      "post": {
        "tags": [
          "WorkflowRuns"
        ],
        "operationId": "WorkflowRuns_Cancel",
        "description": "Cancels a workflow run.",
        "x-ms-examples": {
          "Cancel a workflow run": {
            "$ref": "./examples/WorkflowRuns_Cancel.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "description": "The workflow run name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers": {
      "get": {
        "tags": [
          "WorkflowTriggers"
        ],
        "operationId": "WorkflowTriggers_List",
        "description": "Gets a list of workflow triggers.",
        "x-ms-examples": {
          "List workflow triggers": {
            "$ref": "./examples/WorkflowTriggers_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the operation.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/WorkflowTriggerFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}": {
      "get": {
        "tags": [
          "WorkflowTriggers"
        ],
        "operationId": "WorkflowTriggers_Get",
        "description": "Gets a workflow trigger.",
        "x-ms-examples": {
          "Get a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowTrigger"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/histories": {
      "get": {
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "operationId": "WorkflowTriggerHistories_List",
        "description": "Gets a list of workflow trigger histories.",
        "x-ms-examples": {
          "List a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerHistoryListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/WorkflowTriggerHistoryFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}": {
      "get": {
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "operationId": "WorkflowTriggerHistories_Get",
        "description": "Gets a workflow trigger history.",
        "x-ms-examples": {
          "Get a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "historyName",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerHistory"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}/resubmit": {
      "post": {
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "operationId": "WorkflowTriggerHistories_Resubmit",
        "description": "Resubmits a workflow run based on the trigger history.",
        "x-ms-examples": {
          "Resubmit a workflow run based on the trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Resubmit.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "historyName",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/listCallbackUrl": {
      "post": {
        "tags": [
          "WorkflowTriggers"
        ],
        "operationId": "WorkflowTriggers_ListCallbackUrl",
        "description": "Get the callback URL for a workflow trigger.",
        "x-ms-examples": {
          "Get the callback URL for a trigger": {
            "$ref": "./examples/WorkflowTriggers_ListCallbackUrl.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/run": {
      "post": {
        "tags": [
          "WorkflowTriggers"
        ],
        "operationId": "WorkflowTriggers_Run",
        "description": "Runs a workflow trigger.",
        "x-ms-examples": {
          "Run a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Run.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the trigger run failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/triggers/{triggerName}/schemas/json": {
      "get": {
        "tags": [
          "WorkflowTriggers"
        ],
        "operationId": "WorkflowTriggers_GetSchemaJson",
        "description": "Get the trigger schema as JSON.",
        "x-ms-examples": {
          "Get trigger schema": {
            "$ref": "./examples/WorkflowTriggers_GetSchemaJson.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "description": "The workflow trigger name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonSchema"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/validate": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "operationId": "Workflows_Validate",
        "description": "Validates the workflow definition.",
        "x-ms-examples": {
          "Validate a workflow": {
            "$ref": "./examples/Workflows_Validate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validate",
            "description": "The workflow.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/versions": {
      "get": {
        "tags": [
          "WorkflowVersions"
        ],
        "operationId": "WorkflowVersions_List",
        "description": "Gets a list of workflow versions.",
        "x-ms-examples": {
          "List a workflows versions": {
            "$ref": "./examples/WorkflowVersions_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/versions/{versionId}": {
      "get": {
        "tags": [
          "WorkflowVersions"
        ],
        "operationId": "WorkflowVersions_Get",
        "description": "Gets a workflow version.",
        "x-ms-examples": {
          "Get a workflow version": {
            "$ref": "./examples/WorkflowVersions_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/siteNameParameter"
          },
          {
            "name": "workflowName",
            "description": "The workflow name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "description": "The workflow versionId.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Get all certificates for a subscription.",
        "description": "Description for Get all certificates for a subscription.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only information specified in the filter (using OData syntax). For example: $filter=KeyVaultId eq 'KeyVaultId'",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates for subscription": {
            "$ref": "./examples/ListCertificates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Get all certificates in a resource group.",
        "description": "Description for Get all certificates in a resource group.",
        "operationId": "Certificates_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by resource group": {
            "$ref": "./examples/ListCertificatesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Get a certificate.",
        "description": "Description for Get a certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/GetCertificate.json"
          }
        }
      },
      "put": {
        "tags": [
          "Certificates"
        ],
        "summary": "Create or update a certificate.",
        "description": "Description for Create or update a certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update Certificate": {
            "$ref": "./examples/CreateOrUpdateCertificate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Certificates"
        ],
        "summary": "Delete a certificate.",
        "description": "Description for Delete a certificate.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/DeleteCertificate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Certificates"
        ],
        "summary": "Create or update a certificate.",
        "description": "Description for Create or update a certificate.",
        "operationId": "Certificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificatePatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/PatchCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all App Service plans for a subscription.",
        "description": "Description for Get all App Service plans for a subscription.",
        "operationId": "AppServicePlans_List",
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "description": "Specify <code>true</code> to return all App Service plan properties. The default is <code>false</code>, which returns a subset of the properties.\n Retrieval of all properties may increase the API latency.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlanCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Service plans": {
            "$ref": "./examples/ListAppServicePlans.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all App Service plans in a resource group.",
        "description": "Description for Get all App Service plans in a resource group.",
        "operationId": "AppServicePlans_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlanCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Service plans by resource group": {
            "$ref": "./examples/ListAppServicePlansByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get an App Service plan.",
        "description": "Description for Get an App Service plan.",
        "operationId": "AppServicePlans_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Service plan": {
            "$ref": "./examples/GetAppServicePlan.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Creates or updates an App Service Plan.",
        "description": "Description for Creates or updates an App Service Plan.",
        "operationId": "AppServicePlans_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appServicePlan",
            "in": "body",
            "description": "Details of the App Service plan.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update App Service plan": {
            "$ref": "./examples/CreateOrUpdateAppServicePlan.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Delete an App Service plan.",
        "description": "Description for Delete an App Service plan.",
        "operationId": "AppServicePlans_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete App Service plan": {
            "$ref": "./examples/DeleteAppServicePlan.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Creates or updates an App Service Plan.",
        "description": "Description for Creates or updates an App Service Plan.",
        "operationId": "AppServicePlans_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appServicePlan",
            "in": "body",
            "description": "Details of the App Service plan.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServicePlanPatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          "202": {
            "description": "Operation is in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServicePlan"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Service plan": {
            "$ref": "./examples/PatchAppServicePlan.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/capabilities": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "List all capabilities of an App Service plan.",
        "description": "Description for List all capabilities of an App Service plan.",
        "operationId": "AppServicePlans_ListCapabilities",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/Capability"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Retrieve a Hybrid Connection in use in an App Service plan.",
        "description": "Description for Retrieve a Hybrid Connection in use in an App Service plan.",
        "operationId": "AppServicePlans_GetHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the Service Bus namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "Name of the Service Bus relay.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Delete a Hybrid Connection in use in an App Service plan.",
        "description": "Description for Delete a Hybrid Connection in use in an App Service plan.",
        "operationId": "AppServicePlans_DeleteHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the Service Bus namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "Name of the Service Bus relay.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hybrid connection"
          },
          "204": {
            "description": "Hybrid connection does not exist"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys": {
      "post": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get the send key name and value of a Hybrid Connection.",
        "description": "Description for Get the send key name and value of a Hybrid Connection.",
        "operationId": "AppServicePlans_ListHybridConnectionKeys",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the Service Bus namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The name of the Service Bus relay.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnectionKey"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/sites": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all apps that use a Hybrid Connection in an App Service Plan.",
        "description": "Description for Get all apps that use a Hybrid Connection in an App Service Plan.",
        "operationId": "AppServicePlans_ListWebAppsByHybridConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Name of the Hybrid Connection namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "Name of the Hybrid Connection relay.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionPlanLimits/limit": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get the maximum number of Hybrid Connections allowed in an App Service plan.",
        "description": "Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.",
        "operationId": "AppServicePlans_GetHybridConnectionPlanLimit",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnectionLimits"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionRelays": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Retrieve all Hybrid Connections in use in an App Service plan.",
        "description": "Description for Retrieve all Hybrid Connections in use in an App Service plan.",
        "operationId": "AppServicePlans_ListHybridConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/restartSites": {
      "post": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Restart all apps in an App Service plan.",
        "description": "Description for Restart all apps in an App Service plan.",
        "operationId": "AppServicePlans_RestartWebApps",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "softRestart",
            "in": "query",
            "description": "Specify <code>true</code> to perform a soft restart, applies the configuration settings and restarts the apps if necessary. The default is <code>false</code>, which always restarts and reprovisions the apps",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/sites": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all apps associated with an App Service plan.",
        "description": "Description for Get all apps associated with an App Service plan.",
        "operationId": "AppServicePlans_ListWebApps",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip to a web app in the list of webapps associated with app service plan. If specified, the resulting list will contain web apps starting from (including) the skipToken. Otherwise, the resulting list contains web apps from the start of the list",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Supported filter: $filter=state eq running. Returns only web apps that are currently running",
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$top",
            "in": "query",
            "description": "List page size. If specified, results are paged.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/WebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/skus": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Gets all selectable SKUs for a given App Service Plan",
        "description": "Description for Gets all selectable SKUs for a given App Service Plan",
        "operationId": "AppServicePlans_GetServerFarmSkus",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of App Service Plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/usages": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Gets server farm usage information",
        "description": "Description for Gets server farm usage information",
        "operationId": "AppServicePlans_ListUsages",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of App Service Plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2').",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all Virtual Networks associated with an App Service plan.",
        "description": "Description for Get all Virtual Networks associated with an App Service plan.",
        "operationId": "AppServicePlans_ListVnets",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get a Virtual Network associated with an App Service plan.",
        "description": "Description for Get a Virtual Network associated with an App Service plan.",
        "operationId": "AppServicePlans_GetVnetFromServerFarm",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfoResource"
            }
          },
          "404": {
            "description": "Virtual network could not be found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get a Virtual Network gateway.",
        "description": "Description for Get a Virtual Network gateway.",
        "operationId": "AppServicePlans_GetVnetGateway",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Only the 'primary' gateway is supported.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Update a Virtual Network gateway.",
        "description": "Description for Update a Virtual Network gateway.",
        "operationId": "AppServicePlans_UpdateVnetGateway",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Name of the gateway. Only the 'primary' gateway is supported.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "Definition of the gateway.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetGateway"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get all routes that are associated with a Virtual Network in an App Service plan.",
        "description": "Description for Get all routes that are associated with a Virtual Network in an App Service plan.",
        "operationId": "AppServicePlans_ListRoutesForVnet",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}": {
      "get": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Get a Virtual Network route in an App Service plan.",
        "description": "Description for Get a Virtual Network route in an App Service plan.",
        "operationId": "AppServicePlans_GetRouteForVnet",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the Virtual Network route.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
              }
            }
          },
          "404": {
            "description": "Specified route does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Create or update a Virtual Network route in an App Service plan.",
        "description": "Description for Create or update a Virtual Network route in an App Service plan.",
        "operationId": "AppServicePlans_CreateOrUpdateVnetRoute",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the Virtual Network route.",
            "required": true,
            "type": "string"
          },
          {
            "name": "route",
            "in": "body",
            "description": "Definition of the Virtual Network route.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
            }
          },
          "400": {
            "description": "Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid.",
            "x-ms-error-response": true
          },
          "404": {
            "description": "Route not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Delete a Virtual Network route in an App Service plan.",
        "description": "Description for Delete a Virtual Network route in an App Service plan.",
        "operationId": "AppServicePlans_DeleteVnetRoute",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the Virtual Network route.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Virtual Network route."
          },
          "404": {
            "description": "Specified Virtual Network route does not exist.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Create or update a Virtual Network route in an App Service plan.",
        "description": "Description for Create or update a Virtual Network route in an App Service plan.",
        "operationId": "AppServicePlans_UpdateVnetRoute",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "Name of the Virtual Network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the Virtual Network route.",
            "required": true,
            "type": "string"
          },
          {
            "name": "route",
            "in": "body",
            "description": "Definition of the Virtual Network route.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetRoute"
            }
          },
          "400": {
            "description": "Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid.",
            "x-ms-error-response": true
          },
          "404": {
            "description": "Route not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/workers/{workerName}/reboot": {
      "post": {
        "tags": [
          "AppServicePlans"
        ],
        "summary": "Reboot a worker machine in an App Service plan.",
        "description": "Description for Reboot a worker machine in an App Service plan.",
        "operationId": "AppServicePlans_RebootWorker",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the App Service plan.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerName",
            "in": "path",
            "description": "Name of worker machine, which typically starts with RD.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Web/publishingUsers/web": {
      "get": {
        "summary": "Gets publishing user",
        "description": "Description for Gets publishing user",
        "operationId": "GetPublishingUser",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/User"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Updates publishing user",
        "description": "Description for Updates publishing user",
        "operationId": "UpdatePublishingUser",
        "parameters": [
          {
            "name": "userDetails",
            "in": "body",
            "description": "Details of publishing user",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/User"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Web/sourcecontrols": {
      "get": {
        "summary": "Gets the source controls available for Azure websites.",
        "description": "Description for Gets the source controls available for Azure websites.",
        "operationId": "ListSourceControls",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControlCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}": {
      "get": {
        "summary": "Gets source control token",
        "description": "Description for Gets source control token",
        "operationId": "GetSourceControl",
        "parameters": [
          {
            "name": "sourceControlType",
            "in": "path",
            "description": "Type of source control",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Updates source control token",
        "description": "Description for Updates source control token",
        "operationId": "UpdateSourceControl",
        "parameters": [
          {
            "name": "sourceControlType",
            "in": "path",
            "description": "Type of source control",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestMessage",
            "in": "body",
            "description": "Source control token information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/billingMeters": {
      "get": {
        "summary": "Gets a list of meters for a given location.",
        "description": "Description for Gets a list of meters for a given location.",
        "operationId": "ListBillingMeters",
        "parameters": [
          {
            "name": "billingLocation",
            "in": "query",
            "description": "Azure Location of billable resource",
            "type": "string"
          },
          {
            "name": "osType",
            "in": "query",
            "description": "App Service OS type meters used for",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BillingMeterCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability": {
      "post": {
        "summary": "Check if a resource name is available.",
        "description": "Description for Check if a resource name is available.",
        "operationId": "CheckNameAvailability",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Name availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailability"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/customhostnameSites": {
      "get": {
        "summary": "Get custom hostnames under this subscription",
        "operationId": "ListCustomHostNameSites",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/hostnameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameSitesCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get custom hostnames under subscription": {
            "$ref": "./examples/ListCustomHostNameSites.json"
          },
          "Get specific custom hostname under subscription": {
            "$ref": "./examples/ListCustomSpecificHostNameSites.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deploymentLocations": {
      "get": {
        "summary": "Gets list of available geo regions plus ministamps",
        "description": "Description for Gets list of available geo regions plus ministamps",
        "operationId": "GetSubscriptionDeploymentLocations",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLocations"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/aseRegions": {
      "get": {
        "summary": "Get a list of available ASE regions and its supported Skus.",
        "description": "Description for get a list of available ASE regions and its supported Skus.",
        "operationId": "ListAseRegions",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AseRegionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List aseregions": {
            "$ref": "./examples/ListAseRegions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions": {
      "get": {
        "summary": "Get a list of available geographical regions.",
        "description": "Description for Get a list of available geographical regions.",
        "operationId": "ListGeoRegions",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "Name of SKU used to filter the regions.",
            "type": "string",
            "enum": [
              "Free",
              "Shared",
              "Basic",
              "Standard",
              "Premium",
              "Dynamic",
              "Isolated",
              "IsolatedV2",
              "PremiumV2",
              "PremiumV3",
              "PremiumContainer",
              "ElasticPremium",
              "ElasticIsolated",
              "FlexConsumption"
            ],
            "x-ms-enum": {
              "name": "SkuName",
              "modelAsString": true
            }
          },
          {
            "name": "linuxWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux workers.",
            "type": "boolean"
          },
          {
            "name": "xenonWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Xenon workers.",
            "type": "boolean"
          },
          {
            "name": "linuxDynamicWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux Consumption Workers.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoRegionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/listSitesAssignedToHostName": {
      "post": {
        "summary": "List all apps that are assigned to a hostname.",
        "description": "Description for List all apps that are assigned to a hostname.",
        "operationId": "ListSiteIdentifiersAssignedToHostName",
        "parameters": [
          {
            "name": "nameIdentifier",
            "in": "body",
            "description": "Hostname information.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/NameIdentifier"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/IdentifierCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/checknameavailability": {
      "post": {
        "summary": "Check if a resource name is available for DNL sites.",
        "operationId": "RegionalCheckNameAvailability",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Name availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnlResourceNameAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DnlResourceNameAvailability"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers": {
      "get": {
        "summary": "List all premier add-on offers.",
        "description": "Description for List all premier add-on offers.",
        "operationId": "ListPremierAddOnOffers",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOnOfferCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/skus": {
      "get": {
        "summary": "List all SKUs.",
        "description": "Description for List all SKUs.",
        "operationId": "ListSkus",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuInfos"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/usages": {
      "get": {
        "summary": "Lists subscription core usages for all skus used in a location, for a given type of quota.",
        "description": "List usages in cores for all skus used by a subscription in a given location, for a specific quota type.",
        "operationId": "GetUsagesInLocation_list",
        "parameters": [
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get usages in location for subscription": {
            "$ref": "./examples/GetUsagesInLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/verifyHostingEnvironmentVnet": {
      "post": {
        "summary": "Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "description": "Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "operationId": "VerifyHostingEnvironmentVnet",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "VNET information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetValidationFailureDetails"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VerifyHostingEnvironmentVnet": {
            "$ref": "./examples/VerifyHostingEnvironmentVnet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources": {
      "post": {
        "summary": "Move resources between resource groups.",
        "description": "Description for Move resources between resource groups.",
        "operationId": "Move",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "moveResourceEnvelope",
            "in": "body",
            "description": "Object that represents the resource to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmMoveResourceEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate": {
      "post": {
        "summary": "Validate if a resource can be created.",
        "description": "Description for Validate if a resource can be created.",
        "operationId": "Validate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "validateRequest",
            "in": "body",
            "description": "Request with the resources to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/validateMoveResources": {
      "post": {
        "summary": "Validate whether a resource can be moved.",
        "description": "Description for Validate whether a resource can be moved.",
        "operationId": "ValidateMove",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "moveResourceEnvelope",
            "in": "body",
            "description": "Object that represents the resource to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmMoveResourceEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites": {
      "get": {
        "tags": [
          "DeletedWebApps"
        ],
        "summary": "Get all deleted apps for a subscription.",
        "description": "Description for Get all deleted apps for a subscription.",
        "operationId": "DeletedWebApps_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletedWebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/deletedSites": {
      "get": {
        "tags": [
          "DeletedWebApps"
        ],
        "summary": "Get all deleted apps for a subscription at location",
        "description": "Description for Get all deleted apps for a subscription at location",
        "operationId": "DeletedWebApps_ListByLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletedWebAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Deleted Web App by Location": {
            "$ref": "./examples/ListDeletedWebAppsByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/deletedSites/{deletedSiteId}": {
      "get": {
        "tags": [
          "DeletedWebApps"
        ],
        "summary": "Get deleted app for a subscription at location.",
        "description": "Description for Get deleted app for a subscription at location.",
        "operationId": "DeletedWebApps_GetDeletedWebAppByLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletedSiteId",
            "in": "path",
            "description": "The numeric ID of the deleted app, e.g. 12345",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DeletedSite"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Web App by Location": {
            "$ref": "./examples/GetDeletedWebAppByLocation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}": {
      "get": {
        "tags": [
          "Global"
        ],
        "summary": "Get deleted app for a subscription.",
        "description": "Description for Get deleted app for a subscription.",
        "operationId": "Global_GetDeletedWebApp",
        "parameters": [
          {
            "name": "deletedSiteId",
            "in": "path",
            "description": "The numeric ID of the deleted app, e.g. 12345",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DeletedSite"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Web App": {
            "$ref": "./examples/GetDeletedWebApp.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}/snapshots": {
      "get": {
        "tags": [
          "Global"
        ],
        "summary": "Get all deleted apps for a subscription.",
        "description": "Description for Get all deleted apps for a subscription.",
        "operationId": "Global_GetDeletedWebAppSnapshots",
        "parameters": [
          {
            "name": "deletedSiteId",
            "in": "path",
            "description": "The numeric ID of the deleted app, e.g. 12345",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/Snapshot"
              }
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Web App Snapshots": {
            "$ref": "./examples/GetDeletedWebAppSnapshots.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/operations/{operationId}": {
      "get": {
        "tags": [
          "Global"
        ],
        "summary": "Gets an operation in a subscription and given region",
        "description": "Description for Gets an operation in a subscription and given region",
        "operationId": "Global_GetSubscriptionOperationWithAsyncResponse",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location name",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation Id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an operation in a subscription and given region": {
            "$ref": "./examples/GetSubscriptionOperationWithAsyncResponse.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "List all recommendations for a subscription.",
        "description": "Description for List all recommendations for a subscription.",
        "operationId": "Recommendations_List",
        "parameters": [
          {
            "name": "featured",
            "in": "query",
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/reset": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Reset all recommendation opt-out settings for a subscription.",
        "description": "Description for Reset all recommendation opt-out settings for a subscription.",
        "operationId": "Recommendations_ResetAllFilters",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/{name}/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disables the specified rule so it will not apply to a subscription in the future.",
        "description": "Description for Disables the specified rule so it will not apply to a subscription in the future.",
        "operationId": "Recommendations_DisableRecommendationForSubscription",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Rule name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendationHistory": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get past recommendations for an app, optionally specified by the time range.",
        "description": "Description for Get past recommendations for an app, optionally specified by the time range.",
        "operationId": "Recommendations_ListHistoryForHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "description": "Name of the hosting environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "expiredOnly",
            "in": "query",
            "description": "Specify <code>false</code> to return all recommendations. The default is <code>true</code>, which returns only expired recommendations.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all recommendations for a hosting environment.",
        "description": "Description for Get all recommendations for a hosting environment.",
        "operationId": "Recommendations_ListRecommendedRulesForHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification'",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disable all recommendations for an app.",
        "description": "Description for Disable all recommendations for an app.",
        "operationId": "Recommendations_DisableAllForHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "query",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/reset": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Reset all recommendation opt-out settings for an app.",
        "description": "Description for Reset all recommendation opt-out settings for an app.",
        "operationId": "Recommendations_ResetAllFiltersForHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "query",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get a recommendation rule for an app.",
        "description": "Description for Get a recommendation rule for an app.",
        "operationId": "Recommendations_GetRuleDetailsByHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "description": "Name of the hosting environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the recommendation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateSeen",
            "in": "query",
            "description": "Specify <code>true</code> to update the last-seen timestamp of the recommendation object.",
            "type": "boolean"
          },
          {
            "name": "recommendationId",
            "in": "query",
            "description": "The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationRule"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disables the specific rule for a web site permanently.",
        "description": "Description for Disables the specific rule for a web site permanently.",
        "operationId": "Recommendations_DisableRecommendationForHostingEnvironment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "query",
            "description": "Site name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Rule name",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostingEnvironmentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get past recommendations for an app, optionally specified by the time range.",
        "description": "Description for Get past recommendations for an app, optionally specified by the time range.",
        "operationId": "Recommendations_ListHistoryForWebApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "expiredOnly",
            "in": "query",
            "description": "Specify <code>false</code> to return all recommendations. The default is <code>true</code>, which returns only expired recommendations.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all recommendations for an app.",
        "description": "Description for Get all recommendations for an app.",
        "operationId": "Recommendations_ListRecommendedRulesForWebApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification'",
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disable all recommendations for an app.",
        "description": "Description for Disable all recommendations for an app.",
        "operationId": "Recommendations_DisableAllForWebApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/reset": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Reset all recommendation opt-out settings for an app.",
        "description": "Description for Reset all recommendation opt-out settings for an app.",
        "operationId": "Recommendations_ResetAllFiltersForWebApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get a recommendation rule for an app.",
        "description": "Description for Get a recommendation rule for an app.",
        "operationId": "Recommendations_GetRuleDetailsByWebApp",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the recommendation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateSeen",
            "in": "query",
            "description": "Specify <code>true</code> to update the last-seen timestamp of the recommendation object.",
            "type": "boolean"
          },
          {
            "name": "recommendationId",
            "in": "query",
            "description": "The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationRule"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disables the specific rule for a web site permanently.",
        "description": "Description for Disables the specific rule for a web site permanently.",
        "operationId": "Recommendations_DisableRecommendationForSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Rule name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/previewStaticSiteWorkflowFile": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Generates a preview workflow file for the static site",
        "description": "Description for Generates a preview workflow file for the static site",
        "operationId": "StaticSites_PreviewWorkflow",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location where you plan to create the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSitesWorkflowPreviewRequest",
            "in": "body",
            "description": "A JSON representation of the StaticSitesWorkflowPreviewRequest properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSitesWorkflowPreviewRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSitesWorkflowPreview"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Generates a preview workflow file for the static site": {
            "$ref": "./examples/GenerateStaticSiteWorkflowPreview.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/staticSites": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Get all Static Sites for a subscription.",
        "description": "Description for Get all Static Sites for a subscription.",
        "operationId": "StaticSites_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all static sites in a subscription": {
            "$ref": "./examples/GetAllStaticSites.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets all static sites in the specified resource group.",
        "description": "Description for Gets all static sites in the specified resource group.",
        "operationId": "StaticSites_GetStaticSitesByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get static sites for a resource group": {
            "$ref": "./examples/GetStaticSites.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of a static site.",
        "description": "Description for Gets the details of a static site.",
        "operationId": "StaticSites_GetStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details for a static site": {
            "$ref": "./examples/GetStaticSite.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates a new static site in an existing resource group, or updates an existing static site.",
        "description": "Description for Creates a new static site in an existing resource group, or updates an existing static site.",
        "operationId": "StaticSites_CreateOrUpdateStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteEnvelope",
            "in": "body",
            "description": "A JSON representation of the staticsite properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a static site": {
            "$ref": "./examples/CreateOrUpdateStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deletes a static site.",
        "description": "Description for Deletes a static site.",
        "operationId": "StaticSites_DeleteStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a static site": {
            "$ref": "./examples/DeleteStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates a new static site in an existing resource group, or updates an existing static site.",
        "description": "Description for Creates a new static site in an existing resource group, or updates an existing static site.",
        "operationId": "StaticSites_UpdateStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteEnvelope",
            "in": "body",
            "description": "A JSON representation of the staticsite properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSitePatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "#/definitions/StaticSiteARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a static site": {
            "$ref": "./examples/PatchStaticSite.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/listUsers": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the list of users of a static site.",
        "description": "Description for Gets the list of users of a static site.",
        "operationId": "StaticSites_ListStaticSiteUsers",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authprovider",
            "in": "path",
            "description": "The auth provider for the users.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List users for a static site": {
            "$ref": "./examples/ListStaticSiteUsers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/users/{userid}": {
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deletes the user entry from the static site.",
        "description": "Description for Deletes the user entry from the static site.",
        "operationId": "StaticSites_DeleteStaticSiteUser",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the staticsite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authprovider",
            "in": "path",
            "description": "The auth provider for this user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The user id of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a user for a static site": {
            "$ref": "./examples/DeleteStaticSiteUser.json"
          }
        }
      },
      "patch": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Updates a user entry with the listed roles",
        "description": "Description for Updates a user entry with the listed roles",
        "operationId": "StaticSites_UpdateStaticSiteUser",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authprovider",
            "in": "path",
            "description": "The auth provider for this user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The user id of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteUserEnvelope",
            "in": "body",
            "description": "A JSON representation of the StaticSiteUser properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteUserARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a user for a static site": {
            "$ref": "./examples/UpdateStaticSiteUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets all static site builds for a particular static site.",
        "description": "Description for Gets all static site builds for a particular static site.",
        "operationId": "StaticSites_GetStaticSiteBuilds",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteBuildCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all builds for a static site": {
            "$ref": "./examples/GetStaticSiteBuilds.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of a static site build.",
        "description": "Description for Gets the details of a static site build.",
        "operationId": "StaticSites_GetStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteBuildARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a static site build": {
            "$ref": "./examples/GetStaticSiteBuild.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deletes a static site build.",
        "description": "Description for Deletes a static site build.",
        "operationId": "StaticSites_DeleteStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a static site build": {
            "$ref": "./examples/DeleteStaticSiteBuild.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/config/appsettings": {
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates or updates the app settings of a static site build.",
        "description": "Description for Creates or updates the app settings of a static site build.",
        "operationId": "StaticSites_CreateOrUpdateStaticSiteBuildAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "The dictionary containing the static site app settings to update.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates the function app settings of a static site build.": {
            "$ref": "./examples/CreateOrUpdateStaticSiteBuildAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/config/functionappsettings": {
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates or updates the function app settings of a static site build.",
        "description": "Description for Creates or updates the function app settings of a static site build.",
        "operationId": "StaticSites_CreateOrUpdateStaticSiteBuildFunctionAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "The dictionary containing the static site function app settings to update.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates the function app settings of a static site build.": {
            "$ref": "./examples/CreateOrUpdateStaticSiteBuildFunctionAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns overviews of database connections for a static site build",
        "operationId": "StaticSites_GetBuildDatabaseConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List overviews of database connections for the static site build.": {
            "$ref": "./examples/GetStaticSiteBuildDatabaseConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns overview of a database connection for a static site build by name",
        "operationId": "StaticSites_GetBuildDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get overview of database connections for the static site build.": {
            "$ref": "./examples/GetStaticSiteBuildDatabaseConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Create or update a database connection for a static site build",
        "description": "Description for Create or update a database connection for a static site build",
        "operationId": "StaticSites_CreateOrUpdateBuildDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "name": "databaseConnectionRequestEnvelope",
            "in": "body",
            "description": "A JSON representation of the database connection request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a database connection for a static site build": {
            "$ref": "./examples/CreateOrUpdateStaticSiteBuildDatabaseConnection.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Delete a database connection for a static site build",
        "operationId": "StaticSites_DeleteBuildDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a database connection from a static site build.": {
            "$ref": "./examples/DeleteStaticSiteBuildDatabaseConnection.json"
          }
        }
      },
      "patch": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Create or update a database connection for a static site build",
        "description": "Description for Create or update a database connection for a static site build",
        "operationId": "StaticSites_UpdateBuildDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "name": "databaseConnectionRequestEnvelope",
            "in": "body",
            "description": "A JSON representation of the database connection request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionPatchRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a database connection for a static site build": {
            "$ref": "./examples/PatchStaticSiteBuildDatabaseConnection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}/show": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of a database connection for a static site build by name",
        "operationId": "StaticSites_GetBuildDatabaseConnectionWithDetails",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of database connections for the static site build.": {
            "$ref": "./examples/GetStaticSiteBuildDatabaseConnectionWithDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/functions": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the functions of a particular static site build.",
        "description": "Description for Gets the functions of a particular static site build.",
        "operationId": "StaticSites_ListStaticSiteBuildFunctions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteFunctionOverviewCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the functions of a particular static site build": {
            "$ref": "./examples/ListStaticSiteBuildFunctions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/listAppSettings": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the application settings of a static site build.",
        "description": "Description for Gets the application settings of a static site build.",
        "operationId": "StaticSites_ListStaticSiteBuildAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get app settings of a static site build": {
            "$ref": "./examples/ListStaticSiteBuildAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/listFunctionAppSettings": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the application settings of a static site build.",
        "description": "Description for Gets the application settings of a static site build.",
        "operationId": "StaticSites_ListStaticSiteBuildFunctionAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get function app settings of a static site build": {
            "$ref": "./examples/ListStaticSiteBuildFunctionAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/showDatabaseConnections": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of database connections for a static site build",
        "operationId": "StaticSites_GetBuildDatabaseConnectionsWithDetails",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/environmentNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List full details of database connections for the static site build.": {
            "$ref": "./examples/GetStaticSiteBuildDatabaseConnectionsWithDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of the user provided function apps registered with a static site build",
        "description": "Description for Gets the details of the user provided function apps registered with a static site build",
        "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppsCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the user provided function apps registered with a static site build.": {
            "$ref": "./examples/GetUserProvidedFunctionAppsForStaticSiteBuild.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of the user provided function app registered with a static site build",
        "description": "Description for Gets the details of the user provided function app registered with a static site build",
        "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app registered with the static site build.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the user provided function app registered with a static site build.": {
            "$ref": "./examples/GetUserProvidedFunctionAppForStaticSiteBuild.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Register a user provided function app with a static site build",
        "description": "Description for Register a user provided function app with a static site build",
        "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app to register with the static site build.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteUserProvidedFunctionEnvelope",
            "in": "body",
            "description": "A JSON representation of the user provided function app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          {
            "name": "isForced",
            "in": "query",
            "description": "Specify <code>true</code> to force the update of the auth configuration on the function app even if an AzureStaticWebApps provider is already configured on the function app. The default is <code>false</code>.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Register a user provided function app with a static site build": {
            "$ref": "./examples/RegisterUserProvidedFunctionAppWithStaticSiteBuild.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Detach the user provided function app from the static site build",
        "description": "Description for Detach the user provided function app from the static site build",
        "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app registered with the static site build.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Detach the user provided function app from the static site build.": {
            "$ref": "./examples/DetachUserProvidedFunctionAppFromStaticSiteBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/zipdeploy": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deploys zipped content to a specific environment of a static site.",
        "description": "Description for Deploys zipped content to a specific environment of a static site.",
        "operationId": "StaticSites_CreateZipDeploymentForStaticSiteBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteZipDeploymentEnvelope",
            "in": "body",
            "description": "A JSON representation of the StaticSiteZipDeployment properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteZipDeploymentARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploy a site from a zipped package to a particular static site build": {
            "$ref": "./examples/StaticSiteBuildZipDeploy.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/config/appsettings": {
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates or updates the app settings of a static site.",
        "description": "Description for Creates or updates the app settings of a static site.",
        "operationId": "StaticSites_CreateOrUpdateStaticSiteAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "The dictionary containing the static site app settings to update.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates the app settings of a static site.": {
            "$ref": "./examples/CreateOrUpdateStaticSiteAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/basicAuth": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the basic auth properties for a static site as a collection.",
        "description": "Description for Gets the basic auth properties for a static site as a collection.",
        "operationId": "StaticSites_ListBasicAuth",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteBasicAuthPropertiesCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the basic auth properties for a static site.": {
            "$ref": "./examples/ListStaticSiteBasicAuth.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/basicAuth/{basicAuthName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the basic auth properties for a static site.",
        "description": "Description for Gets the basic auth properties for a static site.",
        "operationId": "StaticSites_GetBasicAuth",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "basicAuthName",
            "in": "path",
            "description": "name of the basic auth entry.",
            "required": true,
            "type": "string",
            "pattern": "default",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BasicAuthName",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteBasicAuthPropertiesARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the basic auth properties for a static site.": {
            "$ref": "./examples/GetStaticSiteBasicAuth.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Adds or updates basic auth for a static site.",
        "description": "Description for Adds or updates basic auth for a static site.",
        "operationId": "StaticSites_CreateOrUpdateBasicAuth",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "basicAuthName",
            "in": "path",
            "description": "name of the basic auth entry.",
            "required": true,
            "type": "string",
            "pattern": "default",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BasicAuthName",
              "modelAsString": true
            }
          },
          {
            "name": "basicAuthEnvelope",
            "in": "body",
            "description": "A JSON representation of the basic auth properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteBasicAuthPropertiesARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteBasicAuthPropertiesARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates basic auth properties for a static site.": {
            "$ref": "./examples/CreateOrUpdateStaticSiteBasicAuth.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/config/functionappsettings": {
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates or updates the function app settings of a static site.",
        "description": "Description for Creates or updates the function app settings of a static site.",
        "operationId": "StaticSites_CreateOrUpdateStaticSiteFunctionAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "The dictionary containing the static site function app settings to update.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates the function app settings of a static site.": {
            "$ref": "./examples/CreateOrUpdateStaticSiteFunctionAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/createUserInvitation": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates an invitation link for a user with the role",
        "description": "Description for Creates an invitation link for a user with the role",
        "operationId": "StaticSites_CreateUserRolesInvitationLink",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteUserRolesInvitationEnvelope",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteUserInvitationRequestResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserInvitationResponseResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an invitation link for a user for a static site": {
            "$ref": "./examples/CreateUserRolesInvitationLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets all static site custom domains for a particular static site.",
        "description": "Description for Gets all static site custom domains for a particular static site.",
        "operationId": "StaticSites_ListStaticSiteCustomDomains",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site resource to search in.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainOverviewCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List custom domains for a static site": {
            "$ref": "./examples/GetStaticSiteCustomDomains.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets an existing custom domain for a particular static site.",
        "description": "Description for Gets an existing custom domain for a particular static site.",
        "operationId": "StaticSites_GetStaticSiteCustomDomain",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site resource to search in.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The custom domain name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainOverviewARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get custom domain for a static site": {
            "$ref": "./examples/GetStaticSiteCustomDomain.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Creates a new static site custom domain in an existing resource group and static site.",
        "description": "Description for Creates a new static site custom domain in an existing resource group and static site.",
        "operationId": "StaticSites_CreateOrUpdateStaticSiteCustomDomain",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The custom domain to create.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteCustomDomainRequestPropertiesEnvelope",
            "in": "body",
            "description": "A JSON representation of the static site custom domain request properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainRequestPropertiesARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainOverviewARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainOverviewARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a custom domain for a static site": {
            "$ref": "./examples/CreateOrUpdateStaticSiteCustomDomain.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deletes a custom domain.",
        "description": "Description for Deletes a custom domain.",
        "operationId": "StaticSites_DeleteStaticSiteCustomDomain",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The custom domain to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a custom domain for a static site": {
            "$ref": "./examples/DeleteStaticSiteCustomDomain.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}/validate": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Validates a particular custom domain can be added to a static site.",
        "description": "Description for Validates a particular custom domain can be added to a static site.",
        "operationId": "StaticSites_ValidateCustomDomainCanBeAddedToStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The custom domain to validate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteCustomDomainRequestPropertiesEnvelope",
            "in": "body",
            "description": "A JSON representation of the static site custom domain request properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteCustomDomainRequestPropertiesARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate a custom domain for a static site": {
            "$ref": "./examples/ValidateStaticSiteCustomDomain.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns overviews of database connections for a static site",
        "operationId": "StaticSites_GetDatabaseConnections",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List overviews of database connections for the static site.": {
            "$ref": "./examples/GetStaticSiteDatabaseConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns overview of a database connection for a static site by name",
        "operationId": "StaticSites_GetDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get overview of database connections for the static site.": {
            "$ref": "./examples/GetStaticSiteDatabaseConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Create or update a database connection for a static site",
        "description": "Description for Create or update a database connection for a static site",
        "operationId": "StaticSites_CreateOrUpdateDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "name": "databaseConnectionRequestEnvelope",
            "in": "body",
            "description": "A JSON representation of the database connection request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a database connection for a static site": {
            "$ref": "./examples/CreateOrUpdateStaticSiteDatabaseConnection.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Delete a database connection for a static site",
        "operationId": "StaticSites_DeleteDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a database connection from a static site.": {
            "$ref": "./examples/DeleteStaticSiteDatabaseConnection.json"
          }
        }
      },
      "patch": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Create or update a database connection for a static site",
        "description": "Description for Create or update a database connection for a static site",
        "operationId": "StaticSites_UpdateDatabaseConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "name": "databaseConnectionRequestEnvelope",
            "in": "body",
            "description": "A JSON representation of the database connection request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionPatchRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a database connection for a static site": {
            "$ref": "./examples/PatchStaticSiteDatabaseConnection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}/show": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of a database connection for a static site by name",
        "operationId": "StaticSites_GetDatabaseConnectionWithDetails",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/databaseConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of database connections for the static site.": {
            "$ref": "./examples/GetStaticSiteDatabaseConnectionWithDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/detach": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Detaches a static site.",
        "description": "Description for Detaches a static site.",
        "operationId": "StaticSites_DetachStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site to detach.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Detach a static site": {
            "$ref": "./examples/DetachStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/functions": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the functions of a static site.",
        "description": "Description for Gets the functions of a static site.",
        "operationId": "StaticSites_ListStaticSiteFunctions",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteFunctionOverviewCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the functions of a static site": {
            "$ref": "./examples/ListStaticSiteFunctions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listAppSettings": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the application settings of a static site.",
        "description": "Description for Gets the application settings of a static site.",
        "operationId": "StaticSites_ListStaticSiteAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get app settings of a static site": {
            "$ref": "./examples/ListStaticSiteAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listConfiguredRoles": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Lists the roles configured for the static site.",
        "description": "Description for Lists the roles configured for the static site.",
        "operationId": "StaticSites_ListStaticSiteConfiguredRoles",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StringList"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the configured roles for a static site": {
            "$ref": "./examples/ListStaticSiteConfiguredRoles.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listFunctionAppSettings": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the application settings of a static site.",
        "description": "Description for Gets the application settings of a static site.",
        "operationId": "StaticSites_ListStaticSiteFunctionAppSettings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get function app settings of a static site": {
            "$ref": "./examples/ListStaticSiteFunctionAppSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listSecrets": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Lists the secrets for an existing static site.",
        "description": "Description for Lists the secrets for an existing static site.",
        "operationId": "StaticSites_ListStaticSiteSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List secrets for a static site": {
            "$ref": "./examples/ListStaticSiteSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the list of private endpoint connections associated with a static site",
        "description": "Description for Gets the list of private endpoint connections associated with a static site",
        "operationId": "StaticSites_GetPrivateEndpointConnectionList",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateEndpointConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of private endpoint connections associated with a site.": {
            "$ref": "./examples/GetSitePrivateEndpointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets a private endpoint connection",
        "description": "Description for Gets a private endpoint connection",
        "operationId": "StaticSites_GetPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection for a site.": {
            "$ref": "./examples/GetSitePrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Approves or rejects a private endpoint connection",
        "description": "Description for Approves or rejects a private endpoint connection",
        "operationId": "StaticSites_ApproveOrRejectPrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointWrapper",
            "in": "body",
            "description": "Request body.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/RemotePrivateEndpointConnectionARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approves or rejects a private endpoint connection for a site.": {
            "$ref": "./examples/ApproveRejectSitePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deletes a private endpoint connection",
        "description": "Description for Deletes a private endpoint connection",
        "operationId": "StaticSites_DeletePrivateEndpointConnection",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a private endpoint connection for a site.": {
            "$ref": "./examples/DeleteSitePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateLinkResources": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the private link resources",
        "description": "Description for Gets the private link resources",
        "operationId": "StaticSites_GetPrivateLinkResources",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateLinkResourcesWrapper"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get private link resources of a site": {
            "$ref": "./examples/GetSitePrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/resetapikey": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Resets the api key for an existing static site.",
        "description": "Description for Resets the api key for an existing static site.",
        "operationId": "StaticSites_ResetStaticSiteApiKey",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resetPropertiesEnvelope",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteResetPropertiesARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reset the api key for a static site": {
            "$ref": "./examples/ResetStaticSiteApiKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/showDatabaseConnections": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of database connections for a static site",
        "operationId": "StaticSites_GetDatabaseConnectionsWithDetails",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseConnectionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List full details of database connections for the static site.": {
            "$ref": "./examples/GetStaticSiteDatabaseConnectionsWithDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of the user provided function apps registered with a static site",
        "description": "Description for Gets the details of the user provided function apps registered with a static site",
        "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppsCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the user provided function apps registered with a static site.": {
            "$ref": "./examples/GetUserProvidedFunctionAppsForStaticSite.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Gets the details of the user provided function app registered with a static site",
        "description": "Description for Gets the details of the user provided function app registered with a static site",
        "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app registered with the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the user provided function app registered with a static site.": {
            "$ref": "./examples/GetUserProvidedFunctionAppForStaticSite.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Register a user provided function app with a static site",
        "description": "Description for Register a user provided function app with a static site",
        "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app to register with the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteUserProvidedFunctionEnvelope",
            "in": "body",
            "description": "A JSON representation of the user provided function app properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          {
            "name": "isForced",
            "in": "query",
            "description": "Specify <code>true</code> to force the update of the auth configuration on the function app even if an AzureStaticWebApps provider is already configured on the function app. The default is <code>false</code>.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress.",
            "schema": {
              "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Register a user provided function app with a static site": {
            "$ref": "./examples/RegisterUserProvidedFunctionAppWithStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Detach the user provided function app from the static site",
        "description": "Description for Detach the user provided function app from the static site",
        "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "functionAppName",
            "in": "path",
            "description": "Name of the function app registered with the static site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Detach the user provided function app from the static site.": {
            "$ref": "./examples/DetachUserProvidedFunctionAppFromStaticSite.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/zipdeploy": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Deploys zipped content to a static site.",
        "description": "Description for Deploys zipped content to a static site.",
        "operationId": "StaticSites_CreateZipDeploymentForStaticSite",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteZipDeploymentEnvelope",
            "in": "body",
            "description": "A JSON representation of the StaticSiteZipDeployment properties. See example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteZipDeploymentARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploy a site from a zipped package": {
            "$ref": "./examples/StaticSiteZipDeploy.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}/validate": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Validates that a backend can be linked to a static site",
        "operationId": "StaticSites_ValidateBackend",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the linked backend that should be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteLinkedBackendEnvelope",
            "in": "body",
            "description": "A JSON representation of the linked backend request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate if backend can be linked to static site.": {
            "$ref": "./examples/ValidateLinkedBackendForStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}/validate": {
      "post": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Validates that a backend can be linked to a static site build",
        "operationId": "StaticSites_ValidateBackendForBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the linked backend that should be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteLinkedBackendEnvelope",
            "in": "body",
            "description": "A JSON representation of the linked backend request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "202": {
            "description": "Asynchronous operation in progress."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate if backend can be linked to static site build.": {
            "$ref": "./examples/ValidateLinkedBackendForStaticSiteBuild.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of all backends linked to a static site",
        "operationId": "StaticSites_GetLinkedBackends",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendsCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the linked backends registered with a static site.": {
            "$ref": "./examples/GetLinkedBackendsForStaticSite.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns details of all backends linked to a static site build",
        "operationId": "StaticSites_GetLinkedBackendsForBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendsCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the linked backends registered with a static site build.": {
            "$ref": "./examples/GetLinkedBackendsForStaticSiteBuild.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns the details of a linked backend linked to a static site by name",
        "operationId": "StaticSites_GetLinkedBackend",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the linked backend that should be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the linked backend registered with a static site by name.": {
            "$ref": "./examples/GetLinkedBackendForStaticSite.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Link backend to a static site",
        "operationId": "StaticSites_LinkBackend",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the backend to link to the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteLinkedBackendEnvelope",
            "in": "body",
            "description": "A JSON representation of the linked backend request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Link a backend to a static site": {
            "$ref": "./examples/LinkBackendToStaticSite.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Unlink a backend from a static site",
        "operationId": "StaticSites_UnlinkBackend",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the backend linked to the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "isCleaningAuthConfig",
            "in": "query",
            "description": "Decides if Easy Auth configuration will be removed from backend configuration",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Unlink a backend from a static site.": {
            "$ref": "./examples/UnlinkBackendFromStaticSite.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}": {
      "get": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Returns the details of a linked backend linked to a static site build by name",
        "operationId": "StaticSites_GetLinkedBackendForBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the linked backend that should be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get details of the linked backend registered with a static site build by name.": {
            "$ref": "./examples/GetLinkedBackendForStaticSiteBuild.json"
          }
        }
      },
      "put": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Link backend to a static site build",
        "operationId": "StaticSites_LinkBackendToBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the backend to link to the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "staticSiteLinkedBackendEnvelope",
            "in": "body",
            "description": "A JSON representation of the linked backend request properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Link a backend to a static site build": {
            "$ref": "./examples/LinkBackendToStaticSiteBuild.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StaticSites"
        ],
        "summary": "Unlink a backend from a static site build",
        "operationId": "StaticSites_UnlinkBackendFromBuild",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The stage site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedBackendName",
            "in": "path",
            "description": "Name of the backend linked to the static site",
            "required": true,
            "type": "string"
          },
          {
            "name": "isCleaningAuthConfig",
            "in": "query",
            "description": "Decides if auth will be removed from backend configuration",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Unlink a backend from a static site build.": {
            "$ref": "./examples/UnlinkBackendFromStaticSiteBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/certificates": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get all certificates in a resource group under a site.",
        "operationId": "SiteCertificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by resource group": {
            "$ref": "./examples/ListSiteCertificatesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get a certificate belonging to a given site.",
        "operationId": "SiteCertificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/GetSiteCertificate.json"
          }
        }
      },
      "put": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate under a given site.",
        "operationId": "SiteCertificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "201": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update Certificate": {
            "$ref": "./examples/CreateOrUpdateSiteCertificate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Delete a certificate from the site.",
        "operationId": "SiteCertificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/DeleteSiteCertificate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate under a given site.",
        "operationId": "SiteCertificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificatePatchResource"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/PatchSiteCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/certificates": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get all certificates in a resource group for a given site and a deployment slot.",
        "operationId": "SiteCertificates_ListSlot",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by resource group for a slot": {
            "$ref": "./examples/ListSiteCertificatesByResourceGroupSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get a certificate for a given site and deployment slot.",
        "operationId": "SiteCertificates_GetSlot",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string",
            "pattern": "^[A-z][A-z0-9]*$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Site Certificate for a slot": {
            "$ref": "./examples/GetSiteCertificateSlot.json"
          }
        }
      },
      "put": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate in a given site and deployment slot.",
        "operationId": "SiteCertificates_CreateOrUpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "201": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update Certificate for slot": {
            "$ref": "./examples/CreateOrUpdateSiteCertificateSlot.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Delete a certificate for a given site and deployment slot.",
        "operationId": "SiteCertificates_DeleteSlot",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate for slot": {
            "$ref": "./examples/DeleteSiteCertificateSlot.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate for a site and deployment slot.",
        "operationId": "SiteCertificates_UpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificatePatchResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate for slot": {
            "$ref": "./examples/PatchSiteCertificateSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/detectors": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "List Hosting Environment Detector Responses",
        "description": "Description for List Hosting Environment Detector Responses",
        "operationId": "Diagnostics_ListHostingEnvironmentDetectorResponses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponseCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Service Environment Detector Responses": {
            "$ref": "./examples/Diagnostics_ListHostingEnvironmentDetectorResponses.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Hosting Environment Detector Response",
        "description": "Description for Get Hosting Environment Detector Response",
        "operationId": "Diagnostics_GetHostingEnvironmentDetectorResponse",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "App Service Environment Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Service Environment Detector Responses": {
            "$ref": "./examples/Diagnostics_GetHostingEnvironmentDetectorResponse.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/detectors": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "List Site Detector Responses",
        "description": "Description for List Site Detector Responses",
        "operationId": "Diagnostics_ListSiteDetectorResponses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponseCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector Responses": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorResponses.json"
          },
          "Get App Slot Detector Responses": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorResponsesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get site detector response",
        "description": "Description for Get site detector response",
        "operationId": "Diagnostics_GetSiteDetectorResponse",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector Response": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorResponse.json"
          },
          "Get App Slot Detector Response": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorResponseSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Diagnostics Categories",
        "description": "Description for Get Diagnostics Categories",
        "operationId": "Diagnostics_ListSiteDiagnosticCategories",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticCategoryCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Diagnostic Categories": {
            "$ref": "./examples/Diagnostics_ListSiteDiagnosticCategories.json"
          },
          "List App Slot Diagnostic Categories": {
            "$ref": "./examples/Diagnostics_ListSiteDiagnosticCategoriesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Diagnostics Category",
        "description": "Description for Get Diagnostics Category",
        "operationId": "Diagnostics_GetSiteDiagnosticCategory",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticCategory"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Diagnostic Category": {
            "$ref": "./examples/Diagnostics_GetSiteDiagnosticCategory.json"
          },
          "Get App Slot Diagnostic Category": {
            "$ref": "./examples/Diagnostics_GetSiteDiagnosticCategorySlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/analyses": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Site Analyses",
        "description": "Description for Get Site Analyses",
        "operationId": "Diagnostics_ListSiteAnalyses",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticAnalysisCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Analyses": {
            "$ref": "./examples/Diagnostics_ListSiteAnalyses.json"
          },
          "List App Slot Analyses": {
            "$ref": "./examples/Diagnostics_ListSiteAnalysesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/analyses/{analysisName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Site Analysis",
        "description": "Description for Get Site Analysis",
        "operationId": "Diagnostics_GetSiteAnalysis",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisName",
            "in": "path",
            "description": "Analysis Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnalysisDefinition"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Analysis": {
            "$ref": "./examples/Diagnostics_GetSiteAnalysis.json"
          },
          "Get App Slot Analysis": {
            "$ref": "./examples/Diagnostics_GetSiteAnalysisSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/analyses/{analysisName}/execute": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Execute Analysis",
        "description": "Description for Execute Analysis",
        "operationId": "Diagnostics_ExecuteSiteAnalysis",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Category Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisName",
            "in": "path",
            "description": "Analysis Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticAnalysis"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Execute site slot analysis": {
            "$ref": "./examples/Diagnostics_ExecuteSiteAnalysisSlot.json"
          },
          "Execute site analysis": {
            "$ref": "./examples/Diagnostics_ExecuteSiteAnalysis.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/detectors": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Detectors",
        "description": "Description for Get Detectors",
        "operationId": "Diagnostics_ListSiteDetectors",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticDetectorCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Detectors": {
            "$ref": "./examples/Diagnostics_ListSiteDetectors.json"
          },
          "List App Slot Detectors": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorsSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Detector",
        "description": "Description for Get Detector",
        "operationId": "Diagnostics_GetSiteDetector",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectorDefinitionResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector": {
            "$ref": "./examples/Diagnostics_GetSiteDetector.json"
          },
          "Get App Slot Detector": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/detectors/{detectorName}/execute": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Execute Detector",
        "description": "Description for Execute Detector",
        "operationId": "Diagnostics_ExecuteSiteDetector",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Category Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticDetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Execute site detector": {
            "$ref": "./examples/Diagnostics_ExecuteSiteDetector.json"
          },
          "Execute site slot detector": {
            "$ref": "./examples/Diagnostics_ExecuteSiteDetectorSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/detectors": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "List Site Detector Responses",
        "description": "Description for List Site Detector Responses",
        "operationId": "Diagnostics_ListSiteDetectorResponsesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponseCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector Responses": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorResponses.json"
          },
          "Get App Slot Detector Responses": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorResponsesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get site detector response",
        "description": "Description for Get site detector response",
        "operationId": "Diagnostics_GetSiteDetectorResponseSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector Response": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorResponse.json"
          },
          "Get App Slot Detector Response": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorResponseSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Diagnostics Categories",
        "description": "Description for Get Diagnostics Categories",
        "operationId": "Diagnostics_ListSiteDiagnosticCategoriesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticCategoryCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Diagnostic Categories": {
            "$ref": "./examples/Diagnostics_ListSiteDiagnosticCategories.json"
          },
          "List App Slot Diagnostic Categories": {
            "$ref": "./examples/Diagnostics_ListSiteDiagnosticCategoriesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Diagnostics Category",
        "description": "Description for Get Diagnostics Category",
        "operationId": "Diagnostics_GetSiteDiagnosticCategorySlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticCategory"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Diagnostic Category": {
            "$ref": "./examples/Diagnostics_GetSiteDiagnosticCategory.json"
          },
          "Get App Slot Diagnostic Category": {
            "$ref": "./examples/Diagnostics_GetSiteDiagnosticCategorySlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/analyses": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Site Analyses",
        "description": "Description for Get Site Analyses",
        "operationId": "Diagnostics_ListSiteAnalysesSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticAnalysisCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Analyses": {
            "$ref": "./examples/Diagnostics_ListSiteAnalyses.json"
          },
          "List App Slot Analyses": {
            "$ref": "./examples/Diagnostics_ListSiteAnalysesSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/analyses/{analysisName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Site Analysis",
        "description": "Description for Get Site Analysis",
        "operationId": "Diagnostics_GetSiteAnalysisSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisName",
            "in": "path",
            "description": "Analysis Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot - optional",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnalysisDefinition"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Analysis": {
            "$ref": "./examples/Diagnostics_GetSiteAnalysis.json"
          },
          "Get App Slot Analysis": {
            "$ref": "./examples/Diagnostics_GetSiteAnalysisSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/analyses/{analysisName}/execute": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Execute Analysis",
        "description": "Description for Execute Analysis",
        "operationId": "Diagnostics_ExecuteSiteAnalysisSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Category Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisName",
            "in": "path",
            "description": "Analysis Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticAnalysis"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Execute site slot analysis": {
            "$ref": "./examples/Diagnostics_ExecuteSiteAnalysisSlot.json"
          },
          "Execute site analysis": {
            "$ref": "./examples/Diagnostics_ExecuteSiteAnalysis.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/detectors": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Detectors",
        "description": "Description for Get Detectors",
        "operationId": "Diagnostics_ListSiteDetectorsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticDetectorCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App Detectors": {
            "$ref": "./examples/Diagnostics_ListSiteDetectors.json"
          },
          "List App Slot Detectors": {
            "$ref": "./examples/Diagnostics_ListSiteDetectorsSlot.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get Detector",
        "description": "Description for Get Detector",
        "operationId": "Diagnostics_GetSiteDetectorSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Diagnostic Category",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectorDefinitionResource"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get App Detector": {
            "$ref": "./examples/Diagnostics_GetSiteDetector.json"
          },
          "Get App Slot Detector": {
            "$ref": "./examples/Diagnostics_GetSiteDetectorSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/diagnostics/{diagnosticCategory}/detectors/{detectorName}/execute": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Execute Detector",
        "description": "Description for Execute Detector",
        "operationId": "Diagnostics_ExecuteSiteDetectorSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Category Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Slot Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticDetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Execute site detector": {
            "$ref": "./examples/Diagnostics_ExecuteSiteDetector.json"
          },
          "Execute site slot detector": {
            "$ref": "./examples/Diagnostics_ExecuteSiteDetectorSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/kubeEnvironments": {
      "get": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Get all Kubernetes Environments for a subscription.",
        "description": "Description for Get all Kubernetes Environments for a subscription.",
        "operationId": "KubeEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubeEnvironmentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List kube environments by subscription": {
            "$ref": "./examples/KubeEnvironments_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments": {
      "get": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Get all the Kubernetes Environments in a resource group.",
        "description": "Description for Get all the Kubernetes Environments in a resource group.",
        "operationId": "KubeEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubeEnvironmentCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List kube environments by resource group": {
            "$ref": "./examples/KubeEnvironments_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}": {
      "get": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Get the properties of a Kubernetes Environment.",
        "description": "Description for Get the properties of a Kubernetes Environment.",
        "operationId": "KubeEnvironments_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Kubernetes Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get kube environments by name": {
            "$ref": "./examples/KubeEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Creates or updates a Kubernetes Environment.",
        "description": "Description for Creates or updates a Kubernetes Environment.",
        "operationId": "KubeEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Kubernetes Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kubeEnvironmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Kubernetes Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create kube environments": {
            "$ref": "./examples/KubeEnvironments_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Delete a Kubernetes Environment.",
        "description": "Description for Delete a Kubernetes Environment.",
        "operationId": "KubeEnvironments_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Kubernetes Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is in progress"
          },
          "204": {
            "description": "Kubernetes Environment does not exist"
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete kube environment by name": {
            "$ref": "./examples/KubeEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "KubeEnvironments"
        ],
        "summary": "Creates or updates a Kubernetes Environment.",
        "description": "Description for Creates or updates a Kubernetes Environment.",
        "operationId": "KubeEnvironments_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Kubernetes Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kubeEnvironmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Kubernetes Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubeEnvironmentPatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/KubeEnvironment"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update kube environments": {
            "$ref": "./examples/KubeEnvironments_Update.json"
          }
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "osTypeSelectedParameter": {
      "name": "osTypeSelected",
      "in": "query",
      "type": "string",
      "enum": [
        "Windows",
        "Linux",
        "WindowsFunctions",
        "LinuxFunctions",
        "All"
      ],
      "x-ms-enum": {
        "name": "ProviderOsTypeSelected",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "stackOsTypeParameter": {
      "name": "stackOsType",
      "in": "query",
      "description": "Stack OS Type",
      "type": "string",
      "enum": [
        "Windows",
        "Linux",
        "All"
      ],
      "x-ms-enum": {
        "name": "ProviderStackOsType",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "siteNameParameter": {
      "name": "name",
      "in": "path",
      "description": "Site name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "slotNameParameter": {
      "name": "slot",
      "in": "path",
      "description": "Name of the deployment slot.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "hostnameParameter": {
      "name": "hostname",
      "in": "query",
      "description": "Specific hostname",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "environmentNameParameter": {
      "name": "environmentName",
      "in": "path",
      "description": "The stage site identifier.",
      "required": true,
      "pattern": "^[a-zA-Z0-9]+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "databaseConnectionNameParameter": {
      "name": "databaseConnectionName",
      "in": "path",
      "description": "Name of the database connection.",
      "required": true,
      "pattern": "^[a-zA-Z0-9]+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AddressResponse": {
      "description": "Describes main public IP address and any extra virtual IPs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AddressResponse resource specific properties",
          "type": "object",
          "properties": {
            "serviceIpAddress": {
              "description": "Main public virtual IP.",
              "type": "string"
            },
            "internalIpAddress": {
              "description": "Virtual Network internal IP address of the App Service Environment if it is in internal load-balancing mode.",
              "type": "string"
            },
            "outboundIpAddresses": {
              "description": "IP addresses appearing on outbound connections.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vipMappings": {
              "description": "Additional virtual IPs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualIPMapping"
              },
              "x-ms-identifiers": [
                "virtualIP"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceEnvironmentCollection": {
      "description": "Collection of App Service Environments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceEnvironmentResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppServiceEnvironmentPatchResource": {
      "description": "ARM resource for a app service environment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./CommonDefinitions.json#/definitions/AppServiceEnvironment",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceEnvironmentResource": {
      "description": "App Service Environment ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./CommonDefinitions.json#/definitions/AppServiceEnvironment",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointDependency": {
      "description": "A domain name that a service is reached at, including details of the current connection status.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The IP Addresses and Ports used when connecting to DomainName.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          },
          "x-ms-identifiers": [
            "ipAddress",
            "port"
          ]
        }
      }
    },
    "EndpointDetail": {
      "description": "Current TCP connectivity information from the App Service Environment to a single endpoint.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "An IP Address that Domain Name currently resolves to.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "type": "integer"
        },
        "latency": {
          "format": "double",
          "description": "The time in milliseconds it takes for a TCP connection to be created from the App Service Environment to this IpAddress at this Port.",
          "type": "number"
        },
        "isAccessible": {
          "description": "Whether it is possible to create a TCP connection from the App Service Environment to this IpAddress at this Port.",
          "type": "boolean"
        }
      }
    },
    "HostingEnvironmentDiagnostics": {
      "description": "Diagnostics for an App Service Environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name/identifier of the diagnostics.",
          "type": "string"
        },
        "diagnosticsOutput": {
          "description": "Diagnostics output.",
          "type": "string"
        }
      }
    },
    "InboundEnvironmentEndpoint": {
      "description": "The IP Addresses and Ports that require inbound network access to and within the subnet of the App Service Environment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Short text describing the purpose of the network traffic.",
          "type": "string"
        },
        "endpoints": {
          "description": "The IP addresses that network traffic will originate from in cidr notation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "description": "The ports that network traffic will arrive to the App Service Environment at.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InboundEnvironmentEndpointCollection": {
      "description": "Collection of Inbound Environment Endpoints",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundEnvironmentEndpoint": {
      "description": "Endpoints accessed for a common purpose that the App Service Environment requires outbound network access to.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The type of service accessed by the App Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints that the App Service Environment reaches the service at.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "OutboundEnvironmentEndpointCollection": {
      "description": "Collection of Outbound Environment Endpoints",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": [
            "category"
          ]
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricAvailability": {
      "description": "Metrics availability and retention.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain .",
          "type": "string",
          "readOnly": true
        },
        "retention": {
          "description": "Retention period for the current time grain.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricDefinition": {
      "description": "Metadata for the metrics.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceMetricDefinition resource specific properties",
          "type": "object",
          "properties": {
            "unit": {
              "description": "Unit of the metric.",
              "type": "string",
              "readOnly": true
            },
            "primaryAggregationType": {
              "description": "Primary aggregation type.",
              "type": "string",
              "readOnly": true
            },
            "metricAvailabilities": {
              "description": "List of time grains supported for the metric together with retention period.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceMetricAvailability"
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "resourceUri": {
              "description": "Resource URI.",
              "type": "string",
              "readOnly": true
            },
            "properties": {
              "description": "Resource metric definition properties.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceMetricDefinitionCollection": {
      "description": "Collection of metric definitions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuInfo": {
      "description": "SKU discovery information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "sku": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuDescription",
          "description": "Name and tier of the SKU."
        },
        "capacity": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        }
      }
    },
    "SkuInfoCollection": {
      "description": "Collection of SKU information.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuInfo"
          },
          "x-ms-identifiers": [
            "/sku/name",
            "resourceType"
          ]
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StampCapacity": {
      "description": "Stamp capacity information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the stamp.",
          "type": "string"
        },
        "availableCapacity": {
          "format": "int64",
          "description": "Available capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "totalCapacity": {
          "format": "int64",
          "description": "Total capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "unit": {
          "description": "Name of the unit.",
          "type": "string"
        },
        "computeMode": {
          "description": "Shared/dedicated workers.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "Size of the machines.",
          "enum": [
            "Small",
            "Medium",
            "Large",
            "D1",
            "D2",
            "D3",
            "SmallV3",
            "MediumV3",
            "LargeV3",
            "NestedSmall",
            "NestedSmallLinux",
            "Default"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkerSizeOptions",
            "modelAsString": false
          }
        },
        "workerSizeId": {
          "format": "int32",
          "description": "Size ID of machines: \n0 - Small\n1 - Medium\n2 - Large",
          "type": "integer"
        },
        "excludeFromCapacityAllocation": {
          "description": "If <code>true</code>, it includes basic apps.\nBasic apps are not used for capacity allocation.",
          "type": "boolean"
        },
        "isApplicableForAllComputeModes": {
          "description": "<code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "siteMode": {
          "description": "Shared or Dedicated.",
          "type": "string"
        },
        "isLinux": {
          "description": "Is this a linux stamp capacity",
          "type": "boolean"
        }
      }
    },
    "StampCapacityCollection": {
      "description": "Collection of stamp capacities.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StampCapacity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Usage": {
      "description": "Usage of the quota resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Usage resource specific properties",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Friendly name shown in the UI.",
              "type": "string",
              "readOnly": true
            },
            "resourceName": {
              "description": "Name of the quota resource.",
              "type": "string",
              "readOnly": true
            },
            "unit": {
              "description": "Units of measurement for the quota resource.",
              "type": "string",
              "readOnly": true
            },
            "currentValue": {
              "format": "int64",
              "description": "The current value of the resource counter.",
              "type": "integer",
              "readOnly": true
            },
            "limit": {
              "format": "int64",
              "description": "The resource limit.",
              "type": "integer",
              "readOnly": true
            },
            "nextResetTime": {
              "format": "date-time",
              "description": "Next reset time for the resource counter.",
              "type": "string",
              "readOnly": true
            },
            "computeMode": {
              "description": "Compute mode used for this usage.",
              "enum": [
                "Shared",
                "Dedicated",
                "Dynamic"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ComputeModeOptions",
                "modelAsString": false
              }
            },
            "siteMode": {
              "description": "Site mode used for this usage.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "UsageCollection": {
      "description": "Collection of usages.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualIPMapping": {
      "description": "Virtual IP mapping.",
      "type": "object",
      "properties": {
        "virtualIP": {
          "description": "Virtual IP address.",
          "type": "string"
        },
        "internalHttpPort": {
          "format": "int32",
          "description": "Internal HTTP port.",
          "type": "integer"
        },
        "internalHttpsPort": {
          "format": "int32",
          "description": "Internal HTTPS port.",
          "type": "integer"
        },
        "inUse": {
          "description": "Is virtual IP mapping in use.",
          "type": "boolean"
        },
        "serviceName": {
          "description": "name of the service that virtual IP is assigned to",
          "type": "string"
        }
      }
    },
    "WorkerPool": {
      "description": "Worker pool of an App Service Environment.",
      "type": "object",
      "properties": {
        "workerSizeId": {
          "format": "int32",
          "description": "Worker size ID for referencing this worker pool.",
          "type": "integer"
        },
        "computeMode": {
          "description": "Shared or dedicated app hosting.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "VM size of the worker pool instances.",
          "type": "string"
        },
        "workerCount": {
          "format": "int32",
          "description": "Number of instances in the worker pool.",
          "type": "integer"
        },
        "instanceNames": {
          "description": "Names of all instances in the worker pool (read only).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "WorkerPoolCollection": {
      "description": "Collection of worker pools.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerPoolResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkerPoolResource": {
      "description": "Worker pool of an App Service Environment ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkerPool",
          "description": "Core resource properties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuDescription"
        }
      }
    },
    "ResourceHealthMetadata": {
      "description": "Used for getting ResourceHealthCheck settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceHealthMetadata resource specific properties",
          "type": "object",
          "properties": {
            "category": {
              "description": "The category that the resource matches in the RHC Policy File",
              "type": "string"
            },
            "signalAvailability": {
              "description": "Is there a health signal for the resource",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceHealthMetadataCollection": {
      "description": "Collection of resource health metadata.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceHealthMetadata"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppInsightsWebAppStackSettings": {
      "description": "App Insights Web App stack settings.",
      "type": "object",
      "properties": {
        "isSupported": {
          "description": "<code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDefaultOff": {
          "description": "<code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ApplicationStack": {
      "description": "Application stack.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Application stack name.",
          "type": "string"
        },
        "display": {
          "description": "Application stack display name.",
          "type": "string"
        },
        "dependency": {
          "description": "Application stack dependency.",
          "type": "string"
        },
        "majorVersions": {
          "description": "List of major versions available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackMajorVersion"
          },
          "x-ms-identifiers": [
            "runtimeVersion"
          ]
        },
        "frameworks": {
          "description": "List of frameworks associated with application stack.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationStack"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "isDeprecated": {
          "description": "<code>true</code> if this is the stack is deprecated; otherwise, <code>false</code>.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationStack"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ApplicationStackCollection": {
      "description": "Collection of Application Stacks",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationStackResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApplicationStackResource": {
      "description": "ARM resource for a ApplicationStack.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationStack",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionAppMajorVersion": {
      "description": "Function App stack major version.",
      "type": "object",
      "properties": {
        "displayText": {
          "description": "Function App stack major version (display only).",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Function App stack major version name.",
          "type": "string",
          "readOnly": true
        },
        "minorVersions": {
          "description": "Minor versions associated with the major version.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionAppMinorVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "value"
          ]
        }
      }
    },
    "FunctionAppMinorVersion": {
      "description": "Function App stack minor version.",
      "type": "object",
      "properties": {
        "displayText": {
          "description": "Function App stack (display only).",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Function App stack name.",
          "type": "string",
          "readOnly": true
        },
        "stackSettings": {
          "$ref": "#/definitions/FunctionAppRuntimes",
          "description": "Settings associated with the minor version.",
          "readOnly": true
        }
      }
    },
    "FunctionAppRuntimeSettings": {
      "description": "Function App runtime settings.",
      "type": "object",
      "properties": {
        "runtimeVersion": {
          "description": "Function App stack minor version (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "remoteDebuggingSupported": {
          "description": "<code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "appInsightsSettings": {
          "$ref": "#/definitions/AppInsightsWebAppStackSettings",
          "description": "Application Insights settings associated with the minor version.",
          "readOnly": true
        },
        "gitHubActionSettings": {
          "$ref": "#/definitions/GitHubActionWebAppStackSettings",
          "description": "GitHub Actions settings associated with the minor version.",
          "readOnly": true
        },
        "appSettingsDictionary": {
          "description": "Application settings associated with the minor version.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "siteConfigPropertiesDictionary": {
          "$ref": "#/definitions/SiteConfigPropertiesDictionary",
          "description": "Configuration settings associated with the minor version.",
          "readOnly": true
        },
        "supportedFunctionsExtensionVersions": {
          "description": "List of supported Functions extension versions.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isPreview": {
          "description": "<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDeprecated": {
          "description": "<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isHidden": {
          "description": "<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "endOfLifeDate": {
          "format": "date-time",
          "description": "End-of-life date for the minor version.",
          "type": "string",
          "readOnly": true
        },
        "isAutoUpdate": {
          "description": "<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isEarlyAccess": {
          "description": "<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDefault": {
          "description": "<code>true</code> if the minor version the default; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "FunctionAppRuntimes": {
      "description": "Function App stack runtimes.",
      "type": "object",
      "properties": {
        "linuxRuntimeSettings": {
          "$ref": "#/definitions/FunctionAppRuntimeSettings",
          "description": "Linux-specific settings associated with the minor version.",
          "readOnly": true
        },
        "windowsRuntimeSettings": {
          "$ref": "#/definitions/FunctionAppRuntimeSettings",
          "description": "Windows-specific settings associated with the minor version.",
          "readOnly": true
        }
      }
    },
    "FunctionAppStack": {
      "description": "Function App Stack.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Function App stack location.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "FunctionAppStack resource specific properties",
          "type": "object",
          "properties": {
            "displayText": {
              "description": "Function App stack (display only).",
              "type": "string",
              "readOnly": true
            },
            "value": {
              "description": "Function App stack name.",
              "type": "string",
              "readOnly": true
            },
            "majorVersions": {
              "description": "List of major versions available.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FunctionAppMajorVersion"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "value"
              ]
            },
            "preferredOs": {
              "description": "Function App stack preferred OS.",
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "StackPreferredOs",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionAppStackCollection": {
      "description": "Collection of Function app Stacks",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionAppStack"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GitHubActionWebAppStackSettings": {
      "description": "GitHub Actions Web App stack settings.",
      "type": "object",
      "properties": {
        "isSupported": {
          "description": "<code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "supportedVersion": {
          "description": "The minor version that is supported for GitHub Actions.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LinuxJavaContainerSettings": {
      "description": "Linux Java Container settings.",
      "type": "object",
      "properties": {
        "java11Runtime": {
          "description": "Java 11 version (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "java8Runtime": {
          "description": "Java 8 version (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "isPreview": {
          "description": "<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDeprecated": {
          "description": "<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isHidden": {
          "description": "<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "endOfLifeDate": {
          "format": "date-time",
          "description": "End-of-life date for the minor version.",
          "type": "string",
          "readOnly": true
        },
        "isAutoUpdate": {
          "description": "<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isEarlyAccess": {
          "description": "<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SiteConfigPropertiesDictionary": {
      "description": "Site config properties dictionary.",
      "type": "object",
      "properties": {
        "use32BitWorkerProcess": {
          "description": "<code>true</code> if use32BitWorkerProcess should be set to true for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "linuxFxVersion": {
          "description": "LinuxFxVersion configuration setting.",
          "type": "string",
          "readOnly": true
        },
        "javaVersion": {
          "description": "JavaVersion configuration setting.",
          "type": "string",
          "readOnly": true
        },
        "powerShellVersion": {
          "description": "PowerShellVersion configuration setting.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StackMajorVersion": {
      "description": "Application stack major version.",
      "type": "object",
      "properties": {
        "displayVersion": {
          "description": "Application stack major version (display only).",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Application stack major version (runtime only).",
          "type": "string"
        },
        "isDefault": {
          "description": "<code>true</code> if this is the default major version; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "minorVersions": {
          "description": "Minor versions associated with the major version.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackMinorVersion"
          },
          "x-ms-identifiers": [
            "runtimeVersion"
          ]
        },
        "applicationInsights": {
          "description": "<code>true</code> if this supports Application Insights; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isPreview": {
          "description": "<code>true</code> if this stack is in Preview, otherwise <code>false</code>.",
          "type": "boolean"
        },
        "isDeprecated": {
          "description": "<code>true</code> if this stack has been deprecated, otherwise <code>false</code>.",
          "type": "boolean"
        },
        "isHidden": {
          "description": "<code>true</code> if this stack should be hidden for new customers on portal, otherwise <code>false</code>.",
          "type": "boolean"
        },
        "appSettingsDictionary": {
          "description": "<appSettings>\n <appSetting name=\"FUNCTIONS_WORKER_RUNTIME\" value=\"dotnet\" />\n</appSettings>\n Example: All the function apps need AppSetting: \"FUNCTIONS_WORKER_RUNTIME\" to be set stack name",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "siteConfigPropertiesDictionary": {
          "description": "<siteConfigProperties>\n <siteConfigProperty name=\"Use32BitWorkerProcess\" value=\"false\" />\n</siteConfigProperties>\n Example: All Linux Function Apps, need Use32BitWorkerProcess to be set to 0",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "StackMinorVersion": {
      "description": "Application stack minor version.",
      "type": "object",
      "properties": {
        "displayVersion": {
          "description": "Application stack minor version (display only).",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Application stack minor version (runtime only).",
          "type": "string"
        },
        "isDefault": {
          "description": "<code>true</code> if this is the default minor version; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isRemoteDebuggingEnabled": {
          "description": "<code>true</code> if this supports Remote Debugging, otherwise <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "WebAppMajorVersion": {
      "description": "Web App stack major version.",
      "type": "object",
      "properties": {
        "displayText": {
          "description": "Web App stack major version (display only).",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Web App stack major version name.",
          "type": "string",
          "readOnly": true
        },
        "minorVersions": {
          "description": "Minor versions associated with the major version.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppMinorVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "value"
          ]
        }
      }
    },
    "WebAppMinorVersion": {
      "description": "Web App stack minor version.",
      "type": "object",
      "properties": {
        "displayText": {
          "description": "Web App stack minor version (display only).",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Web App stack major version name.",
          "type": "string",
          "readOnly": true
        },
        "stackSettings": {
          "$ref": "#/definitions/WebAppRuntimes",
          "description": "Settings associated with the minor version.",
          "readOnly": true
        }
      }
    },
    "WebAppRuntimeSettings": {
      "description": "Web App runtime settings.",
      "type": "object",
      "properties": {
        "runtimeVersion": {
          "description": "Web App stack minor version (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "remoteDebuggingSupported": {
          "description": "<code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "appInsightsSettings": {
          "$ref": "#/definitions/AppInsightsWebAppStackSettings",
          "description": "Application Insights settings associated with the minor version.",
          "readOnly": true
        },
        "gitHubActionSettings": {
          "$ref": "#/definitions/GitHubActionWebAppStackSettings",
          "description": "GitHub Actions settings associated with the minor version.",
          "readOnly": true
        },
        "isPreview": {
          "description": "<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDeprecated": {
          "description": "<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isHidden": {
          "description": "<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "endOfLifeDate": {
          "format": "date-time",
          "description": "End-of-life date for the minor version.",
          "type": "string",
          "readOnly": true
        },
        "isAutoUpdate": {
          "description": "<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isEarlyAccess": {
          "description": "<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "WebAppRuntimes": {
      "description": "Web App stack runtimes.",
      "type": "object",
      "properties": {
        "linuxRuntimeSettings": {
          "$ref": "#/definitions/WebAppRuntimeSettings",
          "description": "Linux-specific settings associated with the minor version.",
          "readOnly": true
        },
        "windowsRuntimeSettings": {
          "$ref": "#/definitions/WebAppRuntimeSettings",
          "description": "Windows-specific settings associated with the minor version.",
          "readOnly": true
        },
        "linuxContainerSettings": {
          "$ref": "#/definitions/LinuxJavaContainerSettings",
          "description": "Linux-specific settings associated with the Java container minor version.",
          "readOnly": true
        },
        "windowsContainerSettings": {
          "$ref": "#/definitions/WindowsJavaContainerSettings",
          "description": "Windows-specific settings associated with the Java container minor version.",
          "readOnly": true
        }
      }
    },
    "WebAppStack": {
      "description": "Web App stack.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Web App stack location.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "WebAppStack resource specific properties",
          "type": "object",
          "properties": {
            "displayText": {
              "description": "Web App stack (display only).",
              "type": "string",
              "readOnly": true
            },
            "value": {
              "description": "Web App stack name.",
              "type": "string",
              "readOnly": true
            },
            "majorVersions": {
              "description": "List of major versions available.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebAppMajorVersion"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "value"
              ]
            },
            "preferredOs": {
              "description": "Web App stack preferred OS.",
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "StackPreferredOs",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebAppStackCollection": {
      "description": "Collection of Web app Stacks",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppStack"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WindowsJavaContainerSettings": {
      "description": "Windows Java Container settings.",
      "type": "object",
      "properties": {
        "javaContainer": {
          "description": "Java container (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "javaContainerVersion": {
          "description": "Java container version (runtime only).",
          "type": "string",
          "readOnly": true
        },
        "isPreview": {
          "description": "<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isDeprecated": {
          "description": "<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isHidden": {
          "description": "<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "endOfLifeDate": {
          "format": "date-time",
          "description": "End-of-life date for the minor version.",
          "type": "string",
          "readOnly": true
        },
        "isAutoUpdate": {
          "description": "<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "isEarlyAccess": {
          "description": "<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "AllowedAudiencesValidation": {
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllowedPrincipals": {
      "description": "The configuration settings of the Azure Active Directory allowed principals.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identities": {
          "description": "The list of the allowed identities.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiKVReference": {
      "description": "Description of site key vault references.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ApiKVReference resource specific properties",
          "type": "object",
          "properties": {
            "reference": {
              "type": "string"
            },
            "status": {
              "enum": [
                "Initialized",
                "Resolved",
                "InvalidSyntax",
                "MSINotEnabled",
                "VaultNotFound",
                "SecretNotFound",
                "SecretVersionNotFound",
                "AccessToKeyVaultDenied",
                "OtherReasons",
                "FetchTimedOut",
                "UnauthorizedClient"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResolveStatus",
                "modelAsString": false
              }
            },
            "vaultName": {
              "type": "string"
            },
            "secretName": {
              "type": "string"
            },
            "secretVersion": {
              "type": "string"
            },
            "identityType": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedServiceIdentity"
            },
            "details": {
              "type": "string"
            },
            "source": {
              "enum": [
                "KeyVault"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ConfigReferenceSource",
                "modelAsString": false
              }
            },
            "activeVersion": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ApiKVReferenceCollection": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiKVReference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppRegistration": {
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "type": "object",
      "properties": {
        "appId": {
          "description": "The App ID of the app used for login.",
          "type": "string"
        },
        "appSecretSettingName": {
          "description": "The app setting name that contains the app secret.",
          "type": "string"
        }
      }
    },
    "Apple": {
      "description": "The configuration settings of the Apple provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AppleRegistration",
          "description": "The configuration settings of the Apple registration."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "AppleRegistration": {
      "description": "The configuration settings of the registration for the Apple provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "ApplicationLogsConfig": {
      "description": "Application logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration."
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration."
        }
      }
    },
    "AuthPlatform": {
      "description": "The configuration settings of the platform of App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "runtimeVersion": {
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
          "type": "string"
        },
        "configFilePath": {
          "description": "The path of the config file containing auth settings if they come from a file.\nIf the path is relative, base will the site's root directory.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectory": {
      "description": "The configuration settings of the Azure Active directory provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AzureActiveDirectoryRegistration",
          "description": "The configuration settings of the Azure Active Directory app registration."
        },
        "login": {
          "$ref": "#/definitions/AzureActiveDirectoryLogin",
          "description": "The configuration settings of the Azure Active Directory login flow."
        },
        "validation": {
          "$ref": "#/definitions/AzureActiveDirectoryValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        },
        "isAutoProvisioned": {
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryLogin": {
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "type": "object",
      "properties": {
        "loginParameters": {
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableWWWAuthenticate": {
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryRegistration": {
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "type": "object",
      "properties": {
        "openIdIssuer": {
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret of the relying party application.",
          "type": "string"
        },
        "clientSecretCertificateThumbprint": {
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateIssuer": {
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectoryValidation": {
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "type": "object",
      "properties": {
        "jwtClaimChecks": {
          "$ref": "#/definitions/JwtClaimChecks",
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims."
        },
        "allowedAudiences": {
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAuthorizationPolicy": {
          "$ref": "#/definitions/DefaultAuthorizationPolicy",
          "description": "The configuration settings of the default authorization policy."
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration.",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "AzureResourceErrorInfo": {
      "type": "object",
      "description": "The azure resource error info.",
      "additionalProperties": false,
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureResourceErrorInfo"
          },
          "x-ms-identifiers": [
            "code"
          ],
          "description": "The error details."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ErrorInfo"
        }
      ]
    },
    "AzureStaticWebApps": {
      "description": "The configuration settings of the Azure Static Web Apps provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AzureStaticWebAppsRegistration",
          "description": "The configuration settings of the Azure Static Web Apps registration."
        }
      }
    },
    "AzureStaticWebAppsRegistration": {
      "description": "The configuration settings of the registration for the Azure Static Web Apps provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        }
      }
    },
    "AzureStoragePropertyDictionaryResource": {
      "description": "AzureStorageInfo dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Azure storage accounts.",
          "type": "object",
          "additionalProperties": {
            "$ref": "./CommonDefinitions.json#/definitions/AzureStorageInfoValue"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to Azure table storage configuration.",
      "required": [
        "sasUrl"
      ],
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS URL to an Azure table with add/query/delete permissions.",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupItem resource specific properties",
          "type": "object",
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer",
              "readOnly": true,
              "x-ms-client-name": "BackupId"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup.",
              "type": "string",
              "readOnly": true
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup.",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "Name of this backup.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Backup status.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes.",
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation.",
              "type": "string",
              "readOnly": true
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string",
              "readOnly": true
            },
            "databases": {
              "description": "List of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "name"
              ]
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean",
              "readOnly": true
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string",
              "readOnly": true
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string",
              "readOnly": true
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string",
              "readOnly": true
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of backup items.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupRequest resource specific properties",
          "required": [
            "storageAccountUrl"
          ],
          "type": "object",
          "properties": {
            "backupName": {
              "description": "Name of the backup.",
              "type": "string"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically."
            },
            "databases": {
              "description": "Databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyInterval",
        "frequencyUnit",
        "keepAtLeastOneBackup",
        "retentionPeriodInDays"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "default": 7,
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "default": "Day",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "default": true,
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted.",
          "default": 30,
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working.",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "Last time when this schedule was triggered.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BlobStorageTokenStore": {
      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
      "type": "object",
      "properties": {
        "sasUrlSettingName": {
          "description": "The name of the app setting containing the SAS URL of the blob storage containing the tokens.",
          "type": "string"
        }
      }
    },
    "ClientRegistration": {
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair.",
      "required": [
        "value",
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerCpuStatistics": {
      "type": "object",
      "properties": {
        "cpuUsage": {
          "$ref": "#/definitions/ContainerCpuUsage"
        },
        "systemCpuUsage": {
          "format": "int64",
          "type": "integer"
        },
        "onlineCpuCount": {
          "format": "int32",
          "type": "integer"
        },
        "throttlingData": {
          "$ref": "#/definitions/ContainerThrottlingData"
        }
      }
    },
    "ContainerCpuUsage": {
      "type": "object",
      "properties": {
        "totalUsage": {
          "format": "int64",
          "type": "integer"
        },
        "perCpuUsage": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "kernelModeUsage": {
          "format": "int64",
          "type": "integer"
        },
        "userModeUsage": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerInfo": {
      "type": "object",
      "properties": {
        "currentTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "previousTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "currentCpuStats": {
          "$ref": "#/definitions/ContainerCpuStatistics"
        },
        "previousCpuStats": {
          "$ref": "#/definitions/ContainerCpuStatistics"
        },
        "memoryStats": {
          "$ref": "#/definitions/ContainerMemoryStatistics"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "eth0": {
          "$ref": "#/definitions/ContainerNetworkInterfaceStatistics"
        }
      }
    },
    "ContainerMemoryStatistics": {
      "type": "object",
      "properties": {
        "usage": {
          "format": "int64",
          "type": "integer"
        },
        "maxUsage": {
          "format": "int64",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerNetworkInterfaceStatistics": {
      "type": "object",
      "properties": {
        "rxBytes": {
          "format": "int64",
          "type": "integer"
        },
        "rxPackets": {
          "format": "int64",
          "type": "integer"
        },
        "rxErrors": {
          "format": "int64",
          "type": "integer"
        },
        "rxDropped": {
          "format": "int64",
          "type": "integer"
        },
        "txBytes": {
          "format": "int64",
          "type": "integer"
        },
        "txPackets": {
          "format": "int64",
          "type": "integer"
        },
        "txErrors": {
          "format": "int64",
          "type": "integer"
        },
        "txDropped": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerThrottlingData": {
      "type": "object",
      "properties": {
        "periods": {
          "format": "int32",
          "type": "integer"
        },
        "throttledPeriods": {
          "format": "int32",
          "type": "integer"
        },
        "throttledTime": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContentLink": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The content link URI."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version.",
          "readOnly": true
        },
        "contentSize": {
          "type": "integer",
          "format": "int64",
          "description": "The content size.",
          "readOnly": true
        },
        "contentHash": {
          "$ref": "#/definitions/ContentHash",
          "description": "The content hash.",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/Object",
          "description": "The metadata.",
          "readOnly": true
        }
      },
      "description": "The content link."
    },
    "ContentHash": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "The algorithm of the content hash."
        },
        "value": {
          "type": "string",
          "description": "The value of the content hash."
        }
      },
      "description": "The content hash."
    },
    "ContinuousWebJob": {
      "description": "Continuous Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ContinuousWebJob resource specific properties",
          "type": "object",
          "properties": {
            "status": {
              "description": "Job status.",
              "enum": [
                "Initializing",
                "Starting",
                "Running",
                "PendingRestart",
                "Stopped"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContinuousWebJobStatus",
                "modelAsString": false
              }
            },
            "detailed_status": {
              "description": "Detailed status.",
              "type": "string"
            },
            "log_url": {
              "description": "Log URL.",
              "type": "string"
            },
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CookieExpiration": {
      "description": "The configuration settings of the session cookie's expiration.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used when determining the session cookie's expiration.",
          "enum": [
            "FixedTime",
            "IdentityProviderDerived"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CookieExpirationConvention",
            "modelAsString": false
          }
        },
        "timeToExpiration": {
          "description": "The time after the request is made when the session cookie should expire.",
          "type": "string"
        }
      }
    },
    "Correlation": {
      "type": "object",
      "properties": {
        "clientTrackingId": {
          "type": "string",
          "description": "The client tracking id."
        }
      },
      "description": "The correlation property."
    },
    "CsmDeploymentStatus": {
      "description": "Deployment status response payload.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CsmDeploymentStatus resource specific properties",
          "type": "object",
          "properties": {
            "deploymentId": {
              "description": "Deployment operation id.",
              "type": "string"
            },
            "status": {
              "description": "Deployment build status.",
              "enum": [
                "TimedOut",
                "RuntimeFailed",
                "BuildAborted",
                "BuildFailed",
                "BuildRequestReceived",
                "BuildPending",
                "BuildInProgress",
                "BuildSuccessful",
                "PostBuildRestartRequired",
                "StartPolling",
                "StartPollingWithRestart",
                "RuntimeStarting",
                "RuntimeSuccessful"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DeploymentBuildStatus",
                "modelAsString": true
              }
            },
            "numberOfInstancesInProgress": {
              "format": "int32",
              "description": "Number of site instances currently being provisioned.",
              "type": "integer"
            },
            "numberOfInstancesSuccessful": {
              "format": "int32",
              "description": "Number of site instances provisioned successfully.",
              "type": "integer"
            },
            "numberOfInstancesFailed": {
              "format": "int32",
              "description": "Number of site instances failed to provision.",
              "type": "integer"
            },
            "failedInstancesLogs": {
              "description": "List of URLs pointing to logs for instances which failed to provision.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "errors": {
              "description": "List of errors.",
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/ErrorEntity"
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CsmDeploymentStatusCollection": {
      "description": "Deployment status collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmDeploymentStatus"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CsmPublishingCredentialsPoliciesEntity": {
      "description": "Publishing Credentials Policies parameters.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CsmPublishingCredentialsPoliciesEntity resource specific properties",
          "required": [
            "allow"
          ],
          "type": "object",
          "properties": {
            "allow": {
              "description": "<code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile.",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \nFileZilla3\nWebDeploy -- default\nFtp",
          "enum": [
            "FileZilla3",
            "WebDeploy",
            "Ftp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublishingProfileFormat",
            "modelAsString": true
          }
        },
        "includeDisasterRecoveryEndpoints": {
          "description": "Include the DisasterRecover endpoint if true",
          "type": "boolean"
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Deployment slot parameters.",
      "required": [
        "targetSlot",
        "preserveVnet"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during swap operation.",
          "type": "string"
        },
        "preserveVnet": {
          "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameAnalysisResult resource specific properties",
          "type": "object",
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "customDomainVerificationTest": {
              "description": "DNS verification test result.",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "./CommonDefinitions.json#/definitions/ErrorEntity",
              "description": "Raw failure information if DNS verification fails.",
              "readOnly": true
            },
            "hasConflictOnScaleUnit": {
              "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "hasConflictAcrossSubscription": {
              "description": "<code>true</code> if there is a conflict across subscriptions; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
              "type": "string",
              "readOnly": true
            },
            "cNameRecords": {
              "description": "CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CustomOpenIdConnectProvider": {
      "description": "The configuration settings of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/OpenIdConnectRegistration",
          "description": "The configuration settings of the app registration for the custom Open ID Connect provider."
        },
        "login": {
          "$ref": "#/definitions/OpenIdConnectLogin",
          "description": "The configuration settings of the login flow of the custom Open ID Connect provider."
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Database backup settings.",
      "required": [
        "databaseType"
      ],
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "Database type (e.g. SqlAzure / MySql).",
          "enum": [
            "SqlAzure",
            "MySql",
            "LocalMySql",
            "PostgreSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\nThis is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "DayOfWeek": {
      "type": "string",
      "description": "The day of the week.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": false
      }
    },
    "DefaultAuthorizationPolicy": {
      "description": "The configuration settings of the Azure Active Directory default authorization policy.",
      "type": "object",
      "properties": {
        "allowedPrincipals": {
          "$ref": "#/definitions/AllowedPrincipals",
          "description": "The configuration settings of the Azure Active Directory allowed principals."
        },
        "allowedApplications": {
          "description": "The configuration settings of the Azure Active Directory allowed applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeletedAppRestoreRequest": {
      "description": "Details about restoring a deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedAppRestoreRequest resource specific properties",
          "type": "object",
          "properties": {
            "deletedSiteId": {
              "description": "ARM resource ID of the deleted app. Example:\n/subscriptions/{subId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}",
              "type": "string"
            },
            "recoverConfiguration": {
              "description": "If true, deleted site configuration, in addition to content, will be restored.",
              "type": "boolean"
            },
            "snapshotTime": {
              "description": "Point in time to restore the deleted app from, formatted as a DateTime string. \nIf unspecified, default value is the time that the app was deleted.",
              "type": "string"
            },
            "useDRSecondary": {
              "description": "If true, the snapshot is retrieved from DRSecondary endpoint.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Deployment": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment resource specific properties",
          "type": "object",
          "properties": {
            "status": {
              "format": "int32",
              "description": "Deployment status.",
              "type": "integer"
            },
            "message": {
              "description": "Details about deployment status.",
              "type": "string"
            },
            "author": {
              "description": "Who authored the deployment.",
              "type": "string"
            },
            "deployer": {
              "description": "Who performed the deployment.",
              "type": "string"
            },
            "author_email": {
              "description": "Author email.",
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "end_time": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "active": {
              "description": "True if deployment is currently active, false if completed and null if not started.",
              "type": "boolean"
            },
            "details": {
              "description": "Details on deployment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "EnvironmentVariable": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Environment variable name",
          "type": "string"
        },
        "value": {
          "description": "The value of this environment variable must be the name of an AppSetting. The actual value of the environment variable in container will be retrieved from the specified AppSetting at runtime. If the AppSetting is not found, the value will be set to an empty string in the container at runtime.",
          "type": "string"
        }
      }
    },
    "ErrorInfo": {
      "type": "object",
      "description": "The error info.",
      "additionalProperties": false,
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        }
      }
    },
    "ErrorPage": {
      "description": "A custom error page for a specific status returned by a web app.",
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "The status code for which the error page will be used",
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "description": "The content of the error page. There is a 10kb limit imposed on custom error page content.",
          "type": "string"
        },
        "contentType": {
          "description": "The content type of the error page. For example, 'text/html'",
          "type": "string"
        },
        "alwaysUse": {
          "description": "If true, the error page will be shown for all requests with a matching status code, regardless of whether they failed on the App Service FrontEnd load balancer or on the app itself.",
          "type": "boolean"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "ErrorProperties": {
      "description": "Error properties indicate why the Logic service was not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "ExpressionTraces": {
      "description": "The expression traces.",
      "type": "object",
      "properties": {
        "value": {},
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionRoot"
          },
          "x-ms-identifiers": [
            "path"
          ]
        },
        "nextLink": {
          "description": "The link used to get the next page of recommendations.",
          "type": "string"
        }
      }
    },
    "ExpressionRoot": {
      "description": "The expression root.",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Expression"
        }
      ]
    },
    "Expression": {
      "description": "The expression.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "text": {
          "description": "The text.",
          "type": "string"
        },
        "value": {},
        "subexpressions": {
          "type": "array",
          "description": "The sub expressions.",
          "items": {
            "$ref": "#/definitions/Expression"
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "#/definitions/AzureResourceErrorInfo"
        }
      }
    },
    "Facebook": {
      "description": "The configuration settings of the Facebook provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AppRegistration",
          "description": "The configuration settings of the app registration for the Facebook provider."
        },
        "graphApiVersion": {
          "description": "The version of the Facebook api to be used while logging in.",
          "type": "string"
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "default": "Off",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration.",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\nWhen reached old log files will be removed to make space for new ones.\nValue can range between 25 and 100.",
          "maximum": 100,
          "minimum": 25,
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove files older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FileSystemTokenStore": {
      "description": "The configuration settings of the storage of the tokens if a file system is used.",
      "type": "object",
      "properties": {
        "directory": {
          "description": "The directory in which the tokens will be stored.",
          "type": "string"
        }
      }
    },
    "FlowAccessControlConfiguration": {
      "type": "object",
      "description": "The access control configuration.",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for invoking workflow triggers."
        },
        "contents": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for accessing workflow run contents."
        },
        "actions": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for workflow actions."
        },
        "workflowManagement": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for workflow management."
        }
      }
    },
    "FlowAccessControlConfigurationPolicy": {
      "type": "object",
      "description": "The access control configuration policy.",
      "properties": {
        "allowedCallerIpAddresses": {
          "type": "array",
          "description": "The allowed caller IP address ranges.",
          "items": {
            "$ref": "#/definitions/IpAddressRange",
            "description": "The ip address range."
          },
          "x-ms-identifiers": []
        },
        "openAuthenticationPolicies": {
          "$ref": "#/definitions/OpenAuthenticationAccessPolicies",
          "description": "The authentication policies for workflow."
        }
      }
    },
    "FlowEndpointsConfiguration": {
      "type": "object",
      "description": "The endpoints configuration.",
      "properties": {
        "workflow": {
          "$ref": "#/definitions/FlowEndpoints",
          "description": "The workflow endpoints."
        },
        "connector": {
          "$ref": "#/definitions/FlowEndpoints",
          "description": "The connector endpoints."
        }
      }
    },
    "FlowEndpoints": {
      "type": "object",
      "description": "The flow endpoints configuration.",
      "properties": {
        "outgoingIpAddresses": {
          "type": "array",
          "description": "The outgoing ip address.",
          "items": {
            "$ref": "#/definitions/IpAddress",
            "description": "The ip address."
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "accessEndpointIpAddresses": {
          "type": "array",
          "description": "The access endpoint ip address.",
          "items": {
            "$ref": "#/definitions/IpAddress",
            "description": "The ip address."
          },
          "x-ms-identifiers": [
            "address"
          ]
        }
      }
    },
    "ForwardProxy": {
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used to determine the url of the request made.",
          "enum": [
            "NoProxy",
            "Standard",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ForwardProxyConvention",
            "modelAsString": false
          }
        },
        "customHostHeaderName": {
          "description": "The name of the header containing the host of the request.",
          "type": "string"
        },
        "customProtoHeaderName": {
          "description": "The name of the header containing the scheme of the request.",
          "type": "string"
        }
      }
    },
    "FunctionEnvelope": {
      "description": "Function information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionEnvelope resource specific properties",
          "type": "object",
          "properties": {
            "function_app_id": {
              "description": "Function App ID.",
              "type": "string"
            },
            "script_root_path_href": {
              "description": "Script root path URI.",
              "type": "string"
            },
            "script_href": {
              "description": "Script URI.",
              "type": "string"
            },
            "config_href": {
              "description": "Config URI.",
              "type": "string"
            },
            "test_data_href": {
              "description": "Test data URI.",
              "type": "string"
            },
            "secrets_file_href": {
              "description": "Secrets file URI.",
              "type": "string"
            },
            "href": {
              "description": "Function URI.",
              "type": "string"
            },
            "config": {
              "description": "Config information.",
              "type": "object"
            },
            "files": {
              "description": "File list.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "test_data": {
              "description": "Test data used when testing via the Azure Portal.",
              "type": "string"
            },
            "invoke_url_template": {
              "description": "The invocation URL",
              "type": "string"
            },
            "language": {
              "description": "The function language",
              "type": "string"
            },
            "isDisabled": {
              "description": "Gets or sets a value indicating whether the function is disabled",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionEnvelopeCollection": {
      "description": "Collection of Kudu function information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FunctionSecrets": {
      "description": "Function secrets.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Secret key.",
          "type": "string"
        },
        "trigger_url": {
          "description": "Trigger URL.",
          "type": "string"
        }
      }
    },
    "GitHub": {
      "description": "The configuration settings of the GitHub provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the GitHub provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "GitHubActionCodeConfiguration": {
      "description": "The GitHub action code configuration.",
      "type": "object",
      "properties": {
        "runtimeStack": {
          "description": "Runtime stack is used to determine the workflow file content for code base apps.",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version is used to determine what build version to set in the workflow file.",
          "type": "string"
        }
      }
    },
    "GitHubActionConfiguration": {
      "description": "The GitHub action configuration.",
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "$ref": "#/definitions/GitHubActionCodeConfiguration",
          "description": "GitHub Action code configuration."
        },
        "containerConfiguration": {
          "$ref": "#/definitions/GitHubActionContainerConfiguration",
          "description": "GitHub Action container configuration."
        },
        "isLinux": {
          "description": "This will help determine the workflow configuration to select.",
          "type": "boolean"
        },
        "generateWorkflowFile": {
          "description": "Workflow option to determine whether the workflow file should be generated and written to the repository.",
          "type": "boolean"
        }
      }
    },
    "GitHubActionContainerConfiguration": {
      "description": "The GitHub action container configuration.",
      "type": "object",
      "properties": {
        "serverUrl": {
          "description": "The server URL for the container registry where the build will be hosted.",
          "type": "string"
        },
        "imageName": {
          "description": "The image name for the build.",
          "type": "string"
        },
        "username": {
          "description": "The username used to upload the image to the container registry.",
          "type": "string"
        },
        "password": {
          "description": "The password used to upload the image to the container registry.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "GlobalValidation": {
      "description": "The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireAuthentication": {
          "description": "<code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "unauthenticatedClientAction": {
          "description": "The action to take when an unauthenticated client attempts to access the app.",
          "enum": [
            "RedirectToLoginPage",
            "AllowAnonymous",
            "Return401",
            "Return403"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UnauthenticatedClientActionV2",
            "modelAsString": false
          }
        },
        "redirectToProvider": {
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
          "type": "string"
        },
        "excludedPaths": {
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Google": {
      "description": "The configuration settings of the Google provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the Google provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        },
        "validation": {
          "$ref": "#/definitions/AllowedAudiencesValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        }
      }
    },
    "HostKeys": {
      "description": "Functions host level keys.",
      "type": "object",
      "properties": {
        "masterKey": {
          "description": "Secret key.",
          "type": "string"
        },
        "functionKeys": {
          "description": "Host level function keys.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemKeys": {
          "description": "System keys.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HostNameBinding": {
      "description": "A hostname binding object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HostNameBinding resource specific properties",
          "type": "object",
          "properties": {
            "siteName": {
              "description": "App Service app name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceName": {
              "description": "Azure resource name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceType": {
              "description": "Azure resource type.",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type.",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hostNameType": {
              "description": "Hostname type.",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sslState": {
              "description": "SSL type",
              "enum": [
                "Disabled",
                "SniEnabled",
                "IpBasedEnabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslState",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "SSL certificate thumbprint",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "virtualIP": {
              "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration."
        }
      }
    },
    "HttpSettings": {
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireHttps": {
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "routes": {
          "$ref": "#/definitions/HttpSettingsRoutes",
          "description": "The configuration settings of the paths HTTP requests."
        },
        "forwardProxy": {
          "$ref": "#/definitions/ForwardProxy",
          "description": "The configuration settings of a forward proxy used to make the requests."
        }
      }
    },
    "HttpSettingsRoutes": {
      "description": "The configuration settings of the paths HTTP requests.",
      "type": "object",
      "properties": {
        "apiPrefix": {
          "description": "The prefix that should precede all the authentication/authorization paths.",
          "type": "string"
        }
      }
    },
    "IdentityProviders": {
      "description": "The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The configuration settings of the Azure Active directory provider."
        },
        "facebook": {
          "$ref": "#/definitions/Facebook",
          "description": "The configuration settings of the Facebook provider."
        },
        "gitHub": {
          "$ref": "#/definitions/GitHub",
          "description": "The configuration settings of the GitHub provider."
        },
        "google": {
          "$ref": "#/definitions/Google",
          "description": "The configuration settings of the Google provider."
        },
        "legacyMicrosoftAccount": {
          "$ref": "#/definitions/LegacyMicrosoftAccount",
          "description": "The configuration settings of the legacy Microsoft Account provider."
        },
        "twitter": {
          "$ref": "#/definitions/Twitter",
          "description": "The configuration settings of the Twitter provider."
        },
        "apple": {
          "$ref": "#/definitions/Apple",
          "description": "The configuration settings of the Apple provider."
        },
        "azureStaticWebApps": {
          "$ref": "#/definitions/AzureStaticWebApps",
          "description": "The configuration settings of the Azure Static Web Apps provider."
        },
        "customOpenIdConnectProviders": {
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomOpenIdConnectProvider"
          }
        }
      }
    },
    "IpAddress": {
      "type": "object",
      "description": "The ip address.",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address."
        }
      }
    },
    "IpAddressRange": {
      "type": "object",
      "description": "The ip address range.",
      "properties": {
        "addressRange": {
          "type": "string",
          "description": "The IP address range."
        }
      }
    },
    "JsonSchema": {
      "type": "object",
      "description": "The JSON schema.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The JSON title."
        },
        "content": {
          "type": "string",
          "description": "The JSON content."
        }
      }
    },
    "JwtClaimChecks": {
      "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
      "type": "object",
      "properties": {
        "allowedGroups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedClientApplications": {
          "description": "The list of the allowed client applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KeyInfo": {
      "description": "Function key info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Key name",
          "type": "string"
        },
        "value": {
          "description": "Key value",
          "type": "string"
        }
      }
    },
    "Kind": {
      "type": "string",
      "enum": [
        "Stateful",
        "Stateless"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      },
      "description": "The workflow kind."
    },
    "KeyType": {
      "type": "string",
      "description": "The key type.",
      "enum": [
        "NotSpecified",
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true
      }
    },
    "LegacyMicrosoftAccount": {
      "description": "The configuration settings of the legacy Microsoft Account provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the legacy Microsoft Account provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        },
        "validation": {
          "$ref": "#/definitions/AllowedAudiencesValidation",
          "description": "The configuration settings of the legacy Microsoft Account provider token validation flow."
        }
      }
    },
    "Login": {
      "description": "The configuration settings of the login flow of users using App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "routes": {
          "$ref": "#/definitions/LoginRoutes",
          "description": "The routes that specify the endpoints used for login and logout requests."
        },
        "tokenStore": {
          "$ref": "#/definitions/TokenStore",
          "description": "The configuration settings of the token store."
        },
        "preserveUrlFragmentsForLogins": {
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "allowedExternalRedirectUrls": {
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cookieExpiration": {
          "$ref": "#/definitions/CookieExpiration",
          "description": "The configuration settings of the session cookie's expiration."
        },
        "nonce": {
          "$ref": "#/definitions/Nonce",
          "description": "The configuration settings of the nonce used in the login flow."
        }
      }
    },
    "LoginRoutes": {
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "type": "object",
      "properties": {
        "logoutEndpoint": {
          "description": "The endpoint at which a logout request should be made.",
          "type": "string"
        }
      }
    },
    "LoginScopes": {
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MSDeploy": {
      "description": "MSDeploy ARM PUT information",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSDeployCore",
          "description": "Core resource properties",
          "type": "object",
          "properties": {
            "addOnPackages": {
              "description": "List of Add-On packages. Add-On packages implicitly enable the Do Not Delete MSDeploy rule.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployCore"
              },
              "x-ms-identifiers": [
                "packageUri"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployCore": {
      "description": "MSDeploy ARM PUT core information",
      "type": "object",
      "properties": {
        "packageUri": {
          "description": "Package URI",
          "type": "string"
        },
        "connectionString": {
          "description": "SQL Connection String",
          "type": "string"
        },
        "dbType": {
          "description": "Database Type",
          "type": "string"
        },
        "setParametersXmlFileUri": {
          "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
          "type": "string"
        },
        "setParameters": {
          "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "skipAppData": {
          "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        },
        "appOffline": {
          "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        }
      }
    },
    "MSDeployLog": {
      "description": "MSDeploy log",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployLog resource specific properties",
          "type": "object",
          "properties": {
            "entries": {
              "description": "List of log entry messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployLogEntry"
              },
              "readOnly": true,
              "x-ms-identifiers": []
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployLogEntry": {
      "description": "MSDeploy log entry",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Timestamp of log entry",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Log entry type",
          "enum": [
            "Message",
            "Warning",
            "Error"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MSDeployLogEntryType",
            "modelAsString": false
          }
        },
        "message": {
          "description": "Log entry message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MSDeployStatus": {
      "description": "MSDeploy ARM response",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployStatus resource specific properties",
          "type": "object",
          "properties": {
            "deployer": {
              "description": "Username of deployer",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state",
              "enum": [
                "accepted",
                "running",
                "succeeded",
                "failed",
                "canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "MSDeployProvisioningState",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "complete": {
              "description": "Whether the deployment operation has completed",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "MySQL migration request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlRequest resource specific properties",
          "required": [
            "connectionString",
            "migrationType"
          ],
          "type": "object",
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySQL database.",
              "type": "string"
            },
            "migrationType": {
              "description": "The type of migration operation to be done",
              "enum": [
                "LocalToRemote",
                "RemoteToLocal"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MySqlMigrationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlStatus": {
      "description": "MySQL migration status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlStatus resource specific properties",
          "type": "object",
          "properties": {
            "migrationOperationStatus": {
              "description": "Status of the migration task.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "OperationStatus",
                "modelAsString": false
              }
            },
            "operationId": {
              "description": "Operation ID for the migration task.",
              "type": "string",
              "readOnly": true
            },
            "localMySqlEnabled": {
              "description": "True if the web app has in app MySql enabled",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkFeatures": {
      "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "NetworkFeatures resource specific properties",
          "type": "object",
          "properties": {
            "virtualNetworkName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "readOnly": true
            },
            "virtualNetworkConnection": {
              "$ref": "./CommonDefinitions.json#/definitions/VnetInfo",
              "description": "The Virtual Network summary view.",
              "readOnly": true
            },
            "hybridConnections": {
              "description": "The Hybrid Connections summary view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              },
              "readOnly": true
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (Service Bus) view.",
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkTrace": {
      "description": "Network trace",
      "type": "object",
      "properties": {
        "path": {
          "description": "Local file path for the captured network trace file.",
          "type": "string"
        },
        "status": {
          "description": "Current status of the network trace operation, same as Operation.Status (InProgress/Succeeded/Failed).",
          "type": "string"
        },
        "message": {
          "description": "Detailed message of a network trace operation, e.g. error message in case of failure.",
          "type": "string"
        }
      }
    },
    "Nonce": {
      "description": "The configuration settings of the nonce used in the login flow.",
      "type": "object",
      "properties": {
        "validateNonce": {
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "nonceExpirationInterval": {
          "description": "The time after the request is made when the nonce should expire.",
          "type": "string"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "OpenAuthenticationAccessPolicies": {
      "type": "object",
      "description": "AuthenticationPolicy of type Open.",
      "properties": {
        "policies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OpenAuthenticationAccessPolicy"
          },
          "description": "Open authentication policies."
        }
      }
    },
    "OpenAuthenticationAccessPolicy": {
      "type": "object",
      "description": "Open authentication access policy defined by user.",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAuthenticationProviderType",
          "description": "Type of provider for OAuth."
        },
        "claims": {
          "type": "array",
          "description": "The access policy claims.",
          "items": {
            "$ref": "#/definitions/OpenAuthenticationPolicyClaim",
            "description": "The access policy claim."
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OpenAuthenticationProviderType": {
      "type": "string",
      "description": "Open authentication policy provider type.",
      "enum": [
        "AAD"
      ],
      "x-ms-enum": {
        "name": "OpenAuthenticationProviderType",
        "modelAsString": true
      }
    },
    "OpenAuthenticationPolicyClaim": {
      "type": "object",
      "description": "Open authentication policy claim.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the claim."
        },
        "value": {
          "type": "string",
          "description": "The value of the claim."
        }
      }
    },
    "OpenIdConnectClientCredential": {
      "description": "The authentication client credentials of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "method": {
          "description": "The method that should be used to authenticate the user.",
          "enum": [
            "ClientSecretPost"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientCredentialMethod",
            "modelAsString": false
          }
        },
        "clientSecretSettingName": {
          "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectConfig": {
      "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "authorizationEndpoint": {
          "description": "The endpoint to be used to make an authorization request.",
          "type": "string"
        },
        "tokenEndpoint": {
          "description": "The endpoint to be used to request a token.",
          "type": "string"
        },
        "issuer": {
          "description": "The endpoint that issues the token.",
          "type": "string"
        },
        "certificationUri": {
          "description": "The endpoint that provides the keys necessary to validate the token.",
          "type": "string"
        },
        "wellKnownOpenIdConfiguration": {
          "description": "The endpoint that contains all the configuration endpoints for the provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectLogin": {
      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "nameClaimType": {
          "description": "The name of the claim that contains the users name.",
          "type": "string"
        },
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpenIdConnectRegistration": {
      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The client id of the custom Open ID Connect provider.",
          "type": "string"
        },
        "clientCredential": {
          "$ref": "#/definitions/OpenIdConnectClientCredential",
          "description": "The authentication credentials of the custom Open ID Connect provider."
        },
        "openIdConnectConfiguration": {
          "$ref": "#/definitions/OpenIdConnectConfig",
          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider."
        }
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "The operation result definition.",
      "additionalProperties": false,
      "properties": {
        "trackingId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the tracking id."
        },
        "inputs": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the inputs."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to inputs."
        },
        "outputs": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the outputs."
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to outputs."
        },
        "trackedProperties": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the tracked properties."
        },
        "retryHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetryHistory"
          },
          "x-ms-identifiers": [],
          "description": "Gets the retry histories."
        },
        "iterationCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultProperties"
        }
      ]
    },
    "OperationResultProperties": {
      "type": "object",
      "x-abstract": true,
      "description": "The run operation result properties.",
      "additionalProperties": false,
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the workflow scope repetition."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the workflow scope repetition."
        },
        "correlation": {
          "$ref": "#/definitions/RunActionCorrelation",
          "description": "The correlation properties."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of the workflow scope repetition."
        },
        "code": {
          "type": "string",
          "description": "The workflow scope repetition code."
        },
        "error": {}
      }
    },
    "ParameterType": {
      "type": "string",
      "description": "The parameter type.",
      "enum": [
        "NotSpecified",
        "String",
        "SecureString",
        "Int",
        "Float",
        "Bool",
        "Array",
        "Object",
        "SecureObject"
      ],
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of performance monitor counters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PerfMonResponse": {
      "description": "Performance monitor API response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The response code.",
          "type": "string"
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "The performance monitor counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Performance monitor sample in a set.",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured.",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of counter at a certain time.",
          "type": "number"
        }
      }
    },
    "PerfMonSet": {
      "description": "Metric information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain.",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PremierAddOn": {
      "description": "Premier add-on.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOn resource specific properties",
          "type": "object",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on Vendor.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Premier add on Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Premier add on Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PremierAddOnPatchResource": {
      "description": "ARM resource for a PremierAddOn.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOnPatchResource resource specific properties",
          "type": "object",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on Vendor.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Premier add on Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Premier add on Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateAccess": {
      "description": "Description of the parameters of Private Access for a Web Site.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PrivateAccess resource specific properties",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Whether private access is enabled or not.",
              "type": "boolean"
            },
            "virtualNetworks": {
              "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateAccessVirtualNetwork"
              },
              "x-ms-identifiers": [
                "key"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateAccessSubnet": {
      "description": "Description of a Virtual Network subnet that is useable for private site access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the subnet.",
          "type": "string"
        },
        "key": {
          "format": "int32",
          "description": "The key (ID) of the subnet.",
          "type": "integer"
        }
      }
    },
    "PrivateAccessVirtualNetwork": {
      "description": "Description of a Virtual Network that is useable for private site access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Virtual Network.",
          "type": "string"
        },
        "key": {
          "format": "int32",
          "description": "The key (ID) of the Virtual Network.",
          "type": "integer"
        },
        "resourceId": {
          "description": "The ARM uri of the Virtual Network",
          "type": "string"
        },
        "subnets": {
          "description": "A List of subnets that access is allowed to on this Virtual Network. An empty array (but not null) is interpreted to mean that all subnets are allowed within this Virtual Network.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateAccessSubnet"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      }
    },
    "ProcessInfo": {
      "description": "Process Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessInfo resource specific properties",
          "type": "object",
          "properties": {
            "identifier": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer",
              "readOnly": true
            },
            "deployment_name": {
              "description": "Deployment name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "minidump": {
              "description": "Minidump URI.",
              "type": "string"
            },
            "is_profile_running": {
              "description": "Is profile running?",
              "type": "boolean"
            },
            "is_iis_profile_running": {
              "description": "Is the IIS Profile running?",
              "type": "boolean"
            },
            "iis_profile_timeout_in_seconds": {
              "format": "double",
              "description": "IIS Profile timeout (seconds).",
              "type": "number"
            },
            "parent": {
              "description": "Parent process.",
              "type": "string"
            },
            "children": {
              "description": "Child process list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "threads": {
              "description": "Thread list.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessThreadInfo"
              }
            },
            "open_file_handles": {
              "description": "List of open files.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "modules": {
              "description": "List of modules.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessModuleInfo"
              }
            },
            "file_name": {
              "description": "File name of this process.",
              "type": "string"
            },
            "command_line": {
              "description": "Command line.",
              "type": "string"
            },
            "user_name": {
              "description": "User name.",
              "type": "string"
            },
            "handle_count": {
              "format": "int32",
              "description": "Handle count.",
              "type": "integer"
            },
            "module_count": {
              "format": "int32",
              "description": "Module count.",
              "type": "integer"
            },
            "thread_count": {
              "format": "int32",
              "description": "Thread count.",
              "type": "integer"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "total_cpu_time": {
              "description": "Total CPU time.",
              "type": "string"
            },
            "user_cpu_time": {
              "description": "User CPU time.",
              "type": "string"
            },
            "privileged_cpu_time": {
              "description": "Privileged CPU time.",
              "type": "string"
            },
            "working_set": {
              "format": "int64",
              "description": "Working set.",
              "type": "integer"
            },
            "peak_working_set": {
              "format": "int64",
              "description": "Peak working set.",
              "type": "integer"
            },
            "private_memory": {
              "format": "int64",
              "description": "Private memory size.",
              "type": "integer"
            },
            "virtual_memory": {
              "format": "int64",
              "description": "Virtual memory size.",
              "type": "integer"
            },
            "peak_virtual_memory": {
              "format": "int64",
              "description": "Peak virtual memory usage.",
              "type": "integer"
            },
            "paged_system_memory": {
              "format": "int64",
              "description": "Paged system memory.",
              "type": "integer"
            },
            "non_paged_system_memory": {
              "format": "int64",
              "description": "Non-paged system memory.",
              "type": "integer"
            },
            "paged_memory": {
              "format": "int64",
              "description": "Paged memory.",
              "type": "integer"
            },
            "peak_paged_memory": {
              "format": "int64",
              "description": "Peak paged memory.",
              "type": "integer"
            },
            "time_stamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            },
            "environment_variables": {
              "description": "List of environment variables.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "is_scm_site": {
              "description": "Is this the SCM site?",
              "type": "boolean"
            },
            "is_webjob": {
              "description": "Is this a Web Job?",
              "type": "boolean"
            },
            "description": {
              "description": "Description of process.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfoCollection": {
      "description": "Collection of Kudu process information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessModuleInfo": {
      "description": "Process Module Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessModuleInfo resource specific properties",
          "type": "object",
          "properties": {
            "base_address": {
              "description": "Base address. Used as module identifier in ARM resource URI.",
              "type": "string"
            },
            "file_name": {
              "description": "File name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "file_path": {
              "description": "File path.",
              "type": "string"
            },
            "module_memory_size": {
              "format": "int32",
              "description": "Module memory size.",
              "type": "integer"
            },
            "file_version": {
              "description": "File version.",
              "type": "string"
            },
            "file_description": {
              "description": "File description.",
              "type": "string"
            },
            "product": {
              "description": "Product name.",
              "type": "string"
            },
            "product_version": {
              "description": "Product version.",
              "type": "string"
            },
            "is_debug": {
              "description": "Is debug?",
              "type": "boolean"
            },
            "language": {
              "description": "Module language (locale).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessModuleInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessModuleInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessThreadInfo": {
      "description": "Process Thread Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessThreadInfo resource specific properties",
          "type": "object",
          "properties": {
            "identifier": {
              "format": "int32",
              "description": "Site extension ID.",
              "type": "integer",
              "readOnly": true
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "process": {
              "description": "Process URI.",
              "type": "string"
            },
            "start_address": {
              "description": "Start address.",
              "type": "string"
            },
            "current_priority": {
              "format": "int32",
              "description": "Current thread priority.",
              "type": "integer"
            },
            "priority_level": {
              "description": "Thread priority level.",
              "type": "string"
            },
            "base_priority": {
              "format": "int32",
              "description": "Base priority.",
              "type": "integer"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "total_processor_time": {
              "description": "Total processor time.",
              "type": "string"
            },
            "user_processor_time": {
              "description": "User processor time.",
              "type": "string"
            },
            "state": {
              "description": "Thread state.",
              "type": "string"
            },
            "wait_reason": {
              "description": "Wait reason.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessThreadInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessThreadInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PublicCertificate": {
      "description": "Public certificate object",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PublicCertificate resource specific properties",
          "type": "object",
          "properties": {
            "blob": {
              "format": "byte",
              "description": "Public Certificate byte array",
              "type": "string"
            },
            "publicCertificateLocation": {
              "description": "Public Certificate Location",
              "enum": [
                "CurrentUserMy",
                "LocalMachineMy",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicCertificateLocation",
                "modelAsString": false
              }
            },
            "thumbprint": {
              "description": "Certificate Thumbprint",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCertificateCollection": {
      "description": "Collection of public certificates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PublishingCredentialsPoliciesCollection": {
      "description": "Publishing Credentials Policies entity collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmPublishingCredentialsPoliciesEntity"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The minutes."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The hours."
        },
        "weekDays": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DaysOfWeek",
              "modelAsString": false
            }
          },
          "description": "The days of the week."
        },
        "monthDays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The month days."
        },
        "monthlyOccurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          },
          "x-ms-identifiers": [],
          "description": "The monthly occurrences."
        }
      },
      "description": "The recurrence schedule."
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "properties": {
        "day": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "The day of the week."
        },
        "occurrence": {
          "type": "integer",
          "format": "int32",
          "description": "The occurrence."
        }
      },
      "description": "The recurrence schedule occurrence."
    },
    "RegenerateActionParameter": {
      "type": "object",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The key type."
        }
      },
      "description": "The access key regenerate action content."
    },
    "RepetitionIndex": {
      "type": "object",
      "description": "The workflow run action repetition index.",
      "additionalProperties": false,
      "required": [
        "itemIndex"
      ],
      "properties": {
        "scopeName": {
          "type": "string",
          "description": "The scope."
        },
        "itemIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index."
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Hybrid Connection for an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RelayServiceConnectionEntity resource specific properties",
          "type": "object",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Response": {
      "type": "object",
      "additionalProperties": false,
      "description": "A response.",
      "properties": {
        "headers": {
          "$ref": "#/definitions/Object",
          "description": "A list of all the headers attached to the response."
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "The status code of the response."
        },
        "bodyLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Details on the location of the body content."
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource type."
        }
      },
      "description": "The resource reference."
    },
    "RestoreRequest": {
      "description": "Description of a restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreRequest resource specific properties",
          "required": [
            "storageAccountUrl",
            "overwrite"
          ],
          "type": "object",
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup.",
              "type": "string"
            },
            "overwrite": {
              "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of an app.",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
              "default": false,
              "type": "boolean"
            },
            "ignoreDatabases": {
              "description": "Ignore the databases and only restore the site content",
              "default": false,
              "type": "boolean"
            },
            "appServicePlan": {
              "description": "Specify app service plan that will own restored site.",
              "type": "string"
            },
            "operationType": {
              "description": "Operation type.",
              "default": "Default",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot",
                "CloudFS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Request": {
      "type": "object",
      "additionalProperties": false,
      "description": "A request.",
      "properties": {
        "headers": {
          "$ref": "#/definitions/Object",
          "description": "A list of all the headers attached to the request."
        },
        "uri": {
          "type": "string",
          "description": "The destination for the request."
        },
        "method": {
          "type": "string",
          "description": "The HTTP method used for the request."
        }
      }
    },
    "RequestHistoryListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestHistory"
          },
          "description": "A list of workflow request histories."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow request histories."
    },
    "RequestHistory": {
      "type": "object",
      "additionalProperties": false,
      "description": "The request history.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestHistoryProperties",
          "description": "The request history properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowResource"
        }
      ]
    },
    "RequestHistoryProperties": {
      "type": "object",
      "additionalProperties": false,
      "description": "The request history.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the request started."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the request ended."
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "The request."
        },
        "response": {
          "$ref": "#/definitions/Response",
          "description": "The response."
        }
      }
    },
    "RetryHistory": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time."
        },
        "code": {
          "type": "string",
          "description": "Gets the status code."
        },
        "clientRequestId": {
          "type": "string",
          "description": "Gets the client request Id."
        },
        "serviceRequestId": {
          "type": "string",
          "description": "Gets the service request Id."
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "Gets the error response."
        }
      },
      "description": "The retry history."
    },
    "RunActionCorrelation": {
      "type": "object",
      "description": "The workflow run action correlation properties.",
      "additionalProperties": false,
      "properties": {
        "actionTrackingId": {
          "type": "string",
          "description": "The action tracking identifier."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RunCorrelation"
        }
      ]
    },
    "RunCorrelation": {
      "type": "object",
      "description": "The correlation properties.",
      "additionalProperties": false,
      "properties": {
        "clientTrackingId": {
          "type": "string",
          "description": "The client tracking identifier."
        },
        "clientKeywords": {
          "type": "array",
          "description": "The client keywords.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettings resource specific properties",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "runtimeVersion": {
              "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
              "type": "string"
            },
            "unauthenticatedClientAction": {
              "description": "The action to take when an unauthenticated client attempts to access the app.",
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UnauthenticatedClientAction",
                "modelAsString": false
              }
            },
            "tokenStoreEnabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "allowedExternalRedirectUrls": {
              "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultProvider": {
              "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
              "enum": [
                "AzureActiveDirectory",
                "Facebook",
                "Google",
                "MicrosoftAccount",
                "Twitter",
                "Github"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BuiltInAuthenticationProvider",
                "modelAsString": false
              }
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecret": {
              "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\nThis setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\nOtherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecretSettingName": {
              "description": "The app setting name that contains the client secret of the relying party application.",
              "type": "string"
            },
            "clientSecretCertificateThumbprint": {
              "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
              "type": "string"
            },
            "issuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. `https://sts.windows.net/{tenant-guid}/`.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "validateIssuer": {
              "description": "Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.",
              "type": "boolean"
            },
            "allowedAudiences": {
              "description": "Allowed audience values to consider when validating JSON Web Tokens issued by \nAzure Active Directory. Note that the <code>ClientID</code> value is always considered an\nallowed audience, regardless of this setting.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "additionalLoginParams": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aadClaimsAuthorization": {
              "description": "Gets a JSON string containing the Azure AD Acl settings.",
              "type": "string"
            },
            "googleClientId": {
              "description": "The OpenID Connect Client ID for the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecret": {
              "description": "The client secret associated with the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecretSettingName": {
              "description": "The app setting name that contains the client secret associated with \nthe Google web application.",
              "type": "string"
            },
            "googleOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\nThis setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facebookAppId": {
              "description": "The App ID of the Facebook app used for login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecret": {
              "description": "The App Secret of the Facebook app used for Facebook Login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecretSettingName": {
              "description": "The app setting name that contains the app secret used for Facebook Login.",
              "type": "string"
            },
            "facebookOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\nThis setting is optional.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "gitHubClientId": {
              "description": "The Client Id of the GitHub app used for login.\nThis setting is required for enabling Github login",
              "type": "string"
            },
            "gitHubClientSecret": {
              "description": "The Client Secret of the GitHub app used for Github Login.\nThis setting is required for enabling Github login.",
              "type": "string"
            },
            "gitHubClientSecretSettingName": {
              "description": "The app setting name that contains the client secret of the Github\napp used for GitHub Login.",
              "type": "string"
            },
            "gitHubOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.\nThis setting is optional",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "twitterConsumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecret": {
              "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecretSettingName": {
              "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
              "type": "string"
            },
            "microsoftAccountClientId": {
              "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecret": {
              "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecretSettingName": {
              "description": "The app setting name containing the OAuth 2.0 client secret that was created for the\napp used for authentication.",
              "type": "string"
            },
            "microsoftAccountOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\nThis setting is optional. If not specified, \"wl.basic\" is used as the default scope.\nMicrosoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isAuthFromFile": {
              "description": "\"true\" if the auth config settings should be read from a file,\n\"false\" otherwise",
              "type": "string"
            },
            "authFilePath": {
              "description": "The path of the config file containing auth settings.\nIf the path is relative, base will the site's root directory.",
              "type": "string"
            },
            "configVersion": {
              "description": "The ConfigVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of the control plane for Authentication / Authorization.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettingsV2": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization V2 feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettingsV2 resource specific properties",
          "type": "object",
          "properties": {
            "platform": {
              "$ref": "#/definitions/AuthPlatform",
              "description": "The configuration settings of the platform of App Service Authentication/Authorization."
            },
            "globalValidation": {
              "$ref": "#/definitions/GlobalValidation",
              "description": "The configuration settings that determines the validation flow of users using App Service Authentication/Authorization."
            },
            "identityProviders": {
              "$ref": "#/definitions/IdentityProviders",
              "description": "The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization."
            },
            "login": {
              "$ref": "#/definitions/Login",
              "description": "The configuration settings of the login flow of users using App Service Authentication/Authorization."
            },
            "httpSettings": {
              "$ref": "#/definitions/HttpSettings",
              "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not an app is cloneable.",
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of app.",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on app that prevent cloning.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\nbut the features in this list will not be set up on cloned app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "An app cloneability criterion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion.",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion.",
          "type": "string"
        }
      }
    },
    "SiteConfigResource": {
      "description": "Web app configuration ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./CommonDefinitions.json#/definitions/SiteConfig",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigResourceCollection": {
      "description": "Collection of site configurations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteConfigurationSnapshotInfo": {
      "description": "A snapshot of a web app configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteConfigurationSnapshotInfo resource specific properties",
          "type": "object",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            },
            "snapshotId": {
              "format": "int32",
              "description": "The id of the snapshot",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigurationSnapshotInfoCollection": {
      "description": "Collection of metadata for the app configuration snapshots that can be restored.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigurationSnapshotInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteContainer": {
      "description": "Container of a site",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteContainer resource specific properties",
          "required": [
            "image",
            "isMain"
          ],
          "type": "object",
          "properties": {
            "image": {
              "description": "Image Name",
              "type": "string"
            },
            "targetPort": {
              "description": "Target Port",
              "type": "string"
            },
            "isMain": {
              "description": "<code>true</code> if the container is the main site container; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "startUpCommand": {
              "description": "StartUp Command",
              "type": "string"
            },
            "authType": {
              "description": "Auth Type",
              "enum": [
                "Anonymous",
                "UserCredentials",
                "SystemIdentity",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": false
              }
            },
            "userName": {
              "description": "User Name",
              "type": "string"
            },
            "passwordSecret": {
              "description": "Password Secret",
              "type": "string",
              "x-ms-secret": true
            },
            "userManagedIdentityClientId": {
              "description": "UserManagedIdentity ClientId",
              "type": "string"
            },
            "createdTime": {
              "format": "date-time",
              "description": "Created Time",
              "type": "string",
              "readOnly": true
            },
            "lastModifiedTime": {
              "format": "date-time",
              "description": "Last Modified Time",
              "type": "string",
              "readOnly": true
            },
            "volumeMounts": {
              "description": "List of volume mounts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeMount"
              }
            },
            "inheritAppSettingsAndConnectionStrings": {
              "description": "<code>true</code> if all AppSettings and ConnectionStrings have to be passed to the container as environment variables; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "environmentVariables": {
              "description": "List of environment variables",
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteContainerCollection": {
      "description": "Collection of site containers",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteContainer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteExtensionInfo": {
      "description": "Site Extension Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteExtensionInfo resource specific properties",
          "type": "object",
          "properties": {
            "extension_id": {
              "description": "Site extension ID.",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "extension_type": {
              "description": "Site extension type.",
              "enum": [
                "Gallery",
                "WebRoot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteExtensionType",
                "modelAsString": false
              }
            },
            "summary": {
              "description": "Summary description.",
              "type": "string"
            },
            "description": {
              "description": "Detailed description.",
              "type": "string"
            },
            "version": {
              "description": "Version information.",
              "type": "string"
            },
            "extension_url": {
              "description": "Extension URL.",
              "type": "string"
            },
            "project_url": {
              "description": "Project URL.",
              "type": "string"
            },
            "icon_url": {
              "description": "Icon URL.",
              "type": "string"
            },
            "license_url": {
              "description": "License URL.",
              "type": "string"
            },
            "feed_url": {
              "description": "Feed URL.",
              "type": "string"
            },
            "authors": {
              "description": "List of authors.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installer_command_line_params": {
              "description": "Installer command line parameters.",
              "type": "string"
            },
            "published_date_time": {
              "format": "date-time",
              "description": "Published timestamp.",
              "type": "string"
            },
            "download_count": {
              "format": "int32",
              "description": "Count of downloads.",
              "type": "integer"
            },
            "local_is_latest_version": {
              "description": "<code>true</code> if the local version is the latest version; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "local_path": {
              "description": "Local path.",
              "type": "string"
            },
            "installed_date_time": {
              "format": "date-time",
              "description": "Installed timestamp.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "type": "string"
            },
            "comment": {
              "description": "Site Extension comment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteExtensionInfoCollection": {
      "description": "Collection of Kudu site extension information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteExtensionInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of App Service site logs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteLogsConfig resource specific properties",
          "type": "object",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration."
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "HTTP logs configuration."
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration."
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SitePatchResource": {
      "description": "ARM resource for a site.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePatchResource resource specific properties",
          "type": "object",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/HostNameSslState"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "dnsConfiguration": {
              "$ref": "./CommonDefinitions.json#/definitions/SiteDnsConfig",
              "description": "Property to configure various DNS related settings for a site."
            },
            "siteConfig": {
              "$ref": "./CommonDefinitions.json#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "./CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientAffinityProxyEnabled": {
              "description": "<code>true</code> to override client affinity cookie domain with X-Forwarded-Host request header. <code>false</code> to use default domain. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertMode": {
              "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
              "enum": [
                "Required",
                "Optional",
                "OptionalInteractiveUser"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClientCertMode",
                "modelAsString": false
              }
            },
            "clientCertExclusionPaths": {
              "description": "client certificate authentication comma-separated exclusion paths",
              "type": "string"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "customDomainVerificationId": {
              "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
              "type": "string"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "possibleOutboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\nThis only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "./CommonDefinitions.json#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "./CommonDefinitions.json#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
              "type": "boolean"
            },
            "redundancyMode": {
              "description": "Site redundancy mode",
              "enum": [
                "None",
                "Manual",
                "Failover",
                "ActiveActive",
                "GeoRedundant"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": false
              }
            },
            "inProgressOperationId": {
              "format": "uuid",
              "description": "Specifies an operation id if this site has a pending operation.",
              "type": "string",
              "readOnly": true,
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "storageAccountRequired": {
              "description": "Checks if Customer provided storage account is required",
              "type": "boolean"
            },
            "keyVaultReferenceIdentity": {
              "description": "Identity to use for Key Vault Reference authentication.",
              "type": "string"
            },
            "virtualNetworkSubnetId": {
              "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "./CommonDefinitions.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "SitePhpErrorLogFlag": {
      "description": "Used for getting PHP error logging flag.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePhpErrorLogFlag resource specific properties",
          "type": "object",
          "properties": {
            "localLogErrors": {
              "description": "Local log_errors setting.",
              "type": "string"
            },
            "masterLogErrors": {
              "description": "Master log_errors setting.",
              "type": "string"
            },
            "localLogErrorsMaxLength": {
              "description": "Local log_errors_max_len setting.",
              "type": "string"
            },
            "masterLogErrorsMaxLength": {
              "description": "Master log_errors_max_len setting.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSourceControl": {
      "description": "Source control configuration for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteSourceControl resource specific properties",
          "type": "object",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control URL.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "branch": {
              "description": "Name of branch to use for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isManualIntegration": {
              "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isGitHubAction": {
              "description": "<code>true</code> if this is deployed via GitHub action.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "deploymentRollbackEnabled": {
              "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isMercurial": {
              "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "gitHubActionConfiguration": {
              "$ref": "#/definitions/GitHubActionConfiguration",
              "description": "If GitHub Action is selected, than the associated configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotConfigNames": {
      "description": "Names for connection strings, application settings, and external Azure storage account configuration\nidentifiers to be marked as sticky to the deployment slot and not moved during a swap operation.\nThis is valid for all deployment slots in an app.",
      "type": "object",
      "properties": {
        "connectionStringNames": {
          "description": "List of connection string names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appSettingNames": {
          "description": "List of application settings names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "azureStorageConfigNames": {
          "description": "List of external Azure storage account identifiers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlotConfigNames",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "A setting difference between two deployment slots of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SlotDifference resource specific properties",
          "type": "object",
          "properties": {
            "level": {
              "description": "Level of the difference: Information, Warning or Error.",
              "type": "string",
              "readOnly": true
            },
            "settingType": {
              "description": "The type of the setting: General, AppSetting or ConnectionString.",
              "type": "string",
              "readOnly": true
            },
            "diffRule": {
              "description": "Rule that describes how to process the setting difference during a slot swap.",
              "type": "string",
              "readOnly": true
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string",
              "readOnly": true
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current slot.",
              "type": "string",
              "readOnly": true
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target slot.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the setting difference.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of slot differences.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of snapshots which can be used to revert an app to a previous time.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotRecoverySource": {
      "description": "Specifies the web app that snapshot contents will be retrieved from.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geographical location of the source web app, e.g. SouthEastAsia, SouthCentralUS",
          "type": "string"
        },
        "id": {
          "description": "ARM resource ID of the source app. \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        }
      }
    },
    "SnapshotRestoreRequest": {
      "description": "Details about app recovery operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SnapshotRestoreRequest resource specific properties",
          "required": [
            "overwrite"
          ],
          "type": "object",
          "properties": {
            "snapshotTime": {
              "description": "Point in time in which the app restore should be done, formatted as a DateTime string.",
              "type": "string"
            },
            "recoverySource": {
              "$ref": "#/definitions/SnapshotRecoverySource",
              "description": "Optional. Specifies the web app that snapshot contents will be retrieved from.\nIf empty, the targeted web app will be used as the source."
            },
            "overwrite": {
              "description": "If <code>true</code> the restore operation can overwrite source app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "recoverConfiguration": {
              "description": "If true, site configuration, in addition to content, will be reverted.",
              "type": "boolean"
            },
            "ignoreConflictingHostNames": {
              "description": "If true, custom hostname conflicts will be ignored when recovering to a target web app.\nThis setting is only necessary when RecoverConfiguration is enabled.",
              "type": "boolean"
            },
            "useDRSecondary": {
              "description": "If true, the snapshot is retrieved from DRSecondary endpoint.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Options for app content migration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationOptions resource specific properties",
          "required": [
            "azurefilesConnectionString",
            "azurefilesShare"
          ],
          "type": "object",
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "azurefilesShare": {
              "description": "AzureFiles share.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "switchSiteAfterMigration": {
              "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            },
            "blockWriteAccessToSite": {
              "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of app content request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationResponse resource specific properties",
          "type": "object",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The resource id."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The sub resource type."
    },
    "SwiftVirtualNetwork": {
      "description": "Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SwiftVirtualNetwork resource specific properties",
          "type": "object",
          "properties": {
            "subnetResourceId": {
              "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
              "type": "string"
            },
            "swiftSupported": {
              "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TokenStore": {
      "description": "The configuration settings of the token store.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
          "type": "boolean"
        },
        "tokenRefreshExtensionHours": {
          "format": "double",
          "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
          "type": "number"
        },
        "fileSystem": {
          "$ref": "#/definitions/FileSystemTokenStore",
          "description": "The configuration settings of the storage of the tokens if a file system is used."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/BlobStorageTokenStore",
          "description": "The configuration settings of the storage of the tokens if blob storage is used."
        }
      }
    },
    "TriggeredJobHistory": {
      "description": "Triggered Web Job History. List of Triggered Web Job Run Information elements.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobHistory resource specific properties",
          "type": "object",
          "properties": {
            "runs": {
              "description": "List of triggered web job runs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggeredJobRun"
              },
              "x-ms-identifiers": [
                "web_job_id"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistoryCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredJobHistory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TriggeredJobRun": {
      "description": "Triggered Web Job Run Information.",
      "type": "object",
      "properties": {
        "web_job_id": {
          "description": "Job ID.",
          "type": "string"
        },
        "web_job_name": {
          "description": "Job name.",
          "type": "string"
        },
        "status": {
          "description": "Job status.",
          "enum": [
            "Success",
            "Failed",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TriggeredWebJobStatus",
            "modelAsString": false
          }
        },
        "start_time": {
          "format": "date-time",
          "description": "Start time.",
          "type": "string"
        },
        "end_time": {
          "format": "date-time",
          "description": "End time.",
          "type": "string"
        },
        "duration": {
          "description": "Job duration.",
          "type": "string"
        },
        "output_url": {
          "description": "Output URL.",
          "type": "string"
        },
        "error_url": {
          "description": "Error URL.",
          "type": "string"
        },
        "url": {
          "description": "Job URL.",
          "type": "string"
        },
        "job_name": {
          "description": "Job name.",
          "type": "string"
        },
        "trigger": {
          "description": "Job trigger.",
          "type": "string"
        }
      }
    },
    "TriggeredWebJob": {
      "description": "Triggered Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredWebJob resource specific properties",
          "type": "object",
          "properties": {
            "latest_run": {
              "$ref": "#/definitions/TriggeredJobRun",
              "description": "Latest job run information."
            },
            "history_url": {
              "description": "History URL.",
              "type": "string"
            },
            "scheduler_logs_url": {
              "description": "Scheduler Logs URL.",
              "type": "string"
            },
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "publicNetworkAccess": {
              "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
              "type": "string"
            },
            "storageAccountRequired": {
              "description": "Checks if Customer provided storage account is required",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Twitter": {
      "description": "The configuration settings of the Twitter provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/TwitterRegistration",
          "description": "The configuration settings of the app registration for the Twitter provider."
        }
      }
    },
    "TwitterRegistration": {
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "type": "object",
      "properties": {
        "consumerKey": {
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "consumerSecretSettingName": {
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
          "type": "string"
        }
      }
    },
    "VolumeMount": {
      "required": [
        "volumeSubPath",
        "containerMountPath"
      ],
      "type": "object",
      "properties": {
        "volumeSubPath": {
          "description": "Sub path in the volume where volume is mounted from.",
          "type": "string"
        },
        "containerMountPath": {
          "description": "Target path on the container where volume is mounted on",
          "type": "string"
        },
        "data": {
          "description": "Config Data to be mounted on the volume",
          "type": "string"
        },
        "readOnly": {
          "description": "Boolean to specify if the mount is read only on the container",
          "type": "boolean"
        }
      }
    },
    "WebAppInstanceStatusCollection": {
      "description": "Collection of app instances.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebSiteInstanceStatus"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebJob": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebJob resource specific properties",
          "type": "object",
          "properties": {
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebJobCollection": {
      "description": "Collection of Kudu web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebSiteInstanceStatus": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebSiteInstanceStatus resource specific properties",
          "type": "object",
          "properties": {
            "state": {
              "enum": [
                "READY",
                "STOPPED",
                "UNKNOWN"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteRuntimeState",
                "modelAsString": false
              }
            },
            "statusUrl": {
              "description": "Link to the GetStatusApi in Kudu",
              "type": "string"
            },
            "detectorUrl": {
              "description": "Link to the Diagnose and Solve Portal",
              "type": "string"
            },
            "consoleUrl": {
              "description": "Link to the console to web app instance",
              "type": "string"
            },
            "healthCheckUrl": {
              "description": "Link to the console to web app instance",
              "type": "string"
            },
            "containers": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ContainerInfo"
              }
            },
            "physicalZone": {
              "description": "The physical zone that the instance is in",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowProperties",
          "description": "The workflow properties."
        },
        "identity": {
          "$ref": "./CommonDefinitions.json#/definitions/ManagedServiceIdentity"
        }
      },
      "description": "The workflow type.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowResource"
        }
      ]
    },
    "WorkflowArtifacts": {
      "type": "object",
      "properties": {
        "appSettings": {
          "$ref": "#/definitions/Object",
          "description": "Application settings of the workflow."
        },
        "files": {
          "$ref": "#/definitions/WorkflowFiles",
          "description": "Files of the app."
        },
        "filesToDelete": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Files of the app to delete."
        }
      },
      "description": "The workflow filter."
    },
    "WorkflowFilter": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state of workflows."
        }
      },
      "description": "The workflow filter."
    },
    "WorkflowParameter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "The type."
        },
        "value": {
          "$ref": "#/definitions/Object",
          "description": "The value."
        },
        "metadata": {
          "$ref": "#/definitions/Object",
          "description": "The metadata."
        },
        "description": {
          "type": "string",
          "description": "The description."
        }
      },
      "description": "The workflow parameters."
    },
    "WorkflowProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "readOnly": true,
          "description": "Gets the provisioning state."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the created time."
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the changed time."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the version."
        },
        "accessEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the access endpoint."
        },
        "endpointsConfiguration": {
          "$ref": "#/definitions/FlowEndpointsConfiguration",
          "description": "The endpoints configuration."
        },
        "accessControl": {
          "$ref": "#/definitions/FlowAccessControlConfiguration",
          "description": "The access control configuration."
        },
        "sku": {
          "$ref": "#/definitions/WorkflowSku",
          "readOnly": true,
          "description": "The sku."
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "integrationServiceEnvironment": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration service environment."
        },
        "definition": {
          "$ref": "#/definitions/Object",
          "description": "The definition."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          },
          "description": "The parameters."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The workflow kind."
        }
      },
      "description": "The workflow properties."
    },
    "WorkflowProvisioningState": {
      "type": "string",
      "description": "The workflow provisioning state.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed",
        "Renewing",
        "Pending",
        "Waiting",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "WorkflowProvisioningState",
        "modelAsString": true
      }
    },
    "WorkflowListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflow"
          },
          "description": "The list of workflows."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflows."
    },
    "WorkflowOutputParameter": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the error."
        }
      },
      "description": "The workflow output parameter.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowParameter"
        }
      ]
    },
    "RecurrenceFrequency": {
      "type": "string",
      "description": "The recurrence frequency.",
      "enum": [
        "NotSpecified",
        "Second",
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": true
      }
    },
    "WorkflowEnvelope": {
      "description": "Workflow properties definition.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The resource id."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource type."
        },
        "kind": {
          "type": "string",
          "description": "The resource kind."
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "description": "Additional workflow properties.",
          "type": "object",
          "properties": {
            "files": {
              "description": "Gets or sets the files.",
              "$ref": "#/definitions/WorkflowFiles"
            },
            "flowState": {
              "description": "Gets or sets the state of the workflow.",
              "$ref": "#/definitions/WorkflowState"
            },
            "health": {
              "$ref": "#/definitions/WorkflowHealth",
              "description": "Gets or sets workflow health."
            }
          }
        }
      }
    },
    "WorkflowEnvelopeCollection": {
      "description": "Collection of Kudu workflow information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkflowFiles": {
      "description": "Gets or sets the files.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "WorkflowHealth": {
      "description": "Represents the workflow health.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Gets or sets the workflow health state.",
          "enum": [
            "NotSpecified",
            "Healthy",
            "Unhealthy",
            "Unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkflowHealthState",
            "modelAsString": false
          }
        },
        "error": {
          "$ref": "./CommonDefinitions.json#/definitions/ErrorEntity",
          "description": "Gets or sets the workflow error."
        }
      }
    },
    "WorkflowResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The resource id."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The base resource type."
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowRunProperties",
          "description": "The workflow run properties."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow run name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow run type."
        }
      },
      "description": "The workflow run.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "WorkflowRunAction": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowRunActionProperties",
          "description": "The workflow run action properties."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow run action name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow run action type."
        }
      },
      "description": "The workflow run action.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "WorkflowRunActionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunAction"
          },
          "description": "A list of workflow run actions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow run actions."
    },
    "WorkflowRunActionProperties": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "readOnly": true,
          "description": "Gets the status."
        },
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the code."
        },
        "error": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the error."
        },
        "trackingId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the tracking id."
        },
        "correlation": {
          "$ref": "#/definitions/RunActionCorrelation",
          "description": "The correlation properties."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to inputs."
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to outputs."
        },
        "trackedProperties": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the tracked properties."
        },
        "retryHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetryHistory"
          },
          "x-ms-identifiers": [],
          "description": "Gets the retry histories."
        }
      },
      "description": "The workflow run action properties."
    },
    "WorkflowRunActionRepetitionDefinitionCollection": {
      "type": "object",
      "description": "A collection of workflow run action repetitions.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of recommendations.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
          }
        }
      }
    },
    "WorkflowRunActionRepetitionDefinition": {
      "type": "object",
      "description": "The workflow run action repetition definition.",
      "additionalProperties": false,
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowRunActionRepetitionProperties",
          "description": "The workflow run action repetition properties definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowResource"
        }
      ]
    },
    "WorkflowRunActionRepetitionProperties": {
      "type": "object",
      "description": "The workflow run action repetition properties definition.",
      "additionalProperties": false,
      "properties": {
        "repetitionIndexes": {
          "type": "array",
          "description": "The repetition indexes.",
          "items": {
            "$ref": "#/definitions/RepetitionIndex"
          },
          "x-ms-identifiers": [
            "itemIndex"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationResult"
        }
      ]
    },
    "WorkflowRunListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          },
          "description": "A list of workflow runs."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow runs."
    },
    "WorkflowRunProperties": {
      "type": "object",
      "properties": {
        "waitEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the wait end time."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "readOnly": true,
          "description": "Gets the status."
        },
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the code."
        },
        "error": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the error."
        },
        "correlationId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the correlation id."
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "readOnly": true,
          "description": "Gets the reference to workflow version."
        },
        "trigger": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "readOnly": true,
          "description": "Gets the fired trigger."
        },
        "outputs": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowOutputParameter",
            "description": "The workflow output parameter."
          },
          "description": "Gets the outputs."
        },
        "response": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "readOnly": true,
          "description": "Gets the response of the flow run."
        }
      },
      "description": "The workflow run properties."
    },
    "WorkflowRunActionFilter": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow run action."
        }
      },
      "description": "The workflow run action filter."
    },
    "WorkflowRunFilter": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow run."
        }
      },
      "description": "The workflow run filter."
    },
    "WorkflowRunTrigger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the name."
        },
        "inputs": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the inputs."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to inputs."
        },
        "outputs": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the outputs."
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to outputs."
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the scheduled time."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time."
        },
        "trackingId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the tracking id."
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the code."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "readOnly": true,
          "description": "Gets the status."
        },
        "error": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the error."
        },
        "trackedProperties": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the tracked properties."
        }
      },
      "description": "The workflow run trigger."
    },
    "WorkflowSku": {
      "type": "object",
      "description": "The sku type.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/WorkflowSkuName",
          "description": "The name."
        },
        "plan": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The reference to plan."
        }
      }
    },
    "WorkflowSkuName": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "WorkflowSkuName",
        "modelAsString": true
      },
      "description": "The sku name."
    },
    "WorkflowState": {
      "type": "string",
      "description": "The workflow state.",
      "enum": [
        "NotSpecified",
        "Completed",
        "Enabled",
        "Disabled",
        "Deleted",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "WorkflowState",
        "modelAsString": true
      }
    },
    "WorkflowStatus": {
      "type": "string",
      "description": "The workflow status.",
      "enum": [
        "NotSpecified",
        "Paused",
        "Running",
        "Waiting",
        "Succeeded",
        "Skipped",
        "Suspended",
        "Cancelled",
        "Failed",
        "Faulted",
        "TimedOut",
        "Aborted",
        "Ignored"
      ],
      "x-ms-enum": {
        "name": "WorkflowStatus",
        "modelAsString": true
      }
    },
    "WorkflowTrigger": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowTriggerProperties",
          "description": "The workflow trigger properties."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger type."
        }
      },
      "description": "The workflow trigger.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "WorkflowTriggerCallbackUrl": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger callback URL."
        },
        "method": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger callback URL HTTP method."
        },
        "basePath": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger callback URL base path."
        },
        "relativePath": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger callback URL relative path."
        },
        "relativePathParameters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the workflow trigger callback URL relative path parameters."
        },
        "queries": {
          "$ref": "#/definitions/WorkflowTriggerListCallbackUrlQueries",
          "description": "Gets the workflow trigger callback URL query parameters."
        }
      },
      "description": "The workflow trigger callback URL."
    },
    "WorkflowTriggerFilter": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state of workflow trigger."
        }
      },
      "description": "The workflow trigger filter."
    },
    "WorkflowTriggerListCallbackUrlQueries": {
      "type": "object",
      "properties": {
        "api-version": {
          "type": "string",
          "description": "The api version."
        },
        "sp": {
          "type": "string",
          "description": "The SAS permissions."
        },
        "sv": {
          "type": "string",
          "description": "The SAS version."
        },
        "sig": {
          "type": "string",
          "description": "The SAS signature."
        },
        "se": {
          "type": "string",
          "description": "The SAS timestamp."
        }
      },
      "description": "Gets the workflow trigger callback URL query parameters."
    },
    "WorkflowTriggerHistory": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowTriggerHistoryProperties",
          "description": "Gets the workflow trigger history properties."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger history name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the workflow trigger history type."
        }
      },
      "description": "The workflow trigger history.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "WorkflowTriggerHistoryFilter": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow trigger history."
        }
      },
      "description": "The workflow trigger history filter."
    },
    "WorkflowTriggerHistoryProperties": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time."
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The scheduled time."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "readOnly": true,
          "description": "Gets the status."
        },
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the code."
        },
        "error": {
          "$ref": "#/definitions/Object",
          "readOnly": true,
          "description": "Gets the error."
        },
        "trackingId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the tracking id."
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to input parameters."
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "readOnly": true,
          "description": "Gets the link to output parameters."
        },
        "fired": {
          "type": "boolean",
          "readOnly": true,
          "description": "The value indicating whether trigger was fired."
        },
        "run": {
          "$ref": "#/definitions/ResourceReference",
          "readOnly": true,
          "description": "Gets the reference to workflow run."
        }
      },
      "description": "The workflow trigger history properties."
    },
    "WorkflowTriggerHistoryListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTriggerHistory"
          },
          "description": "A list of workflow trigger histories."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow trigger histories."
    },
    "WorkflowTriggerProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowTriggerProvisioningState",
          "readOnly": true,
          "description": "Gets the provisioning state."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the created time."
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the changed time."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "readOnly": true,
          "description": "Gets the state."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "readOnly": true,
          "description": "Gets the status."
        },
        "lastExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last execution time."
        },
        "nextExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the next execution time."
        },
        "recurrence": {
          "$ref": "#/definitions/WorkflowTriggerRecurrence",
          "readOnly": true,
          "description": "Gets the workflow trigger recurrence."
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "readOnly": true,
          "description": "Gets the reference to workflow."
        }
      },
      "description": "The workflow trigger properties."
    },
    "WorkflowTriggerProvisioningState": {
      "type": "string",
      "description": "The workflow trigger provisioning state.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "WorkflowTriggerProvisioningState",
        "modelAsString": true
      }
    },
    "WorkflowTriggerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTrigger"
          },
          "description": "A list of workflow triggers."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow triggers."
    },
    "WorkflowTriggerRecurrence": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/RecurrenceFrequency",
          "description": "The frequency."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval."
        },
        "startTime": {
          "type": "string",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "description": "The end time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "The recurrence schedule."
        }
      },
      "description": "The workflow trigger recurrence."
    },
    "WorkflowVersion": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkflowVersionProperties",
          "description": "The workflow version properties."
        }
      },
      "description": "The workflow version.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowResource"
        }
      ]
    },
    "WorkflowVersionProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "readOnly": true,
          "description": "The provisioning state."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the created time."
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the changed time."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the version."
        },
        "accessEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the access endpoint."
        },
        "endpointsConfiguration": {
          "$ref": "#/definitions/FlowEndpointsConfiguration",
          "description": "The endpoints configuration."
        },
        "accessControl": {
          "$ref": "#/definitions/FlowAccessControlConfiguration",
          "description": "The access control configuration."
        },
        "sku": {
          "$ref": "#/definitions/WorkflowSku",
          "readOnly": true,
          "description": "The sku."
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "definition": {
          "$ref": "#/definitions/Object",
          "description": "The definition."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          },
          "description": "The parameters."
        }
      },
      "description": "The workflow version properties."
    },
    "WorkflowVersionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowVersion",
            "description": "The workflow version."
          },
          "description": "A list of workflow versions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The list of workflow versions."
    },
    "AppServicePlanPatchResource": {
      "description": "ARM resource for a app service plan.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AppServicePlanPatchResource resource specific properties",
          "type": "object",
          "properties": {
            "workerTierName": {
              "description": "Target worker tier assigned to the App Service plan.",
              "type": "string"
            },
            "status": {
              "description": "App Service plan status.",
              "enum": [
                "Ready",
                "Pending",
                "Creating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "StatusOptions",
                "modelAsString": false
              }
            },
            "subscription": {
              "description": "App Service plan subscription.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "./CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the App Service plan.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "maximumNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of instances that can be assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "numberOfWorkers": {
              "format": "int32",
              "description": "The number of instances that are assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "geoRegion": {
              "description": "Geographical location for the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "perSiteScaling": {
              "description": "If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
              "default": false,
              "type": "boolean"
            },
            "elasticScaleEnabled": {
              "description": "ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku",
              "type": "boolean"
            },
            "maximumElasticWorkerCount": {
              "format": "int32",
              "description": "Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
              "type": "integer"
            },
            "numberOfSites": {
              "format": "int32",
              "description": "Number of apps assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "isSpot": {
              "description": "If <code>true</code>, this App Service Plan owns spot instances.",
              "type": "boolean"
            },
            "spotExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm expires. Valid only if it is a spot server farm.",
              "type": "string"
            },
            "freeOfferExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm free offer expires.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Resource group of the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "reserved": {
              "description": "If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "targetWorkerCount": {
              "format": "int32",
              "description": "Scaling worker count.",
              "type": "integer"
            },
            "targetWorkerSizeId": {
              "format": "int32",
              "description": "Scaling worker size ID.",
              "type": "integer"
            },
            "provisioningState": {
              "description": "Provisioning state of the App Service Plan.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "kubeEnvironmentProfile": {
              "$ref": "./CommonDefinitions.json#/definitions/KubeEnvironmentProfile",
              "description": "Specification for the Kubernetes Environment to use for the App Service plan."
            },
            "zoneRedundant": {
              "description": "If <code>true</code>, this App Service Plan will perform availability zone balancing.\nIf <code>false</code>, this App Service Plan will not perform availability zone balancing.",
              "default": false,
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnectionCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/HybridConnection"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HybridConnectionKey": {
      "description": "Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnectionKey resource specific properties",
          "type": "object",
          "properties": {
            "sendKeyName": {
              "description": "The name of the send key.",
              "type": "string",
              "readOnly": true
            },
            "sendKeyValue": {
              "description": "The value of the send key.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnectionLimits": {
      "description": "Hybrid Connection limits contract. This is used to return the plan limits of Hybrid Connections.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnectionLimits resource specific properties",
          "type": "object",
          "properties": {
            "current": {
              "format": "int32",
              "description": "The current number of Hybrid Connections.",
              "type": "integer",
              "readOnly": true
            },
            "maximum": {
              "format": "int32",
              "description": "The maximum number of Hybrid Connections allowed.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceCollection": {
      "description": "Collection of resources.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "ApiManagementConfig": {
      "description": "Azure API management (APIM) configuration linked to the app.",
      "type": "object",
      "properties": {
        "id": {
          "description": "APIM-Api Identifier.",
          "type": "string"
        }
      }
    },
    "AppServiceEnvironment": {
      "description": "Description of an App Service Environment.",
      "required": [
        "virtualNetwork"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the App Service Environment.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current status of the App Service Environment.",
          "enum": [
            "Preparing",
            "Ready",
            "Scaling",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostingEnvironmentStatus",
            "modelAsString": false
          }
        },
        "virtualNetwork": {
          "$ref": "#/definitions/VirtualNetworkProfile",
          "description": "Description of the Virtual Network."
        },
        "internalLoadBalancingMode": {
          "description": "Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.",
          "enum": [
            "None",
            "Web",
            "Publishing",
            "Web, Publishing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LoadBalancingMode",
            "modelAsString": true
          }
        },
        "multiSize": {
          "description": "Front-end VM size, e.g. \"Medium\", \"Large\".",
          "type": "string"
        },
        "multiRoleCount": {
          "format": "int32",
          "description": "Number of front-end instances.",
          "type": "integer",
          "readOnly": true
        },
        "ipsslAddressCount": {
          "format": "int32",
          "description": "Number of IP SSL addresses reserved for the App Service Environment.",
          "type": "integer"
        },
        "dnsSuffix": {
          "description": "DNS suffix of the App Service Environment.",
          "type": "string"
        },
        "maximumNumberOfMachines": {
          "format": "int32",
          "description": "Maximum number of VMs in the App Service Environment.",
          "type": "integer",
          "readOnly": true
        },
        "frontEndScaleFactor": {
          "format": "int32",
          "description": "Scale factor for front-ends.",
          "type": "integer"
        },
        "suspended": {
          "description": "<code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available\n (most likely because NSG blocked the incoming traffic).",
          "type": "boolean",
          "readOnly": true
        },
        "clusterSettings": {
          "description": "Custom settings for changing the behavior of the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "userWhitelistedIpRanges": {
          "description": "User added ip ranges to whitelist on ASE db",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hasLinuxWorkers": {
          "description": "Flag that displays whether an ASE has linux workers or not",
          "type": "boolean",
          "readOnly": true
        },
        "upgradePreference": {
          "description": "Upgrade Preference",
          "default": "None",
          "enum": [
            "None",
            "Early",
            "Late",
            "Manual"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpgradePreference",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No preference on when this App Service Environment will be upgraded"
              },
              {
                "value": "Early",
                "description": "This App Service Environment will be upgraded before others in the same region that have Upgrade Preference 'Late'"
              },
              {
                "value": "Late",
                "description": "This App Service Environment will be upgraded after others in the same region that have Upgrade Preference 'Early'"
              },
              {
                "value": "Manual",
                "description": "ASEv3 only. Once an upgrade is available, this App Service Environment will wait 10 days for the upgrade to be manually initiated. After 10 days the upgrade will begin automatically"
              }
            ]
          }
        },
        "dedicatedHostCount": {
          "format": "int32",
          "description": "Dedicated Host Count",
          "type": "integer"
        },
        "zoneRedundant": {
          "description": "Whether or not this App Service Environment is zone-redundant.",
          "type": "boolean"
        },
        "customDnsSuffixConfiguration": {
          "$ref": "#/definitions/CustomDnsSuffixConfiguration"
        },
        "networkingConfiguration": {
          "$ref": "#/definitions/AseV3NetworkingConfiguration"
        },
        "upgradeAvailability": {
          "description": "Whether an upgrade is available for this App Service Environment.",
          "enum": [
            "None",
            "Ready"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "UpgradeAvailability",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No upgrade is currently available for this App Service Environment"
              },
              {
                "value": "Ready",
                "description": "An upgrade is ready to be manually initiated on this App Service Environment"
              }
            ]
          }
        }
      }
    },
    "AppServicePlan": {
      "description": "App Service plan.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AppServicePlan resource specific properties",
          "type": "object",
          "properties": {
            "workerTierName": {
              "description": "Target worker tier assigned to the App Service plan.",
              "type": "string"
            },
            "status": {
              "description": "App Service plan status.",
              "enum": [
                "Ready",
                "Pending",
                "Creating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "StatusOptions",
                "modelAsString": false
              }
            },
            "subscription": {
              "description": "App Service plan subscription.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the App Service plan.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "maximumNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of instances that can be assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "numberOfWorkers": {
              "format": "int32",
              "description": "The number of instances that are assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "geoRegion": {
              "description": "Geographical location for the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "perSiteScaling": {
              "description": "If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
              "default": false,
              "type": "boolean"
            },
            "elasticScaleEnabled": {
              "description": "ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku",
              "type": "boolean"
            },
            "maximumElasticWorkerCount": {
              "format": "int32",
              "description": "Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
              "type": "integer"
            },
            "numberOfSites": {
              "format": "int32",
              "description": "Number of apps assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "isSpot": {
              "description": "If <code>true</code>, this App Service Plan owns spot instances.",
              "type": "boolean"
            },
            "spotExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm expires. Valid only if it is a spot server farm.",
              "type": "string"
            },
            "freeOfferExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm free offer expires.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Resource group of the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "reserved": {
              "description": "If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "targetWorkerCount": {
              "format": "int32",
              "description": "Scaling worker count.",
              "type": "integer"
            },
            "targetWorkerSizeId": {
              "format": "int32",
              "description": "Scaling worker size ID.",
              "type": "integer"
            },
            "provisioningState": {
              "description": "Provisioning state of the App Service Plan.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "kubeEnvironmentProfile": {
              "$ref": "#/definitions/KubeEnvironmentProfile",
              "description": "Specification for the Kubernetes Environment to use for the App Service plan."
            },
            "zoneRedundant": {
              "description": "If <code>true</code>, this App Service Plan will perform availability zone balancing.\nIf <code>false</code>, this App Service Plan will not perform availability zone balancing.",
              "default": false,
              "type": "boolean"
            },
            "asyncScalingEnabled": {
              "description": "If <code>true</code>, this App Service Plan will attempt to scale asynchronously if there are insufficient workers to scale synchronously.\nIf <code>false</code>, this App Service Plan will only attempt sync scaling.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription"
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        }
      }
    },
    "AppServicePlanCollection": {
      "description": "Collection of App Service plans.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServicePlan"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArmIdWrapper": {
      "description": "A wrapper for an ARM resource id",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AseV3NetworkingConfiguration": {
      "description": "Full view of networking configuration for an ASE.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AseV3NetworkingConfiguration resource specific properties",
          "type": "object",
          "properties": {
            "windowsOutboundIpAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "linuxOutboundIpAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "externalInboundIpAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "internalInboundIpAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "allowNewPrivateEndpointConnections": {
              "description": "Property to enable and disable new private endpoint connection creation on ASE",
              "type": "boolean"
            },
            "ftpEnabled": {
              "description": "Property to enable and disable FTP on ASEV3",
              "type": "boolean"
            },
            "remoteDebugEnabled": {
              "description": "Property to enable and disable Remote Debug on ASEV3",
              "type": "boolean"
            },
            "inboundIpAddressOverride": {
              "description": "Customer provided Inbound IP Address. Only able to be set on Ase create.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AutoHealActions": {
      "description": "Actions which to take by the auto-heal module when a rule is triggered.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Predefined action to be taken.",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "Custom action to be taken."
        },
        "minProcessExecutionTime": {
          "description": "Minimum time the process must execute\nbefore taking the action",
          "type": "string"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "Custom action to be executed\nwhen an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable.",
          "type": "string"
        }
      }
    },
    "AutoHealRules": {
      "description": "Rules that can be defined for auto-heal.",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Conditions that describe when to execute the auto-heal actions."
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions to be executed when a rule is triggered."
        }
      }
    },
    "AutoHealTriggers": {
      "description": "Triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "A rule based on total requests."
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "A rule based on private bytes.",
          "type": "integer"
        },
        "statusCodes": {
          "description": "A rule based on status codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          },
          "x-ms-identifiers": [
            "path"
          ]
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "A rule based on request execution time."
        },
        "slowRequestsWithPath": {
          "description": "A rule based on multiple Slow Requests Rule with path",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlowRequestsBasedTrigger"
          },
          "x-ms-identifiers": [
            "path"
          ]
        },
        "statusCodesRange": {
          "description": "A rule based on status codes ranges.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesRangeBasedTrigger"
          },
          "x-ms-identifiers": [
            "path"
          ]
        }
      }
    },
    "AzureStorageInfoValue": {
      "description": "Azure Files or Blob Storage access information value for dictionary storage.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of storage.",
          "enum": [
            "AzureFiles",
            "AzureBlob"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureStorageType",
            "modelAsString": false
          }
        },
        "accountName": {
          "description": "Name of the storage account.",
          "type": "string"
        },
        "shareName": {
          "description": "Name of the file share (container name, for Blob storage).",
          "type": "string"
        },
        "accessKey": {
          "description": "Access key for the storage account.",
          "type": "string",
          "x-ms-secret": true
        },
        "mountPath": {
          "description": "Path to mount the storage within the site's runtime environment.",
          "type": "string"
        },
        "state": {
          "description": "State of the storage account.",
          "enum": [
            "Ok",
            "InvalidCredentials",
            "InvalidShare",
            "NotValidated"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AzureStorageState",
            "modelAsString": false
          }
        },
        "protocol": {
          "description": "Mounting protocol to use for the storage account.",
          "enum": [
            "Smb",
            "Http",
            "Nfs"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureStorageProtocol",
            "modelAsString": true
          }
        }
      }
    },
    "Capability": {
      "description": "Describes the capabilities/features allowed for a specific SKU.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the SKU capability.",
          "type": "string"
        },
        "value": {
          "description": "Value of the SKU capability.",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the SKU capability.",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "description": "SSL certificate for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Certificate resource specific properties",
          "type": "object",
          "properties": {
            "password": {
              "description": "Certificate password.",
              "type": "string",
              "x-ms-secret": true
            },
            "friendlyName": {
              "description": "Friendly name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Host names the certificate applies to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pfxBlob": {
              "format": "byte",
              "description": "Pfx blob.",
              "type": "string"
            },
            "siteName": {
              "description": "App name.",
              "type": "string",
              "readOnly": true
            },
            "selfLink": {
              "description": "Self link.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "Certificate issuer.",
              "type": "string",
              "readOnly": true
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "valid": {
              "description": "Is the certificate valid?.",
              "type": "boolean",
              "readOnly": true
            },
            "cerBlob": {
              "format": "byte",
              "description": "Raw bytes of .cer file",
              "type": "string",
              "readOnly": true
            },
            "publicKeyHash": {
              "description": "Public key hash.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the certificate.",
              "readOnly": true
            },
            "keyVaultId": {
              "description": "Azure Key Vault Csm resource Id.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.KeyVault/vaults"
                  }
                ]
              }
            },
            "keyVaultSecretName": {
              "description": "Azure Key Vault secret name.",
              "type": "string"
            },
            "keyVaultSecretStatus": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Web/serverfarms"
                  }
                ]
              }
            },
            "canonicalName": {
              "description": "CNAME of the certificate to be issued via free certificate",
              "type": "string"
            },
            "domainValidationMethod": {
              "description": "Method of domain validation for free cert",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateCollection": {
      "description": "Collection of certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificatePatchResource": {
      "description": "ARM resource for a certificate.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CertificatePatchResource resource specific properties",
          "type": "object",
          "properties": {
            "password": {
              "description": "Certificate password.",
              "type": "string",
              "x-ms-mutability": [
                "read"
              ]
            },
            "friendlyName": {
              "description": "Friendly name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Host names the certificate applies to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pfxBlob": {
              "format": "byte",
              "description": "Pfx blob.",
              "type": "string"
            },
            "siteName": {
              "description": "App name.",
              "type": "string",
              "readOnly": true
            },
            "selfLink": {
              "description": "Self link.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "Certificate issuer.",
              "type": "string",
              "readOnly": true
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "valid": {
              "description": "Is the certificate valid?.",
              "type": "boolean",
              "readOnly": true
            },
            "cerBlob": {
              "format": "byte",
              "description": "Raw bytes of .cer file",
              "type": "string",
              "readOnly": true
            },
            "publicKeyHash": {
              "description": "Public key hash.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the certificate.",
              "readOnly": true
            },
            "keyVaultId": {
              "description": "Key Vault Csm resource Id.",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name.",
              "type": "string"
            },
            "keyVaultSecretStatus": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "canonicalName": {
              "description": "CNAME of the certificate to be issued via free certificate",
              "type": "string"
            },
            "domainValidationMethod": {
              "description": "Method of domain validation for free cert",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CipherSuites": {
      "description": "Describes valid TLS cipher suites.",
      "type": "object",
      "properties": {
        "suites": {
          "description": "List of TLS Cipher Suites that are supported by App Service.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CloningInfo": {
      "description": "Information needed for cloning operation.",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "format": "uuid",
          "description": "Correlation ID of cloning operation. This ID ties multiple cloning operations\ntogether to use the same snapshot.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "overwrite": {
          "description": "<code>true</code> to overwrite destination app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "<code>true</code> to clone source control from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource ID of the source app. App resource ID is of the form \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        },
        "sourceWebAppLocation": {
          "description": "Location of source app ex: West US or North Europe",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "App Service Environment.",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application setting overrides for cloned app. If specified, these settings override the settings cloned \nfrom source app. Otherwise, application settings from source app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "<code>true</code> to configure load balancing for source and destination app.",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.",
          "type": "string"
        }
      }
    },
    "ConnStringInfo": {
      "description": "Database connection string information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of connection string.",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string value.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "Container": {
      "description": "Container App container definition.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "$ref": "#/definitions/ContainerResources",
          "description": "Container resource requirements."
        }
      }
    },
    "ContainerResources": {
      "description": "Container App container resource requirements.",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5",
          "type": "number"
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\ncalls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportCredentials": {
          "description": "Gets or sets whether CORS requests with credentials are allowed. See \nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials\nfor more details.",
          "type": "boolean"
        }
      }
    },
    "CsmOperationCollection": {
      "description": "Collection of Azure resource manager operation metadata.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmOperationDescription"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CsmOperationDescription": {
      "description": "Description of an operation available for Microsoft.Web resource provider.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isDataAction": {
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/CsmOperationDisplay"
        },
        "origin": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/CsmOperationDescriptionProperties"
        }
      }
    },
    "CsmOperationDescriptionProperties": {
      "description": "Properties available for a Microsoft.Web resource provider operation.",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "CsmOperationDisplay": {
      "description": "Meta data about operation used for display in portal.",
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CsmUsageQuota": {
      "description": "Usage of the quota resource.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Units of measurement for the quota resource.",
          "type": "string"
        },
        "nextResetTime": {
          "format": "date-time",
          "description": "Next reset time for the resource counter.",
          "type": "string"
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value of the resource counter.",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "description": "The resource limit.",
          "type": "integer"
        },
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "Quota name."
        }
      }
    },
    "CsmUsageQuotaCollection": {
      "description": "Collection of CSM usage quotas.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmUsageQuota"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CustomDnsSuffixConfiguration": {
      "description": "Full view of the custom domain suffix configuration for ASEv3.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomDnsSuffixConfiguration resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "enum": [
                "Succeeded",
                "Failed",
                "Degraded",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CustomDnsSuffixProvisioningState",
                "modelAsString": false
              }
            },
            "provisioningDetails": {
              "type": "string",
              "readOnly": true
            },
            "dnsSuffix": {
              "description": "The default custom domain suffix to use for all sites deployed on the ASE.",
              "type": "string"
            },
            "certificateUrl": {
              "description": "The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.",
              "type": "string"
            },
            "keyVaultReferenceIdentity": {
              "description": "The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CustomScaleRule": {
      "description": "Container App container Custom scaling rule.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe custom scale rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        }
      }
    },
    "Dapr": {
      "description": "Container App Dapr configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Boolean indicating if the Dapr side car is enabled",
          "type": "boolean"
        },
        "appId": {
          "description": "Dapr application identifier",
          "type": "string"
        },
        "appPort": {
          "format": "int32",
          "description": "Port on which the Dapr side car",
          "type": "integer"
        },
        "components": {
          "description": "Collection of Dapr components",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaprComponent"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DaprComponent": {
      "description": "Dapr component configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "Component name",
          "type": "string"
        },
        "type": {
          "description": "Component type",
          "type": "string"
        },
        "version": {
          "description": "Component version",
          "type": "string"
        },
        "metadata": {
          "description": "Component metadata",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaprMetadata"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DaprMetadata": {
      "description": "Container App Dapr component metadata.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metadata property name.",
          "type": "string"
        },
        "value": {
          "description": "Metadata property value.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the metadata property value.",
          "type": "string"
        }
      }
    },
    "DataProviderMetadata": {
      "description": "Additional configuration for a data providers",
      "type": "object",
      "properties": {
        "providerName": {
          "type": "string"
        },
        "propertyBag": {
          "description": "Settings for the data provider",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,Object]"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "key"
          ]
        }
      }
    },
    "DataTableResponseColumn": {
      "description": "Column definition",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Name of the column",
          "type": "string"
        },
        "dataType": {
          "description": "Data type which looks like 'String' or 'Int32'.",
          "type": "string"
        },
        "columnType": {
          "description": "Column Type",
          "type": "string"
        }
      }
    },
    "DataTableResponseObject": {
      "description": "Data Table which defines columns and raw row values",
      "type": "object",
      "properties": {
        "tableName": {
          "description": "Name of the table",
          "type": "string"
        },
        "columns": {
          "description": "List of columns with data types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTableResponseColumn"
          },
          "x-ms-identifiers": [
            "columnName"
          ]
        },
        "rows": {
          "description": "Raw row values",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "DefaultErrorResponse": {
      "description": "App Service error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error model.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "items": {
                "description": "Detailed errors.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "x-ms-identifiers": []
            },
            "innererror": {
              "description": "More information to debug error.",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "DeletedSite": {
      "description": "A deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedSite resource specific properties",
          "type": "object",
          "properties": {
            "deletedSiteId": {
              "format": "int32",
              "description": "Numeric id for the deleted site",
              "type": "integer",
              "readOnly": true
            },
            "deletedTimestamp": {
              "description": "Time in UTC when the app was deleted.",
              "type": "string",
              "readOnly": true
            },
            "subscription": {
              "description": "Subscription containing the deleted site",
              "type": "string",
              "readOnly": true
            },
            "resourceGroup": {
              "description": "ResourceGroup that contained the deleted site",
              "type": "string",
              "readOnly": true
            },
            "deletedSiteName": {
              "description": "Name of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "slot": {
              "description": "Slot of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "kind": {
              "description": "Kind of site that was deleted",
              "type": "string",
              "readOnly": true
            },
            "geoRegionName": {
              "description": "Geo Region of the deleted site",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DetectorInfo": {
      "description": "Definition of Detector",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of detector",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of detector",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Short description of the detector and its purpose.",
          "type": "string",
          "readOnly": true
        },
        "author": {
          "description": "Author of the detector.",
          "type": "string",
          "readOnly": true
        },
        "category": {
          "description": "Problem category. This serves for organizing group for detectors.",
          "type": "string",
          "readOnly": true
        },
        "supportTopicList": {
          "description": "List of Support Topics for which this detector is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTopic"
          },
          "readOnly": true
        },
        "analysisType": {
          "description": "Analysis Types for which this detector should apply to.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "type": {
          "description": "Whether this detector is an Analysis Detector or not.",
          "enum": [
            "Detector",
            "Analysis",
            "CategoryOverview"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DetectorType",
            "modelAsString": false
          }
        },
        "score": {
          "format": "float",
          "description": "Defines score of a detector to power ML based matching.",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "DetectorResponse": {
      "description": "Class representing Response from Detector",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DetectorResponse resource specific properties",
          "type": "object",
          "properties": {
            "metadata": {
              "$ref": "#/definitions/DetectorInfo",
              "description": "metadata for the detector"
            },
            "dataset": {
              "description": "Data Set",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticData"
              },
              "x-ms-identifiers": []
            },
            "status": {
              "$ref": "#/definitions/Status",
              "description": "Indicates status of the most severe insight."
            },
            "dataProvidersMetadata": {
              "description": "Additional configuration for different data providers to be used by the UI",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataProviderMetadata"
              },
              "x-ms-identifiers": [
                "providerName"
              ]
            },
            "suggestedUtterances": {
              "$ref": "#/definitions/QueryUtterancesResults",
              "description": "Suggested utterances where the detector can be applicable."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DetectorResponseCollection": {
      "description": "Collection of detector responses",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticData": {
      "description": "Set of data with rendering instructions",
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/DataTableResponseObject",
          "description": "Data in table form"
        },
        "renderingProperties": {
          "$ref": "#/definitions/Rendering",
          "description": "Properties that describe how the table should be rendered"
        }
      }
    },
    "Dimension": {
      "description": "Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app, \nwhere instance name is dimension of the metric HTTP request",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "internalName": {
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "type": "boolean"
        }
      }
    },
    "EnvironmentVar": {
      "description": "Container App container environment variable.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Environment variable name.",
          "type": "string"
        },
        "value": {
          "description": "Non-secret environment variable value.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the environment variable value.",
          "type": "string"
        }
      }
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "extendedCode": {
          "description": "Type of error.",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          },
          "x-ms-identifiers": []
        },
        "details": {
          "description": "Error Details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          },
          "x-ms-identifiers": []
        },
        "target": {
          "description": "The error target.",
          "type": "string"
        },
        "code": {
          "description": "Basic error code.",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error.",
          "type": "string"
        }
      }
    },
    "Experiments": {
      "description": "Routing rules in production experiments.",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of ramp-up rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ExtendedLocation": {
      "description": "Extended Location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of extended location.",
          "type": "string"
        },
        "type": {
          "description": "Type of extended location.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \nFor example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "SSL-enabled hostname.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type.",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL certificate thumbprint.",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set to <code>true</code> to update existing hostname.",
          "type": "boolean"
        },
        "hostType": {
          "description": "Indicates whether the hostname is a standard or repository hostname.",
          "enum": [
            "Standard",
            "Repository"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostType",
            "modelAsString": false
          }
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for an App Service Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the App Service Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the App Service Environment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpScaleRule": {
      "description": "Container App container Custom scaling rule.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata properties to describe http scale rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "type": "object",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "A domain specific resource identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "type": "object",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string",
              "x-ms-client-name": "value"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "IdentifierCollection": {
      "description": "Collection of identifiers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpSecurityRestriction": {
      "description": "IP security restriction on an app.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address the security restriction is valid for.\nIt can be in form of pure ipv4 address (required SubnetMask property) or\nCIDR notation such as ipv4/mask (leading bit match). For CIDR,\nSubnetMask property must not be specified.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask for the range of IP addresses the restriction is valid for.",
          "type": "string"
        },
        "vnetSubnetResourceId": {
          "description": "Virtual network resource id",
          "type": "string"
        },
        "vnetTrafficTag": {
          "format": "int32",
          "description": "(internal) Vnet traffic tag",
          "type": "integer"
        },
        "subnetTrafficTag": {
          "format": "int32",
          "description": "(internal) Subnet traffic tag",
          "type": "integer"
        },
        "action": {
          "description": "Allow or Deny access for this IP range.",
          "type": "string"
        },
        "tag": {
          "description": "Defines what this IP filter will be used for. This is to support IP filtering on proxies.",
          "enum": [
            "Default",
            "XffProxy",
            "ServiceTag"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IpFilterTag",
            "modelAsString": true
          }
        },
        "priority": {
          "format": "int32",
          "description": "Priority of IP restriction rule.",
          "type": "integer"
        },
        "name": {
          "description": "IP restriction rule name.",
          "type": "string"
        },
        "description": {
          "description": "IP restriction rule description.",
          "type": "string"
        },
        "headers": {
          "description": "IP restriction rule headers.\nX-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples). \nThe matching logic is ..\n- If the property is null or empty (default), all hosts(or lack of) are allowed.\n- A value is compared using ordinal-ignore-case (excluding port number).\n- Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com\n but not the root domain contoso.com or multi-level foo.bar.contoso.com\n- Unicode host names are allowed but are converted to Punycode for matching.\n\nX-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).\nThe matching logic is ..\n- If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.\n- If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.\n\nX-Azure-FDID and X-FD-HealthProbe.\nThe matching logic is exact match.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "KeyValuePair[String,Object]": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "KubeEnvironmentProfile": {
      "description": "Specification for a Kubernetes Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the Kubernetes Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Kubernetes Environment.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the Kubernetes Environment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LocalizableString": {
      "description": "Localizable string object containing the name and a localized value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Non-localized name.",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name.",
          "type": "string"
        }
      }
    },
    "LogSpecification": {
      "description": "Log Definition of a single resource metric.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "blobDuration": {
          "type": "string"
        },
        "logFilterPattern": {
          "type": "string"
        }
      }
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "tenantId": {
          "description": "Tenant of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "principalId": {
          "description": "Principal Id of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "description": "The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/userAssignedIdentity"
          }
        }
      }
    },
    "MetricAvailability": {
      "description": "Retention policy of a resource metric.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "type": "string"
        },
        "blobDuration": {
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Definition of a single resource metric.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayDescription": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "aggregationType": {
          "type": "string"
        },
        "supportsInstanceLevelAggregation": {
          "type": "boolean"
        },
        "enableRegionalMdmAccount": {
          "type": "boolean"
        },
        "sourceMdmAccount": {
          "type": "string"
        },
        "sourceMdmNamespace": {
          "type": "string"
        },
        "metricFilterPattern": {
          "type": "string"
        },
        "fillGapWithZero": {
          "type": "boolean"
        },
        "isInternal": {
          "type": "boolean"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "category": {
          "type": "string"
        },
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAvailability"
          },
          "x-ms-identifiers": []
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedAggregationTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NameIdentifier": {
      "description": "Identifies an object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the object.",
          "type": "string"
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionCollection": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemotePrivateEndpointConnectionARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkConnectionApprovalRequest": {
      "description": "A request to approve or reject a private endpoint connection",
      "type": "object",
      "properties": {
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkConnectionState"
        }
      }
    },
    "PrivateLinkConnectionApprovalRequestResource": {
      "description": "Private Endpoint Connection Approval ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkConnectionApprovalRequest",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateLinkConnectionState": {
      "description": "The state of a private link connection",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of a private link connection",
          "type": "string"
        },
        "description": {
          "description": "Description of a private link connection",
          "type": "string"
        },
        "actionsRequired": {
          "description": "ActionsRequired for a private link connection",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "required": [
        "id",
        "name",
        "type",
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "description": "Name of a private link resource",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of a private link resource"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "GroupId of a private link resource",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "RequiredMembers of a private link resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "RequiredZoneNames of a private link resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourcesWrapper": {
      "description": "Wrapper for a collection of private link resources",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "type": "object",
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\nTags can consist of alphanumeric characters and the following:\n'_', '@', '#', '.', ':', '-'. \nValidation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "QueryUtterancesResult": {
      "description": "Result for utterances query.",
      "type": "object",
      "properties": {
        "sampleUtterance": {
          "$ref": "#/definitions/SampleUtterance",
          "description": "A sample utterance."
        },
        "score": {
          "format": "float",
          "description": "Score of a sample utterance.",
          "type": "number"
        }
      }
    },
    "QueryUtterancesResults": {
      "description": "Suggested utterances where the detector can be applicable",
      "type": "object",
      "properties": {
        "query": {
          "description": "Search Query.",
          "type": "string"
        },
        "results": {
          "description": "Array of utterance results for search query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryUtterancesResult"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "QueueScaleRule": {
      "description": "Container App container Azure Queue based scaling rule.",
      "type": "object",
      "properties": {
        "queueName": {
          "description": "Queue name.",
          "type": "string"
        },
        "queueLength": {
          "format": "int32",
          "description": "Queue length.",
          "type": "integer"
        },
        "auth": {
          "description": "Authentication secrets for the queue scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to <code>ActionHostName</code>.",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \\n<code>MinReroutePercentage</code> or \n<code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\\nCustom decision algorithm \ncan be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "Specifies interval in minutes to reevaluate ReroutePercentage.",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified.",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "RemotePrivateEndpointConnectionARMResource": {
      "description": "Remote Private Endpoint Connection ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RemotePrivateEndpointConnectionARMResource resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true
            },
            "privateEndpoint": {
              "$ref": "#/definitions/ArmIdWrapper",
              "description": "PrivateEndpoint of a remote private endpoint connection"
            },
            "privateLinkServiceConnectionState": {
              "$ref": "#/definitions/PrivateLinkConnectionState"
            },
            "ipAddresses": {
              "description": "Private IPAddresses mapped to the remote private endpoint",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Rendering": {
      "description": "Instructions for rendering the data",
      "type": "object",
      "properties": {
        "type": {
          "description": "Rendering Type",
          "enum": [
            "NoGraph",
            "Table",
            "TimeSeries",
            "TimeSeriesPerInstance",
            "PieChart",
            "DataSummary",
            "Email",
            "Insights",
            "DynamicInsight",
            "Markdown",
            "Detector",
            "DropDown",
            "Card",
            "Solution",
            "Guage",
            "Form",
            "ChangeSets",
            "ChangeAnalysisOnboarding",
            "ChangesView",
            "AppInsight",
            "DependencyGraph",
            "DownTime",
            "SummaryCard",
            "SearchComponent",
            "AppInsightEnablement"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RenderingType",
            "modelAsString": false
          }
        },
        "title": {
          "description": "Title of data",
          "type": "string"
        },
        "description": {
          "description": "Description of the data that will help it be interpreted",
          "type": "string"
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "Trigger based on total requests.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SampleUtterance": {
      "description": "Sample utterance.",
      "type": "object",
      "properties": {
        "text": {
          "description": "Text attribute of sample utterance.",
          "type": "string"
        },
        "links": {
          "description": "Links attribute of sample utterance.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "qid": {
          "description": "Question id of sample utterance (for stackoverflow questions titles).",
          "type": "string"
        }
      }
    },
    "Scale": {
      "description": "Container App scaling configurations.",
      "type": "object",
      "properties": {
        "minReplicas": {
          "format": "int32",
          "description": "Optional. Minimum number of container replicas.",
          "type": "integer"
        },
        "maxReplicas": {
          "format": "int32",
          "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
          "type": "integer"
        },
        "rules": {
          "description": "Scaling rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ScaleRule": {
      "description": "Container App container scaling rule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "azureQueue": {
          "$ref": "#/definitions/QueueScaleRule",
          "description": "Azure Queue based scaling."
        },
        "custom": {
          "$ref": "#/definitions/CustomScaleRule",
          "description": "Custom scale rule."
        },
        "http": {
          "$ref": "#/definitions/HttpScaleRule",
          "description": "HTTP requests based scaling."
        }
      }
    },
    "ScaleRuleAuth": {
      "description": "Auth Secrets for Container App Scale Rule",
      "type": "object",
      "properties": {
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the auth params.",
          "type": "string"
        },
        "triggerParameter": {
          "description": "Trigger Parameter that uses the secret",
          "type": "string"
        }
      }
    },
    "ServiceSpecification": {
      "description": "Resource metrics service provided by Microsoft.Insights resource provider.",
      "type": "object",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "logSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Site": {
      "description": "A web app, a mobile app backend, or an API app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Site resource specific properties",
          "type": "object",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "dnsConfiguration": {
              "$ref": "#/definitions/SiteDnsConfig",
              "description": "Property to configure various DNS related settings for a site."
            },
            "outboundVnetRouting": {
              "$ref": "#/definitions/OutboundVnetRouting",
              "description": "Property to configure various outbound traffic routing options over virtual network for a site"
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of an App Service app. This property is not returned in response to normal create and read requests since it may contain sensitive information.",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "functionAppConfig": {
              "$ref": "#/definitions/FunctionAppConfig",
              "description": "Configuration specific of the Azure Function app."
            },
            "daprConfig": {
              "$ref": "#/definitions/DaprConfig",
              "description": "Dapr configuration of the app."
            },
            "workloadProfileName": {
              "description": "Workload profile name for function app to execute on.",
              "type": "string"
            },
            "resourceConfig": {
              "$ref": "#/definitions/ResourceConfig",
              "description": "Function app resource requirements."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientAffinityPartitioningEnabled": {
              "description": "<code>true</code> to enable client affinity partitioning using CHIPS cookies, this will add the <code>partitioned</code> property to the affinity cookies; <code>false</code> to stop sending partitioned affinity cookies. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientAffinityProxyEnabled": {
              "description": "<code>true</code> to override client affinity cookie domain with X-Forwarded-Host request header. <code>false</code> to use default domain. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertMode": {
              "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
              "enum": [
                "Required",
                "Optional",
                "OptionalInteractiveUser"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClientCertMode",
                "modelAsString": false
              }
            },
            "clientCertExclusionPaths": {
              "description": "client certificate authentication comma-separated exclusion paths",
              "type": "string"
            },
            "ipMode": {
              "description": "Specifies the IP mode of the app.",
              "enum": [
                "IPv4",
                "IPv6",
                "IPv4AndIPv6"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IPMode",
                "modelAsString": false
              }
            },
            "endToEndEncryptionEnabled": {
              "description": "Whether to use end to end encryption between the FrontEnd and the Worker",
              "type": "boolean"
            },
            "sshEnabled": {
              "description": "Whether to enable ssh access.",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "customDomainVerificationId": {
              "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
              "type": "string"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "possibleOutboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\nThis only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
              "type": "boolean"
            },
            "redundancyMode": {
              "description": "Site redundancy mode",
              "enum": [
                "None",
                "Manual",
                "Failover",
                "ActiveActive",
                "GeoRedundant"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": false
              }
            },
            "inProgressOperationId": {
              "format": "uuid",
              "description": "Specifies an operation id if this site has a pending operation.",
              "type": "string",
              "readOnly": true,
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "publicNetworkAccess": {
              "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
              "type": "string"
            },
            "storageAccountRequired": {
              "description": "Checks if Customer provided storage account is required",
              "type": "boolean"
            },
            "keyVaultReferenceIdentity": {
              "description": "Identity to use for Key Vault Reference authentication.",
              "type": "string"
            },
            "autoGeneratedDomainNameLabelScope": {
              "description": "Specifies the scope of uniqueness for the default hostname during resource creation",
              "enum": [
                "TenantReuse",
                "SubscriptionReuse",
                "ResourceGroupReuse",
                "NoReuse"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "autoGeneratedDomainNameLabelScope",
                "modelAsString": false
              }
            },
            "virtualNetworkSubnetId": {
              "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
              "type": "string"
            },
            "managedEnvironmentId": {
              "description": "Azure Resource Manager ID of the customer's selected Managed Environment on which to host this app. This must be of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}",
              "type": "string"
            },
            "sku": {
              "description": "Current SKU of application based on associated App Service Plan. Some valid SKU values are Free, Shared, Basic, Dynamic, FlexConsumption, Standard, Premium, PremiumV2, PremiumV3, Isolated, IsolatedV2",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        }
      }
    },
    "SiteConfig": {
      "description": "Configuration of an App Service app.",
      "type": "object",
      "properties": {
        "numberOfWorkers": {
          "format": "int32",
          "description": "Number of workers.",
          "type": "integer"
        },
        "defaultDocuments": {
          "description": "Default documents.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "netFrameworkVersion": {
          "description": ".NET Framework version.",
          "default": "v4.6",
          "type": "string"
        },
        "phpVersion": {
          "description": "Version of PHP.",
          "type": "string"
        },
        "pythonVersion": {
          "description": "Version of Python.",
          "type": "string"
        },
        "nodeVersion": {
          "description": "Version of Node.js.",
          "type": "string"
        },
        "powerShellVersion": {
          "description": "Version of PowerShell.",
          "type": "string"
        },
        "linuxFxVersion": {
          "description": "Linux App Framework and version",
          "type": "string"
        },
        "windowsFxVersion": {
          "description": "Xenon App Framework and version",
          "type": "string"
        },
        "requestTracingEnabled": {
          "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "requestTracingExpirationTime": {
          "format": "date-time",
          "description": "Request tracing expiration time.",
          "type": "string"
        },
        "remoteDebuggingEnabled": {
          "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "remoteDebuggingVersion": {
          "description": "Remote debugging version.",
          "type": "string"
        },
        "httpLoggingEnabled": {
          "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "acrUseManagedIdentityCreds": {
          "description": "Flag to use Managed Identity Creds for ACR pull",
          "type": "boolean"
        },
        "acrUserManagedIdentityID": {
          "description": "If using user managed identity, the user managed identity ClientId",
          "type": "string"
        },
        "logsDirectorySizeLimit": {
          "format": "int32",
          "description": "HTTP logs directory size limit.",
          "type": "integer"
        },
        "detailedErrorLoggingEnabled": {
          "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "publishingUsername": {
          "description": "Publishing user name.",
          "type": "string"
        },
        "appSettings": {
          "description": "Application settings. This property is not returned in response to normal create and read requests since it may contain sensitive information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "metadata": {
          "description": "Application metadata. This property cannot be retrieved, since it may contain secrets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "connectionStrings": {
          "description": "Connection strings. This property is not returned in response to normal create and read requests since it may contain sensitive information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnStringInfo"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "machineKey": {
          "$ref": "#/definitions/SiteMachineKey",
          "description": "Site MachineKey.",
          "readOnly": true
        },
        "handlerMappings": {
          "description": "Handler mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlerMapping"
          },
          "x-ms-identifiers": [
            "extension"
          ]
        },
        "documentRoot": {
          "description": "Document root.",
          "type": "string"
        },
        "scmType": {
          "description": "SCM type.",
          "enum": [
            "None",
            "Dropbox",
            "Tfs",
            "LocalGit",
            "GitHub",
            "CodePlexGit",
            "CodePlexHg",
            "BitbucketGit",
            "BitbucketHg",
            "ExternalGit",
            "ExternalHg",
            "OneDrive",
            "VSO",
            "VSTSRM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScmType",
            "modelAsString": true
          }
        },
        "use32BitWorkerProcess": {
          "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "webSocketsEnabled": {
          "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "alwaysOn": {
          "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "javaVersion": {
          "description": "Java version.",
          "type": "string"
        },
        "javaContainer": {
          "description": "Java container.",
          "type": "string"
        },
        "javaContainerVersion": {
          "description": "Java container version.",
          "type": "string"
        },
        "appCommandLine": {
          "description": "App command line to launch.",
          "type": "string"
        },
        "managedPipelineMode": {
          "description": "Managed pipeline mode.",
          "enum": [
            "Integrated",
            "Classic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedPipelineMode",
            "modelAsString": false
          }
        },
        "virtualApplications": {
          "description": "Virtual applications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplication"
          },
          "x-ms-identifiers": [
            "virtualPath"
          ]
        },
        "loadBalancing": {
          "description": "Site load balancing.",
          "enum": [
            "WeightedRoundRobin",
            "LeastRequests",
            "LeastResponseTime",
            "WeightedTotalTraffic",
            "RequestHash",
            "PerSiteRoundRobin",
            "LeastRequestsWithTieBreaker"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SiteLoadBalancing",
            "modelAsString": false
          }
        },
        "experiments": {
          "$ref": "#/definitions/Experiments",
          "description": "This is work around for polymorphic types."
        },
        "limits": {
          "$ref": "#/definitions/SiteLimits",
          "description": "Site limits."
        },
        "autoHealEnabled": {
          "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "autoHealRules": {
          "$ref": "#/definitions/AutoHealRules",
          "description": "Auto Heal rules."
        },
        "tracingOptions": {
          "description": "Tracing options.",
          "type": "string"
        },
        "vnetName": {
          "description": "Virtual Network name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "vnetRouteAllEnabled": {
          "description": "Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.",
          "type": "boolean"
        },
        "vnetPrivatePortsCount": {
          "format": "int32",
          "description": "The number of private ports assigned to this app. These will be assigned dynamically on runtime.",
          "type": "integer"
        },
        "cors": {
          "$ref": "#/definitions/CorsSettings",
          "description": "Cross-Origin Resource Sharing (CORS) settings."
        },
        "push": {
          "$ref": "#/definitions/PushSettings",
          "description": "Push endpoint settings."
        },
        "apiDefinition": {
          "$ref": "#/definitions/ApiDefinitionInfo",
          "description": "Information about the formal API definition for the app."
        },
        "apiManagementConfig": {
          "$ref": "#/definitions/ApiManagementConfig",
          "description": "Azure API management settings linked to the app."
        },
        "autoSwapSlotName": {
          "description": "Auto-swap slot name.",
          "type": "string"
        },
        "localMySqlEnabled": {
          "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
          "default": false,
          "type": "boolean"
        },
        "managedServiceIdentityId": {
          "format": "int32",
          "description": "Managed Service Identity Id",
          "type": "integer"
        },
        "xManagedServiceIdentityId": {
          "format": "int32",
          "description": "Explicit Managed Service Identity Id",
          "type": "integer"
        },
        "keyVaultReferenceIdentity": {
          "description": "Identity to use for Key Vault Reference authentication.",
          "type": "string"
        },
        "ipSecurityRestrictions": {
          "description": "IP security restrictions for main.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestriction"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "ipSecurityRestrictionsDefaultAction": {
          "description": "Default action for main access restriction if no rules are matched.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": true
          }
        },
        "scmIpSecurityRestrictions": {
          "description": "IP security restrictions for scm.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestriction"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "scmIpSecurityRestrictionsDefaultAction": {
          "description": "Default action for scm access restriction if no rules are matched.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": true
          }
        },
        "scmIpSecurityRestrictionsUseMain": {
          "description": "IP security restrictions for scm to use main.",
          "type": "boolean"
        },
        "http20Enabled": {
          "description": "Http20Enabled: configures a web site to allow clients to connect over http2.0",
          "default": true,
          "type": "boolean"
        },
        "http20ProxyFlag": {
          "description": "Http20ProxyFlag: Configures a website to allow http2.0 to pass be proxied all the way to the app. 0 = disabled, 1 = pass through all http2 traffic, 2 = pass through gRPC only.",
          "default": 0,
          "type": "integer",
          "format": "int32"
        },
        "minTlsVersion": {
          "description": "MinTlsVersion: configures the minimum version of TLS required for SSL requests",
          "enum": [
            "1.0",
            "1.1",
            "1.2",
            "1.3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportedTlsVersions",
            "modelAsString": true
          }
        },
        "minTlsCipherSuite": {
          "description": "The minimum strength TLS cipher suite allowed for an application",
          "enum": [
            "TLS_AES_256_GCM_SHA384",
            "TLS_AES_128_GCM_SHA256",
            "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
            "TLS_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_256_CBC_SHA256",
            "TLS_RSA_WITH_AES_128_CBC_SHA256",
            "TLS_RSA_WITH_AES_256_CBC_SHA",
            "TLS_RSA_WITH_AES_128_CBC_SHA"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TlsCipherSuites",
            "modelAsString": true
          }
        },
        "scmMinTlsVersion": {
          "description": "ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site",
          "enum": [
            "1.0",
            "1.1",
            "1.2",
            "1.3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportedTlsVersions",
            "modelAsString": true
          }
        },
        "ftpsState": {
          "description": "State of FTP / FTPS service",
          "enum": [
            "AllAllowed",
            "FtpsOnly",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FtpsState",
            "modelAsString": true
          }
        },
        "preWarmedInstanceCount": {
          "format": "int32",
          "description": "Number of preWarmed instances.\nThis setting only applies to the Consumption and Elastic Plans",
          "maximum": 10,
          "minimum": 0,
          "type": "integer"
        },
        "functionAppScaleLimit": {
          "format": "int32",
          "description": "Maximum number of workers that a site can scale out to.\nThis setting only applies to the Consumption and Elastic Premium Plans",
          "minimum": 0,
          "type": "integer"
        },
        "elasticWebAppScaleLimit": {
          "format": "int32",
          "description": "Maximum number of workers that a site can scale out to.\nThis setting only applies to apps in plans where ElasticScaleEnabled is <code>true</code>",
          "minimum": 0,
          "type": "integer"
        },
        "healthCheckPath": {
          "description": "Health check path",
          "type": "string"
        },
        "functionsRuntimeScaleMonitoringEnabled": {
          "description": "Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,\nthe ScaleController will not monitor event sources directly, but will instead call to the\nruntime to get scale status.",
          "type": "boolean"
        },
        "websiteTimeZone": {
          "description": "Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones",
          "type": "string"
        },
        "minimumElasticInstanceCount": {
          "format": "int32",
          "description": "Number of minimum instance count for a site\nThis setting only applies to the Elastic Plans",
          "maximum": 20,
          "minimum": 0,
          "type": "integer"
        },
        "azureStorageAccounts": {
          "description": "List of Azure Storage Accounts.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureStorageInfoValue"
          }
        },
        "publicNetworkAccess": {
          "description": "Property to allow or block all public traffic.",
          "type": "string"
        }
      }
    },
    "FunctionsDeployment": {
      "description": "Configuration section for the function app deployment.",
      "type": "object",
      "properties": {
        "storage": {
          "description": "Storage for deployed package used by the function app.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Property to select Azure Storage type. Available options: blobContainer.",
              "type": "string",
              "enum": [
                "blobContainer"
              ],
              "x-ms-enum": {
                "name": "FunctionsDeploymentStorageType",
                "modelAsString": true
              }
            },
            "value": {
              "description": "Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://<storageAccountName>.blob.core.windows.net/<containerName>.",
              "type": "string",
              "format": "uri"
            },
            "authentication": {
              "description": "Authentication method to access the storage account for deployment.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Property to select authentication type to access the selected storage account. Available options: SystemAssignedIdentity, UserAssignedIdentity, StorageAccountConnectionString.",
                  "type": "string",
                  "enum": [
                    "SystemAssignedIdentity",
                    "UserAssignedIdentity",
                    "StorageAccountConnectionString"
                  ],
                  "x-ms-enum": {
                    "name": "AuthenticationType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentityResourceId": {
                  "description": "Use this property for UserAssignedIdentity. Set the resource ID of the identity. Do not set a value for this property when using other authentication type.",
                  "type": "string"
                },
                "storageAccountConnectionStringName": {
                  "description": "Use this property for StorageAccountConnectionString. Set the name of the app setting that has the storage account connection string. Do not set a value for this property when using other authentication type.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "FunctionsAlwaysReadyConfig": {
      "description": "Sets the number of 'Always Ready' instances for a function group or a specific function.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Either a function group or a function name is required. For additional information see https://aka.ms/flexconsumption/alwaysready."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the number of 'Always Ready' instances for a given function group or a specific function. For additional information see https://aka.ms/flexconsumption/alwaysready."
        }
      }
    },
    "FunctionsScaleAndConcurrency": {
      "description": "Scale and concurrency settings for the function app.",
      "type": "object",
      "properties": {
        "alwaysReady": {
          "description": "'Always Ready' configuration for the function app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionsAlwaysReadyConfig"
          }
        },
        "maximumInstanceCount": {
          "description": "The maximum number of instances for the function app.",
          "type": "integer",
          "format": "int32"
        },
        "instanceMemoryMB": {
          "description": "Set the amount of memory allocated to each instance of the function app in MB. CPU and network bandwidth are allocated proportionally.",
          "type": "integer",
          "format": "int32"
        },
        "triggers": {
          "type": "object",
          "description": "Scale and concurrency settings for the function app triggers.",
          "properties": {
            "http": {
              "type": "object",
              "description": "Scale and concurrency settings for the HTTP trigger.",
              "properties": {
                "perInstanceConcurrency": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of concurrent HTTP trigger invocations per instance."
                }
              }
            }
          }
        }
      }
    },
    "FunctionsRuntime": {
      "description": "Function app runtime name and version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Function app runtime name. Available options: dotnet-isolated, node, java, powershell, python, custom",
          "type": "string",
          "enum": [
            "dotnet-isolated",
            "node",
            "java",
            "powershell",
            "python",
            "custom"
          ],
          "x-ms-enum": {
            "name": "RuntimeName",
            "modelAsString": true
          }
        },
        "version": {
          "description": "Function app runtime version. Example: 8 (for dotnet-isolated)",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "FunctionAppConfig": {
      "description": "Function app configuration.",
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/FunctionsDeployment",
          "description": "Function app deployment configuration."
        },
        "runtime": {
          "$ref": "#/definitions/FunctionsRuntime",
          "description": "Function app runtime settings."
        },
        "scaleAndConcurrency": {
          "$ref": "#/definitions/FunctionsScaleAndConcurrency",
          "description": "Function app scale and concurrency settings."
        }
      }
    },
    "DaprConfig": {
      "description": "App Dapr configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Boolean indicating if the Dapr side car is enabled",
          "type": "boolean",
          "default": false
        },
        "appId": {
          "description": "Dapr application identifier",
          "type": "string"
        },
        "appPort": {
          "format": "int32",
          "description": "Tells Dapr which port your application is listening on",
          "type": "integer"
        },
        "httpReadBufferSize": {
          "type": "integer",
          "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
          "format": "int32"
        },
        "httpMaxRequestSize": {
          "type": "integer",
          "description": "Increasing max size of request body http servers parameter in MB to handle uploading of big files. Default is 4 MB.",
          "format": "int32"
        },
        "logLevel": {
          "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
          "enum": [
            "info",
            "debug",
            "warn",
            "error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "daprLogLevel",
            "modelAsString": true
          }
        },
        "enableApiLogging": {
          "description": "Enables API logging for the Dapr sidecar",
          "type": "boolean"
        }
      }
    },
    "ResourceConfig": {
      "description": "Function app resource requirements.",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5",
          "type": "number"
        },
        "memory": {
          "description": "Required memory, e.g. \"1Gi\"",
          "type": "string"
        }
      }
    },
    "SiteDnsConfig": {
      "type": "object",
      "properties": {
        "dnsServers": {
          "description": "List of custom DNS servers to be used by an app for lookups. Maximum 5 dns servers can be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsAltServer": {
          "description": "Alternate DNS server to be used by apps. This property replicates the WEBSITE_DNS_ALT_SERVER app setting.",
          "type": "string"
        },
        "dnsRetryAttemptTimeout": {
          "format": "int32",
          "description": "Timeout for a single dns lookup in seconds. Allowed range: 1-30. Default is 3.",
          "type": "integer"
        },
        "dnsRetryAttemptCount": {
          "format": "int32",
          "description": "Total number of retries for dns lookup. Allowed range: 1-5. Default is 3.",
          "type": "integer"
        },
        "dnsMaxCacheTimeout": {
          "format": "int32",
          "description": "Custom time for DNS to be cached in seconds. Allowed range: 0-60. Default is 30 seconds. 0 means caching disabled.",
          "type": "integer"
        },
        "dnsLegacySortOrder": {
          "description": "Indicates that sites using Virtual network custom DNS servers are still sorting the list of DNS servers. Read-Only.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "OutboundVnetRouting": {
      "description": "Outbound traffic options over virtual network.",
      "type": "object",
      "properties": {
        "allTraffic": {
          "description": "Enables all other routing options defined in OutboundVnetRouting if this setting is set to true.",
          "type": "boolean"
        },
        "applicationTraffic": {
          "description": "This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied. Previously called VnetRouteAllEnabled.",
          "type": "boolean"
        },
        "contentShareTraffic": {
          "description": "Enables accessing content over virtual network. Previously called VnetContentShareEnabled",
          "type": "boolean"
        },
        "imagePullTraffic": {
          "description": "Enables pulling image over Virtual Network. Previously called VnetImagePullEnabled.",
          "type": "boolean"
        },
        "backupRestoreTraffic": {
          "description": "Enables Backup and Restore operations over virtual network. Previously called VnetBackupRestoreEnabled",
          "type": "boolean"
        }
      }
    },
    "SiteLimits": {
      "description": "Metric limits set on an app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage.",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB.",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB.",
          "type": "integer"
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of an app.",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKey validation.",
          "type": "string"
        },
        "validationKey": {
          "description": "Validation key.",
          "type": "string"
        },
        "decryption": {
          "description": "Algorithm used for decryption.",
          "type": "string"
        },
        "decryptionKey": {
          "description": "Decryption key.",
          "type": "string"
        }
      }
    },
    "SkuCapacity": {
      "description": "Description of the App Service plan scale options.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "elasticMaximum": {
          "format": "int32",
          "description": "Maximum number of Elastic workers for this App Service plan SKU.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for an App Service plan.",
          "type": "string"
        }
      }
    },
    "SkuDescription": {
      "description": "Description of a SKU for a scalable resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Service tier of the resource SKU.",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource SKU.",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource SKU.",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Current number of instances assigned to the resource.",
          "type": "integer"
        },
        "skuCapacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        },
        "locations": {
          "description": "Locations of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SlotSwapStatus": {
      "description": "The status of the last successful slot swap operation.",
      "type": "object",
      "properties": {
        "timestampUtc": {
          "format": "date-time",
          "description": "The time the last successful slot swap completed.",
          "type": "string",
          "readOnly": true
        },
        "sourceSlotName": {
          "description": "The source slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        },
        "destinationSlotName": {
          "description": "The destination slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "Trigger based on request execution time.",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "Time taken.",
          "type": "string"
        },
        "path": {
          "description": "Request Path.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "type": "object",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Status": {
      "description": "Identify the status of the most severe insight generated by the detector.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Descriptive message.",
          "type": "string"
        },
        "statusId": {
          "description": "Level of the most severe insight generated by the detector.",
          "enum": [
            "Critical",
            "Warning",
            "Info",
            "Success",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InsightStatus",
            "modelAsString": false
          }
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "Trigger based on status code.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "Request Sub Status.",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code.",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        },
        "path": {
          "description": "Request Path",
          "type": "string"
        }
      }
    },
    "StatusCodesRangeBasedTrigger": {
      "description": "Trigger based on range of status codes.",
      "type": "object",
      "properties": {
        "statusCodes": {
          "description": "HTTP status code.",
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SupportTopic": {
      "description": "Defines a unique Support Topic",
      "type": "object",
      "properties": {
        "id": {
          "description": "Support Topic Id",
          "type": "string",
          "readOnly": true
        },
        "pesId": {
          "description": "Unique resource Id",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Template": {
      "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
      "type": "object",
      "properties": {
        "revisionSuffix": {
          "description": "User friendly suffix that is appended to the revision name",
          "type": "string"
        },
        "containers": {
          "description": "List of container definitions for the Container App.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "scale": {
          "$ref": "#/definitions/Scale",
          "description": "Scaling properties for the Container App."
        },
        "dapr": {
          "$ref": "#/definitions/Dapr",
          "description": "Dapr configuration for the Container App."
        }
      }
    },
    "User": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "type": "object",
          "properties": {
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            },
            "scmUri": {
              "description": "Url of SCM site.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application in an app.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "<code>true</code> if preloading is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual directories for virtual application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          },
          "x-ms-identifiers": [
            "virtualPath"
          ]
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "Specification for using a Virtual Network.",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the Virtual Network.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "Subnet within the Virtual Network.",
          "type": "string"
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "type": "object",
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "properties": {
        "vnetResourceId": {
          "description": "The Virtual Network's resource ID.",
          "type": "string"
        },
        "certThumbprint": {
          "description": "The client certificate thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "certBlob": {
          "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
          "type": "string"
        },
        "routes": {
          "description": "The routes that this Virtual Network connection uses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnetRoute"
          },
          "readOnly": true
        },
        "resyncRequired": {
          "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "dnsServers": {
          "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
          "type": "string"
        },
        "isSwift": {
          "description": "Flag that is used to denote if this is VNET injection",
          "type": "boolean"
        }
      }
    },
    "VnetInfoResource": {
      "description": "Virtual Network information ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VnetInfo",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "type": "object",
          "properties": {
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebAppCollection": {
      "description": "Collection of App Service apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "userAssignedIdentity": {
      "description": "User Assigned identity.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppserviceGithubToken": {
      "description": "Github access token for Appservice CLI github integration.",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Github access token for Appservice CLI github integration",
          "type": "string"
        },
        "scope": {
          "description": "Scope of the github access token",
          "type": "string"
        },
        "tokenType": {
          "description": "token type",
          "type": "string"
        },
        "gotToken": {
          "description": "True if valid github token received, False otherwise",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message if unable to get token",
          "type": "string"
        }
      }
    },
    "AppserviceGithubTokenRequest": {
      "description": "Appservice Github token request content.",
      "required": [
        "code",
        "state"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Code string to exchange for Github Access token",
          "type": "string"
        },
        "state": {
          "description": "State string used for verification.",
          "type": "string"
        }
      }
    },
    "BillingMeter": {
      "description": "App Service billing entity that contains information about meter which the Azure billing system utilizes to charge users for services.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BillingMeter resource specific properties",
          "type": "object",
          "properties": {
            "meterId": {
              "description": "Meter GUID onboarded in Commerce",
              "type": "string"
            },
            "billingLocation": {
              "description": "Azure Location of billable resource",
              "type": "string"
            },
            "shortName": {
              "description": "Short Name from App Service Azure pricing Page",
              "type": "string"
            },
            "friendlyName": {
              "description": "Friendly name of the meter",
              "type": "string"
            },
            "resourceType": {
              "description": "App Service ResourceType meter used for",
              "type": "string"
            },
            "osType": {
              "description": "App Service OS type meter used for",
              "type": "string"
            },
            "multiplier": {
              "format": "double",
              "description": "Meter Multiplier",
              "type": "number"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BillingMeterCollection": {
      "description": "Collection of Billing Meters",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingMeter"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CsmMoveResourceEnvelope": {
      "description": "Object with a list of the resources that need to be moved and the resource group they should be moved to.",
      "type": "object",
      "properties": {
        "targetResourceGroup": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": " ^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomHostnameSites": {
      "description": "A hostname and its assigned sites",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameSites resource specific properties",
          "type": "object",
          "properties": {
            "customHostname": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "siteResourceIds": {
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/Identifier"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CustomHostnameSitesCollection": {
      "description": "Collection of custom hostname sites",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomHostnameSites"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeploymentLocations": {
      "description": "List of available locations (regions or App Service Environments) for\ndeployment of App Service resources.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "Available regions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "hostingEnvironments": {
          "description": "Available App Service Environments with full descriptions of the environments.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/AppServiceEnvironment"
          },
          "x-ms-identifiers": []
        },
        "hostingEnvironmentDeploymentInfos": {
          "description": "Available App Service Environments with basic information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostingEnvironmentDeploymentInfo"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DnlResourceNameAvailability": {
      "description": "Information regarding availability of a resource name for DNL apps with regionalized default hostnames.",
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "nameAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "DnlResourceNameAvailabilityRequest": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "resourceGroupName": {
          "description": "Resource group name",
          "type": "string"
        },
        "autoGeneratedDomainNameLabelScope": {
          "description": "Indicates the endpoint name reuse scope.The default value is TenantReuse.\nSupported values are TenantReuse, SubscriptionReuse, ResourceGroupReuse, NoReuse",
          "type": "string"
        },
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Site",
            "Slot",
            "HostingEnvironment",
            "PublishingUser",
            "Microsoft.Web/sites",
            "Microsoft.Web/sites/slots",
            "Microsoft.Web/hostingEnvironments",
            "Microsoft.Web/publishingUsers"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        }
      }
    },
    "AseRegion": {
      "description": "ASE region.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ASE region resource specific properties",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            },
            "standard": {
              "description": "Is region standard.",
              "type": "boolean",
              "readOnly": true
            },
            "dedicatedHost": {
              "description": "Dedicated host enabled.",
              "type": "boolean",
              "readOnly": true
            },
            "zoneRedundant": {
              "description": "Zone redundant deployment enabled.",
              "type": "boolean",
              "readOnly": true
            },
            "availableSku": {
              "description": "Available Skus in region.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "availableOS": {
              "description": "Available OSs in region.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GeoRegion": {
      "description": "Geographical region.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "GeoRegion resource specific properties",
          "type": "object",
          "properties": {
            "description": {
              "description": "Region description.",
              "type": "string",
              "readOnly": true
            },
            "displayName": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            },
            "orgDomain": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AseRegionCollection": {
      "description": "Collection of ASE regions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AseRegion"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GeoRegionCollection": {
      "description": "Collection of geographical regions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GlobalCsmSkuDescription": {
      "description": "A Global SKU Description.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Service Tier of the resource SKU.",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource SKU.",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource SKU.",
          "type": "string"
        },
        "capacity": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        },
        "locations": {
          "description": "Locations of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/Capability"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "HostingEnvironmentDeploymentInfo": {
      "description": "Information needed to create resources on an App Service Environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string"
        },
        "location": {
          "description": "Location of the App Service Environment.",
          "type": "string"
        }
      }
    },
    "PremierAddOnOffer": {
      "description": "Premier add-on offer.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOnOffer resource specific properties",
          "type": "object",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on offer Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on offer Vendor.",
              "type": "string"
            },
            "promoCodeRequired": {
              "description": "<code>true</code> if promotion code is required; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "quota": {
              "format": "int32",
              "description": "Premier add on offer Quota.",
              "type": "integer"
            },
            "webHostingPlanRestrictions": {
              "description": "App Service plans this offer is restricted to.",
              "enum": [
                "None",
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AppServicePlanRestrictions",
                "modelAsString": false
              }
            },
            "privacyPolicyUrl": {
              "description": "Privacy policy URL.",
              "type": "string"
            },
            "legalTermsUrl": {
              "description": "Legal terms URL.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PremierAddOnOfferCollection": {
      "description": "Collection of premier add-on offers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAddOnOffer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceNameAvailability": {
      "description": "Information regarding availability of a resource name.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "ResourceNameAvailabilityRequest": {
      "description": "Resource name availability request content.",
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Site",
            "Slot",
            "HostingEnvironment",
            "PublishingUser",
            "Microsoft.Web/sites",
            "Microsoft.Web/sites/slots",
            "Microsoft.Web/hostingEnvironments",
            "Microsoft.Web/publishingUsers"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "isFqdn": {
          "description": "Is fully qualified domain name.",
          "type": "boolean"
        },
        "environmentId": {
          "description": "Azure Resource Manager ID of the customer's selected Container Apps Environment on which to host the Function app. This must be of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}",
          "type": "string"
        }
      }
    },
    "SkuInfos": {
      "description": "Collection of SKU information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "skus": {
          "description": "List of SKUs the subscription is able to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalCsmSkuDescription"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SourceControl": {
      "description": "The source control OAuth token.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SourceControl resource specific properties",
          "type": "object",
          "properties": {
            "token": {
              "description": "OAuth access token.",
              "type": "string"
            },
            "tokenSecret": {
              "description": "OAuth access token secret.",
              "type": "string"
            },
            "refreshToken": {
              "description": "OAuth refresh token.",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "OAuth token expiration.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SourceControlCollection": {
      "description": "Collection of source controls.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ValidateProperties": {
      "description": "App properties used for validation.",
      "type": "object",
      "properties": {
        "serverFarmId": {
          "description": "ARM resource ID of an App Service plan that would host the app.",
          "type": "string"
        },
        "skuName": {
          "description": "Name of the target SKU for the App Service plan.",
          "type": "string"
        },
        "needLinuxWorkers": {
          "description": "<code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isSpot": {
          "description": "<code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "capacity": {
          "format": "int32",
          "description": "Target capacity of the App Service plan (number of VMs).",
          "minimum": 1,
          "type": "integer"
        },
        "hostingEnvironment": {
          "description": "Name of App Service Environment where app or App Service plan should be created.",
          "type": "string"
        },
        "isXenon": {
          "description": "<code>true</code> if App Service plan is running as a windows container",
          "type": "boolean"
        },
        "containerRegistryBaseUrl": {
          "description": "Base URL of the container registry",
          "type": "string"
        },
        "containerRegistryUsername": {
          "description": "Username for to access the container registry",
          "type": "string"
        },
        "containerRegistryPassword": {
          "description": "Password for to access the container registry",
          "type": "string"
        },
        "containerImageRepository": {
          "description": "Repository name (image name)",
          "type": "string"
        },
        "containerImageTag": {
          "description": "Image tag",
          "type": "string"
        },
        "containerImagePlatform": {
          "description": "Platform (windows or linux)",
          "type": "string"
        },
        "appServiceEnvironment": {
          "$ref": "./CommonDefinitions.json#/definitions/AppServiceEnvironment",
          "description": "App Service Environment Properties"
        }
      }
    },
    "ValidateRequest": {
      "description": "Resource validation request content.",
      "required": [
        "name",
        "type",
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "ServerFarm",
            "Site",
            "Microsoft.Web/hostingEnvironments"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ValidateResourceTypes",
            "modelAsString": true
          }
        },
        "location": {
          "description": "Expected location of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ValidateProperties",
          "description": "Properties of the resource to validate.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateResponse": {
      "description": "Describes the result of resource validation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Result of validation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ValidateResponseError",
          "description": "Error details for the case when validation fails."
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code.",
          "type": "string"
        },
        "message": {
          "description": "Validation error message.",
          "type": "string"
        }
      }
    },
    "VnetParameters": {
      "description": "The required set of inputs to validate a VNET",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetParameters resource specific properties",
          "type": "object",
          "properties": {
            "vnetResourceGroup": {
              "description": "The Resource Group of the VNET to be validated",
              "type": "string"
            },
            "vnetName": {
              "description": "The name of the VNET to be validated",
              "type": "string"
            },
            "vnetSubnetName": {
              "description": "The subnet name to be validated",
              "type": "string"
            },
            "subnetResourceId": {
              "description": "The ARM Resource ID of the subnet to validate",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationFailureDetails": {
      "description": "A class that describes the reason for a validation failure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationFailureDetails resource specific properties",
          "type": "object",
          "properties": {
            "message": {
              "description": "Text describing the validation outcome.",
              "type": "string"
            },
            "failed": {
              "description": "A flag describing whether or not validation failed.",
              "type": "boolean"
            },
            "failedTests": {
              "description": "A list of tests that failed in the validation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetValidationTestFailure"
              }
            },
            "warnings": {
              "description": "A list of warnings generated during validation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetValidationTestFailure"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationTestFailure": {
      "description": "A class that describes a test that failed during NSG and UDR validation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationTestFailure resource specific properties",
          "type": "object",
          "properties": {
            "testName": {
              "description": "The name of the test that failed.",
              "type": "string"
            },
            "details": {
              "description": "The details of what caused the failure, e.g. the blocking rule name, etc.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedWebAppCollection": {
      "description": "Collection of deleted apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/DeletedSite"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Recommendation": {
      "description": "Represents a recommendation result generated by the recommendation engine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Recommendation resource specific properties",
          "type": "object",
          "properties": {
            "creationTime": {
              "format": "date-time",
              "description": "Timestamp when this instance was created.",
              "type": "string"
            },
            "recommendationId": {
              "format": "uuid",
              "description": "A GUID value that each recommendation object is associated with.",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "resourceId": {
              "description": "Full ARM resource ID string that this recommendation object is associated with.",
              "type": "string"
            },
            "resourceScope": {
              "description": "Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.",
              "enum": [
                "ServerFarm",
                "Subscription",
                "WebSite"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceScopeType",
                "modelAsString": true
              }
            },
            "ruleName": {
              "description": "Unique name of the rule.",
              "type": "string"
            },
            "displayName": {
              "description": "UI friendly name of the rule (may not be unique).",
              "type": "string"
            },
            "message": {
              "description": "Recommendation text.",
              "type": "string"
            },
            "level": {
              "description": "Level indicating how critical this recommendation can impact.",
              "enum": [
                "Critical",
                "Warning",
                "Information",
                "NonUrgentSuggestion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "NotificationLevel",
                "modelAsString": false
              }
            },
            "channels": {
              "description": "List of channels that this recommendation can apply.",
              "enum": [
                "Notification",
                "Api",
                "Email",
                "Webhook",
                "All"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Channels",
                "modelAsString": false
              }
            },
            "categoryTags": {
              "description": "The list of category tags that this recommendation belongs to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "actionName": {
              "description": "Name of action recommended by this object.",
              "type": "string"
            },
            "enabled": {
              "format": "int32",
              "description": "True if this recommendation is still valid (i.e. \"actionable\"). False if it is invalid.",
              "type": "integer"
            },
            "states": {
              "description": "The list of states of this recommendation. If it's null then it should be considered \"Active\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "The beginning time in UTC of a range that the recommendation refers to.",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "The end time in UTC of a range that the recommendation refers to.",
              "type": "string"
            },
            "nextNotificationTime": {
              "format": "date-time",
              "description": "When to notify this recommendation next in UTC. Null means that this will never be notified anymore.",
              "type": "string"
            },
            "notificationExpirationTime": {
              "format": "date-time",
              "description": "Date and time in UTC when this notification expires.",
              "type": "string"
            },
            "notifiedTime": {
              "format": "date-time",
              "description": "Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.",
              "type": "string"
            },
            "score": {
              "format": "double",
              "description": "A metric value measured by the rule.",
              "type": "number"
            },
            "isDynamic": {
              "description": "True if this is associated with a dynamically added rule",
              "type": "boolean"
            },
            "extensionName": {
              "description": "Extension name of the portal if exists.",
              "type": "string"
            },
            "bladeName": {
              "description": "Deep link to a blade on the portal.",
              "type": "string"
            },
            "forwardLink": {
              "description": "Forward link to an external document associated with the rule.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RecommendationCollection": {
      "description": "Collection of recommendations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recommendation"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RecommendationRule": {
      "description": "Represents a recommendation rule that the recommendation engine can perform.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RecommendationRule resource specific properties",
          "type": "object",
          "properties": {
            "recommendationName": {
              "description": "Unique name of the rule.",
              "type": "string"
            },
            "displayName": {
              "description": "UI friendly name of the rule.",
              "type": "string"
            },
            "message": {
              "description": "Localized name of the rule (Good for UI).",
              "type": "string"
            },
            "recommendationId": {
              "format": "uuid",
              "description": "Recommendation ID of an associated recommendation object tied to the rule, if exists.\nIf such an object doesn't exist, it is set to null.",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "description": {
              "description": "Localized detailed description of the rule.",
              "type": "string"
            },
            "actionName": {
              "description": "Name of action that is recommended by this rule in string.",
              "type": "string"
            },
            "level": {
              "description": "Level of impact indicating how critical this rule is.",
              "enum": [
                "Critical",
                "Warning",
                "Information",
                "NonUrgentSuggestion"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "NotificationLevel",
                "modelAsString": false
              }
            },
            "channels": {
              "description": "List of available channels that this rule applies.",
              "enum": [
                "Notification",
                "Api",
                "Email",
                "Webhook",
                "All"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Channels",
                "modelAsString": false
              }
            },
            "categoryTags": {
              "description": "The list of category tags that this recommendation rule belongs to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "isDynamic": {
              "description": "True if this is associated with a dynamically added rule",
              "type": "boolean"
            },
            "extensionName": {
              "description": "Extension name of the portal if exists. Applicable to dynamic rule only.",
              "type": "string"
            },
            "bladeName": {
              "description": "Deep link to a blade on the portal. Applicable to dynamic rule only.",
              "type": "string"
            },
            "forwardLink": {
              "description": "Forward link to an external document associated with the rule. Applicable to dynamic rule only.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ArmPlan": {
      "description": "The plan object in Azure Resource Manager, represents a marketplace plan.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher.",
          "type": "string"
        },
        "product": {
          "description": "The product.",
          "type": "string"
        },
        "promotionCode": {
          "description": "The promotion code.",
          "type": "string"
        },
        "version": {
          "description": "Version of product.",
          "type": "string"
        }
      }
    },
    "RemotePrivateEndpointConnection": {
      "description": "A remote private endpoint connection",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RemotePrivateEndpointConnection resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true
            },
            "privateEndpoint": {
              "$ref": "./CommonDefinitions.json#/definitions/ArmIdWrapper",
              "description": "PrivateEndpoint of a remote private endpoint connection"
            },
            "privateLinkServiceConnectionState": {
              "$ref": "./CommonDefinitions.json#/definitions/PrivateLinkConnectionState"
            },
            "ipAddresses": {
              "description": "Private IPAddresses mapped to the remote private endpoint",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResponseMessageEnvelope[RemotePrivateEndpointConnection]": {
      "description": "Message envelope that contains the common Azure resource manager properties and the resource provider specific content.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id. Typically ID is populated only for responses to GET requests. Caller is responsible for passing in this\nvalue for GET requests only.\nFor example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}",
          "type": "string"
        },
        "name": {
          "description": "Name of resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of resource e.g \"Microsoft.Web/sites\".",
          "type": "string"
        },
        "location": {
          "description": "Geographical region resource belongs to e.g. SouthCentralUS, SouthEastAsia.",
          "type": "string"
        },
        "tags": {
          "description": "Tags associated with resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "plan": {
          "$ref": "#/definitions/ArmPlan",
          "description": "Azure resource manager plan."
        },
        "properties": {
          "$ref": "#/definitions/RemotePrivateEndpointConnection",
          "description": "Resource specific properties."
        },
        "sku": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuDescription",
          "description": "SKU description of the resource."
        },
        "status": {
          "description": "Azure-AsyncOperation Status info.",
          "type": "string"
        },
        "error": {
          "$ref": "./CommonDefinitions.json#/definitions/ErrorEntity",
          "description": "Azure-AsyncOperation Error info."
        },
        "identity": {
          "$ref": "./CommonDefinitions.json#/definitions/ManagedServiceIdentity",
          "description": "MSI resource"
        },
        "zones": {
          "description": "Logical Availability Zones the service is hosted in",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StaticSite": {
      "description": "A static site.",
      "type": "object",
      "properties": {
        "defaultHostname": {
          "description": "The default autogenerated hostname for the static site.",
          "type": "string",
          "readOnly": true
        },
        "repositoryUrl": {
          "description": "URL for the repository of the static site.",
          "type": "string"
        },
        "branch": {
          "description": "The target branch in the repository.",
          "type": "string"
        },
        "customDomains": {
          "description": "The custom domains associated with this static site.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "repositoryToken": {
          "description": "A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.",
          "type": "string"
        },
        "buildProperties": {
          "$ref": "#/definitions/StaticSiteBuildProperties",
          "description": "Build properties to configure on the repository."
        },
        "privateEndpointConnections": {
          "description": "Private endpoint connections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessageEnvelope[RemotePrivateEndpointConnection]"
          },
          "readOnly": true
        },
        "stagingEnvironmentPolicy": {
          "description": "State indicating whether staging environments are allowed or not allowed for a static web app.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StagingEnvironmentPolicy",
            "modelAsString": false
          }
        },
        "allowConfigFileUpdates": {
          "description": "<code>false</code> if config file is locked for this static web app; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "templateProperties": {
          "$ref": "#/definitions/StaticSiteTemplateOptions",
          "description": "Template options for generating a new repository."
        },
        "contentDistributionEndpoint": {
          "description": "The content distribution endpoint for the static site.",
          "type": "string",
          "readOnly": true
        },
        "keyVaultReferenceIdentity": {
          "description": "Identity to use for Key Vault Reference authentication.",
          "type": "string",
          "readOnly": true
        },
        "userProvidedFunctionApps": {
          "description": "User provided function apps registered with the static site",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteUserProvidedFunctionApp"
          },
          "readOnly": true
        },
        "linkedBackends": {
          "description": "Backends linked to the static side",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteLinkedBackend"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "provider": {
          "description": "The provider that submitted the last deployment to the primary environment of the static site.",
          "type": "string"
        },
        "enterpriseGradeCdnStatus": {
          "description": "State indicating the status of the enterprise grade CDN serving traffic to the static web app.",
          "enum": [
            "Enabled",
            "Enabling",
            "Disabled",
            "Disabling"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EnterpriseGradeCdnStatus",
            "modelAsString": true
          }
        },
        "publicNetworkAccess": {
          "description": "State indicating whether public traffic are allowed or not for a static web app. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
          "type": "string"
        },
        "databaseConnections": {
          "description": "Database connections for the static site",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseConnectionOverview"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      }
    },
    "StaticSiteARMResource": {
      "description": "Static Site ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StaticSite",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "./CommonDefinitions.json#/definitions/SkuDescription"
        },
        "identity": {
          "$ref": "./CommonDefinitions.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "StaticSiteBasicAuthPropertiesARMResource": {
      "description": "Static site basic auth properties ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteBasicAuthPropertiesARMResource resource specific properties",
          "required": [
            "applicableEnvironmentsMode"
          ],
          "type": "object",
          "properties": {
            "password": {
              "description": "The password for basic auth.",
              "type": "string",
              "x-ms-secret": true
            },
            "secretUrl": {
              "description": "Url to the secret in Key Vault.",
              "type": "string"
            },
            "applicableEnvironmentsMode": {
              "description": "State indicating if basic auth is enabled and for what environments it is active.",
              "type": "string"
            },
            "environments": {
              "description": "The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "secretState": {
              "description": "State indicating if basic auth has a secret and what type it is.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteBasicAuthPropertiesCollection": {
      "description": "Collection of static site basic auth.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteBasicAuthPropertiesARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteBuildARMResource": {
      "description": "Static Site Build ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteBuildARMResource resource specific properties",
          "type": "object",
          "properties": {
            "buildId": {
              "description": "An identifier for the static site build.",
              "type": "string",
              "readOnly": true
            },
            "sourceBranch": {
              "description": "The source branch.",
              "type": "string",
              "readOnly": true
            },
            "pullRequestTitle": {
              "description": "The title of a pull request that a static site build is related to.",
              "type": "string",
              "readOnly": true
            },
            "hostname": {
              "description": "The hostname for a static site build.",
              "type": "string",
              "readOnly": true
            },
            "createdTimeUtc": {
              "format": "date-time",
              "description": "When this build was created.",
              "type": "string",
              "readOnly": true
            },
            "lastUpdatedOn": {
              "format": "date-time",
              "description": "When this build was updated.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "The status of the static site build.",
              "enum": [
                "WaitingForDeployment",
                "Uploading",
                "Deploying",
                "Ready",
                "Failed",
                "Deleting",
                "Detached"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuildStatus",
                "modelAsString": true
              }
            },
            "userProvidedFunctionApps": {
              "description": "User provided function apps registered with the static site build",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaticSiteUserProvidedFunctionApp"
              },
              "readOnly": true
            },
            "linkedBackends": {
              "description": "Backends linked to the static side build",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaticSiteLinkedBackend"
              },
              "x-ms-identifiers": [],
              "readOnly": true
            },
            "databaseConnections": {
              "description": "Database connections for the static site build",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseConnectionOverview"
              },
              "x-ms-identifiers": [
                "name"
              ],
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteBuildCollection": {
      "description": "Collection of static site builds.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteBuildARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteBuildProperties": {
      "description": "Build properties for the static site.",
      "type": "object",
      "properties": {
        "appLocation": {
          "description": "The path to the app code within the repository.",
          "type": "string"
        },
        "apiLocation": {
          "description": "The path to the api code within the repository.",
          "type": "string"
        },
        "appArtifactLocation": {
          "description": "Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)",
          "type": "string"
        },
        "outputLocation": {
          "description": "The output path of the app after building.",
          "type": "string"
        },
        "appBuildCommand": {
          "description": "A custom command to run during deployment of the static content application.",
          "type": "string"
        },
        "apiBuildCommand": {
          "description": "A custom command to run during deployment of the Azure Functions API application.",
          "type": "string"
        },
        "skipGithubActionWorkflowGeneration": {
          "description": "Skip Github Action workflow generation.",
          "type": "boolean"
        },
        "githubActionSecretNameOverride": {
          "description": "Github Action secret name override.",
          "type": "string"
        }
      }
    },
    "StaticSiteCollection": {
      "description": "Collection of static sites.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteCustomDomainOverviewARMResource": {
      "description": "Static Site Custom Domain Overview ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteCustomDomainOverviewARMResource resource specific properties",
          "type": "object",
          "properties": {
            "domainName": {
              "description": "The domain name for the static site custom domain.",
              "type": "string",
              "readOnly": true
            },
            "createdOn": {
              "format": "date-time",
              "description": "The date and time on which the custom domain was created for the static site.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "The status of the custom domain",
              "enum": [
                "RetrievingValidationToken",
                "Validating",
                "Adding",
                "Ready",
                "Failed",
                "Deleting",
                "Unhealthy"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CustomDomainStatus",
                "modelAsString": true
              }
            },
            "validationToken": {
              "description": "The TXT record validation token",
              "type": "string",
              "readOnly": true
            },
            "errorMessage": {
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteCustomDomainOverviewCollection": {
      "description": "Collection of static site custom domains.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteCustomDomainOverviewARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteCustomDomainRequestPropertiesARMResource": {
      "description": "Static Site Custom Domain Request Properties ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteCustomDomainRequestPropertiesARMResource resource specific properties",
          "type": "object",
          "properties": {
            "validationMethod": {
              "description": "Validation method for adding a custom domain",
              "default": "cname-delegation",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteDatabaseConnectionConfigurationFileOverview": {
      "description": "A database connection configuration file",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "The name of the configuration file.",
          "type": "string",
          "readOnly": true
        },
        "contents": {
          "description": "The Base64 encoding of the file contents.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of configuration file.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-client-flatten": true
    },
    "DatabaseConnection": {
      "description": "Static Site Database Connection resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DatabaseConnection resource specific properties",
          "type": "object",
          "required": [
            "resourceId",
            "region"
          ],
          "properties": {
            "resourceId": {
              "description": "The resource id of the database.",
              "type": "string"
            },
            "connectionIdentity": {
              "description": "If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.",
              "type": "string"
            },
            "connectionString": {
              "description": "The connection string to use to connect to the database.",
              "type": "string",
              "x-ms-secret": true
            },
            "region": {
              "description": "The region of the database resource.",
              "type": "string"
            },
            "configurationFiles": {
              "description": "A list of configuration files associated with this database connection.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaticSiteDatabaseConnectionConfigurationFileOverview"
              },
              "x-ms-identifiers": [
                "fileName"
              ],
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseConnectionOverview": {
      "description": "Static Site Database Connection overview.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource id of the database.",
          "type": "string",
          "readOnly": true
        },
        "connectionIdentity": {
          "description": "If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.",
          "type": "string",
          "readOnly": true
        },
        "region": {
          "description": "The region of the database resource.",
          "type": "string",
          "readOnly": true
        },
        "configurationFiles": {
          "description": "A list of configuration files associated with this database connection.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteDatabaseConnectionConfigurationFileOverview"
          },
          "x-ms-identifiers": [
            "fileName"
          ],
          "readOnly": true
        },
        "name": {
          "description": "If present, the name of this database connection resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-client-flatten": true
    },
    "DatabaseConnectionCollection": {
      "description": "Collection of static site database connections.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseConnection"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseConnectionPatchRequest": {
      "description": "Static Site Database Connection Request Properties resource when patching",
      "type": "object",
      "properties": {
        "properties": {
          "description": "DatabaseConnectionPatchRequest resource specific properties",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The resource id of the database.",
              "type": "string"
            },
            "connectionIdentity": {
              "description": "If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.",
              "type": "string"
            },
            "connectionString": {
              "description": "The connection string to use to connect to the database.",
              "type": "string",
              "x-ms-secret": true
            },
            "region": {
              "description": "The region of the database resource.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteFunctionOverviewARMResource": {
      "description": "Static Site Function Overview ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteFunctionOverviewARMResource resource specific properties",
          "type": "object",
          "properties": {
            "functionName": {
              "description": "The name for the function",
              "type": "string",
              "readOnly": true
            },
            "triggerType": {
              "description": "The trigger type of the function",
              "enum": [
                "HttpTrigger",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "TriggerTypes",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteFunctionOverviewCollection": {
      "description": "Collection of static site functions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteFunctionOverviewARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSitePatchResource": {
      "description": "ARM resource for a static site when patching",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StaticSite",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteResetPropertiesARMResource": {
      "description": "Static Site Reset Properties ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteResetPropertiesARMResource resource specific properties",
          "type": "object",
          "properties": {
            "repositoryToken": {
              "description": "The token which proves admin privileges to the repository.",
              "type": "string"
            },
            "shouldUpdateRepository": {
              "description": "Determines whether the repository should be updated with the new properties.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteTemplateOptions": {
      "description": "Template Options for the static site.",
      "type": "object",
      "properties": {
        "templateRepositoryUrl": {
          "description": "URL of the template repository. The newly generated repository will be based on this one.",
          "type": "string"
        },
        "owner": {
          "description": "Owner of the newly generated repository.",
          "type": "string"
        },
        "repositoryName": {
          "description": "Name of the newly generated repository.",
          "type": "string"
        },
        "description": {
          "description": "Description of the newly generated repository.",
          "type": "string"
        },
        "isPrivate": {
          "description": "Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).",
          "type": "boolean"
        }
      }
    },
    "StaticSiteUserARMResource": {
      "description": "Static Site User ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteUserARMResource resource specific properties",
          "type": "object",
          "properties": {
            "provider": {
              "description": "The identity provider for the static site user.",
              "type": "string",
              "readOnly": true
            },
            "userId": {
              "description": "The user id for the static site user.",
              "type": "string",
              "readOnly": true
            },
            "displayName": {
              "description": "The display name for the static site user.",
              "type": "string",
              "readOnly": true
            },
            "roles": {
              "description": "The roles for the static site user, in free-form string format",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteUserCollection": {
      "description": "Collection of static site custom users.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteUserARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteUserInvitationRequestResource": {
      "description": "Static sites user roles invitation resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteUserInvitationRequestResource resource specific properties",
          "type": "object",
          "properties": {
            "domain": {
              "description": "The domain name for the static site custom domain.",
              "type": "string"
            },
            "provider": {
              "description": "The identity provider for the static site user.",
              "type": "string"
            },
            "userDetails": {
              "description": "The user id for the static site user.",
              "type": "string"
            },
            "roles": {
              "description": "The roles for the static site user, in free-form string format",
              "type": "string"
            },
            "numHoursToExpiration": {
              "format": "int32",
              "description": "The number of hours the sas token stays valid",
              "type": "integer"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteUserInvitationResponseResource": {
      "description": "Static sites user roles invitation link resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteUserInvitationResponseResource resource specific properties",
          "type": "object",
          "properties": {
            "expiresOn": {
              "format": "date-time",
              "description": "The expiration time of the invitation",
              "type": "string",
              "readOnly": true
            },
            "invitationUrl": {
              "description": "The url for the invitation link",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteUserProvidedFunctionApp": {
      "description": "A static site user provided function.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteUserProvidedFunctionApp resource specific properties",
          "type": "object",
          "properties": {
            "functionAppResourceId": {
              "description": "The resource id of the function app registered with the static site",
              "type": "string"
            },
            "functionAppRegion": {
              "description": "The region of the function app registered with the static site",
              "type": "string"
            },
            "createdOn": {
              "format": "date-time",
              "description": "The date and time on which the function app was registered with the static site.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteUserProvidedFunctionAppARMResource": {
      "description": "Static Site User Provided Function App ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteUserProvidedFunctionAppARMResource resource specific properties",
          "type": "object",
          "properties": {
            "functionAppResourceId": {
              "description": "The resource id of the function app registered with the static site",
              "type": "string"
            },
            "functionAppRegion": {
              "description": "The region of the function app registered with the static site",
              "type": "string"
            },
            "createdOn": {
              "format": "date-time",
              "description": "The date and time on which the function app was registered with the static site.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteUserProvidedFunctionAppsCollection": {
      "description": "Collection of static site user provided function apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteUserProvidedFunctionAppARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteZipDeployment": {
      "description": "A static site zip deployment.",
      "type": "object",
      "properties": {
        "appZipUrl": {
          "description": "URL for the zipped app content",
          "type": "string"
        },
        "apiZipUrl": {
          "description": "URL for the zipped api content",
          "type": "string"
        },
        "deploymentTitle": {
          "description": "A title to label the deployment",
          "type": "string"
        },
        "provider": {
          "description": "The provider submitting this deployment",
          "type": "string"
        },
        "functionLanguage": {
          "description": "The language of the api content, if it exists",
          "type": "string"
        }
      }
    },
    "StaticSiteZipDeploymentARMResource": {
      "description": "Static site zip deployment ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StaticSiteZipDeployment",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSitesWorkflowPreview": {
      "description": "Preview for the Static Site Workflow to be generated",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSitesWorkflowPreview resource specific properties",
          "type": "object",
          "properties": {
            "path": {
              "description": "The path for the workflow file to be generated",
              "type": "string",
              "readOnly": true
            },
            "contents": {
              "description": "The contents for the workflow file to be generated",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSitesWorkflowPreviewRequest": {
      "description": "Request entity for previewing the Static Site workflow",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSitesWorkflowPreviewRequest resource specific properties",
          "type": "object",
          "properties": {
            "repositoryUrl": {
              "description": "URL for the repository of the static site.",
              "type": "string"
            },
            "branch": {
              "description": "The target branch in the repository.",
              "type": "string"
            },
            "buildProperties": {
              "$ref": "#/definitions/StaticSiteBuildProperties",
              "description": "Build properties to configure on the repository."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringList": {
      "description": "String list resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "List of string resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StaticSiteLinkedBackendARMResource": {
      "description": "Static Site Linked Backend ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StaticSiteLinkedBackendARMResource resource specific properties",
          "type": "object",
          "properties": {
            "backendResourceId": {
              "description": "The resource id of the backend linked to the static site",
              "type": "string"
            },
            "region": {
              "description": "The region of the backend linked to the static site",
              "type": "string"
            },
            "createdOn": {
              "format": "date-time",
              "description": "The date and time on which the backend was linked to the static site.",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state of the linking process.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StaticSiteLinkedBackend": {
      "description": "Static Site Linked Backend ARM resource.",
      "type": "object",
      "properties": {
        "backendResourceId": {
          "description": "The resource id of the backend linked to the static site",
          "type": "string"
        },
        "region": {
          "description": "The region of the backend linked to the static site",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "The date and time on which the backend was linked to the static site.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the linking process.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticSiteLinkedBackendsCollection": {
      "description": "Collection of static site linked backends.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticSiteLinkedBackendARMResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AbnormalTimePeriod": {
      "description": "Class representing Abnormal Time Period identified in diagnosis",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of the downtime",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the downtime",
          "type": "string"
        },
        "events": {
          "description": "List of Possible Cause of downtime",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorAbnormalTimePeriod"
          },
          "x-ms-identifiers": []
        },
        "solutions": {
          "description": "List of proposed solutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        }
      }
    },
    "AnalysisData": {
      "description": "Class Representing Detector Evidence used for analysis",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the Detector",
          "type": "string"
        },
        "detectorDefinition": {
          "$ref": "#/definitions/DetectorDefinition",
          "description": "Detector Definition"
        },
        "metrics": {
          "description": "Source Metrics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticMetricSet"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "data": {
          "description": "Additional Source Data",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
            },
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "detectorMetaData": {
          "$ref": "#/definitions/ResponseMetaData",
          "description": "Detector Meta Data"
        }
      }
    },
    "AnalysisDefinition": {
      "description": "Definition of Analysis",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AnalysisDefinition resource specific properties",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of the Analysis",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DataSource": {
      "description": "Class representing data source used by the detectors",
      "type": "object",
      "properties": {
        "instructions": {
          "description": "Instructions if any for the data source",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSourceUri": {
          "description": "Datasource Uri Links",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DetectorAbnormalTimePeriod": {
      "description": "Class representing Abnormal Time Period detected.",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of the correlated event",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the correlated event",
          "type": "string"
        },
        "message": {
          "description": "Message describing the event",
          "type": "string"
        },
        "source": {
          "description": "Represents the name of the Detector",
          "type": "string"
        },
        "priority": {
          "format": "double",
          "description": "Represents the rank of the Detector",
          "type": "number"
        },
        "metaData": {
          "description": "Downtime metadata",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
            },
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": {
          "description": "Represents the type of the Detector",
          "enum": [
            "ServiceIncident",
            "AppDeployment",
            "AppCrash",
            "RuntimeIssueDetected",
            "AseDeployment",
            "UserIssue",
            "PlatformIssue",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": false
          }
        },
        "solutions": {
          "description": "List of proposed solutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        }
      }
    },
    "DetectorDefinition": {
      "description": "Class representing detector definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the detector",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Description of the detector",
          "type": "string",
          "readOnly": true
        },
        "rank": {
          "format": "double",
          "description": "Detector Rank",
          "type": "number",
          "readOnly": true
        },
        "isEnabled": {
          "description": "Flag representing whether detector is enabled or not.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "DetectorDefinitionResource": {
      "description": "ARM resource for a detector definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DetectorDefinition",
          "description": "Core resource properties",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticAnalysis": {
      "description": "Class representing a diagnostic analysis done on an application",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticAnalysis resource specific properties",
          "type": "object",
          "properties": {
            "startTime": {
              "format": "date-time",
              "description": "Start time of the period",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of the period",
              "type": "string"
            },
            "abnormalTimePeriods": {
              "description": "List of time periods.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbnormalTimePeriod"
              },
              "x-ms-identifiers": []
            },
            "payload": {
              "description": "Data by each detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnalysisData"
              },
              "x-ms-identifiers": [
                "source"
              ]
            },
            "nonCorrelatedDetectors": {
              "description": "Data by each detector for detectors that did not corelate",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DetectorDefinition"
              },
              "x-ms-identifiers": [
                "displayName"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticAnalysisCollection": {
      "description": "Collection of Diagnostic Analyses",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticCategory": {
      "description": "Class representing detector definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticCategory resource specific properties",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of the diagnostic category",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticCategoryCollection": {
      "description": "Collection of Diagnostic Categories",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticCategory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticDetectorCollection": {
      "description": "Collection of Diagnostic Detectors",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorDefinitionResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticDetectorResponse": {
      "description": "Class representing Response from Diagnostic Detectors",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticDetectorResponse resource specific properties",
          "type": "object",
          "properties": {
            "startTime": {
              "format": "date-time",
              "description": "Start time of the period",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of the period",
              "type": "string"
            },
            "issueDetected": {
              "description": "Flag representing Issue was detected.",
              "type": "boolean"
            },
            "detectorDefinition": {
              "$ref": "#/definitions/DetectorDefinition",
              "description": "Detector's definition"
            },
            "metrics": {
              "description": "Metrics provided by the detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticMetricSet"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "abnormalTimePeriods": {
              "description": "List of Correlated events found by the detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DetectorAbnormalTimePeriod"
              },
              "x-ms-identifiers": []
            },
            "data": {
              "description": "Additional Data that detector wants to send.",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
                },
                "x-ms-identifiers": [
                  "name"
                ]
              }
            },
            "responseMetaData": {
              "$ref": "#/definitions/ResponseMetaData",
              "description": "Meta Data"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticMetricSample": {
      "description": "Class representing Diagnostic Metric",
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Time at which metric is measured",
          "type": "string"
        },
        "roleInstance": {
          "description": "Role Instance. Null if this counter is not per instance \nThis is returned and should be whichever instance name we desire to be returned\ni.e. CPU and Memory return RDWORKERNAME (LargeDed..._IN_0) \nwhere RDWORKERNAME is Machine name below and RoleInstance name in parenthesis",
          "type": "string"
        },
        "total": {
          "format": "double",
          "description": "Total value of the metric. If multiple measurements are made this will have sum of all.",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "Maximum of the metric sampled during the time period",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "description": "Minimum of the metric sampled during the time period",
          "type": "number"
        },
        "isAggregated": {
          "description": "Whether the values are aggregates across all workers or not",
          "type": "boolean"
        }
      }
    },
    "DiagnosticMetricSet": {
      "description": "Class representing Diagnostic Metric information",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Metric's unit",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain. Supported grains at the moment are PT1M, PT1H, P1D",
          "type": "string"
        },
        "values": {
          "description": "Collection of metric values for the selected period based on the {Microsoft.Web.Hosting.Administration.DiagnosticMetricSet.TimeGrain}",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticMetricSample"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResponseMetaData": {
      "type": "object",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource",
          "description": "Source of the Data"
        }
      }
    },
    "Solution": {
      "description": "Class Representing Solution for problems detected.",
      "type": "object",
      "properties": {
        "id": {
          "format": "double",
          "description": "Solution Id.",
          "type": "number"
        },
        "displayName": {
          "description": "Display Name of the solution",
          "type": "string"
        },
        "order": {
          "format": "double",
          "description": "Order of the solution.",
          "type": "number"
        },
        "description": {
          "description": "Description of the solution",
          "type": "string"
        },
        "type": {
          "description": "Type of Solution",
          "enum": [
            "QuickSolution",
            "DeepInvestigation",
            "BestPractices"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SolutionType",
            "modelAsString": false
          }
        },
        "data": {
          "description": "Solution Data.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
            },
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "metadata": {
          "description": "Solution Metadata.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/NameValuePair"
            },
            "x-ms-identifiers": [
              "name"
            ]
          }
        }
      }
    },
    "AppLogsConfiguration": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "logAnalyticsConfiguration": {
          "$ref": "#/definitions/LogAnalyticsConfiguration"
        }
      }
    },
    "ContainerAppsConfiguration": {
      "type": "object",
      "properties": {
        "daprAIInstrumentationKey": {
          "type": "string",
          "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedCidr": {
          "type": "string",
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. It must not overlap with any other Subnet IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedDnsIP": {
          "type": "string",
          "description": "An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "controlPlaneSubnetResourceId": {
          "type": "string",
          "description": "Resource ID of a subnet for control plane infrastructure components. This subnet must be in the same VNET as the subnet defined in appSubnetResourceId. Must not overlap with the IP range defined in platformReservedCidr, if defined.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "appSubnetResourceId": {
          "type": "string",
          "description": "Resource ID of a subnet for control plane infrastructure components. This subnet must be in the same VNET as the subnet defined in appSubnetResourceId. Must not overlap with the IP range defined in platformReservedCidr, if defined.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerBridgeCidr": {
          "type": "string",
          "description": "CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the IP range defined in platformReservedCidr, if defined.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "ArcConfiguration": {
      "type": "object",
      "properties": {
        "artifactsStorageType": {
          "enum": [
            "LocalNode",
            "NetworkFileSystem"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactStorageClassName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactStorageMountPath": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactStorageNodeName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactStorageAccessMode": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "frontEndServiceConfiguration": {
          "$ref": "#/definitions/FrontEndConfiguration"
        },
        "kubeConfig": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "FrontEndConfiguration": {
      "type": "object",
      "properties": {
        "kind": {
          "enum": [
            "NodePort",
            "LoadBalancer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrontEndServiceType",
            "modelAsString": false
          }
        }
      }
    },
    "KubeEnvironment": {
      "description": "A Kubernetes cluster specialized for web workloads by Azure App Service",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "KubeEnvironment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Kubernetes Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete",
                "UpgradeRequested",
                "UpgradeFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KubeEnvironmentProvisioningState",
                "modelAsString": false
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "internalLoadBalancerEnabled": {
              "description": "Only visible within Vnet/Subnet",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the KubeEnvironment",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "environmentType": {
              "description": "Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "arcConfiguration": {
              "$ref": "#/definitions/ArcConfiguration",
              "description": "Cluster configuration which determines the ARC cluster\ncomponents types. Eg: Choosing between BuildService kind,\nFrontEnd Service ArtifactsStorageType etc."
            },
            "appLogsConfiguration": {
              "$ref": "#/definitions/AppLogsConfiguration",
              "description": "Cluster configuration which enables the log daemon to export\napp logs to a destination. Currently only \"log-analytics\" is\nsupported"
            },
            "containerAppsConfiguration": {
              "$ref": "#/definitions/ContainerAppsConfiguration",
              "description": "Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration"
            },
            "aksResourceID": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "./CommonDefinitions.json#/definitions/ExtendedLocation"
        }
      }
    },
    "KubeEnvironmentCollection": {
      "description": "Collection of Kubernetes Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubeEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "KubeEnvironmentPatchResource": {
      "description": "ARM resource for a KubeEnvironment when patching",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "KubeEnvironmentPatchResource resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Kubernetes Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete",
                "UpgradeRequested",
                "UpgradeFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KubeEnvironmentProvisioningState",
                "modelAsString": false
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "internalLoadBalancerEnabled": {
              "description": "Only visible within Vnet/Subnet",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the KubeEnvironment",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "arcConfiguration": {
              "$ref": "#/definitions/ArcConfiguration",
              "description": "Cluster configuration which determines the ARC cluster\ncomponents types. Eg: Choosing between BuildService kind,\nFrontEnd Service ArtifactsStorageType etc."
            },
            "appLogsConfiguration": {
              "$ref": "#/definitions/AppLogsConfiguration",
              "description": "Cluster configuration which enables the log daemon to export\napp logs to a destination. Currently only \"log-analytics\" is\nsupported"
            },
            "containerAppsConfiguration": {
              "$ref": "#/definitions/ContainerAppsConfiguration",
              "description": "Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration"
            },
            "aksResourceID": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "LogAnalyticsConfiguration": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string"
        },
        "sharedKey": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}