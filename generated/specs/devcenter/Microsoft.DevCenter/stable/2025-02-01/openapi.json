{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DevCenter",
    "version": "2025-02-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters": {
      "get": {
        "tags": [
          "DevCenters"
        ],
        "description": "Lists all devcenters in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "DevCenters_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevCenterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_ListBySubscription": {
            "$ref": "./examples/DevCenters_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters": {
      "get": {
        "tags": [
          "DevCenters"
        ],
        "description": "Lists all devcenters in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "DevCenters_ListByResourceGroup",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevCenterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_ListByResourceGroup": {
            "$ref": "./examples/DevCenters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}": {
      "get": {
        "tags": [
          "DevCenters"
        ],
        "description": "Gets a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          }
        ],
        "operationId": "DevCenters_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Get": {
            "$ref": "./examples/DevCenters_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DevCenters"
        ],
        "description": "Creates or updates a devcenter resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a devcenter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          }
        ],
        "operationId": "DevCenters_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "201": {
            "description": "Created. The request will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Create": {
            "$ref": "./examples/DevCenters_Create.json"
          },
          "DevCenters_CreateWithUserIdentity": {
            "$ref": "./examples/DevCenters_CreateWithUserIdentity.json"
          },
          "DevCenters_CreateWithEncryption": {
            "$ref": "./examples/DevCenters_CreateWithEncryption.json"
          },
          "DevCenters_CreateWithDisabledManagedNetworks": {
            "$ref": "./examples/DevCenters_CreateWithDisabledManagedNetworks.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DevCenters"
        ],
        "description": "Partially updates a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable devcenter properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevCenterUpdate"
            }
          }
        ],
        "operationId": "DevCenters_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "202": {
            "description": "Accepted. The request will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Update": {
            "$ref": "./examples/DevCenters_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DevCenters"
        ],
        "description": "Deletes a devcenter",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          }
        ],
        "operationId": "DevCenters_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Delete": {
            "$ref": "./examples/DevCenters_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/projectPolicies": {
      "get": {
        "tags": [
          "Project Policies"
        ],
        "description": "Lists all project policies in the dev center",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "ProjectPolicies_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectPolicies_ListByDevCenter": {
            "$ref": "./examples/ProjectPolicies_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/projectPolicies/{projectPolicyName}": {
      "get": {
        "tags": [
          "Project Policies"
        ],
        "description": "Gets a specific project policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectPolicyNameParameter"
          }
        ],
        "operationId": "ProjectPolicies_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectPolicies_Get": {
            "$ref": "./examples/ProjectPolicies_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Project Policies"
        ],
        "description": "Creates or updates an project policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectPolicyNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an project policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectPolicy"
            }
          }
        ],
        "operationId": "ProjectPolicies_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/ProjectPolicy"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/ProjectPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectPolicies_CreateOrUpdate": {
            "$ref": "./examples/ProjectPolicies_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Project Policies"
        ],
        "description": "Partially updates an project policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectPolicyNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project policy properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectPolicyUpdate"
            }
          }
        ],
        "operationId": "ProjectPolicies_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/ProjectPolicy"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectPolicies_Update": {
            "$ref": "./examples/ProjectPolicies_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Project Policies"
        ],
        "description": "Deletes an project policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectPolicyNameParameter"
          }
        ],
        "operationId": "ProjectPolicies_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectPolicies_Delete": {
            "$ref": "./examples/ProjectPolicies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Lists all projects in the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Projects_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListBySubscription": {
            "$ref": "./examples/Projects_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Lists all projects in the resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Projects_ListByResourceGroup",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListByResourceGroup": {
            "$ref": "./examples/Projects_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Gets a specific project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Projects_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Get": {
            "$ref": "./examples/Projects_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "description": "Creates or updates a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "operationId": "Projects_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_CreateOrUpdate": {
            "$ref": "./examples/Projects_Put.json"
          },
          "Projects_CreateOrUpdateWithLimitsPerDev": {
            "$ref": "./examples/Projects_PutWithMaxDevBoxPerUser.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "description": "Partially updates a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            }
          }
        ],
        "operationId": "Projects_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Update": {
            "$ref": "./examples/Projects_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Deletes a project resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Projects_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Delete": {
            "$ref": "./examples/Projects_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/getInheritedSettings": {
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Gets applicable inherited settings for this project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Projects_GetInheritedSettings",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/InheritedSettingsForProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_GetInheritedSettings": {
            "$ref": "./examples/Projects_GetInheritedSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks": {
      "get": {
        "tags": [
          "Attached NetworkConnections."
        ],
        "description": "Lists the attached NetworkConnections for a Project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "AttachedNetworks_ListByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_ListByProject": {
            "$ref": "./examples/AttachedNetworks_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks/{attachedNetworkConnectionName}": {
      "get": {
        "tags": [
          "Attached NetworkConnections"
        ],
        "description": "Gets an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedNetworkConnectionNameParameter"
          }
        ],
        "operationId": "AttachedNetworks_GetByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_GetByProject": {
            "$ref": "./examples/AttachedNetworks_GetByProject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs": {
      "get": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Lists the catalogs associated with a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "ProjectCatalogs_List",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogs_List": {
            "$ref": "./examples/ProjectCatalogs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Gets an associated project catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "ProjectCatalogs_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogs_Get": {
            "$ref": "./examples/ProjectCatalogs_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Creates or updates a project catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a catalog.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "operationId": "ProjectCatalogs_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ProjectCatalogs_CreateOrUpdateGitHub": {
            "$ref": "./examples/ProjectCatalogs_CreateGitHub.json"
          },
          "ProjectCatalogs_CreateOrUpdateAdo": {
            "$ref": "./examples/ProjectCatalogs_CreateAdo.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Partially updates a project catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project catalog properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogUpdate"
            }
          }
        ],
        "operationId": "ProjectCatalogs_Patch",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "202": {
            "description": "The request will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ProjectCatalogs_Patch": {
            "$ref": "./examples/ProjectCatalogs_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Deletes a project catalog resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "ProjectCatalogs_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogs_Delete": {
            "$ref": "./examples/ProjectCatalogs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Lists the environment definitions in this project catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "EnvironmentDefinitions_ListByProjectCatalog",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentDefinitions_ListByProjectCatalog": {
            "$ref": "./examples/EnvironmentDefinitions_ListByProjectCatalog.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/EnvironmentDefinitionNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Gets an environment definition from the catalog.",
        "operationId": "EnvironmentDefinitions_GetByProjectCatalog",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentDefinitions_GetByProjectCatalog": {
            "$ref": "./examples/EnvironmentDefinitions_GetByProjectCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}/getErrorDetails": {
      "post": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Gets Environment Definition error details",
        "operationId": "ProjectCatalogEnvironmentDefinitions_GetErrorDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "vdi.json#/definitions/CatalogResourceValidationErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogEnvironmentDefinitions_GetErrorDetails": {
            "$ref": "./examples/ProjectCatalogEnvironmentDefinitions_GetErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/getSyncErrorDetails": {
      "post": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Gets project catalog synchronization error details",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "ProjectCatalogs_GetSyncErrorDetails",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SyncErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogs_GetSyncErrorDetails": {
            "$ref": "./examples/ProjectCatalogs_GetSyncErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/sync": {
      "post": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Syncs templates for a template source.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "ProjectCatalogs_Sync",
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ProjectCatalogs_Sync": {
            "$ref": "./examples/ProjectCatalogs_Sync.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/connect": {
      "post": {
        "tags": [
          "Project Catalogs"
        ],
        "description": "Connects a project catalog to enable syncing.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "ProjectCatalogs_Connect",
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ProjectCatalogs_Connect": {
            "$ref": "./examples/ProjectCatalogs_Connect.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries": {
      "get": {
        "tags": [
          "Galleries"
        ],
        "description": "Lists galleries for a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Galleries_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GalleryListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_ListByDevCenter": {
            "$ref": "./examples/Galleries_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}": {
      "get": {
        "tags": [
          "Galleries"
        ],
        "description": "Gets a gallery",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          }
        ],
        "operationId": "Galleries_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_Get": {
            "$ref": "./examples/Galleries_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Galleries"
        ],
        "description": "Creates or updates a gallery.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a gallery.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          }
        ],
        "operationId": "Galleries_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Galleries_CreateOrUpdate": {
            "$ref": "./examples/Galleries_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Galleries"
        ],
        "description": "Deletes a gallery resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          }
        ],
        "operationId": "Galleries_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_Delete": {
            "$ref": "./examples/Galleries_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Lists images for a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Images_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_ListByDevCenter": {
            "$ref": "./examples/Images_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Lists images for a gallery.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Images_ListByGallery",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_ListByGallery": {
            "$ref": "./examples/Images_ListByGallery.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Gets a gallery image.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          },
          {
            "$ref": "#/parameters/ImageNameParameter"
          }
        ],
        "operationId": "Images_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_Get": {
            "$ref": "./examples/Images_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions": {
      "get": {
        "tags": [
          "Image Versions"
        ],
        "description": "Lists versions for an image.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          },
          {
            "$ref": "#/parameters/ImageNameParameter"
          }
        ],
        "operationId": "ImageVersions_ListByImage",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageVersions_ListByImage": {
            "$ref": "./examples/ImageVersions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions/{versionName}": {
      "get": {
        "tags": [
          "Image Versions"
        ],
        "description": "Gets an image version.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryNameParameter"
          },
          {
            "$ref": "#/parameters/ImageNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          }
        ],
        "operationId": "ImageVersions_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Versions_Get": {
            "$ref": "./examples/ImageVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Lists images for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Images_ListByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_ListByProject": {
            "$ref": "./examples/Images_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/images/{imageName}": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Gets an image.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectImageNameParameter"
          }
        ],
        "operationId": "Images_GetByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_GetByProject": {
            "$ref": "./examples/Images_GetByProject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/images/{imageName}/versions": {
      "get": {
        "tags": [
          "Image Versions"
        ],
        "description": "Lists versions for an image.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectImageNameParameter"
          }
        ],
        "operationId": "ImageVersions_ListByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageVersions_ListByProject": {
            "$ref": "./examples/ImageVersions_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/images/{imageName}/versions/{versionName}": {
      "get": {
        "tags": [
          "Image Versions"
        ],
        "description": "Gets an image version.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectImageNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          }
        ],
        "operationId": "ImageVersions_GetByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageVersions_GetByProject": {
            "$ref": "./examples/ImageVersions_GetByProject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/listSkus": {
      "post": {
        "tags": [
          "Project SKUs"
        ],
        "description": "Lists SKUs available to the project",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Skus_ListByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "vdi.json#/definitions/SkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_ListByProject": {
            "$ref": "./examples/Skus_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks": {
      "get": {
        "tags": [
          "Attached NetworkConnections."
        ],
        "description": "Lists the attached NetworkConnections for a DevCenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "AttachedNetworks_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_ListByDevCenter": {
            "$ref": "./examples/AttachedNetworks_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks/{attachedNetworkConnectionName}": {
      "get": {
        "tags": [
          "Attached NetworkConnections"
        ],
        "description": "Gets an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedNetworkConnectionNameParameter"
          }
        ],
        "operationId": "AttachedNetworks_GetByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_GetByDevCenter": {
            "$ref": "./examples/AttachedNetworks_GetByDevCenter.json"
          }
        }
      },
      "put": {
        "tags": [
          "Attached NetworkConnections"
        ],
        "description": "Creates or updates an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedNetworkConnectionNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an attached NetworkConnection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          }
        ],
        "operationId": "AttachedNetworks_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AttachedNetworks_Create": {
            "$ref": "./examples/AttachedNetworks_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Attached NetworkConnections"
        ],
        "description": "Un-attach a NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedNetworkConnectionNameParameter"
          }
        ],
        "operationId": "AttachedNetworks_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_Delete": {
            "$ref": "./examples/AttachedNetworks_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Lists catalogs for a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Catalogs_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_ListByDevCenter": {
            "$ref": "./examples/Catalogs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Gets a catalog",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Catalogs_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Get": {
            "$ref": "./examples/Catalogs_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogs"
        ],
        "description": "Creates or updates a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a catalog.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "operationId": "Catalogs_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Catalogs_CreateOrUpdateGitHub": {
            "$ref": "./examples/Catalogs_CreateGitHub.json"
          },
          "Catalogs_CreateOrUpdateAdo": {
            "$ref": "./examples/Catalogs_CreateAdo.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Catalogs"
        ],
        "description": "Partially updates a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable catalog properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogUpdate"
            }
          }
        ],
        "operationId": "Catalogs_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "202": {
            "description": "The request will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Catalogs_Update": {
            "$ref": "./examples/Catalogs_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogs"
        ],
        "description": "Deletes a catalog resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Catalogs_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Delete": {
            "$ref": "./examples/Catalogs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/getSyncErrorDetails": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        }
      ],
      "post": {
        "tags": [
          "Catalogs"
        ],
        "description": "Gets catalog synchronization error details",
        "operationId": "Catalogs_GetSyncErrorDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SyncErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_GetSyncErrorDetails": {
            "$ref": "./examples/Catalogs_GetSyncErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/sync": {
      "post": {
        "tags": [
          "Catalogs"
        ],
        "description": "Syncs templates for a template source.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Catalogs_Sync",
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Catalogs_Sync": {
            "$ref": "./examples/Catalogs_Sync.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/connect": {
      "post": {
        "tags": [
          "Catalogs"
        ],
        "description": "Connects a catalog to enable syncing.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Catalogs_Connect",
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Catalogs_Connect": {
            "$ref": "./examples/Catalogs_Connect.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Lists environment types for the devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "EnvironmentTypes_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_ListByDevCenter": {
            "$ref": "./examples/EnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes/{environmentTypeName}": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Gets an environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "EnvironmentTypes_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Get": {
            "$ref": "./examples/EnvironmentTypes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Environment Types"
        ],
        "description": "Creates or updates an environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an Environment Type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          }
        ],
        "operationId": "EnvironmentTypes_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_CreateOrUpdate": {
            "$ref": "./examples/EnvironmentTypes_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Environment Types"
        ],
        "description": "Partially updates an environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable environment type properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeUpdate"
            }
          }
        ],
        "operationId": "EnvironmentTypes_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Update": {
            "$ref": "./examples/EnvironmentTypes_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Environment Types"
        ],
        "description": "Deletes an environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "EnvironmentTypes_Delete",
        "responses": {
          "200": {
            "description": "Resource was deleted."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Delete": {
            "$ref": "./examples/EnvironmentTypes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Lists allowed environment types for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "ProjectAllowedEnvironmentTypes_List",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AllowedEnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectAllowedEnvironmentTypes_List": {
            "$ref": "./examples/ProjectAllowedEnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes/{environmentTypeName}": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Gets an allowed environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "ProjectAllowedEnvironmentTypes_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AllowedEnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectAllowedEnvironmentTypes_Get": {
            "$ref": "./examples/ProjectAllowedEnvironmentTypes_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Lists environment types for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "ProjectEnvironmentTypes_List",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_List": {
            "$ref": "./examples/ProjectEnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Gets a project environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "ProjectEnvironmentTypes_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Get": {
            "$ref": "./examples/ProjectEnvironmentTypes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Environment Types"
        ],
        "description": "Creates or updates a project environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a Project Environment Type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          }
        ],
        "operationId": "ProjectEnvironmentTypes_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_CreateOrUpdate": {
            "$ref": "./examples/ProjectEnvironmentTypes_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Environment Types"
        ],
        "description": "Partially updates a project environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project environment type properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentTypeUpdate"
            }
          }
        ],
        "operationId": "ProjectEnvironmentTypes_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Update": {
            "$ref": "./examples/ProjectEnvironmentTypes_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Environment Types"
        ],
        "description": "Deletes a project environment type.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "ProjectEnvironmentTypes_Delete",
        "responses": {
          "200": {
            "description": "Resource was deleted."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Delete": {
            "$ref": "./examples/ProjectEnvironmentTypes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "List Dev Box definitions for a devcenter.",
        "operationId": "DevBoxDefinitions_ListByDevCenter",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DevBoxDefinitions_ListByDevCenter": {
            "$ref": "./examples/DevBoxDefinitions_ListByDevCenter.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/DevBoxDefinitionName"
        }
      ],
      "get": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "Gets a Dev Box definition",
        "operationId": "DevBoxDefinitions_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Get": {
            "$ref": "./examples/DevBoxDefinitions_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "Creates or updates a Dev Box definition.",
        "operationId": "DevBoxDefinitions_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a Dev Box definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "201": {
            "description": "Created. The operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Create": {
            "$ref": "./examples/DevBoxDefinitions_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "Partially updates a Dev Box definition.",
        "operationId": "DevBoxDefinitions_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a Dev Box definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Patch": {
            "$ref": "./examples/DevBoxDefinitions_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "Deletes a Dev Box definition",
        "operationId": "DevBoxDefinitions_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Delete": {
            "$ref": "./examples/DevBoxDefinitions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "List Dev Box definitions configured for a project.",
        "operationId": "DevBoxDefinitions_ListByProject",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DevBoxDefinitions_ListByProject": {
            "$ref": "./examples/DevBoxDefinitions_ListByProject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/{devBoxDefinitionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/DevBoxDefinitionName"
        }
      ],
      "get": {
        "tags": [
          "Dev Box Definitions"
        ],
        "description": "Gets a Dev Box definition configured for a project",
        "operationId": "DevBoxDefinitions_GetByProject",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_GetByProject": {
            "$ref": "./examples/DevBoxDefinitions_GetByProject.json"
          }
        }
      }
    },
    "/providers/Microsoft.DevCenter/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available resource provider operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_Get": {
            "$ref": "./examples/Operations_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "description": "Gets the current status of an async operation.",
        "operationId": "OperationStatuses_Get",
        "summary": "Get Operation Status",
        "tags": [
          "OperationStatus"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested operation status",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "The requested operation status",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/OperationStatus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages": {
      "get": {
        "operationId": "Usages_ListByLocation",
        "description": "Lists the current usages and limits in this location for the provided subscription.",
        "tags": [
          "Usages"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; a list of usages is returned",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "The default error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "listUsages": {
            "$ref": "./examples/Usages_ListByLocation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "operationId": "CheckNameAvailability_Execute",
        "x-ms-examples": {
          "NameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        },
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            },
            "description": "The required parameters for checking if resource name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkScopedNameAvailability": {
      "post": {
        "tags": [
          "CheckScopedNameAvailability"
        ],
        "operationId": "CheckScopedNameAvailability_Execute",
        "x-ms-examples": {
          "DevcenterCatalogNameAvailability": {
            "$ref": "./examples/CheckScopedNameAvailability_DevCenterCatalog.json"
          },
          "ProjectCatalogNameAvailability": {
            "$ref": "./examples/CheckScopedNameAvailability_ProjectCatalog.json"
          }
        },
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckScopedNameAvailabilityRequest"
            },
            "description": "The required parameters for checking if resource name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Customization Tasks"
        ],
        "description": "List Tasks in the catalog.",
        "operationId": "CustomizationTasks_ListByCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CustomizationTaskListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "CustomizationTasks_ListByCatalog": {
            "$ref": "./examples/CustomizationTasks_ListByCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks/{taskName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/CustomizationTaskNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Customization Tasks"
        ],
        "description": "Gets a Task from the catalog",
        "operationId": "CustomizationTasks_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CustomizationTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomizationTasks_Get": {
            "$ref": "./examples/CustomizationTasks_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks/{taskName}/getErrorDetails": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/CustomizationTaskNameParameter"
        }
      ],
      "post": {
        "tags": [
          "Customization Tasks"
        ],
        "description": "Gets Customization Task error details",
        "operationId": "CustomizationTasks_GetErrorDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "vdi.json#/definitions/CatalogResourceValidationErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomizationTasks_GetErrorDetails": {
            "$ref": "./examples/CustomizationTasks_GetErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "List environment definitions in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DevCenterNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/TopParameter"
          }
        ],
        "operationId": "EnvironmentDefinitions_ListByCatalog",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "EnvironmentDefinitions_ListByCatalog": {
            "$ref": "./examples/EnvironmentDefinitions_ListByCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/EnvironmentDefinitionNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Gets an environment definition from the catalog.",
        "operationId": "EnvironmentDefinitions_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentDefinitions_Get": {
            "$ref": "./examples/EnvironmentDefinitions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}/getErrorDetails": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/DevCenterNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/EnvironmentDefinitionNameParameter"
        }
      ],
      "post": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Gets Environment Definition error details",
        "operationId": "EnvironmentDefinitions_GetErrorDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "vdi.json#/definitions/CatalogResourceValidationErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentDefinitions_GetErrorDetails": {
            "$ref": "./examples/EnvironmentDefinitions_GetErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Image Definitions"
        ],
        "description": "List Image Definitions in the catalog.",
        "operationId": "ProjectCatalogImageDefinitions_ListByProjectCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ImageDefinitions_ListByProjectCatalog": {
            "$ref": "./examples/ImageDefinitions_ListByProjectCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Gets an Image Definition from the catalog",
        "operationId": "ProjectCatalogImageDefinitions_GetByProjectCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageDefinitions_GetByProjectCatalog": {
            "$ref": "./examples/ImageDefinitions_GetByProjectCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/getErrorDetails": {
      "post": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Gets Image Definition error details",
        "operationId": "ProjectCatalogImageDefinitions_GetErrorDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ImageDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "vdi.json#/definitions/CatalogResourceValidationErrorDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogImageDefinitions_GetErrorDetails": {
            "$ref": "./examples/ProjectCatalogImageDefinitions_GetErrorDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/buildImage": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionNameParameter"
        }
      ],
      "post": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Builds an image for the specified Image Definition.",
        "operationId": "ProjectCatalogImageDefinitions_BuildImage",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ProjectCatalogImageDefinitions_BuildImage": {
            "$ref": "./examples/ImageDefinitions_BuildImage.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/builds": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Lists builds for a specified image definition.",
        "operationId": "ProjectCatalogImageDefinitionBuilds_ListByImageDefinition",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDefinitionBuildListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageDefinitionBuilds_ListByImageDefinition": {
            "$ref": "./examples/ImageDefinitions_ListImageBuildsByImageDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/builds/{buildName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionBuildNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Gets a build for a specified image definition.",
        "operationId": "ProjectCatalogImageDefinitionBuild_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDefinitionBuild"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageDefinitionBuilds_GetByImageDefinition": {
            "$ref": "./examples/ImageDefinitions_GetImageBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/builds/{buildName}/cancel": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/CatalogNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionNameParameter"
        },
        {
          "$ref": "#/parameters/ImageDefinitionBuildNameParameter"
        }
      ],
      "post": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Cancels the specified build for an image definition.",
        "operationId": "ProjectCatalogImageDefinitionBuild_Cancel",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ImageDefinitionBuilds_CancelByImageDefinition": {
            "$ref": "./examples/ImageDefinitions_CancelImageBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}/builds/{buildName}/getBuildDetails": {
      "post": {
        "tags": [
          "Image Definitions"
        ],
        "description": "Gets Build details",
        "operationId": "ProjectCatalogImageDefinitionBuild_GetBuildDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ImageDefinitionNameParameter"
          },
          {
            "$ref": "#/parameters/ImageDefinitionBuildNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDefinitionBuildDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectCatalogImageDefinitionBuild_GetErrorDetails": {
            "$ref": "./examples/ImageDefinitions_GetImageBuildDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "SKUs"
        ],
        "description": "Lists the Microsoft.DevCenter SKUs available in a subscription",
        "operationId": "Skus_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Skus_ListBySubscription": {
            "$ref": "./examples/Skus_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Pools"
        ],
        "description": "Lists pools for a project",
        "operationId": "Pools_ListByProject",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PoolListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Pools_ListByProject": {
            "$ref": "./examples/Pools_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/PoolNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Pools"
        ],
        "description": "Gets a machine pool",
        "operationId": "Pools_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "./examples/Pools_Get.json"
          },
          "Pools_GetUnhealthyStatus": {
            "$ref": "./examples/Pools_GetUnhealthyStatus.json"
          }
        }
      },
      "put": {
        "tags": [
          "Pools"
        ],
        "description": "Creates or updates a machine pool",
        "operationId": "Pools_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "./examples/Pools_Put.json"
          },
          "Pools_CreateOrUpdateWithManagedNetwork": {
            "$ref": "./examples/Pools_PutWithManagedNetwork.json"
          },
          "Pools_CreateOrUpdateWithValueDevBoxDefinition": {
            "$ref": "./examples/Pools_PutWithValueDevBoxDefinition.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Pools"
        ],
        "description": "Partially updates a machine pool",
        "operationId": "Pools_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PoolUpdate"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "./examples/Pools_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Pools"
        ],
        "description": "Deletes a machine pool",
        "operationId": "Pools_Delete",
        "parameters": [],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "./examples/Pools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/runHealthChecks": {
      "post": {
        "tags": [
          "Pools"
        ],
        "description": "Triggers a refresh of the pool status.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/PoolNameParameter"
          }
        ],
        "operationId": "Pools_RunHealthChecks",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Initiating pool status refresh.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_RefreshStatus": {
            "$ref": "./examples/Pools_RunHealthChecks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/PoolNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "Lists schedules for a pool",
        "operationId": "Schedules_ListByPool",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScheduleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Schedules_ListByPool": {
            "$ref": "./examples/Schedules_ListByPool.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules/{scheduleName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/PoolNameParameter"
        },
        {
          "$ref": "#/parameters/ScheduleNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "Gets a schedule resource.",
        "operationId": "Schedules_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_GetByPool": {
            "$ref": "./examples/Schedules_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Schedules"
        ],
        "description": "Creates or updates a Schedule.",
        "operationId": "Schedules_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a scheduled task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_CreateDailyShutdownPoolSchedule": {
            "$ref": "./examples/Schedules_CreateDailyShutdownPoolSchedule.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Schedules"
        ],
        "description": "Partially updates a Scheduled.",
        "operationId": "Schedules_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a scheduled task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleUpdate"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Update": {
            "$ref": "./examples/Schedules_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "description": "Deletes a Scheduled.",
        "operationId": "Schedules_Delete",
        "parameters": [],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Delete": {
            "$ref": "./examples/Schedules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists network connections in a subscription",
        "operationId": "NetworkConnections_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListBySubscription": {
            "$ref": "./examples/NetworkConnections_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists network connections in a resource group",
        "operationId": "NetworkConnections_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListByResourceGroup": {
            "$ref": "./examples/NetworkConnections_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkConnectionName"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Gets a network connection resource",
        "operationId": "NetworkConnections_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Get": {
            "$ref": "./examples/NetworkConnections_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Network Connections"
        ],
        "description": "Creates or updates a Network Connections resource",
        "operationId": "NetworkConnections_CreateOrUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_CreateOrUpdate": {
            "$ref": "./examples/NetworkConnections_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Network Connections"
        ],
        "description": "Partially updates a Network Connection",
        "operationId": "NetworkConnections_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnectionUpdate"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Update": {
            "$ref": "./examples/NetworkConnections_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Network Connections"
        ],
        "description": "Deletes a Network Connections resource",
        "operationId": "NetworkConnections_Delete",
        "parameters": [],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Delete": {
            "$ref": "./examples/NetworkConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        },
        {
          "$ref": "#/parameters/NetworkConnectionName"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists health check status details",
        "operationId": "NetworkConnections_ListHealthDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListHealthDetails": {
            "$ref": "./examples/NetworkConnections_ListHealthDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks/latest": {
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Gets health check status details.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkConnectionName"
          }
        ],
        "operationId": "NetworkConnections_GetHealthDetails",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_GetHealthDetails": {
            "$ref": "./examples/NetworkConnections_GetHealthDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/runHealthChecks": {
      "post": {
        "tags": [
          "Network Connection"
        ],
        "description": "Triggers a new health check run. The execution and health check result can be tracked via the network Connection health check details",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkConnectionName"
          }
        ],
        "operationId": "NetworkConnections_RunHealthChecks",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "202": {
            "description": "Accepted. Initiating health checks.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_RunHealthChecks": {
            "$ref": "./examples/NetworkConnections_RunHealthChecks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/outboundNetworkDependenciesEndpoints": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        },
        {
          "$ref": "#/parameters/NetworkConnectionName"
        }
      ],
      "get": {
        "tags": [
          "Network Connection"
        ],
        "operationId": "NetworkConnections_ListOutboundNetworkDependenciesEndpoints",
        "description": "Lists the endpoints that agents may call as part of Dev Box service administration. These FQDNs should be allowed for outbound access in order for the Dev Box service to function.",
        "parameters": [],
        "x-ms-examples": {
          "ListOutboundNetworkDependencies": {
            "$ref": "./examples/NetworkConnections_ListOutboundNetworkDependenciesEndpoints.json"
          }
        },
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains a list of outbound network dependencies.",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "DevCenterNameParameter": {
      "name": "devCenterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the devcenter.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$",
      "minLength": 3,
      "maxLength": 26
    },
    "ProjectPolicyNameParameter": {
      "name": "projectPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the project policy.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "ProjectNameParameter": {
      "name": "projectName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the project.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "CatalogNameParameter": {
      "name": "catalogName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Catalog.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "GalleryNameParameter": {
      "name": "galleryName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the gallery.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "ImageNameParameter": {
      "name": "imageName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the image.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]{0,78}[a-zA-Z0-9]$",
      "minLength": 3,
      "maxLength": 80
    },
    "ProjectImageNameParameter": {
      "name": "imageName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the image.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9~][a-zA-Z0-9-.~]{0,151}[a-zA-Z0-9]$",
      "minLength": 3,
      "maxLength": 153
    },
    "VersionNameParameter": {
      "name": "versionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The version of the image.",
      "x-ms-parameter-location": "method",
      "pattern": "^[0-9]{1,10}[.][0-9]{1,10}[.][0-9]{1,10}$",
      "minLength": 5,
      "maxLength": 32
    },
    "EnvironmentTypeNameParameter": {
      "name": "environmentTypeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the environment type.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "AttachedNetworkConnectionNameParameter": {
      "name": "attachedNetworkConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the attached NetworkConnection.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "DevBoxDefinitionName": {
      "name": "devBoxDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Dev Box definition.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName').",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "CustomizationTaskNameParameter": {
      "name": "taskName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Task.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "EnvironmentDefinitionNameParameter": {
      "name": "environmentDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Environment Definition.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "ImageDefinitionNameParameter": {
      "name": "imageDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Image Definition.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "ImageDefinitionBuildNameParameter": {
      "name": "buildName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the Image Definition Build.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
      "type": "integer",
      "format": "int32",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "PoolNameParameter": {
      "name": "poolName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the pool.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "NetworkConnectionName": {
      "name": "networkConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the Network Connection that can be applied to a Pool.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63
    },
    "ScheduleNameParameter": {
      "name": "scheduleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the schedule that uniquely identifies it.",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[-\\w]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "DevCenter": {
      "type": "object",
      "description": "Represents a devcenter resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DevCenter properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DevCenterProperties"
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "DevCenterProperties": {
      "description": "Properties of the devcenter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DevCenterUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "devCenterUri": {
          "description": "The URI of the Dev Center.",
          "$ref": "#/definitions/DevCenterUri",
          "readOnly": true
        }
      }
    },
    "DevCenterUpdateProperties": {
      "description": "Properties of the devcenter. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations)."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the devcenter."
        },
        "projectCatalogSettings": {
          "$ref": "#/definitions/DevCenterProjectCatalogSettings",
          "description": "Dev Center settings to be used when associating a project with a catalog."
        },
        "networkSettings": {
          "$ref": "#/definitions/DevCenterNetworkSettings",
          "description": "Network settings that will be enforced on network resources associated with the Dev Center."
        },
        "devBoxProvisioningSettings": {
          "$ref": "#/definitions/DevBoxProvisioningSettings",
          "description": "Settings to be used in the provisioning of all Dev Boxes that belong to this dev center."
        }
      }
    },
    "DevCenterProjectCatalogSettings": {
      "type": "object",
      "description": "Project catalog settings for project catalogs under a project associated to this dev center.",
      "properties": {
        "catalogItemSyncEnableStatus": {
          "description": "Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.",
          "$ref": "#/definitions/CatalogItemSyncEnableStatus"
        }
      }
    },
    "DevCenterResourceType": {
      "description": "Indicates dev center resource types.",
      "enum": [
        "Images",
        "AttachedNetworks",
        "Skus"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DevCenterResourceType",
        "modelAsString": true
      }
    },
    "DevBoxProvisioningSettings": {
      "type": "object",
      "description": "Provisioning settings that apply to all Dev Boxes created in this dev center",
      "properties": {
        "installAzureMonitorAgentEnableStatus": {
          "description": "Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.",
          "$ref": "#/definitions/InstallAzureMonitorAgentEnableStatus"
        }
      }
    },
    "CatalogItemSyncEnableStatus": {
      "description": "Catalog item sync types enable or disable status. Indicates whether project catalogs are allowed to sync catalog items under projects associated to this dev center.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CatalogItemSyncEnableStatus",
        "modelAsString": true
      }
    },
    "DevCenterNetworkSettings": {
      "type": "object",
      "description": "Network settings for the Dev Center.",
      "properties": {
        "microsoftHostedNetworkEnableStatus": {
          "$ref": "#/definitions/MicrosoftHostedNetworkEnableStatus"
        }
      }
    },
    "ProjectNetworkSettings": {
      "type": "object",
      "description": "Network settings for the project.",
      "properties": {
        "microsoftHostedNetworkEnableStatus": {
          "$ref": "#/definitions/MicrosoftHostedNetworkEnableStatus",
          "readOnly": true
        }
      }
    },
    "MicrosoftHostedNetworkEnableStatus": {
      "description": "Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MicrosoftHostedNetworkEnableStatus",
        "modelAsString": true
      }
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "customerManagedKeyEncryption": {
          "$ref": "../../../../../common-types/resource-management/v4/customermanagedkeys.json#/definitions/customerManagedKeyEncryption"
        }
      }
    },
    "InstallAzureMonitorAgentEnableStatus": {
      "description": "Setting to be used when determining whether to install the Azure Monitor Agent service on Dev Boxes that belong to this dev center.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InstallAzureMonitorAgentEnableStatus",
        "modelAsString": true
      }
    },
    "DevCenterUpdate": {
      "description": "The devcenter resource for partial updates. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DevCenterUpdateProperties",
          "description": "Properties of a Dev Center to be updated."
        }
      }
    },
    "DevCenterListResult": {
      "description": "Result of the list devcenters operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevCenter"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DevCenterUri": {
      "description": "The URI of the resource.",
      "readOnly": true,
      "type": "string"
    },
    "Project": {
      "description": "Represents a project resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectProperties",
          "description": "Properties of a project."
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "ProjectUpdateProperties": {
      "description": "Properties of a project. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "devCenterId": {
          "type": "string",
          "description": "Resource Id of an associated DevCenter"
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "maxDevBoxesPerUser": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the project."
        },
        "catalogSettings": {
          "$ref": "#/definitions/ProjectCatalogSettings",
          "description": "Settings to be used when associating a project with a catalog."
        }
      }
    },
    "ProjectCatalogSettings": {
      "description": "Settings to be used when associating a project with a catalog.",
      "type": "object",
      "properties": {
        "catalogItemSyncTypes": {
          "description": "Indicates catalog item types that can be synced.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemType"
          }
        }
      }
    },
    "ProjectProperties": {
      "description": "Properties of a project.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "devCenterUri": {
          "description": "The URI of the Dev Center resource this project is associated with.",
          "$ref": "#/definitions/DevCenterUri",
          "readOnly": true
        }
      }
    },
    "ProjectUpdate": {
      "description": "The project properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectUpdateProperties",
          "description": "Properties of a project to be updated."
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "ProjectListResult": {
      "description": "Results of the project list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InheritedSettingsForProject": {
      "description": "Applicable inherited settings for a project.",
      "type": "object",
      "properties": {
        "projectCatalogSettings": {
          "$ref": "#/definitions/DevCenterProjectCatalogSettings",
          "description": "Dev Center settings to be used when associating a project with a catalog.",
          "readOnly": true
        },
        "networkSettings": {
          "$ref": "#/definitions/ProjectNetworkSettings",
          "description": "Network settings that will be enforced on this project.",
          "readOnly": true
        }
      }
    },
    "ResourcePolicy": {
      "description": "A resource policy.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "Resources that are included and shared as a part of a project policy.",
          "type": "string"
        },
        "filter": {
          "description": "Optional. When specified, this expression is used to filter the resources.",
          "type": "string"
        },
        "action": {
          "description": "Policy action to be taken on the resources. This is optional, and defaults to allow",
          "$ref": "#/definitions/PolicyAction"
        },
        "resourceType": {
          "description": "Optional. The resource type being restricted or allowed by a project policy. Used with a given action to restrict or allow access to a resource type.",
          "$ref": "#/definitions/DevCenterResourceType"
        }
      }
    },
    "PolicyAction": {
      "description": "Indicates what action to perform for the policy.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PolicyAction",
        "modelAsString": true
      }
    },
    "ProjectPolicyListResult": {
      "description": "Results of the project policy list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectPolicy"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProjectPolicy": {
      "description": "Represents an project policy resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectPolicyProperties",
          "description": "Properties of an project policy."
        }
      }
    },
    "ProjectPolicyProperties": {
      "description": "Properties of an project policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectPolicyUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "ProjectPolicyUpdateProperties": {
      "description": "Properties of an project policy. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "resourcePolicies": {
          "description": "Resource policies that are a part of this project policy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourcePolicy"
          }
        },
        "scopes": {
          "description": "Resources that have access to the shared resources that are a part of this project policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectPolicyUpdate": {
      "description": "The project policy properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectPolicyUpdateProperties",
          "description": "Properties of an project policy to be updated."
        }
      }
    },
    "Catalog": {
      "description": "Represents a catalog.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogProperties",
          "description": "Catalog properties."
        }
      }
    },
    "CatalogUpdateProperties": {
      "description": "Properties of a catalog. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "gitHub": {
          "description": "Properties for a GitHub catalog type.",
          "$ref": "#/definitions/GitCatalog"
        },
        "adoGit": {
          "description": "Properties for an Azure DevOps catalog type.",
          "$ref": "#/definitions/GitCatalog"
        },
        "syncType": {
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "description": "Indicates the type of sync that is configured for the catalog.",
          "type": "string",
          "x-ms-enum": {
            "name": "CatalogSyncType",
            "modelAsString": true
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "CatalogProperties": {
      "description": "Properties of a catalog.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CatalogUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "syncState": {
          "enum": [
            "Succeeded",
            "InProgress",
            "Failed",
            "Canceled"
          ],
          "description": "The synchronization state of the catalog.",
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "CatalogSyncState",
            "modelAsString": true
          }
        },
        "lastSyncStats": {
          "description": "Stats of the latest synchronization.",
          "$ref": "#/definitions/SyncStats",
          "readOnly": true
        },
        "connectionState": {
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "description": "The connection state of the catalog.",
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "CatalogConnectionState",
            "modelAsString": true
          }
        },
        "lastConnectionTime": {
          "description": "When the catalog was last connected.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "lastSyncTime": {
          "description": "When the catalog was last synced.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        }
      }
    },
    "SyncStats": {
      "description": "Stats of the synchronization.",
      "type": "object",
      "properties": {
        "added": {
          "description": "Count of catalog items added during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "updated": {
          "description": "Count of catalog items updated during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "unchanged": {
          "description": "Count of catalog items that were unchanged during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "removed": {
          "description": "Count of catalog items removed during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "validationErrors": {
          "description": "Count of catalog items that had validation errors during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "synchronizationErrors": {
          "description": "Count of synchronization errors that occured during synchronization.",
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "minimum": 0
        },
        "syncedCatalogItemTypes": {
          "description": "Indicates catalog item types that were synced.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemType"
          }
        }
      }
    },
    "GitCatalog": {
      "description": "Properties for a Git repository catalog.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Git URI.",
          "type": "string"
        },
        "branch": {
          "description": "Git branch.",
          "type": "string"
        },
        "secretIdentifier": {
          "description": "A reference to the Key Vault secret containing a security token to authenticate to a Git repository.",
          "type": "string"
        },
        "path": {
          "description": "The folder where the catalog items can be found inside the repository.",
          "type": "string"
        }
      }
    },
    "CatalogUpdate": {
      "description": "The catalog's properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogUpdateProperties",
          "description": "Catalog properties for update."
        }
      }
    },
    "CatalogListResult": {
      "description": "Results of the catalog list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SyncErrorDetails": {
      "description": "Synchronization error details.",
      "type": "object",
      "properties": {
        "operationError": {
          "description": "Error information for the overall synchronization operation.",
          "readOnly": true,
          "$ref": "vdi.json#/definitions/CatalogErrorDetails"
        },
        "conflicts": {
          "description": "Catalog items that have conflicting names.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogConflictError"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "errors": {
          "description": "Errors that occured during synchronization.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogSyncError"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "CatalogSyncError": {
      "description": "An individual synchronization error.",
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of the file the error is associated with.",
          "type": "string",
          "readOnly": true
        },
        "errorDetails": {
          "description": "Errors associated with the file.",
          "type": "array",
          "items": {
            "$ref": "vdi.json#/definitions/CatalogErrorDetails"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "CatalogConflictError": {
      "description": "An individual conflict error.",
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of the file that has a conflicting name.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the conflicting catalog item.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Gallery": {
      "description": "Represents a gallery.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GalleryProperties",
          "description": "Gallery properties."
        }
      }
    },
    "GalleryProperties": {
      "description": "Properties of a gallery.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "galleryResourceId": {
          "description": "The resource ID of the backing Azure Compute Gallery.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "galleryResourceId"
      ]
    },
    "Image": {
      "description": "Represents an image.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageProperties",
          "description": "Image properties."
        }
      }
    },
    "ImageProperties": {
      "description": "Properties of an image.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the image.",
          "type": "string",
          "readOnly": true
        },
        "publisher": {
          "description": "The publisher of the image.",
          "type": "string",
          "readOnly": true
        },
        "offer": {
          "description": "The name of the image offer.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "The SKU name for the image.",
          "type": "string",
          "readOnly": true
        },
        "recommendedMachineConfiguration": {
          "description": "The recommended machine configuration to use with the image.",
          "$ref": "#/definitions/RecommendedMachineConfiguration",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "hibernateSupport": {
          "description": "Indicates whether this image has hibernate enabled. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate",
          "readOnly": true,
          "$ref": "#/definitions/HibernateSupport"
        }
      }
    },
    "RecommendedMachineConfiguration": {
      "description": "Properties for a recommended machine configuration.",
      "type": "object",
      "properties": {
        "memory": {
          "description": "Recommended memory range.",
          "$ref": "#/definitions/ResourceRange",
          "readOnly": true
        },
        "vCPUs": {
          "description": "Recommended vCPU range.",
          "$ref": "#/definitions/ResourceRange",
          "readOnly": true
        }
      }
    },
    "ResourceRange": {
      "description": "Properties for a range of values.",
      "type": "object",
      "properties": {
        "min": {
          "description": "Minimum value.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "max": {
          "description": "Maximum value.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "ImageVersion": {
      "description": "Represents an image version.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageVersionProperties",
          "description": "Image version properties."
        }
      }
    },
    "ImageVersionProperties": {
      "description": "Properties of an image version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The semantic version string.",
          "type": "string",
          "readOnly": true
        },
        "publishedDate": {
          "description": "The datetime that the backing image version was published.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "excludeFromLatest": {
          "description": "If the version should be excluded from being treated as the latest version.",
          "type": "boolean",
          "readOnly": true
        },
        "osDiskImageSizeInGb": {
          "description": "The size of the OS disk image, in GB.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "GalleryListResult": {
      "description": "Results of the gallery list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gallery"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImageListResult": {
      "description": "Results of the image list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImageVersionListResult": {
      "description": "Results of the image version list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageVersion"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AllowedEnvironmentType": {
      "description": "Represents an allowed environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AllowedEnvironmentTypeProperties",
          "description": "Properties of an allowed environment type."
        }
      }
    },
    "AllowedEnvironmentTypeProperties": {
      "description": "Properties of an allowed environment type.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the allowed environment type.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AllowedEnvironmentTypeListResult": {
      "description": "Result of the allowed environment type list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedEnvironmentType"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentType": {
      "description": "Represents an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentTypeProperties",
          "description": "Properties of an environment type."
        },
        "tags": {
          "$ref": "commonDefinitions.json#/definitions/Tags",
          "description": "Resource tags."
        }
      }
    },
    "EnvironmentTypeProperties": {
      "description": "Properties of an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentTypeUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "EnvironmentTypeUpdate": {
      "description": "The environment type for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentTypeUpdateProperties",
          "description": "Properties of an environment type to be updated."
        },
        "tags": {
          "$ref": "commonDefinitions.json#/definitions/Tags",
          "description": "Resource tags."
        }
      }
    },
    "EnvironmentTypeUpdateProperties": {
      "description": "Properties of an environment type. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the environment type."
        }
      }
    },
    "EnvironmentTypeListResult": {
      "description": "Result of the environment type list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProjectEnvironmentType": {
      "description": "Represents an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectEnvironmentTypeProperties",
          "description": "Properties of an environment type."
        },
        "tags": {
          "$ref": "commonDefinitions.json#/definitions/Tags",
          "description": "Resource tags."
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "type": "string",
          "description": "The geo-location for the environment type"
        }
      }
    },
    "ProjectEnvironmentTypeUpdateProperties": {
      "description": "Properties of a project environment type. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "deploymentTargetId": {
          "description": "Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the project environment type.",
          "type": "string"
        },
        "status": {
          "description": "Defines whether this Environment Type can be used in this Project.",
          "$ref": "#/definitions/EnvironmentTypeEnableStatus"
        },
        "creatorRoleAssignment": {
          "description": "The role definition assigned to the environment creator on backing resources.",
          "type": "object",
          "properties": {
            "roles": {
              "type": "object",
              "description": "A map of roles to assign to the environment creator.",
              "additionalProperties": {
                "$ref": "#/definitions/EnvironmentRole"
              }
            }
          }
        },
        "userRoleAssignments": {
          "description": "Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserRoleAssignment"
          }
        }
      }
    },
    "ProjectEnvironmentTypeProperties": {
      "description": "Properties of a project environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectEnvironmentTypeUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "environmentCount": {
          "description": "The number of environments of this type.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true
        }
      }
    },
    "ProjectEnvironmentTypeUpdate": {
      "description": "The project environment type for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectEnvironmentTypeUpdateProperties",
          "description": "Properties to configure an environment type."
        },
        "tags": {
          "$ref": "commonDefinitions.json#/definitions/Tags",
          "description": "Resource tags."
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "ProjectEnvironmentTypeListResult": {
      "description": "Result of the project environment type list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectEnvironmentType"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DevBoxDefinitionListResult": {
      "description": "Results of the Dev Box definition list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevBoxDefinition"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DevBoxDefinitionUpdate": {
      "description": "Partial update of a Dev Box definition resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DevBoxDefinitionUpdateProperties",
          "description": "Properties of a Dev Box definition to be updated."
        }
      }
    },
    "DevBoxDefinition": {
      "description": "Represents a definition for a Developer Machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Dev Box definition properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DevBoxDefinitionProperties"
        }
      }
    },
    "DevBoxDefinitionUpdateProperties": {
      "description": "Properties of a Dev Box definition. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "Image reference information."
        },
        "sku": {
          "description": "The SKU for Dev Boxes created using this definition.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku"
        },
        "osStorageType": {
          "description": "The storage type used for the Operating System disk of Dev Boxes created using this definition.",
          "type": "string"
        },
        "hibernateSupport": {
          "description": "Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate",
          "$ref": "#/definitions/HibernateSupport"
        }
      }
    },
    "DevBoxDefinitionProperties": {
      "description": "Properties of a Dev Box definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DevBoxDefinitionUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "imageValidationStatus": {
          "description": "Validation status of the configured image.",
          "$ref": "vdi.json#/definitions/ImageValidationStatus",
          "readOnly": true
        },
        "imageValidationErrorDetails": {
          "description": "Details for image validator error. Populated when the image validation is not successful.",
          "$ref": "vdi.json#/definitions/ImageValidationErrorDetails",
          "readOnly": true
        },
        "validationStatus": {
          "description": "Validation status for the Dev Box Definition.",
          "$ref": "vdi.json#/definitions/CatalogResourceValidationStatus",
          "readOnly": true
        },
        "activeImageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "Image reference information for the currently active image (only populated during updates).",
          "readOnly": true
        }
      },
      "required": [
        "imageReference",
        "sku"
      ]
    },
    "AttachedNetworkConnection": {
      "description": "Represents an attached NetworkConnection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AttachedNetworkConnectionProperties",
          "description": "Attached NetworkConnection properties."
        }
      }
    },
    "AttachedNetworkConnectionProperties": {
      "description": "Properties of an attached NetworkConnection.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "networkConnectionId": {
          "description": "The resource ID of the NetworkConnection you want to attach.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkConnectionLocation": {
          "description": "The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.",
          "type": "string",
          "readOnly": true
        },
        "healthCheckStatus": {
          "$ref": "vdi.json#/definitions/HealthCheckStatus",
          "readOnly": true
        },
        "domainJoinType": {
          "description": "AAD Join type of the network. This is populated based on the referenced Network Connection.",
          "$ref": "vdi.json#/definitions/DomainJoinType",
          "readOnly": true
        }
      },
      "required": [
        "networkConnectionId"
      ]
    },
    "AttachedNetworkListResult": {
      "description": "Results of the Attached Networks list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedNetworkConnection"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentRole": {
      "type": "object",
      "description": "A role that can be assigned to a user.",
      "properties": {
        "roleName": {
          "description": "The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "This is a description of the Role Assignment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserRoleAssignment": {
      "type": "object",
      "description": "Mapping of user object ID to role assignments.",
      "x-ms-client-name": "userRoleAssignmentValue",
      "properties": {
        "roles": {
          "type": "object",
          "description": "A map of roles to assign to the parent user.",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentRole"
          }
        }
      }
    },
    "OperationStatus": {
      "description": "The current status of an async operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
        }
      ],
      "properties": {
        "properties": {
          "description": "Custom operation properties, populated only for a successful operation.",
          "type": "object",
          "readOnly": true
        }
      }
    },
    "CatalogItemType": {
      "description": "Indicates catalog item types.",
      "enum": [
        "EnvironmentDefinition",
        "ImageDefinition"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CatalogItemType",
        "modelAsString": true
      }
    },
    "EnvironmentTypeEnableStatus": {
      "description": "Indicates whether the environment type is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true
      }
    },
    "HibernateSupport": {
      "description": "Indicates whether hibernate is enabled/disabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "HibernateSupport",
        "modelAsString": true
      }
    },
    "AutoImageBuildStatus": {
      "description": "Indicates whether auto image build is enabled/disabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoImageBuildStatus",
        "modelAsString": true
      }
    },
    "ListUsagesResult": {
      "description": "List of Core Usages.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array page of Usages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "description": "The link to get the next page of Usage result.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Usage": {
      "description": "The core usage details.",
      "type": "object",
      "properties": {
        "currentValue": {
          "description": "The current usage.",
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "description": "The limit integer.",
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "description": "The unit details.",
          "type": "string",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "name": {
          "description": "The name.",
          "$ref": "#/definitions/UsageName"
        },
        "id": {
          "description": "The fully qualified arm resource id.",
          "type": "string"
        }
      }
    },
    "UsageName": {
      "description": "The Usage Names.",
      "type": "object",
      "properties": {
        "localizedValue": {
          "description": "The localized name of the resource.",
          "type": "string"
        },
        "value": {
          "description": "The name of the resource.",
          "type": "string"
        }
      }
    },
    "CustomizationTaskListResult": {
      "description": "Results of the Task list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomizationTask"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CustomizationTask": {
      "description": "Represents a Task to be used in customizing a Dev Box.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Task properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CustomizationTaskProperties"
        }
      }
    },
    "CustomizationTaskProperties": {
      "description": "Properties of a Task.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "Inputs to the task.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomizationTaskInput"
          },
          "readOnly": true
        },
        "timeout": {
          "description": "The default timeout for the task.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "validationStatus": {
          "description": "Validation status for the Task.",
          "$ref": "vdi.json#/definitions/CatalogResourceValidationStatus",
          "readOnly": true
        }
      }
    },
    "CustomizationTaskInput": {
      "description": "Input for a Task.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the input.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the input.",
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean"
          ],
          "x-ms-enum": {
            "name": "CustomizationTaskInputType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "required": {
          "description": "Whether or not the input is required.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "EnvironmentDefinitionListResult": {
      "description": "Results of the environment definition list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinition"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentDefinition": {
      "description": "Represents an environment definition catalog item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Environment definition properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentDefinitionProperties"
        }
      }
    },
    "EnvironmentDefinitionProperties": {
      "description": "Properties of an environment definition.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A short description of the environment definition.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinitionParameter"
          },
          "description": "Input parameters passed to an environment.",
          "readOnly": true
        },
        "templatePath": {
          "description": "Path to the Environment Definition entrypoint file.",
          "type": "string",
          "readOnly": true
        },
        "validationStatus": {
          "description": "Validation status for the environment definition.",
          "$ref": "vdi.json#/definitions/CatalogResourceValidationStatus",
          "readOnly": true
        }
      }
    },
    "EnvironmentDefinitionParameter": {
      "type": "object",
      "description": "Properties of an Environment Definition parameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the parameter",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Display name of the parameter",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter",
          "readOnly": true
        },
        "type": {
          "description": "A string of one of the basic JSON types (number, integer, array, object, boolean, string)",
          "$ref": "#/definitions/ParameterType",
          "readOnly": true
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether or not this parameter is read-only.  If true, default should have a value.",
          "readOnly": true
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this parameter is required",
          "readOnly": true
        }
      }
    },
    "ParameterType": {
      "type": "string",
      "enum": [
        "array",
        "boolean",
        "integer",
        "number",
        "object",
        "string"
      ],
      "description": "The type of data a parameter accepts.",
      "readOnly": true,
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "value": "array",
            "description": "The parameter accepts an array of values."
          },
          {
            "value": "boolean",
            "description": "The parameter accepts a boolean value."
          },
          {
            "value": "integer",
            "description": "The parameter accepts an integer value."
          },
          {
            "value": "number",
            "description": "The parameter accepts a number value."
          },
          {
            "value": "object",
            "description": "The parameter accepts an object value."
          },
          {
            "value": "string",
            "description": "The parameter accepts a string value."
          }
        ]
      }
    },
    "CheckScopedNameAvailabilityRequest": {
      "description": "The scoped name check availability request body.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource for which availability needs to be checked.",
          "type": "string"
        },
        "type": {
          "description": "The resource type.",
          "type": "string"
        },
        "scope": {
          "description": "The resource id to scope the name check.",
          "type": "string"
        }
      }
    },
    "ImageDefinitionListResult": {
      "description": "Results of the Image Definition list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDefinition"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImageDefinition": {
      "description": "Represents a definition for an Image.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Image Definition properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageDefinitionProperties"
        }
      }
    },
    "ImageDefinitionProperties": {
      "description": "Properties of an Image Definition.",
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "Image reference information."
        },
        "fileUrl": {
          "description": "The URL to the repository file containing the image definition.",
          "type": "string",
          "readOnly": true
        },
        "latestBuild": {
          "$ref": "#/definitions/LatestImageBuild",
          "description": "Details about the latest build."
        },
        "imageValidationStatus": {
          "description": "Validation status of the configured image.",
          "$ref": "vdi.json#/definitions/ImageValidationStatus",
          "readOnly": true
        },
        "imageValidationErrorDetails": {
          "description": "Details for image validator error. Populated when the image validation is not successful.",
          "$ref": "vdi.json#/definitions/ImageValidationErrorDetails",
          "readOnly": true
        },
        "validationStatus": {
          "description": "Validation status for the Image Definition.",
          "$ref": "vdi.json#/definitions/CatalogResourceValidationStatus",
          "readOnly": true
        },
        "activeImageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "Image reference information for the currently active image (only populated during updates).",
          "readOnly": true
        },
        "autoImageBuild": {
          "description": "Indicates if automatic image builds will be triggered for image definition updates",
          "$ref": "#/definitions/AutoImageBuildStatus",
          "readOnly": true
        }
      }
    },
    "LatestImageBuild": {
      "type": "object",
      "description": "Details about the latest build.",
      "properties": {
        "name": {
          "description": "Identifier of a build.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "description": "End time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "description": "The state of an Image Definition Build.",
          "$ref": "#/definitions/ImageDefinitionBuildStatus",
          "readOnly": true
        }
      }
    },
    "ImageDefinitionBuildStatus": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Running",
        "ValidationFailed",
        "Failed",
        "Cancelled",
        "TimedOut"
      ],
      "description": "The state of an Image Definition Build.",
      "readOnly": true,
      "x-ms-enum": {
        "name": "ImageDefinitionBuildStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Succeeded",
            "description": "The image build has succeeded."
          },
          {
            "value": "Running",
            "description": "The image build is running."
          },
          {
            "value": "ValidationFailed",
            "description": "The built image has failed validation."
          },
          {
            "value": "Failed",
            "description": "The image build has failed."
          },
          {
            "value": "Cancelled",
            "description": "The image build has been cancelled."
          },
          {
            "value": "TimedOut",
            "description": "The image build has timed out."
          }
        ]
      }
    },
    "ImageDefinitionBuildListResult": {
      "description": "Results of the Image Definition Build list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDefinitionBuild"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImageDefinitionBuild": {
      "description": "Represents a specific build of an Image Definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Image Definition Build properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageDefinitionBuildProperties"
        }
      }
    },
    "ImageDefinitionBuildProperties": {
      "description": "Properties of an Image Definition Build.",
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "The specific image version used by the build.",
          "readOnly": true
        },
        "status": {
          "description": "The status of the build.",
          "$ref": "#/definitions/ImageDefinitionBuildStatus",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "description": "End time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "errorDetails": {
          "description": "Details for image creation error. Populated when the image creation is not successful.",
          "$ref": "#/definitions/ImageCreationErrorDetails",
          "readOnly": true
        }
      }
    },
    "ImageDefinitionBuildDetails": {
      "description": "Represents a specific build of an Image Definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "imageReference": {
          "$ref": "vdi.json#/definitions/ImageReference",
          "description": "The specific image version used by the build.",
          "readOnly": true
        },
        "status": {
          "description": "The status of the build.",
          "$ref": "#/definitions/ImageDefinitionBuildStatus",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "description": "End time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "errorDetails": {
          "description": "Details for image creation error. Populated when the image creation is not successful.",
          "$ref": "#/definitions/ImageCreationErrorDetails",
          "readOnly": true
        },
        "taskGroups": {
          "description": "The list of task groups executed during the image definition build.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDefinitionBuildTaskGroup"
          },
          "readOnly": true
        }
      }
    },
    "ImageCreationErrorDetails": {
      "type": "object",
      "description": "Image creation error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error."
        }
      }
    },
    "ImageDefinitionBuildTaskGroup": {
      "description": "A task group executed during the image definition build.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the task group.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the task group.",
          "$ref": "#/definitions/ImageDefinitionBuildStatus",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "description": "End time of the task group.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "tasks": {
          "description": "The list of tasks executed during the task group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDefinitionBuildTask"
          },
          "readOnly": true
        }
      }
    },
    "ImageDefinitionBuildTask": {
      "description": "A task executed during the image definition build.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the task.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the task.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "key",
              "value"
            ]
          }
        },
        "displayName": {
          "description": "Display name to help differentiate multiple instances of the same task.",
          "type": "string"
        },
        "id": {
          "description": "ID of the task instance.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the task.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "description": "End time of the task.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "description": "The status of the task.",
          "$ref": "#/definitions/ImageDefinitionBuildStatus",
          "readOnly": true
        },
        "logUri": {
          "description": "The URI for retrieving logs for the task execution.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Capability": {
      "description": "A name/value pair to describe a capability.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the capability.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Value of the capability.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrackedResourceUpdate": {
      "description": "Base tracked resource type for PATCH updates",
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/Tags",
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      }
    },
    "Tags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-ms-mutability": [
        "read",
        "create",
        "update"
      ],
      "description": "Resource tags."
    },
    "DevCenterSku": {
      "description": "The resource model definition representing SKU for DevCenter resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku"
        }
      ],
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The name of the resource type",
          "readOnly": true
        },
        "locations": {
          "description": "SKU supported locations.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Collection of name/value pairs to describe the SKU capabilities.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Creating",
        "Created",
        "Updating",
        "Updated",
        "Deleting",
        "Deleted",
        "Succeeded",
        "Failed",
        "Canceled",
        "MovingResources",
        "TransientFailure",
        "RolloutInProgress",
        "StorageProvisioningFailed"
      ],
      "readOnly": true,
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "SkuListResult": {
      "description": "Results of the Microsoft.DevCenter SKU list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "commonDefinitions.json#/definitions/DevCenterSku"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Pool": {
      "description": "A pool of Virtual Machines.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Pool properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PoolProperties"
        }
      }
    },
    "PoolUpdateProperties": {
      "description": "Properties of a Pool. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "devBoxDefinitionType": {
          "description": "Indicates if the pool is created from an existing Dev Box Definition or if one is provided directly.",
          "$ref": "#/definitions/PoolDevBoxDefinitionType"
        },
        "devBoxDefinitionName": {
          "description": "Name of a Dev Box definition in parent Project of this Pool. Will be ignored if devBoxDefinitionType is Value.",
          "type": "string"
        },
        "devBoxDefinition": {
          "description": "A definition of the machines that are created from this Pool. Will be ignored if devBoxDefinitionType is Reference or not provided.",
          "$ref": "#/definitions/PoolDevBoxDefinition"
        },
        "networkConnectionName": {
          "description": "Name of a Network Connection in parent Project of this Pool",
          "type": "string"
        },
        "licenseType": {
          "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
          "$ref": "#/definitions/LicenseType"
        },
        "localAdministrator": {
          "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
          "$ref": "#/definitions/LocalAdminStatus"
        },
        "stopOnDisconnect": {
          "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
          "$ref": "#/definitions/StopOnDisconnectConfiguration"
        },
        "stopOnNoConnect": {
          "description": "Stop on no connect configuration settings for Dev Boxes created in this pool.",
          "$ref": "#/definitions/StopOnNoConnectConfiguration"
        },
        "singleSignOnStatus": {
          "description": "Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on be enabled on the tenant.",
          "$ref": "#/definitions/SingleSignOnStatus"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the pool."
        },
        "virtualNetworkType": {
          "description": "Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.",
          "$ref": "#/definitions/VirtualNetworkType"
        },
        "managedVirtualNetworkRegions": {
          "type": "array",
          "description": "The regions of the managed virtual network (required when managedNetworkType is Managed).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PoolProperties": {
      "type": "object",
      "description": "Properties of a Pool",
      "allOf": [
        {
          "$ref": "#/definitions/PoolUpdateProperties"
        }
      ],
      "properties": {
        "healthStatus": {
          "description": "Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.",
          "$ref": "#/definitions/HealthStatus",
          "readOnly": true
        },
        "healthStatusDetails": {
          "description": "Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool is in a non-healthy state",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthStatusDetail"
          },
          "x-ms-identifiers": [
            "code"
          ],
          "readOnly": true
        },
        "devBoxCount": {
          "description": "Indicates the number of provisioned Dev Boxes in this pool.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      },
      "required": [
        "devBoxDefinitionName",
        "networkConnectionName",
        "licenseType",
        "localAdministrator"
      ]
    },
    "PoolDevBoxDefinition": {
      "description": "Represents a definition for a Developer Machine.",
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Image reference information."
        },
        "sku": {
          "description": "The SKU for Dev Boxes created from the Pool.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku"
        },
        "activeImageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Image reference information for the currently active image (only populated during updates).",
          "readOnly": true
        }
      }
    },
    "HealthStatus": {
      "description": "Health status indicating whether a pool is available to create Dev Boxes.",
      "enum": [
        "Unknown",
        "Pending",
        "Healthy",
        "Warning",
        "Unhealthy"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "HealthStatus",
        "modelAsString": true
      }
    },
    "HealthStatusDetail": {
      "type": "object",
      "description": "Pool health status detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the issue.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the issue, intended to be suitable for display in a user interface",
          "readOnly": true
        }
      }
    },
    "LicenseType": {
      "description": "License Types",
      "enum": [
        "Windows_Client"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "LicenseType",
        "modelAsString": true
      }
    },
    "LocalAdminStatus": {
      "description": "Local Administrator enable or disable status. Indicates whether owners of Dev Boxes are added as local administrators on the Dev Box.",
      "type": "string",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "LocalAdminStatus",
        "modelAsString": true
      }
    },
    "SingleSignOnStatus": {
      "description": "SingleSignOn (SSO) enable or disable status. Indicates whether Dev Boxes in the Pool will have SSO enabled or disabled.",
      "type": "string",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStatus",
        "modelAsString": true
      }
    },
    "VirtualNetworkType": {
      "description": "Indicates a pool uses a Virtual Network managed by Microsoft (Managed), or a customer provided Network (Unmanaged).",
      "type": "string",
      "enum": [
        "Managed",
        "Unmanaged"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkType",
        "modelAsString": true
      }
    },
    "PoolDevBoxDefinitionType": {
      "description": "Indicates if the pool is created from an existing Dev Box Definition or if one is provided directly.",
      "type": "string",
      "enum": [
        "Reference",
        "Value"
      ],
      "x-ms-enum": {
        "name": "PoolDevBoxDefinitionType",
        "modelAsString": true
      }
    },
    "StopOnDisconnectConfiguration": {
      "type": "object",
      "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "status": {
          "description": "Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.",
          "$ref": "#/definitions/StopOnDisconnectEnableStatus"
        },
        "gracePeriodMinutes": {
          "description": "The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StopOnDisconnectEnableStatus": {
      "description": "Stop on disconnect enable or disable status. Indicates whether stop on disconnect to is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StopOnDisconnectEnableStatus",
        "modelAsString": true
      }
    },
    "StopOnNoConnectConfiguration": {
      "type": "object",
      "description": "Stop on no connect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "status": {
          "description": "Enables the feature to stop a started Dev Box when it has not been connected to, once the grace period has lapsed.",
          "$ref": "#/definitions/StopOnNoConnectEnableStatus"
        },
        "gracePeriodMinutes": {
          "description": "The specified time in minutes to wait before stopping a Dev Box if no connection is made.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StopOnNoConnectEnableStatus": {
      "description": "Stop on no connect enable or disable status.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StopOnNoConnectEnableStatus",
        "modelAsString": true
      }
    },
    "PoolListResult": {
      "description": "Results of the machine pool list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pool"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PoolUpdate": {
      "description": "The pool properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PoolUpdateProperties",
          "description": "Properties of a pool to be updated."
        }
      }
    },
    "ImageReference": {
      "type": "object",
      "description": "Image reference information",
      "properties": {
        "id": {
          "description": "Image ID, or Image version ID. When Image ID is provided, its latest version will be used.",
          "type": "string"
        },
        "exactVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use."
        }
      }
    },
    "ImageValidationStatus": {
      "description": "Image validation status",
      "enum": [
        "Unknown",
        "Pending",
        "Succeeded",
        "Failed",
        "TimedOut"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ImageValidationStatus",
        "modelAsString": true
      }
    },
    "ImageValidationErrorDetails": {
      "type": "object",
      "description": "Image validation error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error."
        }
      }
    },
    "CatalogResourceValidationStatus": {
      "description": "Catalog resource validation status",
      "enum": [
        "Unknown",
        "Pending",
        "Succeeded",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CatalogResourceValidationStatus",
        "modelAsString": true
      }
    },
    "CatalogResourceValidationErrorDetails": {
      "type": "object",
      "description": "List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.",
      "properties": {
        "errors": {
          "description": "Errors associated with resources synchronized from the catalog.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogErrorDetails"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "CatalogErrorDetails": {
      "type": "object",
      "description": "Catalog error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error."
        }
      }
    },
    "NetworkConnection": {
      "type": "object",
      "description": "Network related settings",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of a Network Connection",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkProperties"
        }
      }
    },
    "NetworkConnectionUpdate": {
      "description": "The network connection properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkConnectionUpdateProperties",
          "description": "Properties of a network connection resource to be updated."
        }
      }
    },
    "NetworkConnectionUpdateProperties": {
      "description": "Properties of network connection. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "subnetId": {
          "description": "The subnet to attach Virtual Machines to",
          "type": "string"
        },
        "domainName": {
          "description": "Active Directory domain name",
          "type": "string"
        },
        "organizationUnit": {
          "description": "Active Directory domain Organization Unit (OU)",
          "type": "string"
        },
        "domainUsername": {
          "description": "The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.",
          "type": "string"
        },
        "domainPassword": {
          "description": "The password for the account used to join domain",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "NetworkProperties": {
      "description": "Network properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkConnectionUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "healthCheckStatus": {
          "description": "Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.",
          "$ref": "#/definitions/HealthCheckStatus",
          "readOnly": true
        },
        "networkingResourceGroupName": {
          "description": "The name for resource group where NICs will be placed.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "domainJoinType": {
          "description": "AAD Join type.",
          "$ref": "#/definitions/DomainJoinType",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "subnetId",
        "domainJoinType"
      ]
    },
    "NetworkConnectionListResult": {
      "description": "Result of the network connection list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkConnection"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DomainJoinType": {
      "description": "Active Directory join type",
      "enum": [
        "HybridAzureADJoin",
        "AzureADJoin",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DomainJoinType",
        "modelAsString": true
      }
    },
    "HealthCheckStatus": {
      "description": "Health check status values",
      "enum": [
        "Unknown",
        "Pending",
        "Running",
        "Passed",
        "Warning",
        "Failed",
        "Informational"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "HealthCheckStatus",
        "modelAsString": true
      }
    },
    "HealthCheckStatusDetails": {
      "description": "Health Check details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Health check status details properties.",
          "$ref": "#/definitions/HealthCheckStatusDetailsProperties"
        }
      }
    },
    "HealthCheckStatusDetailsProperties": {
      "description": "Health Check properties.",
      "type": "object",
      "properties": {
        "startDateTime": {
          "type": "string",
          "description": "Start time of last execution of the health checks.",
          "readOnly": true,
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "description": "End time of last execution of the health checks.",
          "readOnly": true,
          "format": "date-time"
        },
        "healthChecks": {
          "description": "Details for each health check item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthCheck"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "HealthCheck": {
      "description": "An individual health check item",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the health check item.",
          "$ref": "#/definitions/HealthCheckStatus",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of this health check item.",
          "type": "string",
          "readOnly": true
        },
        "startDateTime": {
          "description": "Start time of health check item.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "endDateTime": {
          "description": "End time of the health check item.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "errorType": {
          "description": "The type of error that occurred during this health check.",
          "type": "string",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "The recommended action to fix the corresponding error.",
          "type": "string",
          "readOnly": true
        },
        "additionalDetails": {
          "description": "Additional details about the health check or the recommended action.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HealthCheckStatusDetailsListResult": {
      "description": "Result of the network health check list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthCheckStatusDetails"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundEnvironmentEndpointCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": [
            "category"
          ],
          "description": "The collection of outbound network dependency endpoints returned by the listing operation."
        },
        "nextLink": {
          "type": "string",
          "description": "The continuation token."
        }
      },
      "description": "Values returned by the List operation."
    },
    "OutboundEnvironmentEndpoint": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "readOnly": true,
          "description": "The type of service that the agent connects to."
        },
        "endpoints": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "x-ms-identifiers": [
            "domainName"
          ],
          "description": "The endpoints for this service for which the agent requires outbound access."
        }
      },
      "description": "A collection of related endpoints from the same service for which the agent requires outbound access."
    },
    "EndpointDependency": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string",
          "readOnly": true,
          "description": "The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Human-readable supplemental information about the dependency and when it is applicable."
        },
        "endpointDetails": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          },
          "x-ms-identifiers": [],
          "description": "The list of connection details for this endpoint."
        }
      },
      "description": "A domain name and connection details used to access a dependency."
    },
    "EndpointDetail": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The port an endpoint is connected to."
        }
      },
      "description": "Details about the connection between the Batch service and the endpoint."
    },
    "Schedule": {
      "type": "object",
      "description": "Represents a Schedule to execute a task.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of a Schedule resource",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScheduleProperties"
        }
      }
    },
    "ScheduleUpdate": {
      "description": "The schedule properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScheduleUpdateProperties",
          "description": "Properties of a schedule resource to be updated."
        }
      }
    },
    "ScheduleUpdateProperties": {
      "description": "Updatable properties of a Schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "type": {
          "description": "Supported type this scheduled task represents.",
          "$ref": "#/definitions/ScheduledType"
        },
        "frequency": {
          "description": "The frequency of this scheduled task.",
          "$ref": "#/definitions/ScheduledFrequency"
        },
        "time": {
          "description": "The target time to trigger the action. The format is HH:MM.",
          "type": "string"
        },
        "timeZone": {
          "description": "The IANA timezone id at which the schedule should execute.",
          "type": "string"
        },
        "state": {
          "description": "Indicates whether or not this scheduled task is enabled.",
          "$ref": "#/definitions/ScheduleEnableStatus"
        }
      }
    },
    "ScheduleProperties": {
      "description": "The Schedule properties defining when and what to execute.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      },
      "required": [
        "type",
        "frequency",
        "timeZone",
        "time"
      ]
    },
    "ScheduleListResult": {
      "description": "Result of the schedule list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScheduledType": {
      "description": "The supported types for a scheduled task.",
      "enum": [
        "StopDevBox"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduledType",
        "modelAsString": true
      }
    },
    "ScheduledFrequency": {
      "description": "The frequency of task execution.",
      "enum": [
        "Daily"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduledFrequency",
        "modelAsString": true
      }
    },
    "ScheduleEnableStatus": {
      "description": "Schedule enable or disable status. Indicates whether the schedule applied to is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleEnableStatus",
        "modelAsString": true
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}