{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Databricks",
    "version": "2024-05-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/accessConnectors/{connectorName}": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Get",
        "description": "Gets an Azure Databricks Access Connector.",
        "x-ms-examples": {
          "Get an Azure Databricks Access Connector": {
            "$ref": "./examples/AccessConnectorGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Access Connector.",
            "schema": {
              "$ref": "#/definitions/AccessConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Delete",
        "description": "Deletes the Azure Databricks Access Connector.",
        "x-ms-examples": {
          "Delete an Azure Databricks Access Connector": {
            "$ref": "./examples/AccessConnectorDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_CreateOrUpdate",
        "description": "Creates or updates Azure Databricks Access Connector.",
        "x-ms-examples": {
          "Create an Azure Databricks Access Connector with SystemAssigned Identity": {
            "$ref": "./examples/AccessConnectorCreateOrUpdate.json"
          },
          "Create an Azure Databricks Access Connector with UserAssigned Identity": {
            "$ref": "./examples/AccessConnectorCreateOrUpdateWithUserAssigned.json"
          }
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessConnector"
            },
            "description": "Parameters supplied to the create or update an Azure Databricks Access Connector."
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Returns information about the Azure Databricks Access Connector.",
            "schema": {
              "$ref": "#/definitions/AccessConnector"
            }
          },
          "201": {
            "description": "Created - Returns information about the Azure Databricks Access Connector.",
            "schema": {
              "$ref": "#/definitions/AccessConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_Update",
        "description": "Updates an Azure Databricks Access Connector.",
        "x-ms-examples": {
          "Update an Azure Databricks Access Connector": {
            "$ref": "./examples/AccessConnectorPatchUpdate.json"
          }
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessConnectorUpdate"
            },
            "description": "The update to the Azure Databricks Access Connector."
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "200": {
            "description": "Successfully updated the Azure Databricks Access Connector.",
            "schema": {
              "$ref": "#/definitions/AccessConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/accessConnectors": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_ListByResourceGroup",
        "description": "Gets all the Azure Databricks Access Connectors within a resource group.",
        "x-ms-examples": {
          "Lists Azure Databricks Access Connectors within a resource group": {
            "$ref": "./examples/AccessConnectorsListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Azure Databricks Access Connectors.",
            "schema": {
              "$ref": "#/definitions/AccessConnectorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Databricks/accessConnectors": {
      "get": {
        "tags": [
          "AccessConnector"
        ],
        "operationId": "AccessConnectors_ListBySubscription",
        "description": "Gets all the Azure Databricks Access Connectors within a subscription.",
        "x-ms-examples": {
          "Lists all the Azure Databricks Access Connectors within a subscription.": {
            "$ref": "./examples/AccessConnectorsListBySubscriptionId.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Azure Databricks Access Connectors.",
            "schema": {
              "$ref": "#/definitions/AccessConnectorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings/{peeringName}": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Get",
        "description": "Gets the workspace vNet Peering.",
        "x-ms-examples": {
          "Get a workspace with vNet Peering Configured": {
            "$ref": "./examples/WorkspaceVirtualNetPeeringGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "204": {
            "description": "OK - NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Delete",
        "description": "Deletes the workspace vNetPeering.",
        "x-ms-examples": {
          "Delete a workspace vNet Peering": {
            "$ref": "./examples/WorkspaceVirtualNetworkPeeringDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_CreateOrUpdate",
        "description": "Creates vNet Peering for workspace.",
        "x-ms-examples": {
          "Create vNet Peering for Workspace": {
            "$ref": "./examples/WorkspaceVirtualNetworkPeeringCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "name": "VirtualNetworkPeeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            },
            "description": "Parameters supplied to the create workspace vNet Peering."
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created - Returns information about the workspace vNet peering, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "200": {
            "description": "Update succeeded - Returns information about the workspace vNet peering.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_ListByWorkspace",
        "description": "Lists the workspace vNet Peerings.",
        "x-ms-examples": {
          "List all vNet Peerings for the workspace": {
            "$ref": "./examples/WorkspaceVirtualNetPeeringList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List succeeded. Returns the resulting resource objects in response body.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeeringList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Get",
        "description": "Gets the workspace.",
        "x-ms-examples": {
          "Get a workspace": {
            "$ref": "./examples/WorkspaceGet.json"
          },
          "Get a workspace with custom parameters": {
            "$ref": "./examples/WorkspaceGetParameters.json"
          },
          "Get a workspace with Customer-Managed Key (CMK) encryption for Managed Disks": {
            "$ref": "./examples/WorkspaceManagedDiskEncryptionGet.json"
          },
          "Get a workspace with Enhanced Security & Compliance Add-On": {
            "$ref": "./examples/WorkspaceEnhancedSecurityComplianceGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Delete",
        "description": "Deletes the workspace.",
        "x-ms-examples": {
          "Delete a workspace": {
            "$ref": "./examples/WorkspaceDelete.json"
          },
          "Delete a workspace with forceDeletion parameter": {
            "$ref": "./examples/WorkspaceDeleteForceDeletion.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "forceDeletion",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "description": "Optional parameter to retain default unity catalog data. By default the data will retained if Uc is enabled on the workspace."
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_CreateOrUpdate",
        "description": "Creates a new workspace.",
        "x-ms-examples": {
          "Create or update workspace": {
            "$ref": "./examples/WorkspaceCreate.json"
          },
          "Create or update workspace with custom parameters": {
            "$ref": "./examples/WorkspaceCreateWithParameters.json"
          },
          "Create a workspace which is ready for Customer-Managed Key (CMK) encryption": {
            "$ref": "./examples/PrepareEncryption.json"
          },
          "Enable Customer-Managed Key (CMK) encryption on a workspace which is prepared for encryption": {
            "$ref": "./examples/EnableEncryption.json"
          },
          "Revert Customer-Managed Key (CMK) encryption to Microsoft Managed Keys encryption on a workspace": {
            "$ref": "./examples/DisableEncryption.json"
          },
          "Create a workspace with Customer-Managed Key (CMK) encryption for Managed Disks": {
            "$ref": "./examples/WorkspaceManagedDiskEncryptionCreate.json"
          },
          "Update a workspace with Customer-Managed Key (CMK) encryption for Managed Disks": {
            "$ref": "./examples/WorkspaceManagedDiskEncryptionUpdate.json"
          },
          "Create or update a workspace with Enhanced Security & Compliance Add-On": {
            "$ref": "./examples/WorkspaceEnhancedSecurityComplianceCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "description": "Parameters supplied to the create or update a workspace."
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Created - Returns information about the workspace, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Created - Returns information about the workspace, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Update",
        "description": "Updates a workspace.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdate"
            },
            "description": "The update to the workspace."
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a workspace's tags.": {
            "$ref": "./examples/WorkspaceUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListByResourceGroup",
        "description": "Gets all the workspaces within a resource group.",
        "x-ms-examples": {
          "Lists workspaces": {
            "$ref": "./examples/WorkspacesListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of workspaces.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Databricks/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListBySubscription",
        "description": "Gets all the workspaces within a subscription.",
        "x-ms-examples": {
          "Lists workspaces": {
            "$ref": "./examples/WorkspacesListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of workspaces.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Databricks/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "x-ms-examples": {
          "Operations": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "List private link resources",
        "description": "List private link resources for a given workspace",
        "operationId": "PrivateLinkResources_List",
        "x-ms-examples": {
          "List private link resources": {
            "$ref": "./examples/ListPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of private link resources",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesList"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/privateLinkResources/{groupId}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "Get the specified private link resource",
        "description": "Get the specified private link resource for the given group id (sub-resource)",
        "operationId": "PrivateLinkResources_Get",
        "x-ms-examples": {
          "Get a private link resource": {
            "$ref": "./examples/PrivateLinkResourcesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the specified of private link resource",
            "schema": {
              "$ref": "#/definitions/GroupIdInformation"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "List private endpoint connections",
        "description": "List private endpoint connections of the workspace",
        "operationId": "PrivateEndpointConnections_List",
        "x-ms-examples": {
          "List private endpoint connections": {
            "$ref": "./examples/ListPrivateEndpointConnections.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns list of private endpoint connections for a workspace",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionsList"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Get private endpoint connection",
        "description": "Get a private endpoint connection properties for a workspace",
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "Get a private endpoint connection": {
            "$ref": "./examples/PrivateEndpointConnectionsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the private endpoint connection properties of a workspace",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PUT",
          "PrivateEndpointConnections"
        ],
        "summary": "Update private endpoint connection status",
        "description": "Update the status of a private endpoint connection with the specified name",
        "operationId": "PrivateEndpointConnections_Create",
        "x-ms-examples": {
          "Update a private endpoint connection": {
            "$ref": "./examples/PrivateEndpointConnectionsUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection with updated properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted - This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DELETE",
          "PrivateEndpointConnections"
        ],
        "summary": "Remove private endpoint connection",
        "description": "Remove private endpoint connection with the specified name",
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "Remove a private endpoint connection": {
            "$ref": "./examples/PrivateEndpointConnectionsDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation."
          },
          "200": {
            "description": "OK - Returns the status of polling request for the delete operation."
          },
          "204": {
            "description": "No Content - PrivateEndpoint does not exist."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "summary": "Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified Workspace.",
        "description": "Gets the list of endpoints that VNET Injected Workspace calls Azure Databricks Control Plane. You must configure outbound access with these endpoints. For more information, see https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/udr",
        "operationId": "OutboundNetworkDependenciesEndpoints_List",
        "x-ms-examples": {
          "List OutboundNetworkDependenciesEndpoints by Workspace": {
            "$ref": "./examples/OutboundNetworkDependenciesEndpointsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains list of outbound network dependency endpoints",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "ConnectorName": {
      "name": "connectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure Databricks Access Connector.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "PeeringNameParameter": {
      "name": "peeringName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace vNet peering.",
      "x-ms-parameter-location": "method"
    },
    "GroupId": {
      "name": "groupId",
      "in": "path",
      "description": "The name of the private link resource",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "description": "The name of the private endpoint connection",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AccessConnector": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "Azure Databricks Access Connector properties",
          "$ref": "#/definitions/AccessConnectorProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../preview/2022-04-01-preview/databricks.json#/definitions/TrackedResource"
        }
      ],
      "description": "Information about Azure Databricks Access Connector."
    },
    "AccessConnectorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning status of the Access Connector.",
          "readOnly": true,
          "enum": [
            "Deleted",
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "referedBy": {
          "description": "List of workspaces referring this Access Connector.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccessConnectorUpdate": {
      "description": "An update to an Azure Databricks Access Connector.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "AccessConnectorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessConnector"
          },
          "description": "The array of Azure Databricks Access Connector."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of Azure Databricks Access Connector."
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorInfo": {
      "title": "The code and message for an error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A machine readable error code.",
          "type": "string"
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string"
        },
        "details": {
          "description": "error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "innererror": {
          "description": "Inner error details if they exist.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "VirtualNetworkPeeringList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "List of virtual network peerings on workspace."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of virtual network peering list results if there are any."
        }
      },
      "description": "Gets all virtual network peerings under a workspace."
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPeeringPropertiesFormat",
          "description": "List of properties for vNet Peering"
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual network peering resource",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "type of the virtual network peering resource",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "Peerings in a VirtualNetwork resource",
      "x-ms-azure-resource": true
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "databricksVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the databricks virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "databricksAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the databricks virtual network address space."
        },
        "remoteVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the remote virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "remoteAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the remote virtual network address space."
        },
        "peeringState": {
          "type": "string",
          "description": "The status of the virtual network peering.",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "peeringState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/PeeringProvisioningState",
          "description": "The provisioning state of the virtual network peering resource."
        }
      },
      "required": [
        "remoteVirtualNetwork"
      ],
      "description": "Properties of the virtual network peering."
    },
    "PeeringProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PeeringProvisioningState",
        "modelAsString": true
      }
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    },
    "Workspace": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The workspace properties."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the resource."
        },
        "systemData": {
          "description": "The system metadata relating to this resource",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Information about workspace."
    },
    "WorkspaceProperties": {
      "properties": {
        "managedResourceGroupId": {
          "type": "string",
          "description": "The managed resource group Id."
        },
        "parameters": {
          "$ref": "#/definitions/WorkspaceCustomParameters",
          "description": "The workspace's custom parameters."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The workspace provisioning state."
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "The blob URI where the UI definition file is located."
        },
        "authorizations": {
          "description": "The workspace provider authorizations.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/WorkspaceProviderAuthorization"
          }
        },
        "createdBy": {
          "description": "Indicates the Object ID, PUID and Application ID of entity that created the workspace.",
          "$ref": "#/definitions/CreatedBy"
        },
        "updatedBy": {
          "description": "Indicates the Object ID, PUID and Application ID of entity that last updated the workspace.",
          "$ref": "#/definitions/CreatedBy"
        },
        "createdDateTime": {
          "description": "Specifies the date and time when the workspace is created.",
          "$ref": "#/definitions/CreatedDateTime"
        },
        "workspaceId": {
          "readOnly": true,
          "description": "The unique identifier of the databricks workspace in databricks control plane.",
          "type": "string"
        },
        "workspaceUrl": {
          "readOnly": true,
          "description": "The workspace URL which is of the format 'adb-{workspaceId}.{random}.azuredatabricks.net'",
          "type": "string"
        },
        "storageAccountIdentity": {
          "description": "The details of Managed Identity of Storage Account",
          "$ref": "#/definitions/ManagedIdentityConfiguration"
        },
        "managedDiskIdentity": {
          "description": "The details of Managed Identity of Disk Encryption Set used for Managed Disk Encryption",
          "$ref": "#/definitions/ManagedIdentityConfiguration"
        },
        "diskEncryptionSetId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource Id of the managed disk encryption set."
        },
        "encryption": {
          "type": "object",
          "description": "Encryption properties for databricks workspace",
          "properties": {
            "entities": {
              "$ref": "#/definitions/EncryptionEntitiesDefinition",
              "description": "Encryption entities definition for the workspace."
            }
          },
          "required": [
            "entities"
          ]
        },
        "enhancedSecurityCompliance": {
          "description": "Contains settings related to the Enhanced Security and Compliance Add-On.",
          "$ref": "#/definitions/EnhancedSecurityComplianceDefinition"
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "description": "Private endpoint connections created on the workspace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "The network access type for accessing workspace. Set value to disabled to access workspace only via private link.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "requiredNsgRules": {
          "type": "string",
          "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
          "enum": [
            "AllRules",
            "NoAzureDatabricksRules",
            "NoAzureServiceRules"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RequiredNsgRules"
          }
        },
        "defaultCatalog": {
          "description": "Properties for Default Catalog configuration during workspace creation.",
          "$ref": "#/definitions/DefaultCatalogProperties"
        },
        "isUcEnabled": {
          "readOnly": true,
          "description": "Indicates whether unity catalog enabled for the workspace or not.",
          "type": "boolean"
        },
        "accessConnector": {
          "description": "Access Connector Resource that is going to be associated with Databricks Workspace",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "The resource ID of Azure Databricks Access Connector Resource.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Databricks/accessConnectors"
                  }
                ]
              }
            },
            "identityType": {
              "type": "string",
              "description": "The identity type of the Access Connector Resource.",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "IdentityType"
              }
            },
            "userAssignedIdentityId": {
              "type": "string",
              "format": "arm-id",
              "description": "The resource ID of the User Assigned Identity associated with the Access Connector Resource. This is required for type 'UserAssigned' and not valid for type 'SystemAssigned'.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                  }
                ]
              }
            }
          },
          "required": [
            "id",
            "identityType"
          ]
        },
        "defaultStorageFirewall": {
          "description": "Gets or Sets Default Storage Firewall configuration information",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "defaultStorageFirewall"
          }
        }
      },
      "required": [
        "managedResourceGroupId"
      ],
      "description": "The workspace properties."
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "ProvisioningState": {
      "description": "Provisioning status of the workspace.",
      "readOnly": true,
      "enum": [
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ManagedIdentityConfiguration": {
      "description": "The Managed Identity details for storage account.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The objectId of the Managed Identity that is linked to the Managed Storage account.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant Id where the Managed Identity is created.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Identity created. It can be either SystemAssigned or UserAssigned.",
          "readOnly": true
        }
      }
    },
    "EnhancedSecurityComplianceDefinition": {
      "type": "object",
      "description": "Status of settings related to the Enhanced Security and Compliance Add-On.",
      "properties": {
        "automaticClusterUpdate": {
          "type": "string",
          "description": "Status of automated cluster updates feature.",
          "$ref": "#/definitions/AutomaticClusterUpdateDefinition"
        },
        "complianceSecurityProfile": {
          "type": "object",
          "description": "Status of Compliance Security Profile feature.",
          "$ref": "#/definitions/ComplianceSecurityProfileDefinition"
        },
        "enhancedSecurityMonitoring": {
          "type": "object",
          "description": "Status of Enhanced Security Monitoring feature.",
          "$ref": "#/definitions/EnhancedSecurityMonitoringDefinition"
        }
      }
    },
    "AutomaticClusterUpdateDefinition": {
      "type": "object",
      "description": "Status of automated cluster updates feature.",
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AutomaticClusterUpdateValue"
          }
        }
      }
    },
    "EnhancedSecurityMonitoringDefinition": {
      "type": "object",
      "description": "Status of Enhanced Security Monitoring feature.",
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EnhancedSecurityMonitoringValue"
          }
        }
      }
    },
    "ComplianceSecurityProfileDefinition": {
      "type": "object",
      "description": "Status of Compliance Security Profile feature.",
      "properties": {
        "complianceStandards": {
          "description": "Compliance standards associated with the workspace.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceStandardDefinition"
          }
        },
        "value": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ComplianceSecurityProfileValue"
          }
        }
      }
    },
    "ComplianceStandardDefinition": {
      "description": "Compliance standard that can be associated with a workspace.",
      "type": "string",
      "enum": [
        "NONE",
        "HIPAA",
        "PCI_DSS"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ComplianceStandard"
      }
    },
    "WorkspaceCustomParameterType": {
      "description": "Provisioning status of the workspace.",
      "readOnly": true,
      "enum": [
        "Bool",
        "Object",
        "String"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CustomParameterType",
        "modelAsString": true
      }
    },
    "WorkspaceNoPublicIPBooleanParameter": {
      "properties": {
        "type": {
          "$ref": "#/definitions/WorkspaceCustomParameterType",
          "description": "The type of variable that this is"
        },
        "value": {
          "type": "boolean",
          "description": "The value which should be used for this field."
        }
      },
      "type": "object",
      "required": [
        "value"
      ],
      "description": "The value which should be used for this field."
    },
    "WorkspaceCustomBooleanParameter": {
      "properties": {
        "type": {
          "$ref": "#/definitions/WorkspaceCustomParameterType",
          "description": "The type of variable that this is"
        },
        "value": {
          "type": "boolean",
          "description": "The value which should be used for this field."
        }
      },
      "required": [
        "value"
      ],
      "description": "The value which should be used for this field."
    },
    "WorkspaceCustomObjectParameter": {
      "properties": {
        "type": {
          "$ref": "#/definitions/WorkspaceCustomParameterType",
          "description": "The type of variable that this is"
        },
        "value": {
          "type": "object",
          "description": "The value which should be used for this field."
        }
      },
      "required": [
        "value"
      ],
      "description": "The value which should be used for this field."
    },
    "WorkspaceCustomStringParameter": {
      "properties": {
        "type": {
          "$ref": "#/definitions/WorkspaceCustomParameterType",
          "description": "The type of variable that this is"
        },
        "value": {
          "type": "string",
          "description": "The value which should be used for this field."
        }
      },
      "required": [
        "value"
      ],
      "description": "The Value."
    },
    "WorkspaceCustomParameters": {
      "properties": {
        "amlWorkspaceId": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "The ID of a Azure Machine Learning workspace to link with Databricks workspace"
        },
        "customVirtualNetworkId": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "The ID of a Virtual Network where this Databricks Cluster should be created"
        },
        "customPublicSubnetName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "The name of a Public Subnet within the Virtual Network"
        },
        "customPrivateSubnetName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "The name of the Private Subnet within the Virtual Network"
        },
        "enableNoPublicIp": {
          "$ref": "#/definitions/WorkspaceNoPublicIPBooleanParameter",
          "description": "Boolean indicating whether the public IP should be disabled. Default value is true"
        },
        "loadBalancerBackendPoolName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Name of the outbound Load Balancer Backend Pool for Secure Cluster Connectivity (No Public IP)."
        },
        "loadBalancerId": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Resource URI of Outbound Load balancer for Secure Cluster Connectivity (No Public IP) workspace."
        },
        "natGatewayName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets."
        },
        "publicIpName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Name of the Public IP for No Public IP workspace with managed vNet."
        },
        "prepareEncryption": {
          "$ref": "#/definitions/WorkspaceCustomBooleanParameter",
          "description": "Prepare the workspace for encryption. Enables the Managed Identity for managed storage account."
        },
        "encryption": {
          "$ref": "#/definitions/WorkspaceEncryptionParameter",
          "description": "Contains the encryption details for Customer-Managed Key (CMK) enabled workspace."
        },
        "requireInfrastructureEncryption": {
          "$ref": "#/definitions/WorkspaceCustomBooleanParameter",
          "description": "A boolean indicating whether or not the DBFS root file system will be enabled with secondary layer of encryption with platform managed keys for data at rest."
        },
        "storageAccountName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Default DBFS storage account name."
        },
        "storageAccountSkuName": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Storage account SKU name, ex: Standard_GRS, Standard_LRS. Refer https://aka.ms/storageskus for valid inputs."
        },
        "vnetAddressPrefix": {
          "$ref": "#/definitions/WorkspaceCustomStringParameter",
          "description": "Address prefix for Managed virtual network. Default value for this input is 10.139."
        },
        "resourceTags": {
          "$ref": "#/definitions/WorkspaceCustomObjectParameter",
          "readOnly": true,
          "description": "Tags applied to resources under Managed resource group. These can be updated by updating tags at workspace level."
        }
      },
      "description": "Custom Parameters used for Cluster Creation."
    },
    "CreatedDateTime": {
      "type": "string",
      "format": "date-time",
      "description": "The date and time stamp when the workspace was created.",
      "readOnly": true
    },
    "CreatedBy": {
      "properties": {
        "oid": {
          "type": "string",
          "format": "uuid",
          "description": "The Object ID that created the workspace.",
          "readOnly": true
        },
        "puid": {
          "type": "string",
          "description": "The Personal Object ID corresponding to the object ID above",
          "readOnly": true
        },
        "applicationId": {
          "type": "string",
          "format": "uuid",
          "description": "The application ID of the application that initiated the creation of the workspace. For example, Azure Portal.",
          "readOnly": true
        }
      },
      "description": "Provides details of the entity that created/updated the workspace."
    },
    "WorkspaceEncryptionParameter": {
      "properties": {
        "type": {
          "$ref": "#/definitions/WorkspaceCustomParameterType",
          "description": "The type of variable that this is"
        },
        "value": {
          "$ref": "#/definitions/Encryption",
          "description": "The value which should be used for this field."
        }
      },
      "description": "The object that contains details of encryption used on the workspace."
    },
    "Encryption": {
      "properties": {
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault",
          "enum": [
            "Default",
            "Microsoft.Keyvault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true
          },
          "default": "Default"
        },
        "KeyName": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyversion": {
          "type": "string",
          "description": "The version of KeyVault key.",
          "x-ms-client-name": "KeyVersion"
        },
        "keyvaulturi": {
          "type": "string",
          "description": "The Uri of KeyVault.",
          "x-ms-client-name": "KeyVaultUri"
        }
      },
      "description": "The object that contains details of encryption used on the workspace."
    },
    "DefaultCatalogProperties": {
      "type": "object",
      "properties": {
        "initialType": {
          "type": "string",
          "description": "Defines the initial type of the default catalog. Possible values (case-insensitive):  HiveMetastore, UnityCatalog",
          "enum": [
            "HiveMetastore",
            "UnityCatalog"
          ],
          "x-ms-enum": {
            "name": "initialType",
            "modelAsString": true
          },
          "default": "HiveMetastore"
        },
        "initialName": {
          "type": "string",
          "description": "Specifies the initial Name of default catalog. If not specified, the name of the workspace will be used."
        }
      },
      "description": "These properties lets user specify default catalog properties during workspace creation."
    },
    "EncryptionEntitiesDefinition": {
      "properties": {
        "managedServices": {
          "type": "object",
          "description": "Encryption properties for the databricks managed services.",
          "$ref": "#/definitions/EncryptionV2"
        },
        "managedDisk": {
          "type": "object",
          "description": "Encryption properties for the databricks managed disks.",
          "$ref": "#/definitions/ManagedDiskEncryption"
        }
      },
      "description": "Encryption entities for databricks workspace resource."
    },
    "EncryptionV2": {
      "properties": {
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault",
          "enum": [
            "Microsoft.Keyvault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "properties": {
            "keyVaultUri": {
              "type": "string",
              "description": "The Uri of KeyVault."
            },
            "keyName": {
              "type": "string",
              "description": "The name of KeyVault key."
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of KeyVault key."
            }
          },
          "required": [
            "keyVaultUri",
            "keyName",
            "keyVersion"
          ],
          "description": "Key Vault input properties for encryption."
        }
      },
      "required": [
        "keySource"
      ],
      "description": "The object that contains details of encryption used on the workspace."
    },
    "ManagedDiskEncryption": {
      "type": "object",
      "properties": {
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Keyvault",
          "enum": [
            "Microsoft.Keyvault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "type": "object",
          "properties": {
            "keyVaultUri": {
              "type": "string",
              "description": "The URI of KeyVault."
            },
            "keyName": {
              "type": "string",
              "description": "The name of KeyVault key."
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of KeyVault key."
            }
          },
          "required": [
            "keyVaultUri",
            "keyName",
            "keyVersion"
          ],
          "description": "Key Vault input properties for encryption."
        },
        "rotationToLatestKeyVersionEnabled": {
          "type": "boolean",
          "description": "Indicate whether the latest key version should be automatically used for Managed Disk Encryption."
        }
      },
      "required": [
        "keySource",
        "keyVaultProperties"
      ],
      "description": "The object that contains details of encryption used on the workspace."
    },
    "WorkspaceProviderAuthorization": {
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources."
        },
        "roleDefinitionId": {
          "type": "string",
          "format": "uuid",
          "description": "The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group."
        }
      },
      "required": [
        "principalId",
        "roleDefinitionId"
      ],
      "description": "The workspace provider authorization."
    },
    "WorkspaceUpdate": {
      "description": "An update to a workspace.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkspaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          },
          "description": "The array of workspaces."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of workspaces."
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourcesList": {
      "description": "The available private link resources for a workspace",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of available private link resources for a workspace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupIdInformation"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of private link resources."
        }
      }
    },
    "GroupIdInformation": {
      "description": "The group information for creating a private endpoint on a workspace",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "description": "The group id properties.",
          "type": "object",
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/GroupIdInformationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "GroupIdInformationProperties": {
      "description": "The properties for a group information object",
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id"
        },
        "requiredMembers": {
          "description": "The required members for a specific group id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "description": "The required DNS zones for a specific group id",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateEndpointConnectionsList": {
      "description": "List of private link connections.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "The list of returned private endpoint connection."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of endpoint connections."
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "The private endpoint connection of a workspace",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "type": "object",
          "description": "The private endpoint connection properties.",
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/PrivateEndpointConnectionProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "description": "The properties of a private endpoint connection",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "title": "Private endpoint",
          "description": "Private endpoint",
          "$ref": "#/definitions/PrivateEndpoint"
        },
        "groupIds": {
          "type": "array",
          "description": "GroupIds from the private link service resource.",
          "items": {
            "type": "string"
          }
        },
        "privateLinkServiceConnectionState": {
          "title": "Private link service service connection state",
          "description": "Private endpoint connection state",
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the private endpoint connection."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpoint": {
      "description": "The private endpoint property of a private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The current state of a private endpoint connection",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of a private endpoint connection",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkServiceConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection"
        }
      },
      "required": [
        "status"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "EndpointDependency": {
      "description": "A domain name or IP address the Workspace is reaching at.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The Ports used when connecting to domainName.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          }
        }
      }
    },
    "EndpointDetail": {
      "description": "Connect information from the Workspace to a single endpoint.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "An IP Address that Domain Name currently resolves to.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "type": "integer"
        },
        "latency": {
          "format": "double",
          "description": "The time in milliseconds it takes for the connection to be created from the Workspace to this IpAddress at this Port.",
          "type": "number"
        },
        "isAccessible": {
          "description": "Whether it is possible to create a connection from the Workspace to this IpAddress at this Port.",
          "type": "boolean"
        }
      }
    },
    "OutboundEnvironmentEndpoint": {
      "description": "Egress endpoints which Workspace connects to for common purposes.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of endpoints accessed by the Workspace, e.g. azure-storage, azure-mysql, etc.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints that Workspace connect to",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          }
        }
      }
    },
    "OutboundEnvironmentEndpointCollection": {
      "description": "Collection of outbound network dependency endpoints",
      "type": "array",
      "x-ms-identifiers": [],
      "items": {
        "$ref": "#/definitions/OutboundEnvironmentEndpoint"
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}